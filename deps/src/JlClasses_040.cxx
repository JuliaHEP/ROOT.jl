// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoGtra> : std::false_type { };
  template<> struct DefaultConstructible<TGeoGtra> : std::false_type { };
template<> struct SuperType<TGeoGtra> { typedef TGeoTrap type; };
}

// Class generating the wrapper for type TGeoGtra
// signature to use in the veto file: TGeoGtra
struct JlTGeoGtra: public Wrapper {

  JlTGeoGtra(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoGtra (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:149:7
    jlcxx::TypeWrapper<TGeoGtra>  t = jlModule.add_type<TGeoGtra>("TGeoGtra",
      jlcxx::julia_base_type<TGeoTrap>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoGtra>>(new jlcxx::TypeWrapper<TGeoGtra>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoGtra::TGeoGtra(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:156:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoGtra::TGeoGtra(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:158:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TGeoGtra::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoGtra::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:162:13
    t.method("DistFromInside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:164:9
    t.method("DistFromInside_v", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside_v", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoGtra::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoGtra::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:166:13
    t.method("DistFromOutside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:168:9
    t.method("DistFromOutside_v", [](TGeoGtra const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside_v", [](TGeoGtra const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoGtra::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoGtra::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:170:15
    t.method("GetMakeRuntimeShape", [](TGeoGtra const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); });
    t.method("GetMakeRuntimeShape", [](TGeoGtra const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoGtra::GetTwistAngle() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoGtra::GetTwistAngle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:171:13
    t.method("GetTwistAngle", [](TGeoGtra const& a)->Double_t { return a.GetTwistAngle(); });
    t.method("GetTwistAngle", [](TGeoGtra const* a)->Double_t { return a->GetTwistAngle(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoGtra::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoGtra::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:172:13
    t.method("Safety", [](TGeoGtra const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoGtra const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoGtra const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoGtra const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:173:9
    t.method("Safety_v", [](TGeoGtra const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); });
    t.method("Safety_v", [](TGeoGtra const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:174:9
    t.method("SetDimensions", [](TGeoGtra& a, Double_t * arg0)->void { a.SetDimensions(arg0); });
    t.method("SetDimensions", [](TGeoGtra* a, Double_t * arg0)->void { a->SetDimensions(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoGtra::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoGtra::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!Class_Version", []()->Version_t { return TGeoGtra::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGtra::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGtra::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    t.method("IsA", [](TGeoGtra const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoGtra const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    t.method("StreamerNVirtual", [](TGeoGtra& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoGtra* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGtra::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGtra::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!DeclFileName", []() { return (std::string)TGeoGtra::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoGtra::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGtra::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!ImplFileLine", []()->int { return TGeoGtra::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGtra::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGtra::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!ImplFileName", []() { return (std::string)TGeoGtra::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGtra::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGtra::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!Class_Name", []() { return (std::string)TGeoGtra::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGtra::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGtra::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!Dictionary", []()->TClass * { return TGeoGtra::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGtra::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGtra::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!Class", []()->TClass * { return TGeoGtra::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoGtra::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGtra::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    t.method("Streamer", [](TGeoGtra& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoGtra* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoGtra::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGtra::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoArb8.h:177:4
    module_.method("TGeoGtra!DeclFileLine", []()->int { return TGeoGtra::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoGtra>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoGtra(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoGtra(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoAtt> : std::false_type { };
  template<> struct DefaultConstructible<TGeoAtt> : std::false_type { };
}

// Class generating the wrapper for type TGeoAtt
// signature to use in the veto file: TGeoAtt
struct JlTGeoAtt: public Wrapper {

  JlTGeoAtt(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoAtt (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:17:7
    jlcxx::TypeWrapper<TGeoAtt>  t = jlModule.add_type<TGeoAtt>("TGeoAtt");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoAtt>>(new jlcxx::TypeWrapper<TGeoAtt>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoAtt::TGeoAtt(Option_t *, Option_t *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:57:4
    t.constructor<Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<Option_t *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<Option_t *, Option_t *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetAttBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetAttBit(UInt_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:61:9
    t.method("SetAttBit", [](TGeoAtt& a, UInt_t arg0)->void { a.SetAttBit(arg0); });
    t.method("SetAttBit", [](TGeoAtt* a, UInt_t arg0)->void { a->SetAttBit(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetAttBit(UInt_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetAttBit(UInt_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:62:9
    t.method("SetAttBit", [](TGeoAtt& a, UInt_t arg0, Bool_t arg1)->void { a.SetAttBit(arg0, arg1); });
    t.method("SetAttBit", [](TGeoAtt* a, UInt_t arg0, Bool_t arg1)->void { a->SetAttBit(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::ResetAttBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::ResetAttBit(UInt_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:63:9
    t.method("ResetAttBit", [](TGeoAtt& a, UInt_t arg0)->void { a.ResetAttBit(arg0); });
    t.method("ResetAttBit", [](TGeoAtt* a, UInt_t arg0)->void { a->ResetAttBit(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::TestAttBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::TestAttBit(UInt_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:64:11
    t.method("TestAttBit", [](TGeoAtt const& a, UInt_t arg0)->Bool_t { return a.TestAttBit(arg0); });
    t.method("TestAttBit", [](TGeoAtt const* a, UInt_t arg0)->Bool_t { return a->TestAttBit(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisRaytrace(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisRaytrace(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:66:9
    t.method("SetVisRaytrace", [](TGeoAtt& a)->void { a.SetVisRaytrace(); });
    t.method("SetVisRaytrace", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisRaytrace(arg0); });
    t.method("SetVisRaytrace", [](TGeoAtt* a)->void { a->SetVisRaytrace(); });
    t.method("SetVisRaytrace", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisRaytrace(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisBranch() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisBranch()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:67:9
    t.method("SetVisBranch", [](TGeoAtt& a)->void { a.SetVisBranch(); });
    t.method("SetVisBranch", [](TGeoAtt* a)->void { a->SetVisBranch(); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisContainers(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisContainers(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:68:17
    t.method("SetVisContainers", [](TGeoAtt& a)->void { a.SetVisContainers(); });
    t.method("SetVisContainers", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisContainers(arg0); });
    t.method("SetVisContainers", [](TGeoAtt* a)->void { a->SetVisContainers(); });
    t.method("SetVisContainers", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisContainers(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisLeaves(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisLeaves(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:69:17
    t.method("SetVisLeaves", [](TGeoAtt& a)->void { a.SetVisLeaves(); });
    t.method("SetVisLeaves", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisLeaves(arg0); });
    t.method("SetVisLeaves", [](TGeoAtt* a)->void { a->SetVisLeaves(); });
    t.method("SetVisLeaves", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisLeaves(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisOnly(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisOnly(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:70:17
    t.method("SetVisOnly", [](TGeoAtt& a)->void { a.SetVisOnly(); });
    t.method("SetVisOnly", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisOnly(arg0); });
    t.method("SetVisOnly", [](TGeoAtt* a)->void { a->SetVisOnly(); });
    t.method("SetVisOnly", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisOnly(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:71:17
    t.method("SetVisibility", [](TGeoAtt& a)->void { a.SetVisibility(); });
    t.method("SetVisibility", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisibility(arg0); });
    t.method("SetVisibility", [](TGeoAtt* a)->void { a->SetVisibility(); });
    t.method("SetVisibility", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisibility(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:72:9
    t.method("SetVisDaughters", [](TGeoAtt& a)->void { a.SetVisDaughters(); });
    t.method("SetVisDaughters", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisDaughters(arg0); });
    t.method("SetVisDaughters", [](TGeoAtt* a)->void { a->SetVisDaughters(); });
    t.method("SetVisDaughters", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisDaughters(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisStreamed(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisStreamed(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:73:9
    t.method("SetVisStreamed", [](TGeoAtt& a)->void { a.SetVisStreamed(); });
    t.method("SetVisStreamed", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisStreamed(arg0); });
    t.method("SetVisStreamed", [](TGeoAtt* a)->void { a->SetVisStreamed(); });
    t.method("SetVisStreamed", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisStreamed(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetVisTouched(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetVisTouched(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:74:9
    t.method("SetVisTouched", [](TGeoAtt& a)->void { a.SetVisTouched(); });
    t.method("SetVisTouched", [](TGeoAtt& a, Bool_t arg0)->void { a.SetVisTouched(arg0); });
    t.method("SetVisTouched", [](TGeoAtt* a)->void { a->SetVisTouched(); });
    t.method("SetVisTouched", [](TGeoAtt* a, Bool_t arg0)->void { a->SetVisTouched(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetActivity(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetActivity(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:75:9
    t.method("SetActivity", [](TGeoAtt& a)->void { a.SetActivity(); });
    t.method("SetActivity", [](TGeoAtt& a, Bool_t arg0)->void { a.SetActivity(arg0); });
    t.method("SetActivity", [](TGeoAtt* a)->void { a->SetActivity(); });
    t.method("SetActivity", [](TGeoAtt* a, Bool_t arg0)->void { a->SetActivity(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetActiveDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetActiveDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:76:9
    t.method("SetActiveDaughters", [](TGeoAtt& a)->void { a.SetActiveDaughters(); });
    t.method("SetActiveDaughters", [](TGeoAtt& a, Bool_t arg0)->void { a.SetActiveDaughters(arg0); });
    t.method("SetActiveDaughters", [](TGeoAtt* a)->void { a->SetActiveDaughters(); });
    t.method("SetActiveDaughters", [](TGeoAtt* a, Bool_t arg0)->void { a->SetActiveDaughters(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::SetOptimization(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::SetOptimization(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:78:9
    t.method("SetOptimization", [](TGeoAtt& a, Option_t * arg0)->void { a.SetOptimization(arg0); });
    t.method("SetOptimization", [](TGeoAtt* a, Option_t * arg0)->void { a->SetOptimization(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsActive() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsActive()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:80:11
    t.method("IsActive", [](TGeoAtt const& a)->Bool_t { return a.IsActive(); });
    t.method("IsActive", [](TGeoAtt const* a)->Bool_t { return a->IsActive(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsActiveDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsActiveDaughters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:81:11
    t.method("IsActiveDaughters", [](TGeoAtt const& a)->Bool_t { return a.IsActiveDaughters(); });
    t.method("IsActiveDaughters", [](TGeoAtt const* a)->Bool_t { return a->IsActiveDaughters(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisRaytrace() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisRaytrace()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:82:11
    t.method("IsVisRaytrace", [](TGeoAtt const& a)->Bool_t { return a.IsVisRaytrace(); });
    t.method("IsVisRaytrace", [](TGeoAtt const* a)->Bool_t { return a->IsVisRaytrace(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisible()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:83:11
    t.method("IsVisible", [](TGeoAtt const& a)->Bool_t { return a.IsVisible(); });
    t.method("IsVisible", [](TGeoAtt const* a)->Bool_t { return a->IsVisible(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisDaughters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:84:11
    t.method("IsVisDaughters", [](TGeoAtt const& a)->Bool_t { return a.IsVisDaughters(); });
    t.method("IsVisDaughters", [](TGeoAtt const* a)->Bool_t { return a->IsVisDaughters(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisBranch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisBranch()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:85:11
    t.method("IsVisBranch", [](TGeoAtt const& a)->Bool_t { return a.IsVisBranch(); });
    t.method("IsVisBranch", [](TGeoAtt const* a)->Bool_t { return a->IsVisBranch(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisContainers() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisContainers()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:86:11
    t.method("IsVisContainers", [](TGeoAtt const& a)->Bool_t { return a.IsVisContainers(); });
    t.method("IsVisContainers", [](TGeoAtt const* a)->Bool_t { return a->IsVisContainers(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisLeaves() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisLeaves()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:87:11
    t.method("IsVisLeaves", [](TGeoAtt const& a)->Bool_t { return a.IsVisLeaves(); });
    t.method("IsVisLeaves", [](TGeoAtt const* a)->Bool_t { return a->IsVisLeaves(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisOnly() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisOnly()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:88:11
    t.method("IsVisOnly", [](TGeoAtt const& a)->Bool_t { return a.IsVisOnly(); });
    t.method("IsVisOnly", [](TGeoAtt const* a)->Bool_t { return a->IsVisOnly(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisStreamed() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisStreamed()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:90:11
    t.method("IsVisStreamed", [](TGeoAtt const& a)->Bool_t { return a.IsVisStreamed(); });
    t.method("IsVisStreamed", [](TGeoAtt const* a)->Bool_t { return a->IsVisStreamed(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoAtt::IsVisTouched() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoAtt::IsVisTouched()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:91:11
    t.method("IsVisTouched", [](TGeoAtt const& a)->Bool_t { return a.IsVisTouched(); });
    t.method("IsVisTouched", [](TGeoAtt const* a)->Bool_t { return a->IsVisTouched(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoAtt::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoAtt::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!Class_Version", []()->Version_t { return TGeoAtt::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoAtt::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoAtt::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    t.method("IsA", [](TGeoAtt const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoAtt const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    t.method("StreamerNVirtual", [](TGeoAtt& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoAtt* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoAtt::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoAtt::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!DeclFileName", []() { return (std::string)TGeoAtt::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoAtt::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoAtt::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!ImplFileLine", []()->int { return TGeoAtt::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoAtt::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoAtt::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!ImplFileName", []() { return (std::string)TGeoAtt::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoAtt::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoAtt::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!Class_Name", []() { return (std::string)TGeoAtt::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoAtt::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoAtt::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!Dictionary", []()->TClass * { return TGeoAtt::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoAtt::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoAtt::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!Class", []()->TClass * { return TGeoAtt::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoAtt::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoAtt::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    t.method("Streamer", [](TGeoAtt& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoAtt* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoAtt::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoAtt::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoAtt.h:93:4
    module_.method("TGeoAtt!DeclFileLine", []()->int { return TGeoAtt::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoAtt>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoAtt(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoAtt(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBoolNode> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBoolNode> : std::false_type { };
template<> struct SuperType<TGeoBoolNode> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoBoolNode
// signature to use in the veto file: TGeoBoolNode
struct JlTGeoBoolNode: public Wrapper {

  JlTGeoBoolNode(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBoolNode (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:25:7
    jlcxx::TypeWrapper<TGeoBoolNode>  t = jlModule.add_type<TGeoBoolNode>("TGeoBoolNode",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBoolNode>>(new jlcxx::TypeWrapper<TGeoBoolNode>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for TGeoBoolNode::ThreadData_t & TGeoBoolNode::GetThreadData() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode::ThreadData_t & TGeoBoolNode::GetThreadData()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:34:18
    t.method("GetThreadData", [](TGeoBoolNode const& a)->TGeoBoolNode::ThreadData_t & { return a.GetThreadData(); });
    t.method("GetThreadData", [](TGeoBoolNode const* a)->TGeoBoolNode::ThreadData_t & { return a->GetThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:35:9
    t.method("ClearThreadData", [](TGeoBoolNode const& a)->void { a.ClearThreadData(); });
    t.method("ClearThreadData", [](TGeoBoolNode const* a)->void { a->ClearThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:36:9
    t.method("CreateThreadData", [](TGeoBoolNode& a, Int_t arg0)->void { a.CreateThreadData(arg0); });
    t.method("CreateThreadData", [](TGeoBoolNode* a, Int_t arg0)->void { a->CreateThreadData(arg0); });



    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:66:17
    t.method("ComputeBBox", [](TGeoBoolNode& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a.ComputeBBox(arg0, arg1, arg2, arg3); });
    t.method("ComputeBBox", [](TGeoBoolNode* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a->ComputeBBox(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:67:17
    t.method("ComputeNormal", [](TGeoBoolNode& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoBoolNode* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBoolNode::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBoolNode::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:68:19
    t.method("Contains", [](TGeoBoolNode const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoBoolNode const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoBoolNode::DistanceToPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBoolNode::DistanceToPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:69:18
    t.method("DistanceToPrimitive", [](TGeoBoolNode& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistanceToPrimitive(arg0, arg1); });
    t.method("DistanceToPrimitive", [](TGeoBoolNode* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistanceToPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoBoolNode::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBoolNode::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:70:21
    t.method("DistFromInside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoBoolNode::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBoolNode::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:72:21
    t.method("DistFromOutside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoBoolNode const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoBoolNode const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode::EGeoBoolType TGeoBoolNode::GetBooleanOperator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode::EGeoBoolType TGeoBoolNode::GetBooleanOperator()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:74:25
    t.method("GetBooleanOperator", [](TGeoBoolNode const& a)->TGeoBoolNode::EGeoBoolType { return a.GetBooleanOperator(); });
    t.method("GetBooleanOperator", [](TGeoBoolNode const* a)->TGeoBoolNode::EGeoBoolType { return a->GetBooleanOperator(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoBoolNode::GetNpoints() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBoolNode::GetNpoints()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:75:18
    t.method("GetNpoints", [](TGeoBoolNode& a)->Int_t { return a.GetNpoints(); });
    t.method("GetNpoints", [](TGeoBoolNode* a)->Int_t { return a->GetNpoints(); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoBoolNode::GetLeftMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoBoolNode::GetLeftMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:76:16
    t.method("GetLeftMatrix", [](TGeoBoolNode const& a)->TGeoMatrix * { return a.GetLeftMatrix(); });
    t.method("GetLeftMatrix", [](TGeoBoolNode const* a)->TGeoMatrix * { return a->GetLeftMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoBoolNode::GetRightMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoBoolNode::GetRightMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:77:16
    t.method("GetRightMatrix", [](TGeoBoolNode const& a)->TGeoMatrix * { return a.GetRightMatrix(); });
    t.method("GetRightMatrix", [](TGeoBoolNode const* a)->TGeoMatrix * { return a->GetRightMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoBoolNode::GetLeftShape() (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoBoolNode::GetLeftShape()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:78:15
    t.method("GetLeftShape", [](TGeoBoolNode const& a)->TGeoShape * { return a.GetLeftShape(); });
    t.method("GetLeftShape", [](TGeoBoolNode const* a)->TGeoShape * { return a->GetLeftShape(); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoBoolNode::GetRightShape() (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoBoolNode::GetRightShape()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:79:15
    t.method("GetRightShape", [](TGeoBoolNode const& a)->TGeoShape * { return a.GetRightShape(); });
    t.method("GetRightShape", [](TGeoBoolNode const* a)->TGeoShape * { return a->GetRightShape(); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode * TGeoBoolNode::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode * TGeoBoolNode::MakeClone()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:80:26
    t.method("MakeClone", [](TGeoBoolNode const& a)->TGeoBoolNode * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoBoolNode const* a)->TGeoBoolNode * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:81:9
    t.method("Paint", [](TGeoBoolNode& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGeoBoolNode* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::RegisterMatrices() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::RegisterMatrices()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:82:9
    t.method("RegisterMatrices", [](TGeoBoolNode& a)->void { a.RegisterMatrices(); });
    t.method("RegisterMatrices", [](TGeoBoolNode* a)->void { a->RegisterMatrices(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBoolNode::ReplaceMatrix(TGeoMatrix *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBoolNode::ReplaceMatrix(TGeoMatrix *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:83:11
    t.method("ReplaceMatrix", [](TGeoBoolNode& a, TGeoMatrix * arg0, TGeoMatrix * arg1)->Bool_t { return a.ReplaceMatrix(arg0, arg1); });
    t.method("ReplaceMatrix", [](TGeoBoolNode* a, TGeoMatrix * arg0, TGeoMatrix * arg1)->Bool_t { return a->ReplaceMatrix(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoBoolNode::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBoolNode::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:84:21
    t.method("Safety", [](TGeoBoolNode const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoBoolNode const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoBoolNode const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoBoolNode const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:86:17
    t.method("SetPoints", [](TGeoBoolNode const& a, Double_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoBoolNode const* a, Double_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:87:17
    t.method("SetPoints", [](TGeoBoolNode const& a, Float_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoBoolNode const* a, Float_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::SetSelected(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::SetSelected(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:88:9
    t.method("SetSelected", [](TGeoBoolNode& a, Int_t arg0)->void { a.SetSelected(arg0); });
    t.method("SetSelected", [](TGeoBoolNode* a, Int_t arg0)->void { a->SetSelected(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:89:17
    t.method("Sizeof3D", [](TGeoBoolNode const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoBoolNode const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoBoolNode::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBoolNode::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!Class_Version", []()->Version_t { return TGeoBoolNode::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBoolNode::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBoolNode::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    t.method("IsA", [](TGeoBoolNode const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoBoolNode const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    t.method("StreamerNVirtual", [](TGeoBoolNode& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoBoolNode* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBoolNode::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBoolNode::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!DeclFileName", []() { return (std::string)TGeoBoolNode::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBoolNode::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBoolNode::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!ImplFileLine", []()->int { return TGeoBoolNode::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBoolNode::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBoolNode::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!ImplFileName", []() { return (std::string)TGeoBoolNode::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBoolNode::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBoolNode::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!Class_Name", []() { return (std::string)TGeoBoolNode::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBoolNode::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBoolNode::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!Dictionary", []()->TClass * { return TGeoBoolNode::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBoolNode::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBoolNode::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!Class", []()->TClass * { return TGeoBoolNode::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoBoolNode::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBoolNode::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    t.method("Streamer", [](TGeoBoolNode& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoBoolNode* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoBoolNode::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBoolNode::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:91:4
    module_.method("TGeoBoolNode!DeclFileLine", []()->int { return TGeoBoolNode::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBoolNode>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBoolNode(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBoolNode(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBoolNode::ThreadData_t> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBoolNode::ThreadData_t> : std::false_type { };
}

// Class generating the wrapper for type TGeoBoolNode::ThreadData_t
// signature to use in the veto file: TGeoBoolNode::ThreadData_t
struct JlTGeoBoolNode_ThreadData_t: public Wrapper {

  JlTGeoBoolNode_ThreadData_t(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBoolNode::ThreadData_t (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:28:11
    jlcxx::TypeWrapper<TGeoBoolNode::ThreadData_t>  t = jlModule.add_type<TGeoBoolNode::ThreadData_t>("TGeoBoolNode!ThreadData_t");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBoolNode::ThreadData_t>>(new jlcxx::TypeWrapper<TGeoBoolNode::ThreadData_t>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding fSelected methods  to provide read access to the field fSelected (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:29:13
    // signature to use in the veto list: TGeoBoolNode::ThreadData_t::fSelected
    t.method("fSelected", [](const TGeoBoolNode::ThreadData_t& a) -> Int_t { return a.fSelected; });
    t.method("fSelected", [](TGeoBoolNode::ThreadData_t& a) -> Int_t { return a.fSelected; });
    t.method("fSelected", [](const TGeoBoolNode::ThreadData_t* a) -> Int_t { return a->fSelected; });
    t.method("fSelected", [](TGeoBoolNode::ThreadData_t* a) -> Int_t { return a->fSelected; });
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:29:13
    // signature to use in the veto list: TGeoBoolNode::ThreadData_t::fSelected
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fSelected! methods to provide write access to the field fSelected (" __HERE__ ")");
    t.method("fSelected!", [](TGeoBoolNode::ThreadData_t& a, Int_t val) -> Int_t { return a.fSelected = val; });

    DEBUG_MSG("Adding fSelected! methods to provide write access to the field fSelected (" __HERE__ ")");
    t.method("fSelected!", [](TGeoBoolNode::ThreadData_t* a, Int_t val) -> Int_t { return a->fSelected = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBoolNode::ThreadData_t>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBoolNode_ThreadData_t(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBoolNode_ThreadData_t(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoUnion> : std::false_type { };
  template<> struct DefaultConstructible<TGeoUnion> : std::false_type { };
template<> struct SuperType<TGeoUnion> { typedef TGeoBoolNode type; };
}

// Class generating the wrapper for type TGeoUnion
// signature to use in the veto file: TGeoUnion
struct JlTGeoUnion: public Wrapper {

  JlTGeoUnion(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoUnion (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:100:7
    jlcxx::TypeWrapper<TGeoUnion>  t = jlModule.add_type<TGeoUnion>("TGeoUnion",
      jlcxx::julia_base_type<TGeoBoolNode>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoUnion>>(new jlcxx::TypeWrapper<TGeoUnion>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoUnion::TGeoUnion(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:104:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoUnion::TGeoUnion(TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:105:4
    t.constructor<TGeoShape *, TGeoShape *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoUnion::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:110:9
    t.method("ComputeBBox", [](TGeoUnion& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a.ComputeBBox(arg0, arg1, arg2, arg3); });
    t.method("ComputeBBox", [](TGeoUnion* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a->ComputeBBox(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoUnion::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:111:9
    t.method("ComputeNormal", [](TGeoUnion& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoUnion* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoUnion::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoUnion::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:112:11
    t.method("Contains", [](TGeoUnion const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoUnion const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoUnion::DistanceToPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoUnion::DistanceToPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:113:10
    t.method("DistanceToPrimitive", [](TGeoUnion& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistanceToPrimitive(arg0, arg1); });
    t.method("DistanceToPrimitive", [](TGeoUnion* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistanceToPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoUnion::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoUnion::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:114:13
    t.method("DistFromInside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoUnion::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoUnion::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:116:13
    t.method("DistFromOutside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoUnion const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoUnion const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode::EGeoBoolType TGeoUnion::GetBooleanOperator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode::EGeoBoolType TGeoUnion::GetBooleanOperator()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:118:17
    t.method("GetBooleanOperator", [](TGeoUnion const& a)->TGeoBoolNode::EGeoBoolType { return a.GetBooleanOperator(); });
    t.method("GetBooleanOperator", [](TGeoUnion const* a)->TGeoBoolNode::EGeoBoolType { return a->GetBooleanOperator(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoUnion::GetNpoints() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoUnion::GetNpoints()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:119:10
    t.method("GetNpoints", [](TGeoUnion& a)->Int_t { return a.GetNpoints(); });
    t.method("GetNpoints", [](TGeoUnion* a)->Int_t { return a->GetNpoints(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoUnion::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoUnion::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:120:13
    t.method("Safety", [](TGeoUnion const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoUnion const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoUnion const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoUnion const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoUnion::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:122:9
    t.method("Sizeof3D", [](TGeoUnion const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoUnion const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode * TGeoUnion::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode * TGeoUnion::MakeClone()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:125:18
    t.method("MakeClone", [](TGeoUnion const& a)->TGeoBoolNode * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoUnion const* a)->TGeoBoolNode * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoUnion::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:126:9
    t.method("Paint", [](TGeoUnion& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGeoUnion* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoUnion::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoUnion::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!Class_Version", []()->Version_t { return TGeoUnion::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUnion::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUnion::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    t.method("IsA", [](TGeoUnion const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoUnion const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoUnion::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    t.method("StreamerNVirtual", [](TGeoUnion& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoUnion* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUnion::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUnion::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!DeclFileName", []() { return (std::string)TGeoUnion::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoUnion::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoUnion::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!ImplFileLine", []()->int { return TGeoUnion::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUnion::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUnion::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!ImplFileName", []() { return (std::string)TGeoUnion::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUnion::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUnion::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!Class_Name", []() { return (std::string)TGeoUnion::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUnion::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUnion::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!Dictionary", []()->TClass * { return TGeoUnion::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUnion::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUnion::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!Class", []()->TClass * { return TGeoUnion::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoUnion::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUnion::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    t.method("Streamer", [](TGeoUnion& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoUnion* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoUnion::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoUnion::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoBoolNode.h:128:4
    module_.method("TGeoUnion!DeclFileLine", []()->int { return TGeoUnion::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoUnion>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoUnion(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoUnion(module));
}
