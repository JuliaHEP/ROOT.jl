// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TH2C> : std::false_type { };
  template<> struct DefaultConstructible<TH2C> : std::false_type { };
template<> struct SuperType<TH2C> { typedef TH2 type; };
}

// Class generating the wrapper for type TH2C
// signature to use in the veto file: TH2C
struct JlTH2C: public Wrapper {

  JlTH2C(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH2C (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:135:7
    jlcxx::TypeWrapper<TH2C>  t = jlModule.add_type<TH2C>("TH2C",
      jlcxx::julia_base_type<TH2>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH2C>>(new jlcxx::TypeWrapper<TH2C>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:139:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:141:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:143:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:145:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:147:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2C::TH2C(const TH2C &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:149:4
    t.constructor<const TH2C &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH2C::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:152:21
    t.method("AddBinContent", static_cast<void (TH2C::*)(Int_t) >(&TH2C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2C::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:153:21
    t.method("AddBinContent", static_cast<void (TH2C::*)(Int_t, Double_t) >(&TH2C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2C::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:154:21
    t.method("Copy", static_cast<void (TH2C::*)(TObject &)  const>(&TH2C::Copy));

    DEBUG_MSG("Adding wrapper for void TH2C::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:155:21
    t.method("Reset", static_cast<void (TH2C::*)(Option_t *) >(&TH2C::Reset));
    t.method("Reset", [](TH2C& a)->void { a.Reset(); });
    t.method("Reset", [](TH2C* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH2C::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:156:21
    t.method("SetBinsLength", static_cast<void (TH2C::*)(Int_t) >(&TH2C::SetBinsLength));
    t.method("SetBinsLength", [](TH2C& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH2C* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH2C & TH2C::operator=(const TH2C &) (" __HERE__ ")");
    // signature to use in the veto list: TH2C & TH2C::operator=(const TH2C &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:158:21
    t.method("assign", static_cast<TH2C & (TH2C::*)(const TH2C &) >(&TH2C::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH2C::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH2C::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!Class_Version", static_cast<Version_t (*)() >(&TH2C::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH2C::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2C::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    t.method("IsA", static_cast<TClass * (TH2C::*)()  const>(&TH2C::IsA));

    DEBUG_MSG("Adding wrapper for void TH2C::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    t.method("StreamerNVirtual", static_cast<void (TH2C::*)(TBuffer &) >(&TH2C::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH2C::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2C::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!DeclFileName", []() { return (std::string)TH2C::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH2C::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2C::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!ImplFileLine", static_cast<int (*)() >(&TH2C::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH2C::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2C::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!ImplFileName", []() { return (std::string)TH2C::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH2C::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2C::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!Class_Name", []() { return (std::string)TH2C::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH2C::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2C::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!Dictionary", static_cast<TClass * (*)() >(&TH2C::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH2C::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2C::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!Class", static_cast<TClass * (*)() >(&TH2C::Class));

    DEBUG_MSG("Adding wrapper for void TH2C::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2C::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    t.method("Streamer", static_cast<void (TH2C::*)(TBuffer &) >(&TH2C::Streamer));

    DEBUG_MSG("Adding wrapper for int TH2C::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2C::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:170:4
    module_.method("TH2C!DeclFileLine", static_cast<int (*)() >(&TH2C::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH2C>> type_;
};
std::shared_ptr<Wrapper> newJlTH2C(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH2C(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH2S> : std::false_type { };
  template<> struct DefaultConstructible<TH2S> : std::false_type { };
template<> struct SuperType<TH2S> { typedef TH2 type; };
}

// Class generating the wrapper for type TH2S
// signature to use in the veto file: TH2S
struct JlTH2S: public Wrapper {

  JlTH2S(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH2S (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:176:7
    jlcxx::TypeWrapper<TH2S>  t = jlModule.add_type<TH2S>("TH2S",
      jlcxx::julia_base_type<TH2>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH2S>>(new jlcxx::TypeWrapper<TH2S>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:180:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:182:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:184:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:186:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:188:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2S::TH2S(const TH2S &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:190:4
    t.constructor<const TH2S &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH2S::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:193:21
    t.method("AddBinContent", static_cast<void (TH2S::*)(Int_t) >(&TH2S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2S::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:194:21
    t.method("AddBinContent", static_cast<void (TH2S::*)(Int_t, Double_t) >(&TH2S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2S::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:195:21
    t.method("Copy", static_cast<void (TH2S::*)(TObject &)  const>(&TH2S::Copy));

    DEBUG_MSG("Adding wrapper for void TH2S::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:196:21
    t.method("Reset", static_cast<void (TH2S::*)(Option_t *) >(&TH2S::Reset));
    t.method("Reset", [](TH2S& a)->void { a.Reset(); });
    t.method("Reset", [](TH2S* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH2S::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:197:21
    t.method("SetBinsLength", static_cast<void (TH2S::*)(Int_t) >(&TH2S::SetBinsLength));
    t.method("SetBinsLength", [](TH2S& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH2S* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH2S & TH2S::operator=(const TH2S &) (" __HERE__ ")");
    // signature to use in the veto list: TH2S & TH2S::operator=(const TH2S &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:199:21
    t.method("assign", static_cast<TH2S & (TH2S::*)(const TH2S &) >(&TH2S::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH2S::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH2S::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!Class_Version", static_cast<Version_t (*)() >(&TH2S::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH2S::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2S::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    t.method("IsA", static_cast<TClass * (TH2S::*)()  const>(&TH2S::IsA));

    DEBUG_MSG("Adding wrapper for void TH2S::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    t.method("StreamerNVirtual", static_cast<void (TH2S::*)(TBuffer &) >(&TH2S::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH2S::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2S::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!DeclFileName", []() { return (std::string)TH2S::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH2S::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2S::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!ImplFileLine", static_cast<int (*)() >(&TH2S::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH2S::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2S::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!ImplFileName", []() { return (std::string)TH2S::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH2S::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2S::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!Class_Name", []() { return (std::string)TH2S::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH2S::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2S::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!Dictionary", static_cast<TClass * (*)() >(&TH2S::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH2S::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2S::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!Class", static_cast<TClass * (*)() >(&TH2S::Class));

    DEBUG_MSG("Adding wrapper for void TH2S::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2S::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    t.method("Streamer", static_cast<void (TH2S::*)(TBuffer &) >(&TH2S::Streamer));

    DEBUG_MSG("Adding wrapper for int TH2S::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2S::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:211:4
    module_.method("TH2S!DeclFileLine", static_cast<int (*)() >(&TH2S::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH2S>> type_;
};
std::shared_ptr<Wrapper> newJlTH2S(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH2S(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH2I> : std::false_type { };
  template<> struct DefaultConstructible<TH2I> : std::false_type { };
template<> struct SuperType<TH2I> { typedef TH2 type; };
}

// Class generating the wrapper for type TH2I
// signature to use in the veto file: TH2I
struct JlTH2I: public Wrapper {

  JlTH2I(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH2I (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:217:7
    jlcxx::TypeWrapper<TH2I>  t = jlModule.add_type<TH2I>("TH2I",
      jlcxx::julia_base_type<TH2>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH2I>>(new jlcxx::TypeWrapper<TH2I>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:221:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:223:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:225:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:227:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:229:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2I::TH2I(const TH2I &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:231:4
    t.constructor<const TH2I &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH2I::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:234:21
    t.method("AddBinContent", static_cast<void (TH2I::*)(Int_t) >(&TH2I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2I::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:235:21
    t.method("AddBinContent", static_cast<void (TH2I::*)(Int_t, Double_t) >(&TH2I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2I::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:236:21
    t.method("Copy", static_cast<void (TH2I::*)(TObject &)  const>(&TH2I::Copy));

    DEBUG_MSG("Adding wrapper for void TH2I::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:237:21
    t.method("Reset", static_cast<void (TH2I::*)(Option_t *) >(&TH2I::Reset));
    t.method("Reset", [](TH2I& a)->void { a.Reset(); });
    t.method("Reset", [](TH2I* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH2I::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:238:21
    t.method("SetBinsLength", static_cast<void (TH2I::*)(Int_t) >(&TH2I::SetBinsLength));
    t.method("SetBinsLength", [](TH2I& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH2I* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH2I & TH2I::operator=(const TH2I &) (" __HERE__ ")");
    // signature to use in the veto list: TH2I & TH2I::operator=(const TH2I &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:240:21
    t.method("assign", static_cast<TH2I & (TH2I::*)(const TH2I &) >(&TH2I::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH2I::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH2I::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!Class_Version", static_cast<Version_t (*)() >(&TH2I::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH2I::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2I::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    t.method("IsA", static_cast<TClass * (TH2I::*)()  const>(&TH2I::IsA));

    DEBUG_MSG("Adding wrapper for void TH2I::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    t.method("StreamerNVirtual", static_cast<void (TH2I::*)(TBuffer &) >(&TH2I::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH2I::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2I::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!DeclFileName", []() { return (std::string)TH2I::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH2I::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2I::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!ImplFileLine", static_cast<int (*)() >(&TH2I::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH2I::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2I::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!ImplFileName", []() { return (std::string)TH2I::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH2I::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2I::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!Class_Name", []() { return (std::string)TH2I::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH2I::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2I::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!Dictionary", static_cast<TClass * (*)() >(&TH2I::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH2I::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2I::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!Class", static_cast<TClass * (*)() >(&TH2I::Class));

    DEBUG_MSG("Adding wrapper for void TH2I::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2I::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    t.method("Streamer", static_cast<void (TH2I::*)(TBuffer &) >(&TH2I::Streamer));

    DEBUG_MSG("Adding wrapper for int TH2I::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2I::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:252:4
    module_.method("TH2I!DeclFileLine", static_cast<int (*)() >(&TH2I::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH2I>> type_;
};
std::shared_ptr<Wrapper> newJlTH2I(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH2I(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH2F> : std::false_type { };
  template<> struct DefaultConstructible<TH2F> : std::false_type { };
template<> struct SuperType<TH2F> { typedef TH2 type; };
}

// Class generating the wrapper for type TH2F
// signature to use in the veto file: TH2F
struct JlTH2F: public Wrapper {

  JlTH2F(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH2F (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:258:7
    jlcxx::TypeWrapper<TH2F>  t = jlModule.add_type<TH2F>("TH2F",
      jlcxx::julia_base_type<TH2>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH2F>>(new jlcxx::TypeWrapper<TH2F>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:262:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:264:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:266:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:268:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:270:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2F::TH2F(const TH2F &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:273:4
    t.constructor<const TH2F &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH2F::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:276:21
    t.method("AddBinContent", static_cast<void (TH2F::*)(Int_t) >(&TH2F::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2F::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:277:21
    t.method("AddBinContent", static_cast<void (TH2F::*)(Int_t, Double_t) >(&TH2F::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2F::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:279:21
    t.method("Copy", static_cast<void (TH2F::*)(TObject &)  const>(&TH2F::Copy));

    DEBUG_MSG("Adding wrapper for void TH2F::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:280:21
    t.method("Reset", static_cast<void (TH2F::*)(Option_t *) >(&TH2F::Reset));
    t.method("Reset", [](TH2F& a)->void { a.Reset(); });
    t.method("Reset", [](TH2F* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH2F::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:281:21
    t.method("SetBinsLength", static_cast<void (TH2F::*)(Int_t) >(&TH2F::SetBinsLength));
    t.method("SetBinsLength", [](TH2F& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH2F* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH2F & TH2F::operator=(const TH2F &) (" __HERE__ ")");
    // signature to use in the veto list: TH2F & TH2F::operator=(const TH2F &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:283:21
    t.method("assign", static_cast<TH2F & (TH2F::*)(const TH2F &) >(&TH2F::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH2F::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH2F::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!Class_Version", static_cast<Version_t (*)() >(&TH2F::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH2F::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2F::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    t.method("IsA", static_cast<TClass * (TH2F::*)()  const>(&TH2F::IsA));

    DEBUG_MSG("Adding wrapper for void TH2F::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    t.method("StreamerNVirtual", static_cast<void (TH2F::*)(TBuffer &) >(&TH2F::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH2F::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2F::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!DeclFileName", []() { return (std::string)TH2F::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH2F::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2F::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!ImplFileLine", static_cast<int (*)() >(&TH2F::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH2F::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2F::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!ImplFileName", []() { return (std::string)TH2F::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH2F::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2F::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!Class_Name", []() { return (std::string)TH2F::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH2F::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2F::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!Dictionary", static_cast<TClass * (*)() >(&TH2F::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH2F::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2F::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!Class", static_cast<TClass * (*)() >(&TH2F::Class));

    DEBUG_MSG("Adding wrapper for void TH2F::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2F::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    t.method("Streamer", static_cast<void (TH2F::*)(TBuffer &) >(&TH2F::Streamer));

    DEBUG_MSG("Adding wrapper for int TH2F::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2F::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:295:4
    module_.method("TH2F!DeclFileLine", static_cast<int (*)() >(&TH2F::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH2F>> type_;
};
std::shared_ptr<Wrapper> newJlTH2F(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH2F(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH2D> : std::false_type { };
  template<> struct DefaultConstructible<TH2D> : std::false_type { };
template<> struct SuperType<TH2D> { typedef TH2 type; };
}

// Class generating the wrapper for type TH2D
// signature to use in the veto file: TH2D
struct JlTH2D: public Wrapper {

  JlTH2D(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH2D (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:301:7
    jlcxx::TypeWrapper<TH2D>  t = jlModule.add_type<TH2D>("TH2D",
      jlcxx::julia_base_type<TH2>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH2D>>(new jlcxx::TypeWrapper<TH2D>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:305:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:307:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:309:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:311:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:313:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH2D::TH2D(const TH2D &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:316:4
    t.constructor<const TH2D &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH2D::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:319:21
    t.method("AddBinContent", static_cast<void (TH2D::*)(Int_t) >(&TH2D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2D::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:320:21
    t.method("AddBinContent", static_cast<void (TH2D::*)(Int_t, Double_t) >(&TH2D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH2D::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:322:21
    t.method("Copy", static_cast<void (TH2D::*)(TObject &)  const>(&TH2D::Copy));

    DEBUG_MSG("Adding wrapper for void TH2D::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:323:21
    t.method("Reset", static_cast<void (TH2D::*)(Option_t *) >(&TH2D::Reset));
    t.method("Reset", [](TH2D& a)->void { a.Reset(); });
    t.method("Reset", [](TH2D* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH2D::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:324:21
    t.method("SetBinsLength", static_cast<void (TH2D::*)(Int_t) >(&TH2D::SetBinsLength));
    t.method("SetBinsLength", [](TH2D& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH2D* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH2D & TH2D::operator=(const TH2D &) (" __HERE__ ")");
    // signature to use in the veto list: TH2D & TH2D::operator=(const TH2D &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:326:21
    t.method("assign", static_cast<TH2D & (TH2D::*)(const TH2D &) >(&TH2D::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH2D::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH2D::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!Class_Version", static_cast<Version_t (*)() >(&TH2D::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH2D::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2D::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    t.method("IsA", static_cast<TClass * (TH2D::*)()  const>(&TH2D::IsA));

    DEBUG_MSG("Adding wrapper for void TH2D::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    t.method("StreamerNVirtual", static_cast<void (TH2D::*)(TBuffer &) >(&TH2D::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH2D::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2D::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!DeclFileName", []() { return (std::string)TH2D::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH2D::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2D::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!ImplFileLine", static_cast<int (*)() >(&TH2D::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH2D::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2D::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!ImplFileName", []() { return (std::string)TH2D::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH2D::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH2D::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!Class_Name", []() { return (std::string)TH2D::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH2D::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2D::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!Dictionary", static_cast<TClass * (*)() >(&TH2D::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH2D::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH2D::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!Class", static_cast<TClass * (*)() >(&TH2D::Class));

    DEBUG_MSG("Adding wrapper for void TH2D::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH2D::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    t.method("Streamer", static_cast<void (TH2D::*)(TBuffer &) >(&TH2D::Streamer));

    DEBUG_MSG("Adding wrapper for int TH2D::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH2D::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH2.h:338:4
    module_.method("TH2D!DeclFileLine", static_cast<int (*)() >(&TH2D::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH2D>> type_;
};
std::shared_ptr<Wrapper> newJlTH2D(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH2D(module));
}
