// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoManager> : std::false_type { };
  template<> struct DefaultConstructible<TGeoManager> : std::false_type { };
template<> struct SuperType<TGeoManager> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoManager
// signature to use in the veto file: TGeoManager
struct JlTGeoManager: public Wrapper {

  JlTGeoManager(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoManager (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:44:7
    jlcxx::TypeWrapper<TGeoManager>  t = jlModule.add_type<TGeoManager>("TGeoManager",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoManager>>(new jlcxx::TypeWrapper<TGeoManager>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoManager::TGeoManager(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:162:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddMaterial(const TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddMaterial(const TGeoMaterial *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:166:10
    t.method("AddMaterial", [](TGeoManager& a, const TGeoMaterial * arg0)->Int_t { return a.AddMaterial(arg0); });
    t.method("AddMaterial", [](TGeoManager* a, const TGeoMaterial * arg0)->Int_t { return a->AddMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddOverlap(const TNamed *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddOverlap(const TNamed *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:167:10
    t.method("AddOverlap", [](TGeoManager& a, const TNamed * arg0)->Int_t { return a.AddOverlap(arg0); });
    t.method("AddOverlap", [](TGeoManager* a, const TNamed * arg0)->Int_t { return a->AddOverlap(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddRegion(TGeoRegion *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddRegion(TGeoRegion *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:168:10
    t.method("AddRegion", [](TGeoManager& a, TGeoRegion * arg0)->Int_t { return a.AddRegion(arg0); });
    t.method("AddRegion", [](TGeoManager* a, TGeoRegion * arg0)->Int_t { return a->AddRegion(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddTransformation(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddTransformation(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:169:10
    t.method("AddTransformation", [](TGeoManager& a, const TGeoMatrix * arg0)->Int_t { return a.AddTransformation(arg0); });
    t.method("AddTransformation", [](TGeoManager* a, const TGeoMatrix * arg0)->Int_t { return a->AddTransformation(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddShape(const TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddShape(const TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:170:10
    t.method("AddShape", [](TGeoManager& a, const TGeoShape * arg0)->Int_t { return a.AddShape(arg0); });
    t.method("AddShape", [](TGeoManager* a, const TGeoShape * arg0)->Int_t { return a->AddShape(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddTrack(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddTrack(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:171:10
    t.method("AddTrack", [](TGeoManager& a, Int_t arg0, Int_t arg1)->Int_t { return a.AddTrack(arg0, arg1); });
    t.method("AddTrack", [](TGeoManager& a, Int_t arg0, Int_t arg1, TObject * arg2)->Int_t { return a.AddTrack(arg0, arg1, arg2); });
    t.method("AddTrack", [](TGeoManager* a, Int_t arg0, Int_t arg1)->Int_t { return a->AddTrack(arg0, arg1); });
    t.method("AddTrack", [](TGeoManager* a, Int_t arg0, Int_t arg1, TObject * arg2)->Int_t { return a->AddTrack(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddTrack(TVirtualGeoTrack *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddTrack(TVirtualGeoTrack *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:172:10
    t.method("AddTrack", [](TGeoManager& a, TVirtualGeoTrack * arg0)->Int_t { return a.AddTrack(arg0); });
    t.method("AddTrack", [](TGeoManager* a, TVirtualGeoTrack * arg0)->Int_t { return a->AddTrack(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::AddVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::AddVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:173:10
    t.method("AddVolume", [](TGeoManager& a, TGeoVolume * arg0)->Int_t { return a.AddVolume(arg0); });
    t.method("AddVolume", [](TGeoManager* a, TGeoVolume * arg0)->Int_t { return a->AddVolume(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNavigator * TGeoManager::AddNavigator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigator * TGeoManager::AddNavigator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:174:19
    t.method("AddNavigator", [](TGeoManager& a)->TGeoNavigator * { return a.AddNavigator(); });
    t.method("AddNavigator", [](TGeoManager* a)->TGeoNavigator * { return a->AddNavigator(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::AddProperty(const char *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::AddProperty(const char *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:175:11
    t.method("AddProperty", [](TGeoManager& a, const char * arg0, Double_t arg1)->Bool_t { return a.AddProperty(arg0, arg1); });
    t.method("AddProperty", [](TGeoManager* a, const char * arg0, Double_t arg1)->Bool_t { return a->AddProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetProperty(const char *, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetProperty(const char *, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:176:13
    t.method("GetProperty", [](TGeoManager const& a, const char * arg0)->Double_t { return a.GetProperty(arg0); });
    t.method("GetProperty", [](TGeoManager const& a, const char * arg0, Bool_t * arg1)->Double_t { return a.GetProperty(arg0, arg1); });
    t.method("GetProperty", [](TGeoManager const* a, const char * arg0)->Double_t { return a->GetProperty(arg0); });
    t.method("GetProperty", [](TGeoManager const* a, const char * arg0, Bool_t * arg1)->Double_t { return a->GetProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetProperty(size_t, TString &, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetProperty(size_t, TString &, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:177:13
    t.method("GetProperty", [](TGeoManager const& a, size_t arg0, TString & arg1)->Double_t { return a.GetProperty(arg0, arg1); });
    t.method("GetProperty", [](TGeoManager const& a, size_t arg0, TString & arg1, Bool_t * arg2)->Double_t { return a.GetProperty(arg0, arg1, arg2); });
    t.method("GetProperty", [](TGeoManager const* a, size_t arg0, TString & arg1)->Double_t { return a->GetProperty(arg0, arg1); });
    t.method("GetProperty", [](TGeoManager const* a, size_t arg0, TString & arg1, Bool_t * arg2)->Double_t { return a->GetProperty(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNproperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNproperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:178:10
    t.method("GetNproperties", [](TGeoManager const& a)->Int_t { return a.GetNproperties(); });
    t.method("GetNproperties", [](TGeoManager const* a)->Int_t { return a->GetNproperties(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:179:9
    t.method("ClearOverlaps", [](TGeoManager& a)->void { a.ClearOverlaps(); });
    t.method("ClearOverlaps", [](TGeoManager* a)->void { a->ClearOverlaps(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RegisterMatrix(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RegisterMatrix(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:180:9
    t.method("RegisterMatrix", [](TGeoManager& a, const TGeoMatrix * arg0)->void { a.RegisterMatrix(arg0); });
    t.method("RegisterMatrix", [](TGeoManager* a, const TGeoMatrix * arg0)->void { a->RegisterMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SortOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SortOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:181:9
    t.method("SortOverlaps", [](TGeoManager& a)->void { a.SortOverlaps(); });
    t.method("SortOverlaps", [](TGeoManager* a)->void { a->SortOverlaps(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:183:9
    t.method("Browse", [](TGeoManager& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TGeoManager* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVisibility(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVisibility(TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:184:9
    t.method("SetVisibility", [](TGeoManager& a, TObject * arg0, Bool_t arg1)->void { a.SetVisibility(arg0, arg1); });
    t.method("SetVisibility", [](TGeoManager* a, TObject * arg0, Bool_t arg1)->void { a->SetVisibility(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:185:19
    t.method("cd", [](TGeoManager& a)->Bool_t { return a.cd(); });
    t.method("cd", [](TGeoManager& a, const char * arg0)->Bool_t { return a.cd(arg0); });
    t.method("cd", [](TGeoManager* a)->Bool_t { return a->cd(); });
    t.method("cd", [](TGeoManager* a, const char * arg0)->Bool_t { return a->cd(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::CheckPath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::CheckPath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:186:11
    t.method("CheckPath", [](TGeoManager const& a, const char * arg0)->Bool_t { return a.CheckPath(arg0); });
    t.method("CheckPath", [](TGeoManager const* a, const char * arg0)->Bool_t { return a->CheckPath(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CdNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CdNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:187:9
    t.method("CdNode", [](TGeoManager& a, Int_t arg0)->void { a.CdNode(arg0); });
    t.method("CdNode", [](TGeoManager* a, Int_t arg0)->void { a->CdNode(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CdDown(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CdDown(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:188:9
    t.method("CdDown", [](TGeoManager& a, Int_t arg0)->void { a.CdDown(arg0); });
    t.method("CdDown", [](TGeoManager* a, Int_t arg0)->void { a->CdDown(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CdUp() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CdUp()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:189:9
    t.method("CdUp", [](TGeoManager& a)->void { a.CdUp(); });
    t.method("CdUp", [](TGeoManager* a)->void { a->CdUp(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CdTop() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CdTop()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:190:9
    t.method("CdTop", [](TGeoManager& a)->void { a.CdTop(); });
    t.method("CdTop", [](TGeoManager* a)->void { a->CdTop(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CdNext() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CdNext()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:191:9
    t.method("CdNext", [](TGeoManager& a)->void { a.CdNext(); });
    t.method("CdNext", [](TGeoManager* a)->void { a->CdNext(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::GetBranchNames(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::GetBranchNames(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:192:9
    t.method("GetBranchNames", [](TGeoManager const& a, Int_t * arg0)->void { a.GetBranchNames(arg0); });
    t.method("GetBranchNames", [](TGeoManager const* a, Int_t * arg0)->void { a->GetBranchNames(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::GetBranchNumbers(Int_t *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::GetBranchNumbers(Int_t *, Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:193:9
    t.method("GetBranchNumbers", [](TGeoManager const& a, Int_t * arg0, Int_t * arg1)->void { a.GetBranchNumbers(arg0, arg1); });
    t.method("GetBranchNumbers", [](TGeoManager const* a, Int_t * arg0, Int_t * arg1)->void { a->GetBranchNumbers(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::GetBranchOnlys(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::GetBranchOnlys(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:194:9
    t.method("GetBranchOnlys", [](TGeoManager const& a, Int_t * arg0)->void { a.GetBranchOnlys(arg0); });
    t.method("GetBranchOnlys", [](TGeoManager const* a, Int_t * arg0)->void { a->GetBranchOnlys(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNmany() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNmany()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:195:10
    t.method("GetNmany", [](TGeoManager const& a)->Int_t { return a.GetNmany(); });
    t.method("GetNmany", [](TGeoManager const* a)->Int_t { return a->GetNmany(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::GetPdgName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::GetPdgName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:196:16
    t.method("GetPdgName", [](TGeoManager const& a, Int_t arg0) { return (std::string)a.GetPdgName(arg0); });
    t.method("GetPdgName", [](TGeoManager const* a, Int_t arg0) { return (std::string)a->GetPdgName(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetPdgName(Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetPdgName(Int_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:197:9
    t.method("SetPdgName", [](TGeoManager& a, Int_t arg0, const char * arg1)->void { a.SetPdgName(arg0, arg1); });
    t.method("SetPdgName", [](TGeoManager* a, Int_t arg0, const char * arg1)->void { a->SetPdgName(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:198:11
    t.method("IsFolder", [](TGeoManager const& a)->Bool_t { return a.IsFolder(); });
    t.method("IsFolder", [](TGeoManager const* a)->Bool_t { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Edit(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Edit(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:200:17
    t.method("Edit", [](TGeoManager& a)->void { a.Edit(); });
    t.method("Edit", [](TGeoManager& a, Option_t * arg0)->void { a.Edit(arg0); });
    t.method("Edit", [](TGeoManager* a)->void { a->Edit(); });
    t.method("Edit", [](TGeoManager* a, Option_t * arg0)->void { a->Edit(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::BombTranslation(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::BombTranslation(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:201:9
    t.method("BombTranslation", [](TGeoManager& a, const Double_t * arg0, Double_t * arg1)->void { a.BombTranslation(arg0, arg1); });
    t.method("BombTranslation", [](TGeoManager* a, const Double_t * arg0, Double_t * arg1)->void { a->BombTranslation(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::UnbombTranslation(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::UnbombTranslation(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:202:9
    t.method("UnbombTranslation", [](TGeoManager& a, const Double_t * arg0, Double_t * arg1)->void { a.UnbombTranslation(arg0, arg1); });
    t.method("UnbombTranslation", [](TGeoManager* a, const Double_t * arg0, Double_t * arg1)->void { a->UnbombTranslation(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearAttributes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearAttributes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:203:9
    t.method("ClearAttributes", [](TGeoManager& a)->void { a.ClearAttributes(); });
    t.method("ClearAttributes", [](TGeoManager* a)->void { a->ClearAttributes(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DefaultAngles() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DefaultAngles()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:204:9
    t.method("DefaultAngles", [](TGeoManager& a)->void { a.DefaultAngles(); });
    t.method("DefaultAngles", [](TGeoManager* a)->void { a->DefaultAngles(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DefaultColors() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DefaultColors()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:205:9
    t.method("DefaultColors", [](TGeoManager& a)->void { a.DefaultColors(); });
    t.method("DefaultColors", [](TGeoManager* a)->void { a->DefaultColors(); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoManager::GetClippingShape() (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoManager::GetClippingShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:206:15
    t.method("GetClippingShape", [](TGeoManager const& a)->TGeoShape * { return a.GetClippingShape(); });
    t.method("GetClippingShape", [](TGeoManager const* a)->TGeoShape * { return a->GetClippingShape(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNsegments() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNsegments()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:207:10
    t.method("GetNsegments", [](TGeoManager const& a)->Int_t { return a.GetNsegments(); });
    t.method("GetNsegments", [](TGeoManager const* a)->Int_t { return a->GetNsegments(); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoPainter * TGeoManager::GetGeomPainter() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoPainter * TGeoManager::GetGeomPainter()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:208:24
    t.method("GetGeomPainter", [](TGeoManager& a)->TVirtualGeoPainter * { return a.GetGeomPainter(); });
    t.method("GetGeomPainter", [](TGeoManager* a)->TVirtualGeoPainter * { return a->GetGeomPainter(); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoPainter * TGeoManager::GetPainter() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoPainter * TGeoManager::GetPainter()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:209:24
    t.method("GetPainter", [](TGeoManager const& a)->TVirtualGeoPainter * { return a.GetPainter(); });
    t.method("GetPainter", [](TGeoManager const* a)->TVirtualGeoPainter * { return a->GetPainter(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetBombMode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetBombMode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:210:10
    t.method("GetBombMode", [](TGeoManager const& a)->Int_t { return a.GetBombMode(); });
    t.method("GetBombMode", [](TGeoManager const* a)->Int_t { return a->GetBombMode(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::GetBombFactors(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::GetBombFactors(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:211:9
    t.method("GetBombFactors", [](TGeoManager const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a.GetBombFactors(arg0, arg1, arg2, arg3); });
    t.method("GetBombFactors", [](TGeoManager const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a->GetBombFactors(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxVisNodes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxVisNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:212:10
    t.method("GetMaxVisNodes", [](TGeoManager const& a)->Int_t { return a.GetMaxVisNodes(); });
    t.method("GetMaxVisNodes", [](TGeoManager const* a)->Int_t { return a->GetMaxVisNodes(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::GetTminTmax(Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::GetTminTmax(Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:213:11
    t.method("GetTminTmax", [](TGeoManager const& a, Double_t & arg0, Double_t & arg1)->Bool_t { return a.GetTminTmax(arg0, arg1); });
    t.method("GetTminTmax", [](TGeoManager const* a, Double_t & arg0, Double_t & arg1)->Bool_t { return a->GetTminTmax(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetTmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetTmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:214:13
    t.method("GetTmax", [](TGeoManager const& a)->Double_t { return a.GetTmax(); });
    t.method("GetTmax", [](TGeoManager const* a)->Double_t { return a->GetTmax(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetPaintVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetPaintVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:215:16
    t.method("GetPaintVolume", [](TGeoManager const& a)->TGeoVolume * { return a.GetPaintVolume(); });
    t.method("GetPaintVolume", [](TGeoManager const* a)->TGeoVolume * { return a->GetPaintVolume(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetUserPaintVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetUserPaintVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:216:16
    t.method("GetUserPaintVolume", [](TGeoManager const& a)->TGeoVolume * { return a.GetUserPaintVolume(); });
    t.method("GetUserPaintVolume", [](TGeoManager const* a)->TGeoVolume * { return a->GetUserPaintVolume(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetVisDensity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetVisDensity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:217:13
    t.method("GetVisDensity", [](TGeoManager const& a)->Double_t { return a.GetVisDensity(); });
    t.method("GetVisDensity", [](TGeoManager const* a)->Double_t { return a->GetVisDensity(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetVisLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetVisLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:218:10
    t.method("GetVisLevel", [](TGeoManager const& a)->Int_t { return a.GetVisLevel(); });
    t.method("GetVisLevel", [](TGeoManager const* a)->Int_t { return a->GetVisLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetVisOption() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetVisOption()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:219:10
    t.method("GetVisOption", [](TGeoManager const& a)->Int_t { return a.GetVisOption(); });
    t.method("GetVisOption", [](TGeoManager const* a)->Int_t { return a->GetVisOption(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsInPhiRange() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsInPhiRange()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:220:11
    t.method("IsInPhiRange", [](TGeoManager const& a)->Bool_t { return a.IsInPhiRange(); });
    t.method("IsInPhiRange", [](TGeoManager const* a)->Bool_t { return a->IsInPhiRange(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsDrawingExtra() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsDrawingExtra()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:221:11
    t.method("IsDrawingExtra", [](TGeoManager const& a)->Bool_t { return a.IsDrawingExtra(); });
    t.method("IsDrawingExtra", [](TGeoManager const* a)->Bool_t { return a->IsDrawingExtra(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsNodeSelectable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsNodeSelectable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:222:11
    t.method("IsNodeSelectable", [](TGeoManager const& a)->Bool_t { return a.IsNodeSelectable(); });
    t.method("IsNodeSelectable", [](TGeoManager const* a)->Bool_t { return a->IsNodeSelectable(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsVisLeaves() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsVisLeaves()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:223:11
    t.method("IsVisLeaves", [](TGeoManager const& a)->Bool_t { return a.IsVisLeaves(); });
    t.method("IsVisLeaves", [](TGeoManager const* a)->Bool_t { return a->IsVisLeaves(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ModifiedPad() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ModifiedPad()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:224:9
    t.method("ModifiedPad", [](TGeoManager const& a)->void { a.ModifiedPad(); });
    t.method("ModifiedPad", [](TGeoManager const* a)->void { a->ModifiedPad(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::OptimizeVoxels(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::OptimizeVoxels(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:225:9
    t.method("OptimizeVoxels", [](TGeoManager& a)->void { a.OptimizeVoxels(); });
    t.method("OptimizeVoxels", [](TGeoManager& a, const char * arg0)->void { a.OptimizeVoxels(arg0); });
    t.method("OptimizeVoxels", [](TGeoManager* a)->void { a->OptimizeVoxels(); });
    t.method("OptimizeVoxels", [](TGeoManager* a, const char * arg0)->void { a->OptimizeVoxels(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetClipping(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetClipping(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:226:9
    t.method("SetClipping", [](TGeoManager& a)->void { a.SetClipping(); });
    t.method("SetClipping", [](TGeoManager& a, Bool_t arg0)->void { a.SetClipping(arg0); });
    t.method("SetClipping", [](TGeoManager* a)->void { a->SetClipping(); });
    t.method("SetClipping", [](TGeoManager* a, Bool_t arg0)->void { a->SetClipping(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetClippingShape(TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetClippingShape(TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:227:9
    t.method("SetClippingShape", [](TGeoManager& a, TGeoShape * arg0)->void { a.SetClippingShape(arg0); });
    t.method("SetClippingShape", [](TGeoManager* a, TGeoShape * arg0)->void { a->SetClippingShape(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetExplodedView(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetExplodedView(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:228:9
    t.method("SetExplodedView", [](TGeoManager& a)->void { a.SetExplodedView(); });
    t.method("SetExplodedView", [](TGeoManager& a, Int_t arg0)->void { a.SetExplodedView(arg0); });
    t.method("SetExplodedView", [](TGeoManager* a)->void { a->SetExplodedView(); });
    t.method("SetExplodedView", [](TGeoManager* a, Int_t arg0)->void { a->SetExplodedView(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetPhiRange(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetPhiRange(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:229:9
    t.method("SetPhiRange", [](TGeoManager& a)->void { a.SetPhiRange(); });
    t.method("SetPhiRange", [](TGeoManager& a, Double_t arg0)->void { a.SetPhiRange(arg0); });
    t.method("SetPhiRange", [](TGeoManager& a, Double_t arg0, Double_t arg1)->void { a.SetPhiRange(arg0, arg1); });
    t.method("SetPhiRange", [](TGeoManager* a)->void { a->SetPhiRange(); });
    t.method("SetPhiRange", [](TGeoManager* a, Double_t arg0)->void { a->SetPhiRange(arg0); });
    t.method("SetPhiRange", [](TGeoManager* a, Double_t arg0, Double_t arg1)->void { a->SetPhiRange(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetNsegments(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetNsegments(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:230:9
    t.method("SetNsegments", [](TGeoManager& a, Int_t arg0)->void { a.SetNsegments(arg0); });
    t.method("SetNsegments", [](TGeoManager* a, Int_t arg0)->void { a->SetNsegments(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::SetCurrentNavigator(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::SetCurrentNavigator(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:231:11
    t.method("SetCurrentNavigator", [](TGeoManager& a, Int_t arg0)->Bool_t { return a.SetCurrentNavigator(arg0); });
    t.method("SetCurrentNavigator", [](TGeoManager* a, Int_t arg0)->Bool_t { return a->SetCurrentNavigator(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetBombFactors(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetBombFactors(Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:233:4
    t.method("SetBombFactors", [](TGeoManager& a)->void { a.SetBombFactors(); });
    t.method("SetBombFactors", [](TGeoManager& a, Double_t arg0)->void { a.SetBombFactors(arg0); });
    t.method("SetBombFactors", [](TGeoManager& a, Double_t arg0, Double_t arg1)->void { a.SetBombFactors(arg0, arg1); });
    t.method("SetBombFactors", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetBombFactors(arg0, arg1, arg2); });
    t.method("SetBombFactors", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.SetBombFactors(arg0, arg1, arg2, arg3); });
    t.method("SetBombFactors", [](TGeoManager* a)->void { a->SetBombFactors(); });
    t.method("SetBombFactors", [](TGeoManager* a, Double_t arg0)->void { a->SetBombFactors(arg0); });
    t.method("SetBombFactors", [](TGeoManager* a, Double_t arg0, Double_t arg1)->void { a->SetBombFactors(arg0, arg1); });
    t.method("SetBombFactors", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetBombFactors(arg0, arg1, arg2); });
    t.method("SetBombFactors", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->SetBombFactors(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetPaintVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetPaintVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:234:9
    t.method("SetPaintVolume", [](TGeoManager& a, TGeoVolume * arg0)->void { a.SetPaintVolume(arg0); });
    t.method("SetPaintVolume", [](TGeoManager* a, TGeoVolume * arg0)->void { a->SetPaintVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetUserPaintVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetUserPaintVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:235:9
    t.method("SetUserPaintVolume", [](TGeoManager& a, TGeoVolume * arg0)->void { a.SetUserPaintVolume(arg0); });
    t.method("SetUserPaintVolume", [](TGeoManager* a, TGeoVolume * arg0)->void { a->SetUserPaintVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetTopVisible(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetTopVisible(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:236:9
    t.method("SetTopVisible", [](TGeoManager& a)->void { a.SetTopVisible(); });
    t.method("SetTopVisible", [](TGeoManager& a, Bool_t arg0)->void { a.SetTopVisible(arg0); });
    t.method("SetTopVisible", [](TGeoManager* a)->void { a->SetTopVisible(); });
    t.method("SetTopVisible", [](TGeoManager* a, Bool_t arg0)->void { a->SetTopVisible(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetTminTmax(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetTminTmax(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:237:9
    t.method("SetTminTmax", [](TGeoManager& a)->void { a.SetTminTmax(); });
    t.method("SetTminTmax", [](TGeoManager& a, Double_t arg0)->void { a.SetTminTmax(arg0); });
    t.method("SetTminTmax", [](TGeoManager& a, Double_t arg0, Double_t arg1)->void { a.SetTminTmax(arg0, arg1); });
    t.method("SetTminTmax", [](TGeoManager* a)->void { a->SetTminTmax(); });
    t.method("SetTminTmax", [](TGeoManager* a, Double_t arg0)->void { a->SetTminTmax(arg0); });
    t.method("SetTminTmax", [](TGeoManager* a, Double_t arg0, Double_t arg1)->void { a->SetTminTmax(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetDrawExtraPaths(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetDrawExtraPaths(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:238:9
    t.method("SetDrawExtraPaths", [](TGeoManager& a)->void { a.SetDrawExtraPaths(); });
    t.method("SetDrawExtraPaths", [](TGeoManager& a, Bool_t arg0)->void { a.SetDrawExtraPaths(arg0); });
    t.method("SetDrawExtraPaths", [](TGeoManager* a)->void { a->SetDrawExtraPaths(); });
    t.method("SetDrawExtraPaths", [](TGeoManager* a, Bool_t arg0)->void { a->SetDrawExtraPaths(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetNodeSelectable(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetNodeSelectable(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:239:9
    t.method("SetNodeSelectable", [](TGeoManager& a)->void { a.SetNodeSelectable(); });
    t.method("SetNodeSelectable", [](TGeoManager& a, Bool_t arg0)->void { a.SetNodeSelectable(arg0); });
    t.method("SetNodeSelectable", [](TGeoManager* a)->void { a->SetNodeSelectable(); });
    t.method("SetNodeSelectable", [](TGeoManager* a, Bool_t arg0)->void { a->SetNodeSelectable(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVisDensity(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVisDensity(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:240:9
    t.method("SetVisDensity", [](TGeoManager& a)->void { a.SetVisDensity(); });
    t.method("SetVisDensity", [](TGeoManager& a, Double_t arg0)->void { a.SetVisDensity(arg0); });
    t.method("SetVisDensity", [](TGeoManager* a)->void { a->SetVisDensity(); });
    t.method("SetVisDensity", [](TGeoManager* a, Double_t arg0)->void { a->SetVisDensity(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVisLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVisLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:241:9
    t.method("SetVisLevel", [](TGeoManager& a)->void { a.SetVisLevel(); });
    t.method("SetVisLevel", [](TGeoManager& a, Int_t arg0)->void { a.SetVisLevel(arg0); });
    t.method("SetVisLevel", [](TGeoManager* a)->void { a->SetVisLevel(); });
    t.method("SetVisLevel", [](TGeoManager* a, Int_t arg0)->void { a->SetVisLevel(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVisOption(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVisOption(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:242:9
    t.method("SetVisOption", [](TGeoManager& a)->void { a.SetVisOption(); });
    t.method("SetVisOption", [](TGeoManager& a, Int_t arg0)->void { a.SetVisOption(arg0); });
    t.method("SetVisOption", [](TGeoManager* a)->void { a->SetVisOption(); });
    t.method("SetVisOption", [](TGeoManager* a, Int_t arg0)->void { a->SetVisOption(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ViewLeaves(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ViewLeaves(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:243:9
    t.method("ViewLeaves", [](TGeoManager& a)->void { a.ViewLeaves(); });
    t.method("ViewLeaves", [](TGeoManager& a, Bool_t arg0)->void { a.ViewLeaves(arg0); });
    t.method("ViewLeaves", [](TGeoManager* a)->void { a->ViewLeaves(); });
    t.method("ViewLeaves", [](TGeoManager* a, Bool_t arg0)->void { a->ViewLeaves(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SaveAttributes(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SaveAttributes(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:244:9
    t.method("SaveAttributes", [](TGeoManager& a)->void { a.SaveAttributes(); });
    t.method("SaveAttributes", [](TGeoManager& a, const char * arg0)->void { a.SaveAttributes(arg0); });
    t.method("SaveAttributes", [](TGeoManager* a)->void { a->SaveAttributes(); });
    t.method("SaveAttributes", [](TGeoManager* a, const char * arg0)->void { a->SaveAttributes(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RestoreMasterVolume() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RestoreMasterVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:245:9
    t.method("RestoreMasterVolume", [](TGeoManager& a)->void { a.RestoreMasterVolume(); });
    t.method("RestoreMasterVolume", [](TGeoManager* a)->void { a->RestoreMasterVolume(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetMaxVisNodes(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetMaxVisNodes(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:246:9
    t.method("SetMaxVisNodes", [](TGeoManager& a)->void { a.SetMaxVisNodes(); });
    t.method("SetMaxVisNodes", [](TGeoManager& a, Int_t arg0)->void { a.SetMaxVisNodes(arg0); });
    t.method("SetMaxVisNodes", [](TGeoManager* a)->void { a->SetMaxVisNodes(); });
    t.method("SetMaxVisNodes", [](TGeoManager* a, Int_t arg0)->void { a->SetMaxVisNodes(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::AnimateTracks(Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::AnimateTracks(Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:248:9
    t.method("AnimateTracks", [](TGeoManager& a)->void { a.AnimateTracks(); });
    t.method("AnimateTracks", [](TGeoManager& a, Double_t arg0)->void { a.AnimateTracks(arg0); });
    t.method("AnimateTracks", [](TGeoManager& a, Double_t arg0, Double_t arg1)->void { a.AnimateTracks(arg0, arg1); });
    t.method("AnimateTracks", [](TGeoManager& a, Double_t arg0, Double_t arg1, Int_t arg2)->void { a.AnimateTracks(arg0, arg1, arg2); });
    t.method("AnimateTracks", [](TGeoManager& a, Double_t arg0, Double_t arg1, Int_t arg2, Option_t * arg3)->void { a.AnimateTracks(arg0, arg1, arg2, arg3); });
    t.method("AnimateTracks", [](TGeoManager* a)->void { a->AnimateTracks(); });
    t.method("AnimateTracks", [](TGeoManager* a, Double_t arg0)->void { a->AnimateTracks(arg0); });
    t.method("AnimateTracks", [](TGeoManager* a, Double_t arg0, Double_t arg1)->void { a->AnimateTracks(arg0, arg1); });
    t.method("AnimateTracks", [](TGeoManager* a, Double_t arg0, Double_t arg1, Int_t arg2)->void { a->AnimateTracks(arg0, arg1, arg2); });
    t.method("AnimateTracks", [](TGeoManager* a, Double_t arg0, Double_t arg1, Int_t arg2, Option_t * arg3)->void { a->AnimateTracks(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckBoundaryErrors(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckBoundaryErrors(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:249:9
    t.method("CheckBoundaryErrors", [](TGeoManager& a)->void { a.CheckBoundaryErrors(); });
    t.method("CheckBoundaryErrors", [](TGeoManager& a, Int_t arg0)->void { a.CheckBoundaryErrors(arg0); });
    t.method("CheckBoundaryErrors", [](TGeoManager& a, Int_t arg0, Double_t arg1)->void { a.CheckBoundaryErrors(arg0, arg1); });
    t.method("CheckBoundaryErrors", [](TGeoManager* a)->void { a->CheckBoundaryErrors(); });
    t.method("CheckBoundaryErrors", [](TGeoManager* a, Int_t arg0)->void { a->CheckBoundaryErrors(arg0); });
    t.method("CheckBoundaryErrors", [](TGeoManager* a, Int_t arg0, Double_t arg1)->void { a->CheckBoundaryErrors(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckBoundaryReference(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckBoundaryReference(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:250:9
    t.method("CheckBoundaryReference", [](TGeoManager& a)->void { a.CheckBoundaryReference(); });
    t.method("CheckBoundaryReference", [](TGeoManager& a, Int_t arg0)->void { a.CheckBoundaryReference(arg0); });
    t.method("CheckBoundaryReference", [](TGeoManager* a)->void { a->CheckBoundaryReference(); });
    t.method("CheckBoundaryReference", [](TGeoManager* a, Int_t arg0)->void { a->CheckBoundaryReference(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckGeometryFull(Int_t, Double_t, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckGeometryFull(Int_t, Double_t, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:251:9
    t.method("CheckGeometryFull", [](TGeoManager& a)->void { a.CheckGeometryFull(); });
    t.method("CheckGeometryFull", [](TGeoManager& a, Int_t arg0)->void { a.CheckGeometryFull(arg0); });
    t.method("CheckGeometryFull", [](TGeoManager& a, Int_t arg0, Double_t arg1)->void { a.CheckGeometryFull(arg0, arg1); });
    t.method("CheckGeometryFull", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.CheckGeometryFull(arg0, arg1, arg2); });
    t.method("CheckGeometryFull", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.CheckGeometryFull(arg0, arg1, arg2, arg3); });
    t.method("CheckGeometryFull", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->void { a.CheckGeometryFull(arg0, arg1, arg2, arg3, arg4); });
    t.method("CheckGeometryFull", [](TGeoManager* a)->void { a->CheckGeometryFull(); });
    t.method("CheckGeometryFull", [](TGeoManager* a, Int_t arg0)->void { a->CheckGeometryFull(arg0); });
    t.method("CheckGeometryFull", [](TGeoManager* a, Int_t arg0, Double_t arg1)->void { a->CheckGeometryFull(arg0, arg1); });
    t.method("CheckGeometryFull", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->CheckGeometryFull(arg0, arg1, arg2); });
    t.method("CheckGeometryFull", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->CheckGeometryFull(arg0, arg1, arg2, arg3); });
    t.method("CheckGeometryFull", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->void { a->CheckGeometryFull(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckGeometry(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckGeometry(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:253:9
    t.method("CheckGeometry", [](TGeoManager& a)->void { a.CheckGeometry(); });
    t.method("CheckGeometry", [](TGeoManager& a, Option_t * arg0)->void { a.CheckGeometry(arg0); });
    t.method("CheckGeometry", [](TGeoManager* a)->void { a->CheckGeometry(); });
    t.method("CheckGeometry", [](TGeoManager* a, Option_t * arg0)->void { a->CheckGeometry(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckOverlaps(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckOverlaps(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:254:9
    t.method("CheckOverlaps", [](TGeoManager& a)->void { a.CheckOverlaps(); });
    t.method("CheckOverlaps", [](TGeoManager& a, Double_t arg0)->void { a.CheckOverlaps(arg0); });
    t.method("CheckOverlaps", [](TGeoManager& a, Double_t arg0, Option_t * arg1)->void { a.CheckOverlaps(arg0, arg1); });
    t.method("CheckOverlaps", [](TGeoManager* a)->void { a->CheckOverlaps(); });
    t.method("CheckOverlaps", [](TGeoManager* a, Double_t arg0)->void { a->CheckOverlaps(arg0); });
    t.method("CheckOverlaps", [](TGeoManager* a, Double_t arg0, Option_t * arg1)->void { a->CheckOverlaps(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckPoint(Double_t, Double_t, Double_t, Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckPoint(Double_t, Double_t, Double_t, Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:255:9
    t.method("CheckPoint", [](TGeoManager& a)->void { a.CheckPoint(); });
    t.method("CheckPoint", [](TGeoManager& a, Double_t arg0)->void { a.CheckPoint(arg0); });
    t.method("CheckPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1)->void { a.CheckPoint(arg0, arg1); });
    t.method("CheckPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.CheckPoint(arg0, arg1, arg2); });
    t.method("CheckPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3)->void { a.CheckPoint(arg0, arg1, arg2, arg3); });
    t.method("CheckPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3, Double_t arg4)->void { a.CheckPoint(arg0, arg1, arg2, arg3, arg4); });
    t.method("CheckPoint", [](TGeoManager* a)->void { a->CheckPoint(); });
    t.method("CheckPoint", [](TGeoManager* a, Double_t arg0)->void { a->CheckPoint(arg0); });
    t.method("CheckPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1)->void { a->CheckPoint(arg0, arg1); });
    t.method("CheckPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->CheckPoint(arg0, arg1, arg2); });
    t.method("CheckPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3)->void { a->CheckPoint(arg0, arg1, arg2, arg3); });
    t.method("CheckPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3, Double_t arg4)->void { a->CheckPoint(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CheckShape(TGeoShape *, Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CheckShape(TGeoShape *, Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:256:9
    t.method("CheckShape", [](TGeoManager& a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->void { a.CheckShape(arg0, arg1, arg2, arg3); });
    t.method("CheckShape", [](TGeoManager* a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->void { a->CheckShape(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ConvertReflections() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ConvertReflections()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:257:9
    t.method("ConvertReflections", [](TGeoManager& a)->void { a.ConvertReflections(); });
    t.method("ConvertReflections", [](TGeoManager* a)->void { a->ConvertReflections(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DrawCurrentPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DrawCurrentPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:258:9
    t.method("DrawCurrentPoint", [](TGeoManager& a)->void { a.DrawCurrentPoint(); });
    t.method("DrawCurrentPoint", [](TGeoManager& a, Int_t arg0)->void { a.DrawCurrentPoint(arg0); });
    t.method("DrawCurrentPoint", [](TGeoManager* a)->void { a->DrawCurrentPoint(); });
    t.method("DrawCurrentPoint", [](TGeoManager* a, Int_t arg0)->void { a->DrawCurrentPoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DrawTracks(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DrawTracks(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:259:9
    t.method("DrawTracks", [](TGeoManager& a)->void { a.DrawTracks(); });
    t.method("DrawTracks", [](TGeoManager& a, Option_t * arg0)->void { a.DrawTracks(arg0); });
    t.method("DrawTracks", [](TGeoManager* a)->void { a->DrawTracks(); });
    t.method("DrawTracks", [](TGeoManager* a, Option_t * arg0)->void { a->DrawTracks(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetParticleName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetParticleName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:260:9
    t.method("SetParticleName", [](TGeoManager& a, const char * arg0)->void { a.SetParticleName(arg0); });
    t.method("SetParticleName", [](TGeoManager* a, const char * arg0)->void { a->SetParticleName(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::GetParticleName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::GetParticleName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:261:16
    t.method("GetParticleName", [](TGeoManager const& a) { return (std::string)a.GetParticleName(); });
    t.method("GetParticleName", [](TGeoManager const* a) { return (std::string)a->GetParticleName(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DrawPath(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DrawPath(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:262:9
    t.method("DrawPath", [](TGeoManager& a, const char * arg0)->void { a.DrawPath(arg0); });
    t.method("DrawPath", [](TGeoManager& a, const char * arg0, Option_t * arg1)->void { a.DrawPath(arg0, arg1); });
    t.method("DrawPath", [](TGeoManager* a, const char * arg0)->void { a->DrawPath(arg0); });
    t.method("DrawPath", [](TGeoManager* a, const char * arg0, Option_t * arg1)->void { a->DrawPath(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::PrintOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::PrintOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:263:9
    t.method("PrintOverlaps", [](TGeoManager const& a)->void { a.PrintOverlaps(); });
    t.method("PrintOverlaps", [](TGeoManager const* a)->void { a->PrintOverlaps(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RandomPoints(const TGeoVolume *, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RandomPoints(const TGeoVolume *, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:264:9
    t.method("RandomPoints", [](TGeoManager& a, const TGeoVolume * arg0)->void { a.RandomPoints(arg0); });
    t.method("RandomPoints", [](TGeoManager& a, const TGeoVolume * arg0, Int_t arg1)->void { a.RandomPoints(arg0, arg1); });
    t.method("RandomPoints", [](TGeoManager& a, const TGeoVolume * arg0, Int_t arg1, Option_t * arg2)->void { a.RandomPoints(arg0, arg1, arg2); });
    t.method("RandomPoints", [](TGeoManager* a, const TGeoVolume * arg0)->void { a->RandomPoints(arg0); });
    t.method("RandomPoints", [](TGeoManager* a, const TGeoVolume * arg0, Int_t arg1)->void { a->RandomPoints(arg0, arg1); });
    t.method("RandomPoints", [](TGeoManager* a, const TGeoVolume * arg0, Int_t arg1, Option_t * arg2)->void { a->RandomPoints(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:265:9
    t.method("RandomRays", [](TGeoManager& a)->void { a.RandomRays(); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0)->void { a.RandomRays(arg0); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0, Double_t arg1)->void { a.RandomRays(arg0, arg1); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.RandomRays(arg0, arg1, arg2); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.RandomRays(arg0, arg1, arg2, arg3); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4)->void { a.RandomRays(arg0, arg1, arg2, arg3, arg4); });
    t.method("RandomRays", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a.RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("RandomRays", [](TGeoManager* a)->void { a->RandomRays(); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0)->void { a->RandomRays(arg0); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0, Double_t arg1)->void { a->RandomRays(arg0, arg1); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->RandomRays(arg0, arg1, arg2); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->RandomRays(arg0, arg1, arg2, arg3); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4)->void { a->RandomRays(arg0, arg1, arg2, arg3, arg4); });
    t.method("RandomRays", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a->RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::SamplePoints(Int_t, Double_t &, Double_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::SamplePoints(Int_t, Double_t &, Double_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:267:14
    t.method("SamplePoints", [](TGeoManager& a, Int_t arg0, Double_t & arg1)->TGeoNode * { return a.SamplePoints(arg0, arg1); });
    t.method("SamplePoints", [](TGeoManager& a, Int_t arg0, Double_t & arg1, Double_t arg2)->TGeoNode * { return a.SamplePoints(arg0, arg1, arg2); });
    t.method("SamplePoints", [](TGeoManager& a, Int_t arg0, Double_t & arg1, Double_t arg2, const char * arg3)->TGeoNode * { return a.SamplePoints(arg0, arg1, arg2, arg3); });
    t.method("SamplePoints", [](TGeoManager* a, Int_t arg0, Double_t & arg1)->TGeoNode * { return a->SamplePoints(arg0, arg1); });
    t.method("SamplePoints", [](TGeoManager* a, Int_t arg0, Double_t & arg1, Double_t arg2)->TGeoNode * { return a->SamplePoints(arg0, arg1, arg2); });
    t.method("SamplePoints", [](TGeoManager* a, Int_t arg0, Double_t & arg1, Double_t arg2, const char * arg3)->TGeoNode * { return a->SamplePoints(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetNmeshPoints(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetNmeshPoints(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:268:9
    t.method("SetNmeshPoints", [](TGeoManager& a)->void { a.SetNmeshPoints(); });
    t.method("SetNmeshPoints", [](TGeoManager& a, Int_t arg0)->void { a.SetNmeshPoints(arg0); });
    t.method("SetNmeshPoints", [](TGeoManager* a)->void { a->SetNmeshPoints(); });
    t.method("SetNmeshPoints", [](TGeoManager* a, Int_t arg0)->void { a->SetNmeshPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCheckedNode(TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCheckedNode(TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:269:9
    t.method("SetCheckedNode", [](TGeoManager& a, TGeoNode * arg0)->void { a.SetCheckedNode(arg0); });
    t.method("SetCheckedNode", [](TGeoManager* a, TGeoNode * arg0)->void { a->SetCheckedNode(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Test(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Test(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:270:9
    t.method("Test", [](TGeoManager& a)->void { a.Test(); });
    t.method("Test", [](TGeoManager& a, Int_t arg0)->void { a.Test(arg0); });
    t.method("Test", [](TGeoManager& a, Int_t arg0, Option_t * arg1)->void { a.Test(arg0, arg1); });
    t.method("Test", [](TGeoManager* a)->void { a->Test(); });
    t.method("Test", [](TGeoManager* a, Int_t arg0)->void { a->Test(arg0); });
    t.method("Test", [](TGeoManager* a, Int_t arg0, Option_t * arg1)->void { a->Test(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::TestOverlaps(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::TestOverlaps(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:271:9
    t.method("TestOverlaps", [](TGeoManager& a)->void { a.TestOverlaps(); });
    t.method("TestOverlaps", [](TGeoManager& a, const char * arg0)->void { a.TestOverlaps(arg0); });
    t.method("TestOverlaps", [](TGeoManager* a)->void { a->TestOverlaps(); });
    t.method("TestOverlaps", [](TGeoManager* a, const char * arg0)->void { a->TestOverlaps(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::Weight(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::Weight(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:272:13
    t.method("Weight", [](TGeoManager& a)->Double_t { return a.Weight(); });
    t.method("Weight", [](TGeoManager& a, Double_t arg0)->Double_t { return a.Weight(arg0); });
    t.method("Weight", [](TGeoManager& a, Double_t arg0, Option_t * arg1)->Double_t { return a.Weight(arg0, arg1); });
    t.method("Weight", [](TGeoManager* a)->Double_t { return a->Weight(); });
    t.method("Weight", [](TGeoManager* a, Double_t arg0)->Double_t { return a->Weight(arg0); });
    t.method("Weight", [](TGeoManager* a, Double_t arg0, Option_t * arg1)->Double_t { return a->Weight(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::Division(const char *, const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::Division(const char *, const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:275:16
    t.method("Division", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Division", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Division", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Option_t * arg7)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("Division", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Division", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Division", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Option_t * arg7)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Matrix(Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Matrix(Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:278:4
    t.method("Matrix", [](TGeoManager& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a.Matrix(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Matrix", [](TGeoManager* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a->Matrix(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::Material(const char *, Double_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::Material(const char *, Double_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:279:18
    t.method("Material", [](TGeoManager& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4); });
    t.method("Material", [](TGeoManager& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Material", [](TGeoManager& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5, Double_t arg6)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Material", [](TGeoManager* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4); });
    t.method("Material", [](TGeoManager* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Material", [](TGeoManager* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5, Double_t arg6)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::Mixture(const char *, Float_t *, Float_t *, Double_t, Int_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::Mixture(const char *, Float_t *, Float_t *, Double_t, Int_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:282:4
    t.method("Mixture", [](TGeoManager& a, const char * arg0, Float_t * arg1, Float_t * arg2, Double_t arg3, Int_t arg4, Float_t * arg5, Int_t arg6)->TGeoMaterial * { return a.Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Mixture", [](TGeoManager* a, const char * arg0, Float_t * arg1, Float_t * arg2, Double_t arg3, Int_t arg4, Float_t * arg5, Int_t arg6)->TGeoMaterial * { return a->Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::Mixture(const char *, Double_t *, Double_t *, Double_t, Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::Mixture(const char *, Double_t *, Double_t *, Double_t, Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:284:4
    t.method("Mixture", [](TGeoManager& a, const char * arg0, Double_t * arg1, Double_t * arg2, Double_t arg3, Int_t arg4, Double_t * arg5, Int_t arg6)->TGeoMaterial * { return a.Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Mixture", [](TGeoManager* a, const char * arg0, Double_t * arg1, Double_t * arg2, Double_t arg3, Int_t arg4, Double_t * arg5, Int_t arg6)->TGeoMaterial * { return a->Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoManager::Medium(const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoManager::Medium(const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:285:16
    t.method("Medium", [](TGeoManager& a, const char * arg0, Int_t arg1, Int_t arg2, Int_t arg3, Int_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->TGeoMedium * { return a.Medium(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); });
    t.method("Medium", [](TGeoManager* a, const char * arg0, Int_t arg1, Int_t arg2, Int_t arg3, Int_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->TGeoMedium * { return a->Medium(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:287:9
    t.method("Node", [](TGeoManager& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("Node", [](TGeoManager& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8, Int_t arg9)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });
    t.method("Node", [](TGeoManager* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("Node", [](TGeoManager* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8, Int_t arg9)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:289:9
    t.method("Node", [](TGeoManager& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("Node", [](TGeoManager& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8, Int_t arg9)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });
    t.method("Node", [](TGeoManager* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("Node", [](TGeoManager* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8, Int_t arg9)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::Volume(const char *, const char *, Int_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::Volume(const char *, const char *, Int_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:291:16
    t.method("Volume", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3); });
    t.method("Volume", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3, Int_t arg4)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3, arg4); });
    t.method("Volume", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3); });
    t.method("Volume", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3, Int_t arg4)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::Volume(const char *, const char *, Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::Volume(const char *, const char *, Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:292:16
    t.method("Volume", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3); });
    t.method("Volume", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3, Int_t arg4)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3, arg4); });
    t.method("Volume", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3); });
    t.method("Volume", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3, Int_t arg4)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVolumeAttribute(const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVolumeAttribute(const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:293:9
    t.method("SetVolumeAttribute", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2)->void { a.SetVolumeAttribute(arg0, arg1, arg2); });
    t.method("SetVolumeAttribute", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2)->void { a->SetVolumeAttribute(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::BuildDefaultMaterials() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::BuildDefaultMaterials()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:295:9
    t.method("BuildDefaultMaterials", [](TGeoManager& a)->void { a.BuildDefaultMaterials(); });
    t.method("BuildDefaultMaterials", [](TGeoManager* a)->void { a->BuildDefaultMaterials(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CloseGeometry(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CloseGeometry(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:296:9
    t.method("CloseGeometry", [](TGeoManager& a)->void { a.CloseGeometry(); });
    t.method("CloseGeometry", [](TGeoManager& a, Option_t * arg0)->void { a.CloseGeometry(arg0); });
    t.method("CloseGeometry", [](TGeoManager* a)->void { a->CloseGeometry(); });
    t.method("CloseGeometry", [](TGeoManager* a, Option_t * arg0)->void { a->CloseGeometry(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsClosed() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsClosed()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:297:11
    t.method("IsClosed", [](TGeoManager const& a)->Bool_t { return a.IsClosed(); });
    t.method("IsClosed", [](TGeoManager const* a)->Bool_t { return a->IsClosed(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeArb8(const char *, TGeoMedium *, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeArb8(const char *, TGeoMedium *, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:298:16
    t.method("MakeArb8", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2)->TGeoVolume * { return a.MakeArb8(arg0, arg1, arg2); });
    t.method("MakeArb8", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t * arg3)->TGeoVolume * { return a.MakeArb8(arg0, arg1, arg2, arg3); });
    t.method("MakeArb8", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2)->TGeoVolume * { return a->MakeArb8(arg0, arg1, arg2); });
    t.method("MakeArb8", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t * arg3)->TGeoVolume * { return a->MakeArb8(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeBox(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeBox(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:299:16
    t.method("MakeBox", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeBox(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeBox", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeBox(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeCone(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeCone(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:300:16
    t.method("MakeCone", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeCone(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeCone", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeCone(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeCons(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeCons(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:302:16
    t.method("MakeCons", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8)->TGeoVolume * { return a.MakeCons(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("MakeCons", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8)->TGeoVolume * { return a->MakeCons(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeCtub(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeCtub(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:304:16
    t.method("MakeCtub", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a.MakeCtub(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });
    t.method("MakeCtub", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a->MakeCtub(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeEltu(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeEltu(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:306:16
    t.method("MakeEltu", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeEltu(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeEltu", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeEltu(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeGtra(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeGtra(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:307:16
    t.method("MakeGtra", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->TGeoVolume * { return a.MakeGtra(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); });
    t.method("MakeGtra", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->TGeoVolume * { return a->MakeGtra(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakePara(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakePara(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:310:16
    t.method("MakePara", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a.MakePara(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("MakePara", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a->MakePara(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakePcon(const char *, TGeoMedium *, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakePcon(const char *, TGeoMedium *, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:312:16
    t.method("MakePcon", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoVolume * { return a.MakePcon(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakePcon", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoVolume * { return a->MakePcon(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeParaboloid(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeParaboloid(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:313:16
    t.method("MakeParaboloid", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeParaboloid(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeParaboloid", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeParaboloid(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeHype(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeHype(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:314:16
    t.method("MakeHype", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeHype(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeHype", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeHype(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakePgon(const char *, TGeoMedium *, Double_t, Double_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakePgon(const char *, TGeoMedium *, Double_t, Double_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:316:16
    t.method("MakePgon", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4, Int_t arg5)->TGeoVolume * { return a.MakePgon(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakePgon", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4, Int_t arg5)->TGeoVolume * { return a->MakePgon(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeSphere(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeSphere(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:317:16
    t.method("MakeSphere", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3); });
    t.method("MakeSphere", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeSphere", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakeSphere", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeSphere", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("MakeSphere", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3); });
    t.method("MakeSphere", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeSphere", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakeSphere", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeSphere", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTorus(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTorus(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:319:16
    t.method("MakeTorus", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeTorus", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakeTorus", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeTorus", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeTorus", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakeTorus", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTrap(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTrap(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:321:16
    t.method("MakeTrap", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a.MakeTrap(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });
    t.method("MakeTrap", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a->MakeTrap(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTrd1(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTrd1(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:324:16
    t.method("MakeTrd1", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeTrd1(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("MakeTrd1", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeTrd1(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTrd2(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTrd2(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:326:4
    t.method("MakeTrd2", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTrd2(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeTrd2", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTrd2(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTube(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTube(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:327:16
    t.method("MakeTube", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeTube(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeTube", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeTube(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeTubs(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeTubs(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:328:16
    t.method("MakeTubs", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTubs(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("MakeTubs", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTubs(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::MakeXtru(const char *, TGeoMedium *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::MakeXtru(const char *, TGeoMedium *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:330:16
    t.method("MakeXtru", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1, Int_t arg2)->TGeoVolume * { return a.MakeXtru(arg0, arg1, arg2); });
    t.method("MakeXtru", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1, Int_t arg2)->TGeoVolume * { return a->MakeXtru(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TGeoPNEntry * TGeoManager::SetAlignableEntry(const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPNEntry * TGeoManager::SetAlignableEntry(const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:332:17
    t.method("SetAlignableEntry", [](TGeoManager& a, const char * arg0, const char * arg1)->TGeoPNEntry * { return a.SetAlignableEntry(arg0, arg1); });
    t.method("SetAlignableEntry", [](TGeoManager& a, const char * arg0, const char * arg1, Int_t arg2)->TGeoPNEntry * { return a.SetAlignableEntry(arg0, arg1, arg2); });
    t.method("SetAlignableEntry", [](TGeoManager* a, const char * arg0, const char * arg1)->TGeoPNEntry * { return a->SetAlignableEntry(arg0, arg1); });
    t.method("SetAlignableEntry", [](TGeoManager* a, const char * arg0, const char * arg1, Int_t arg2)->TGeoPNEntry * { return a->SetAlignableEntry(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TGeoPNEntry * TGeoManager::GetAlignableEntry(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPNEntry * TGeoManager::GetAlignableEntry(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:333:17
    t.method("GetAlignableEntry", [](TGeoManager const& a, const char * arg0)->TGeoPNEntry * { return a.GetAlignableEntry(arg0); });
    t.method("GetAlignableEntry", [](TGeoManager const* a, const char * arg0)->TGeoPNEntry * { return a->GetAlignableEntry(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoPNEntry * TGeoManager::GetAlignableEntry(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPNEntry * TGeoManager::GetAlignableEntry(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:334:17
    t.method("GetAlignableEntry", [](TGeoManager const& a, Int_t arg0)->TGeoPNEntry * { return a.GetAlignableEntry(arg0); });
    t.method("GetAlignableEntry", [](TGeoManager const* a, Int_t arg0)->TGeoPNEntry * { return a->GetAlignableEntry(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoPNEntry * TGeoManager::GetAlignableEntryByUID(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPNEntry * TGeoManager::GetAlignableEntryByUID(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:335:17
    t.method("GetAlignableEntryByUID", [](TGeoManager const& a, Int_t arg0)->TGeoPNEntry * { return a.GetAlignableEntryByUID(arg0); });
    t.method("GetAlignableEntryByUID", [](TGeoManager const* a, Int_t arg0)->TGeoPNEntry * { return a->GetAlignableEntryByUID(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNAlignable(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNAlignable(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:336:10
    t.method("GetNAlignable", [](TGeoManager const& a)->Int_t { return a.GetNAlignable(); });
    t.method("GetNAlignable", [](TGeoManager const& a, Bool_t arg0)->Int_t { return a.GetNAlignable(arg0); });
    t.method("GetNAlignable", [](TGeoManager const* a)->Int_t { return a->GetNAlignable(); });
    t.method("GetNAlignable", [](TGeoManager const* a, Bool_t arg0)->Int_t { return a->GetNAlignable(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoPhysicalNode * TGeoManager::MakeAlignablePN(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPhysicalNode * TGeoManager::MakeAlignablePN(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:337:22
    t.method("MakeAlignablePN", [](TGeoManager& a, const char * arg0)->TGeoPhysicalNode * { return a.MakeAlignablePN(arg0); });
    t.method("MakeAlignablePN", [](TGeoManager* a, const char * arg0)->TGeoPhysicalNode * { return a->MakeAlignablePN(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoPhysicalNode * TGeoManager::MakeAlignablePN(TGeoPNEntry *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPhysicalNode * TGeoManager::MakeAlignablePN(TGeoPNEntry *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:338:22
    t.method("MakeAlignablePN", [](TGeoManager& a, TGeoPNEntry * arg0)->TGeoPhysicalNode * { return a.MakeAlignablePN(arg0); });
    t.method("MakeAlignablePN", [](TGeoManager* a, TGeoPNEntry * arg0)->TGeoPhysicalNode * { return a->MakeAlignablePN(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoPhysicalNode * TGeoManager::MakePhysicalNode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPhysicalNode * TGeoManager::MakePhysicalNode(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:339:22
    t.method("MakePhysicalNode", [](TGeoManager& a)->TGeoPhysicalNode * { return a.MakePhysicalNode(); });
    t.method("MakePhysicalNode", [](TGeoManager& a, const char * arg0)->TGeoPhysicalNode * { return a.MakePhysicalNode(arg0); });
    t.method("MakePhysicalNode", [](TGeoManager* a)->TGeoPhysicalNode * { return a->MakePhysicalNode(); });
    t.method("MakePhysicalNode", [](TGeoManager* a, const char * arg0)->TGeoPhysicalNode * { return a->MakePhysicalNode(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearPhysicalNodes(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearPhysicalNodes(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:340:9
    t.method("ClearPhysicalNodes", [](TGeoManager& a)->void { a.ClearPhysicalNodes(); });
    t.method("ClearPhysicalNodes", [](TGeoManager& a, Bool_t arg0)->void { a.ClearPhysicalNodes(arg0); });
    t.method("ClearPhysicalNodes", [](TGeoManager* a)->void { a->ClearPhysicalNodes(); });
    t.method("ClearPhysicalNodes", [](TGeoManager* a, Bool_t arg0)->void { a->ClearPhysicalNodes(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RefreshPhysicalNodes(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RefreshPhysicalNodes(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:341:9
    t.method("RefreshPhysicalNodes", [](TGeoManager& a)->void { a.RefreshPhysicalNodes(); });
    t.method("RefreshPhysicalNodes", [](TGeoManager& a, Bool_t arg0)->void { a.RefreshPhysicalNodes(arg0); });
    t.method("RefreshPhysicalNodes", [](TGeoManager* a)->void { a->RefreshPhysicalNodes(); });
    t.method("RefreshPhysicalNodes", [](TGeoManager* a, Bool_t arg0)->void { a->RefreshPhysicalNodes(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::MakeTrack(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::MakeTrack(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:342:22
    t.method("MakeTrack", [](TGeoManager& a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a.MakeTrack(arg0, arg1, arg2); });
    t.method("MakeTrack", [](TGeoManager* a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a->MakeTrack(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TGeoVolumeAssembly * TGeoManager::MakeVolumeAssembly(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeAssembly * TGeoManager::MakeVolumeAssembly(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:343:24
    t.method("MakeVolumeAssembly", [](TGeoManager& a, const char * arg0)->TGeoVolumeAssembly * { return a.MakeVolumeAssembly(arg0); });
    t.method("MakeVolumeAssembly", [](TGeoManager* a, const char * arg0)->TGeoVolumeAssembly * { return a->MakeVolumeAssembly(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolumeMulti * TGeoManager::MakeVolumeMulti(const char *, TGeoMedium *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeMulti * TGeoManager::MakeVolumeMulti(const char *, TGeoMedium *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:344:21
    t.method("MakeVolumeMulti", [](TGeoManager& a, const char * arg0, TGeoMedium * arg1)->TGeoVolumeMulti * { return a.MakeVolumeMulti(arg0, arg1); });
    t.method("MakeVolumeMulti", [](TGeoManager* a, const char * arg0, TGeoMedium * arg1)->TGeoVolumeMulti * { return a->MakeVolumeMulti(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetTopVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetTopVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:345:9
    t.method("SetTopVolume", [](TGeoManager& a, TGeoVolume * arg0)->void { a.SetTopVolume(arg0); });
    t.method("SetTopVolume", [](TGeoManager* a, TGeoVolume * arg0)->void { a->SetTopVolume(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::CrossBoundaryAndLocate(Bool_t, TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::CrossBoundaryAndLocate(Bool_t, TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:348:14
    t.method("CrossBoundaryAndLocate", [](TGeoManager& a, Bool_t arg0, TGeoNode * arg1)->TGeoNode * { return a.CrossBoundaryAndLocate(arg0, arg1); });
    t.method("CrossBoundaryAndLocate", [](TGeoManager* a, Bool_t arg0, TGeoNode * arg1)->TGeoNode * { return a->CrossBoundaryAndLocate(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::FindNextBoundary(Double_t, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::FindNextBoundary(Double_t, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:349:14
    t.method("FindNextBoundary", [](TGeoManager& a)->TGeoNode * { return a.FindNextBoundary(); });
    t.method("FindNextBoundary", [](TGeoManager& a, Double_t arg0)->TGeoNode * { return a.FindNextBoundary(arg0); });
    t.method("FindNextBoundary", [](TGeoManager& a, Double_t arg0, const char * arg1)->TGeoNode * { return a.FindNextBoundary(arg0, arg1); });
    t.method("FindNextBoundary", [](TGeoManager& a, Double_t arg0, const char * arg1, Bool_t arg2)->TGeoNode * { return a.FindNextBoundary(arg0, arg1, arg2); });
    t.method("FindNextBoundary", [](TGeoManager* a)->TGeoNode * { return a->FindNextBoundary(); });
    t.method("FindNextBoundary", [](TGeoManager* a, Double_t arg0)->TGeoNode * { return a->FindNextBoundary(arg0); });
    t.method("FindNextBoundary", [](TGeoManager* a, Double_t arg0, const char * arg1)->TGeoNode * { return a->FindNextBoundary(arg0, arg1); });
    t.method("FindNextBoundary", [](TGeoManager* a, Double_t arg0, const char * arg1, Bool_t arg2)->TGeoNode * { return a->FindNextBoundary(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::FindNextDaughterBoundary(Double_t *, Double_t *, Int_t &, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::FindNextDaughterBoundary(Double_t *, Double_t *, Int_t &, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:350:14
    t.method("FindNextDaughterBoundary", [](TGeoManager& a, Double_t * arg0, Double_t * arg1, Int_t & arg2)->TGeoNode * { return a.FindNextDaughterBoundary(arg0, arg1, arg2); });
    t.method("FindNextDaughterBoundary", [](TGeoManager& a, Double_t * arg0, Double_t * arg1, Int_t & arg2, Bool_t arg3)->TGeoNode * { return a.FindNextDaughterBoundary(arg0, arg1, arg2, arg3); });
    t.method("FindNextDaughterBoundary", [](TGeoManager* a, Double_t * arg0, Double_t * arg1, Int_t & arg2)->TGeoNode * { return a->FindNextDaughterBoundary(arg0, arg1, arg2); });
    t.method("FindNextDaughterBoundary", [](TGeoManager* a, Double_t * arg0, Double_t * arg1, Int_t & arg2, Bool_t arg3)->TGeoNode * { return a->FindNextDaughterBoundary(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::FindNextBoundaryAndStep(Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::FindNextBoundaryAndStep(Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:351:14
    t.method("FindNextBoundaryAndStep", [](TGeoManager& a)->TGeoNode * { return a.FindNextBoundaryAndStep(); });
    t.method("FindNextBoundaryAndStep", [](TGeoManager& a, Double_t arg0)->TGeoNode * { return a.FindNextBoundaryAndStep(arg0); });
    t.method("FindNextBoundaryAndStep", [](TGeoManager& a, Double_t arg0, Bool_t arg1)->TGeoNode * { return a.FindNextBoundaryAndStep(arg0, arg1); });
    t.method("FindNextBoundaryAndStep", [](TGeoManager* a)->TGeoNode * { return a->FindNextBoundaryAndStep(); });
    t.method("FindNextBoundaryAndStep", [](TGeoManager* a, Double_t arg0)->TGeoNode * { return a->FindNextBoundaryAndStep(arg0); });
    t.method("FindNextBoundaryAndStep", [](TGeoManager* a, Double_t arg0, Bool_t arg1)->TGeoNode * { return a->FindNextBoundaryAndStep(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::FindNode(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::FindNode(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:352:14
    t.method("FindNode", [](TGeoManager& a)->TGeoNode * { return a.FindNode(); });
    t.method("FindNode", [](TGeoManager& a, Bool_t arg0)->TGeoNode * { return a.FindNode(arg0); });
    t.method("FindNode", [](TGeoManager* a)->TGeoNode * { return a->FindNode(); });
    t.method("FindNode", [](TGeoManager* a, Bool_t arg0)->TGeoNode * { return a->FindNode(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::FindNode(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::FindNode(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:353:14
    t.method("FindNode", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->TGeoNode * { return a.FindNode(arg0, arg1, arg2); });
    t.method("FindNode", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->TGeoNode * { return a->FindNode(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoManager::FindNormal(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoManager::FindNormal(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:354:14
    t.method("FindNormal", [](TGeoManager& a)->Double_t * { return a.FindNormal(); });
    t.method("FindNormal", [](TGeoManager& a, Bool_t arg0)->Double_t * { return a.FindNormal(arg0); });
    t.method("FindNormal", [](TGeoManager* a)->Double_t * { return a->FindNormal(); });
    t.method("FindNormal", [](TGeoManager* a, Bool_t arg0)->Double_t * { return a->FindNormal(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoManager::FindNormalFast() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoManager::FindNormalFast()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:355:14
    t.method("FindNormalFast", [](TGeoManager& a)->Double_t * { return a.FindNormalFast(); });
    t.method("FindNormalFast", [](TGeoManager* a)->Double_t * { return a->FindNormalFast(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::InitTrack(const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::InitTrack(const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:356:14
    t.method("InitTrack", [](TGeoManager& a, const Double_t * arg0, const Double_t * arg1)->TGeoNode * { return a.InitTrack(arg0, arg1); });
    t.method("InitTrack", [](TGeoManager* a, const Double_t * arg0, const Double_t * arg1)->TGeoNode * { return a->InitTrack(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::InitTrack(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::InitTrack(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:357:14
    t.method("InitTrack", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoNode * { return a.InitTrack(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("InitTrack", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoNode * { return a->InitTrack(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ResetState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ResetState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:358:9
    t.method("ResetState", [](TGeoManager& a)->void { a.ResetState(); });
    t.method("ResetState", [](TGeoManager* a)->void { a->ResetState(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::Safety(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::Safety(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:359:13
    t.method("Safety", [](TGeoManager& a)->Double_t { return a.Safety(); });
    t.method("Safety", [](TGeoManager& a, Bool_t arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoManager* a)->Double_t { return a->Safety(); });
    t.method("Safety", [](TGeoManager* a, Bool_t arg0)->Double_t { return a->Safety(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::SearchNode(Bool_t, const TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::SearchNode(Bool_t, const TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:360:14
    t.method("SearchNode", [](TGeoManager& a)->TGeoNode * { return a.SearchNode(); });
    t.method("SearchNode", [](TGeoManager& a, Bool_t arg0)->TGeoNode * { return a.SearchNode(arg0); });
    t.method("SearchNode", [](TGeoManager& a, Bool_t arg0, const TGeoNode * arg1)->TGeoNode * { return a.SearchNode(arg0, arg1); });
    t.method("SearchNode", [](TGeoManager* a)->TGeoNode * { return a->SearchNode(); });
    t.method("SearchNode", [](TGeoManager* a, Bool_t arg0)->TGeoNode * { return a->SearchNode(arg0); });
    t.method("SearchNode", [](TGeoManager* a, Bool_t arg0, const TGeoNode * arg1)->TGeoNode * { return a->SearchNode(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::Step(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::Step(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:361:14
    t.method("Step", [](TGeoManager& a)->TGeoNode * { return a.Step(); });
    t.method("Step", [](TGeoManager& a, Bool_t arg0)->TGeoNode * { return a.Step(arg0); });
    t.method("Step", [](TGeoManager& a, Bool_t arg0, Bool_t arg1)->TGeoNode * { return a.Step(arg0, arg1); });
    t.method("Step", [](TGeoManager* a)->TGeoNode * { return a->Step(); });
    t.method("Step", [](TGeoManager* a, Bool_t arg0)->TGeoNode * { return a->Step(arg0); });
    t.method("Step", [](TGeoManager* a, Bool_t arg0, Bool_t arg1)->TGeoNode * { return a->Step(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DisableInactiveVolumes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DisableInactiveVolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:362:9
    t.method("DisableInactiveVolumes", [](TGeoManager& a)->void { a.DisableInactiveVolumes(); });
    t.method("DisableInactiveVolumes", [](TGeoManager* a)->void { a->DisableInactiveVolumes(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::EnableInactiveVolumes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::EnableInactiveVolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:363:9
    t.method("EnableInactiveVolumes", [](TGeoManager& a)->void { a.EnableInactiveVolumes(); });
    t.method("EnableInactiveVolumes", [](TGeoManager* a)->void { a->EnableInactiveVolumes(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentTrack(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentTrack(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:364:9
    t.method("SetCurrentTrack", [](TGeoManager& a, Int_t arg0)->void { a.SetCurrentTrack(arg0); });
    t.method("SetCurrentTrack", [](TGeoManager* a, Int_t arg0)->void { a->SetCurrentTrack(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentTrack(TVirtualGeoTrack *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentTrack(TVirtualGeoTrack *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:365:9
    t.method("SetCurrentTrack", [](TGeoManager& a, TVirtualGeoTrack * arg0)->void { a.SetCurrentTrack(arg0); });
    t.method("SetCurrentTrack", [](TGeoManager* a, TVirtualGeoTrack * arg0)->void { a->SetCurrentTrack(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNtracks() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNtracks()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:366:10
    t.method("GetNtracks", [](TGeoManager const& a)->Int_t { return a.GetNtracks(); });
    t.method("GetNtracks", [](TGeoManager const* a)->Int_t { return a->GetNtracks(); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::GetCurrentTrack() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::GetCurrentTrack()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:367:22
    t.method("GetCurrentTrack", [](TGeoManager& a)->TVirtualGeoTrack * { return a.GetCurrentTrack(); });
    t.method("GetCurrentTrack", [](TGeoManager* a)->TVirtualGeoTrack * { return a->GetCurrentTrack(); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::GetLastTrack() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::GetLastTrack()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:368:22
    t.method("GetLastTrack", [](TGeoManager& a)->TVirtualGeoTrack * { return a.GetLastTrack(); });
    t.method("GetLastTrack", [](TGeoManager* a)->TVirtualGeoTrack * { return a->GetLastTrack(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetLastPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetLastPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:372:20
    t.method("GetLastPoint", [](TGeoManager const& a)->const Double_t * { return a.GetLastPoint(); });
    t.method("GetLastPoint", [](TGeoManager const* a)->const Double_t * { return a->GetLastPoint(); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::GetTrack(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::GetTrack(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:373:22
    t.method("GetTrack", [](TGeoManager& a, Int_t arg0)->TVirtualGeoTrack * { return a.GetTrack(arg0); });
    t.method("GetTrack", [](TGeoManager* a, Int_t arg0)->TVirtualGeoTrack * { return a->GetTrack(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetTrackIndex(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetTrackIndex(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:377:10
    t.method("GetTrackIndex", [](TGeoManager const& a, Int_t arg0)->Int_t { return a.GetTrackIndex(arg0); });
    t.method("GetTrackIndex", [](TGeoManager const* a, Int_t arg0)->Int_t { return a->GetTrackIndex(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::GetTrackOfId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::GetTrackOfId(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:378:22
    t.method("GetTrackOfId", [](TGeoManager const& a, Int_t arg0)->TVirtualGeoTrack * { return a.GetTrackOfId(arg0); });
    t.method("GetTrackOfId", [](TGeoManager const* a, Int_t arg0)->TVirtualGeoTrack * { return a->GetTrackOfId(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::FindTrackWithId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::FindTrackWithId(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:379:22
    t.method("FindTrackWithId", [](TGeoManager const& a, Int_t arg0)->TVirtualGeoTrack * { return a.FindTrackWithId(arg0); });
    t.method("FindTrackWithId", [](TGeoManager const* a, Int_t arg0)->TVirtualGeoTrack * { return a->FindTrackWithId(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TGeoManager::GetParentTrackOfId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TGeoManager::GetParentTrackOfId(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:380:22
    t.method("GetParentTrackOfId", [](TGeoManager const& a, Int_t arg0)->TVirtualGeoTrack * { return a.GetParentTrackOfId(arg0); });
    t.method("GetParentTrackOfId", [](TGeoManager const* a, Int_t arg0)->TVirtualGeoTrack * { return a->GetParentTrackOfId(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetVirtualLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetVirtualLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:381:10
    t.method("GetVirtualLevel", [](TGeoManager& a)->Int_t { return a.GetVirtualLevel(); });
    t.method("GetVirtualLevel", [](TGeoManager* a)->Int_t { return a->GetVirtualLevel(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::GotoSafeLevel() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::GotoSafeLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:382:11
    t.method("GotoSafeLevel", [](TGeoManager& a)->Bool_t { return a.GotoSafeLevel(); });
    t.method("GotoSafeLevel", [](TGeoManager* a)->Bool_t { return a->GotoSafeLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetSafeLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetSafeLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:383:10
    t.method("GetSafeLevel", [](TGeoManager const& a)->Int_t { return a.GetSafeLevel(); });
    t.method("GetSafeLevel", [](TGeoManager const* a)->Int_t { return a->GetSafeLevel(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetSafeDistance() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetSafeDistance()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:384:13
    t.method("GetSafeDistance", [](TGeoManager const& a)->Double_t { return a.GetSafeDistance(); });
    t.method("GetSafeDistance", [](TGeoManager const* a)->Double_t { return a->GetSafeDistance(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetLastSafety() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetLastSafety()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:385:13
    t.method("GetLastSafety", [](TGeoManager const& a)->Double_t { return a.GetLastSafety(); });
    t.method("GetLastSafety", [](TGeoManager const* a)->Double_t { return a->GetLastSafety(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoManager::GetStep() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoManager::GetStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:386:13
    t.method("GetStep", [](TGeoManager const& a)->Double_t { return a.GetStep(); });
    t.method("GetStep", [](TGeoManager const* a)->Double_t { return a->GetStep(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::InspectState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::InspectState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:387:9
    t.method("InspectState", [](TGeoManager const& a)->void { a.InspectState(); });
    t.method("InspectState", [](TGeoManager const* a)->void { a->InspectState(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsAnimatingTracks() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsAnimatingTracks()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:388:11
    t.method("IsAnimatingTracks", [](TGeoManager const& a)->Bool_t { return a.IsAnimatingTracks(); });
    t.method("IsAnimatingTracks", [](TGeoManager const* a)->Bool_t { return a->IsAnimatingTracks(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsCheckingOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsCheckingOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:389:11
    t.method("IsCheckingOverlaps", [](TGeoManager const& a)->Bool_t { return a.IsCheckingOverlaps(); });
    t.method("IsCheckingOverlaps", [](TGeoManager const* a)->Bool_t { return a->IsCheckingOverlaps(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsMatrixTransform() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsMatrixTransform()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:390:11
    t.method("IsMatrixTransform", [](TGeoManager const& a)->Bool_t { return a.IsMatrixTransform(); });
    t.method("IsMatrixTransform", [](TGeoManager const* a)->Bool_t { return a->IsMatrixTransform(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsMatrixReflection() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsMatrixReflection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:391:11
    t.method("IsMatrixReflection", [](TGeoManager const& a)->Bool_t { return a.IsMatrixReflection(); });
    t.method("IsMatrixReflection", [](TGeoManager const* a)->Bool_t { return a->IsMatrixReflection(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsSameLocation(Double_t, Double_t, Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsSameLocation(Double_t, Double_t, Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:392:11
    t.method("IsSameLocation", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a.IsSameLocation(arg0, arg1, arg2); });
    t.method("IsSameLocation", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->Bool_t { return a.IsSameLocation(arg0, arg1, arg2, arg3); });
    t.method("IsSameLocation", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a->IsSameLocation(arg0, arg1, arg2); });
    t.method("IsSameLocation", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->Bool_t { return a->IsSameLocation(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsSameLocation() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsSameLocation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:393:11
    t.method("IsSameLocation", [](TGeoManager const& a)->Bool_t { return a.IsSameLocation(); });
    t.method("IsSameLocation", [](TGeoManager const* a)->Bool_t { return a->IsSameLocation(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsSamePoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsSamePoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:394:11
    t.method("IsSamePoint", [](TGeoManager const& a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a.IsSamePoint(arg0, arg1, arg2); });
    t.method("IsSamePoint", [](TGeoManager const* a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a->IsSamePoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsStartSafe() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsStartSafe()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:395:11
    t.method("IsStartSafe", [](TGeoManager const& a)->Bool_t { return a.IsStartSafe(); });
    t.method("IsStartSafe", [](TGeoManager const* a)->Bool_t { return a->IsStartSafe(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCheckingOverlaps(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCheckingOverlaps(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:396:9
    t.method("SetCheckingOverlaps", [](TGeoManager& a)->void { a.SetCheckingOverlaps(); });
    t.method("SetCheckingOverlaps", [](TGeoManager& a, Bool_t arg0)->void { a.SetCheckingOverlaps(arg0); });
    t.method("SetCheckingOverlaps", [](TGeoManager* a)->void { a->SetCheckingOverlaps(); });
    t.method("SetCheckingOverlaps", [](TGeoManager* a, Bool_t arg0)->void { a->SetCheckingOverlaps(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetStartSafe(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetStartSafe(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:397:9
    t.method("SetStartSafe", [](TGeoManager& a)->void { a.SetStartSafe(); });
    t.method("SetStartSafe", [](TGeoManager& a, Bool_t arg0)->void { a.SetStartSafe(arg0); });
    t.method("SetStartSafe", [](TGeoManager* a)->void { a->SetStartSafe(); });
    t.method("SetStartSafe", [](TGeoManager* a, Bool_t arg0)->void { a->SetStartSafe(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetMatrixTransform(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetMatrixTransform(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:398:9
    t.method("SetMatrixTransform", [](TGeoManager& a)->void { a.SetMatrixTransform(); });
    t.method("SetMatrixTransform", [](TGeoManager& a, Bool_t arg0)->void { a.SetMatrixTransform(arg0); });
    t.method("SetMatrixTransform", [](TGeoManager* a)->void { a->SetMatrixTransform(); });
    t.method("SetMatrixTransform", [](TGeoManager* a, Bool_t arg0)->void { a->SetMatrixTransform(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetMatrixReflection(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetMatrixReflection(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:399:9
    t.method("SetMatrixReflection", [](TGeoManager& a)->void { a.SetMatrixReflection(); });
    t.method("SetMatrixReflection", [](TGeoManager& a, Bool_t arg0)->void { a.SetMatrixReflection(arg0); });
    t.method("SetMatrixReflection", [](TGeoManager* a)->void { a->SetMatrixReflection(); });
    t.method("SetMatrixReflection", [](TGeoManager* a, Bool_t arg0)->void { a->SetMatrixReflection(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetStep(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetStep(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:400:9
    t.method("SetStep", [](TGeoManager& a, Double_t arg0)->void { a.SetStep(arg0); });
    t.method("SetStep", [](TGeoManager* a, Double_t arg0)->void { a->SetStep(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsCurrentOverlapping() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsCurrentOverlapping()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:401:11
    t.method("IsCurrentOverlapping", [](TGeoManager const& a)->Bool_t { return a.IsCurrentOverlapping(); });
    t.method("IsCurrentOverlapping", [](TGeoManager const* a)->Bool_t { return a->IsCurrentOverlapping(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsEntering() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsEntering()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:402:11
    t.method("IsEntering", [](TGeoManager const& a)->Bool_t { return a.IsEntering(); });
    t.method("IsEntering", [](TGeoManager const* a)->Bool_t { return a->IsEntering(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsExiting() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsExiting()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:403:11
    t.method("IsExiting", [](TGeoManager const& a)->Bool_t { return a.IsExiting(); });
    t.method("IsExiting", [](TGeoManager const* a)->Bool_t { return a->IsExiting(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsStepEntering() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsStepEntering()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:404:11
    t.method("IsStepEntering", [](TGeoManager const& a)->Bool_t { return a.IsStepEntering(); });
    t.method("IsStepEntering", [](TGeoManager const* a)->Bool_t { return a->IsStepEntering(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsStepExiting() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsStepExiting()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:405:11
    t.method("IsStepExiting", [](TGeoManager const& a)->Bool_t { return a.IsStepExiting(); });
    t.method("IsStepExiting", [](TGeoManager const* a)->Bool_t { return a->IsStepExiting(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsOutside() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsOutside()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:406:11
    t.method("IsOutside", [](TGeoManager const& a)->Bool_t { return a.IsOutside(); });
    t.method("IsOutside", [](TGeoManager const* a)->Bool_t { return a->IsOutside(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsOnBoundary() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsOnBoundary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:407:11
    t.method("IsOnBoundary", [](TGeoManager const& a)->Bool_t { return a.IsOnBoundary(); });
    t.method("IsOnBoundary", [](TGeoManager const* a)->Bool_t { return a->IsOnBoundary(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsNullStep() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsNullStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:408:11
    t.method("IsNullStep", [](TGeoManager const& a)->Bool_t { return a.IsNullStep(); });
    t.method("IsNullStep", [](TGeoManager const* a)->Bool_t { return a->IsNullStep(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsActivityEnabled() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsActivityEnabled()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:409:11
    t.method("IsActivityEnabled", [](TGeoManager const& a)->Bool_t { return a.IsActivityEnabled(); });
    t.method("IsActivityEnabled", [](TGeoManager const* a)->Bool_t { return a->IsActivityEnabled(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetOutside(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetOutside(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:410:9
    t.method("SetOutside", [](TGeoManager& a)->void { a.SetOutside(); });
    t.method("SetOutside", [](TGeoManager& a, Bool_t arg0)->void { a.SetOutside(arg0); });
    t.method("SetOutside", [](TGeoManager* a)->void { a->SetOutside(); });
    t.method("SetOutside", [](TGeoManager* a, Bool_t arg0)->void { a->SetOutside(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CleanGarbage() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CleanGarbage()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:413:9
    t.method("CleanGarbage", [](TGeoManager& a)->void { a.CleanGarbage(); });
    t.method("CleanGarbage", [](TGeoManager* a)->void { a->CleanGarbage(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearShape(const TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearShape(const TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:414:9
    t.method("ClearShape", [](TGeoManager& a, const TGeoShape * arg0)->void { a.ClearShape(arg0); });
    t.method("ClearShape", [](TGeoManager* a, const TGeoShape * arg0)->void { a->ClearShape(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearTracks() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearTracks()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:415:9
    t.method("ClearTracks", [](TGeoManager& a)->void { a.ClearTracks(); });
    t.method("ClearTracks", [](TGeoManager* a)->void { a->ClearTracks(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearNavigators() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearNavigators()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:420:9
    t.method("ClearNavigators", [](TGeoManager& a)->void { a.ClearNavigators(); });
    t.method("ClearNavigators", [](TGeoManager* a)->void { a->ClearNavigators(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RemoveMaterial(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RemoveMaterial(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:421:9
    t.method("RemoveMaterial", [](TGeoManager& a, Int_t arg0)->void { a.RemoveMaterial(arg0); });
    t.method("RemoveMaterial", [](TGeoManager* a, Int_t arg0)->void { a->RemoveMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::RemoveNavigator(const TGeoNavigator *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::RemoveNavigator(const TGeoNavigator *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:422:9
    t.method("RemoveNavigator", [](TGeoManager& a, const TGeoNavigator * arg0)->void { a.RemoveNavigator(arg0); });
    t.method("RemoveNavigator", [](TGeoManager* a, const TGeoNavigator * arg0)->void { a->RemoveNavigator(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ResetUserData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ResetUserData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:423:9
    t.method("ResetUserData", [](TGeoManager& a)->void { a.ResetUserData(); });
    t.method("ResetUserData", [](TGeoManager* a)->void { a->ResetUserData(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::CountNodes(const TGeoVolume *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::CountNodes(const TGeoVolume *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:426:10
    t.method("CountNodes", [](TGeoManager& a)->Int_t { return a.CountNodes(); });
    t.method("CountNodes", [](TGeoManager& a, const TGeoVolume * arg0)->Int_t { return a.CountNodes(arg0); });
    t.method("CountNodes", [](TGeoManager& a, const TGeoVolume * arg0, Int_t arg1)->Int_t { return a.CountNodes(arg0, arg1); });
    t.method("CountNodes", [](TGeoManager& a, const TGeoVolume * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.CountNodes(arg0, arg1, arg2); });
    t.method("CountNodes", [](TGeoManager* a)->Int_t { return a->CountNodes(); });
    t.method("CountNodes", [](TGeoManager* a, const TGeoVolume * arg0)->Int_t { return a->CountNodes(arg0); });
    t.method("CountNodes", [](TGeoManager* a, const TGeoVolume * arg0, Int_t arg1)->Int_t { return a->CountNodes(arg0, arg1); });
    t.method("CountNodes", [](TGeoManager* a, const TGeoVolume * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->CountNodes(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CountLevels() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CountLevels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:427:9
    t.method("CountLevels", [](TGeoManager& a)->void { a.CountLevels(); });
    t.method("CountLevels", [](TGeoManager* a)->void { a->CountLevels(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:428:9
    t.method("ExecuteEvent", [](TGeoManager& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); });
    t.method("ExecuteEvent", [](TGeoManager* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::Parse(const char *, TString &, TString &, TString &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::Parse(const char *, TString &, TString &, TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:429:17
    module_.method("TGeoManager!Parse", [](const char * arg0, TString & arg1, TString & arg2, TString & arg3)->Int_t { return TGeoManager::Parse(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::ReplaceVolume(TGeoVolume *, TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::ReplaceVolume(TGeoVolume *, TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:430:10
    t.method("ReplaceVolume", [](TGeoManager& a, TGeoVolume * arg0, TGeoVolume * arg1)->Int_t { return a.ReplaceVolume(arg0, arg1); });
    t.method("ReplaceVolume", [](TGeoManager* a, TGeoVolume * arg0, TGeoVolume * arg1)->Int_t { return a->ReplaceVolume(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::TransformVolumeToAssembly(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::TransformVolumeToAssembly(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:431:10
    t.method("TransformVolumeToAssembly", [](TGeoManager& a, const char * arg0)->Int_t { return a.TransformVolumeToAssembly(arg0); });
    t.method("TransformVolumeToAssembly", [](TGeoManager* a, const char * arg0)->Int_t { return a->TransformVolumeToAssembly(arg0); });

    DEBUG_MSG("Adding wrapper for UChar_t * TGeoManager::GetBits() (" __HERE__ ")");
    // signature to use in the veto list: UChar_t * TGeoManager::GetBits()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:432:13
    t.method("GetBits", [](TGeoManager& a)->UChar_t * { return a.GetBits(); });
    t.method("GetBits", [](TGeoManager* a)->UChar_t * { return a->GetBits(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetByteCount(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetByteCount(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:433:18
    t.method("GetByteCount", [](TGeoManager& a)->Int_t { return a.GetByteCount(); });
    t.method("GetByteCount", [](TGeoManager& a, Option_t * arg0)->Int_t { return a.GetByteCount(arg0); });
    t.method("GetByteCount", [](TGeoManager* a)->Int_t { return a->GetByteCount(); });
    t.method("GetByteCount", [](TGeoManager* a, Option_t * arg0)->Int_t { return a->GetByteCount(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetAllIndex() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetAllIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:434:9
    t.method("SetAllIndex", [](TGeoManager& a)->void { a.SetAllIndex(); });
    t.method("SetAllIndex", [](TGeoManager* a)->void { a->SetAllIndex(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxDaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:435:17
    module_.method("TGeoManager!GetMaxDaughters", []()->Int_t { return TGeoManager::GetMaxDaughters(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxLevels() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxLevels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:436:17
    module_.method("TGeoManager!GetMaxLevels", []()->Int_t { return TGeoManager::GetMaxLevels(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxXtruVert() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxXtruVert()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:437:17
    module_.method("TGeoManager!GetMaxXtruVert", []()->Int_t { return TGeoManager::GetMaxXtruVert(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxThreads() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxThreads()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:438:10
    t.method("GetMaxThreads", [](TGeoManager const& a)->Int_t { return a.GetMaxThreads(); });
    t.method("GetMaxThreads", [](TGeoManager const* a)->Int_t { return a->GetMaxThreads(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetMaxThreads(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetMaxThreads(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:439:9
    t.method("SetMaxThreads", [](TGeoManager& a, Int_t arg0)->void { a.SetMaxThreads(arg0); });
    t.method("SetMaxThreads", [](TGeoManager* a, Int_t arg0)->void { a->SetMaxThreads(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetRTmode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetRTmode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:440:10
    t.method("GetRTmode", [](TGeoManager const& a)->Int_t { return a.GetRTmode(); });
    t.method("GetRTmode", [](TGeoManager const* a)->Int_t { return a->GetRTmode(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetRTmode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetRTmode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:441:9
    t.method("SetRTmode", [](TGeoManager& a, Int_t arg0)->void { a.SetRTmode(arg0); });
    t.method("SetRTmode", [](TGeoManager* a, Int_t arg0)->void { a->SetRTmode(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsMultiThread() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsMultiThread()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:442:11
    t.method("IsMultiThread", [](TGeoManager const& a)->Bool_t { return a.IsMultiThread(); });
    t.method("IsMultiThread", [](TGeoManager const* a)->Bool_t { return a->IsMultiThread(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetNavigatorsLock(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetNavigatorsLock(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:443:16
    module_.method("TGeoManager!SetNavigatorsLock", [](Bool_t arg0)->void { TGeoManager::SetNavigatorsLock(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::ThreadId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::ThreadId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:444:17
    module_.method("TGeoManager!ThreadId", []()->Int_t { return TGeoManager::ThreadId(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNumThreads() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNumThreads()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:445:17
    module_.method("TGeoManager!GetNumThreads", []()->Int_t { return TGeoManager::GetNumThreads(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearThreadsMap() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearThreadsMap()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:446:16
    module_.method("TGeoManager!ClearThreadsMap", []()->void { TGeoManager::ClearThreadsMap(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:447:9
    t.method("ClearThreadData", [](TGeoManager const& a)->void { a.ClearThreadData(); });
    t.method("ClearThreadData", [](TGeoManager const* a)->void { a->ClearThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::CreateThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::CreateThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:448:9
    t.method("CreateThreadData", [](TGeoManager const& a)->void { a.CreateThreadData(); });
    t.method("CreateThreadData", [](TGeoManager const* a)->void { a->CreateThreadData(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::Export(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::Export(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:451:18
    t.method("Export", [](TGeoManager& a, const char * arg0)->Int_t { return a.Export(arg0); });
    t.method("Export", [](TGeoManager& a, const char * arg0, const char * arg1)->Int_t { return a.Export(arg0, arg1); });
    t.method("Export", [](TGeoManager& a, const char * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.Export(arg0, arg1, arg2); });
    t.method("Export", [](TGeoManager* a, const char * arg0)->Int_t { return a->Export(arg0); });
    t.method("Export", [](TGeoManager* a, const char * arg0, const char * arg1)->Int_t { return a->Export(arg0, arg1); });
    t.method("Export", [](TGeoManager* a, const char * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->Export(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::LockGeometry() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::LockGeometry()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:452:16
    module_.method("TGeoManager!LockGeometry", []()->void { TGeoManager::LockGeometry(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::UnlockGeometry() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::UnlockGeometry()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:453:16
    module_.method("TGeoManager!UnlockGeometry", []()->void { TGeoManager::UnlockGeometry(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetVerboseLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetVerboseLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:454:17
    module_.method("TGeoManager!GetVerboseLevel", []()->Int_t { return TGeoManager::GetVerboseLevel(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetVerboseLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetVerboseLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:455:16
    module_.method("TGeoManager!SetVerboseLevel", [](Int_t arg0)->void { TGeoManager::SetVerboseLevel(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoManager * TGeoManager::Import(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoManager * TGeoManager::Import(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:456:24
    module_.method("TGeoManager!Import", [](const char * arg0)->TGeoManager * { return TGeoManager::Import(arg0); });
    module_.method("TGeoManager!Import", [](const char * arg0, const char * arg1)->TGeoManager * { return TGeoManager::Import(arg0, arg1); });
    module_.method("TGeoManager!Import", [](const char * arg0, const char * arg1, Option_t * arg2)->TGeoManager * { return TGeoManager::Import(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsLocked() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsLocked()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:457:18
    module_.method("TGeoManager!IsLocked", []()->Bool_t { return TGeoManager::IsLocked(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetExportPrecision(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetExportPrecision(UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:458:16
    module_.method("TGeoManager!SetExportPrecision", [](UInt_t arg0)->void { TGeoManager::SetExportPrecision(arg0); });

    DEBUG_MSG("Adding wrapper for UInt_t TGeoManager::GetExportPrecision() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TGeoManager::GetExportPrecision()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:459:18
    module_.method("TGeoManager!GetExportPrecision", []()->UInt_t { return TGeoManager::GetExportPrecision(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetDefaultUnits(TGeoManager::EDefaultUnits) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetDefaultUnits(TGeoManager::EDefaultUnits)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:460:16
    module_.method("TGeoManager!SetDefaultUnits", [](TGeoManager::EDefaultUnits arg0)->void { TGeoManager::SetDefaultUnits(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoManager::EDefaultUnits TGeoManager::GetDefaultUnits() (" __HERE__ ")");
    // signature to use in the veto list: TGeoManager::EDefaultUnits TGeoManager::GetDefaultUnits()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:461:25
    module_.method("TGeoManager!GetDefaultUnits", []()->TGeoManager::EDefaultUnits { return TGeoManager::GetDefaultUnits(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::LockDefaultUnits(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::LockDefaultUnits(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:462:18
    module_.method("TGeoManager!LockDefaultUnits", [](Bool_t arg0)->Bool_t { return TGeoManager::LockDefaultUnits(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsStreamingVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsStreamingVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:463:11
    t.method("IsStreamingVoxels", [](TGeoManager const& a)->Bool_t { return a.IsStreamingVoxels(); });
    t.method("IsStreamingVoxels", [](TGeoManager const* a)->Bool_t { return a->IsStreamingVoxels(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsCleaning() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsCleaning()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:464:11
    t.method("IsCleaning", [](TGeoManager const& a)->Bool_t { return a.IsCleaning(); });
    t.method("IsCleaning", [](TGeoManager const* a)->Bool_t { return a->IsCleaning(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfNodes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:467:15
    t.method("GetListOfNodes", [](TGeoManager& a)->TObjArray * { return a.GetListOfNodes(); });
    t.method("GetListOfNodes", [](TGeoManager* a)->TObjArray * { return a->GetListOfNodes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfPhysicalNodes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfPhysicalNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:468:15
    t.method("GetListOfPhysicalNodes", [](TGeoManager& a)->TObjArray * { return a.GetListOfPhysicalNodes(); });
    t.method("GetListOfPhysicalNodes", [](TGeoManager* a)->TObjArray * { return a->GetListOfPhysicalNodes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:469:15
    t.method("GetListOfOverlaps", [](TGeoManager& a)->TObjArray * { return a.GetListOfOverlaps(); });
    t.method("GetListOfOverlaps", [](TGeoManager* a)->TObjArray * { return a->GetListOfOverlaps(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfMatrices() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfMatrices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:470:15
    t.method("GetListOfMatrices", [](TGeoManager const& a)->TObjArray * { return a.GetListOfMatrices(); });
    t.method("GetListOfMatrices", [](TGeoManager const* a)->TObjArray * { return a->GetListOfMatrices(); });

    DEBUG_MSG("Adding wrapper for TList * TGeoManager::GetListOfMaterials() (" __HERE__ ")");
    // signature to use in the veto list: TList * TGeoManager::GetListOfMaterials()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:471:11
    t.method("GetListOfMaterials", [](TGeoManager const& a)->TList * { return a.GetListOfMaterials(); });
    t.method("GetListOfMaterials", [](TGeoManager const* a)->TList * { return a->GetListOfMaterials(); });

    DEBUG_MSG("Adding wrapper for TList * TGeoManager::GetListOfMedia() (" __HERE__ ")");
    // signature to use in the veto list: TList * TGeoManager::GetListOfMedia()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:472:11
    t.method("GetListOfMedia", [](TGeoManager const& a)->TList * { return a.GetListOfMedia(); });
    t.method("GetListOfMedia", [](TGeoManager const* a)->TList * { return a->GetListOfMedia(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfVolumes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfVolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:473:15
    t.method("GetListOfVolumes", [](TGeoManager const& a)->TObjArray * { return a.GetListOfVolumes(); });
    t.method("GetListOfVolumes", [](TGeoManager const* a)->TObjArray * { return a->GetListOfVolumes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfGVolumes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfGVolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:474:15
    t.method("GetListOfGVolumes", [](TGeoManager const& a)->TObjArray * { return a.GetListOfGVolumes(); });
    t.method("GetListOfGVolumes", [](TGeoManager const* a)->TObjArray * { return a->GetListOfGVolumes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfShapes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfShapes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:475:15
    t.method("GetListOfShapes", [](TGeoManager const& a)->TObjArray * { return a.GetListOfShapes(); });
    t.method("GetListOfShapes", [](TGeoManager const* a)->TObjArray * { return a->GetListOfShapes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfGShapes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfGShapes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:476:15
    t.method("GetListOfGShapes", [](TGeoManager const& a)->TObjArray * { return a.GetListOfGShapes(); });
    t.method("GetListOfGShapes", [](TGeoManager const* a)->TObjArray * { return a->GetListOfGShapes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfUVolumes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfUVolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:477:15
    t.method("GetListOfUVolumes", [](TGeoManager const& a)->TObjArray * { return a.GetListOfUVolumes(); });
    t.method("GetListOfUVolumes", [](TGeoManager const* a)->TObjArray * { return a->GetListOfUVolumes(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfTracks() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfTracks()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:478:15
    t.method("GetListOfTracks", [](TGeoManager const& a)->TObjArray * { return a.GetListOfTracks(); });
    t.method("GetListOfTracks", [](TGeoManager const* a)->TObjArray * { return a->GetListOfTracks(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfGDMLMatrices() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfGDMLMatrices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:479:15
    t.method("GetListOfGDMLMatrices", [](TGeoManager const& a)->TObjArray * { return a.GetListOfGDMLMatrices(); });
    t.method("GetListOfGDMLMatrices", [](TGeoManager const* a)->TObjArray * { return a->GetListOfGDMLMatrices(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfOpticalSurfaces() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfOpticalSurfaces()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:480:15
    t.method("GetListOfOpticalSurfaces", [](TGeoManager const& a)->TObjArray * { return a.GetListOfOpticalSurfaces(); });
    t.method("GetListOfOpticalSurfaces", [](TGeoManager const* a)->TObjArray * { return a->GetListOfOpticalSurfaces(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfSkinSurfaces() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfSkinSurfaces()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:481:15
    t.method("GetListOfSkinSurfaces", [](TGeoManager const& a)->TObjArray * { return a.GetListOfSkinSurfaces(); });
    t.method("GetListOfSkinSurfaces", [](TGeoManager const* a)->TObjArray * { return a->GetListOfSkinSurfaces(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfBorderSurfaces() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfBorderSurfaces()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:482:15
    t.method("GetListOfBorderSurfaces", [](TGeoManager const& a)->TObjArray * { return a.GetListOfBorderSurfaces(); });
    t.method("GetListOfBorderSurfaces", [](TGeoManager const* a)->TObjArray * { return a->GetListOfBorderSurfaces(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoManager::GetListOfRegions() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoManager::GetListOfRegions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:483:15
    t.method("GetListOfRegions", [](TGeoManager const& a)->TObjArray * { return a.GetListOfRegions(); });
    t.method("GetListOfRegions", [](TGeoManager const* a)->TObjArray * { return a->GetListOfRegions(); });

    DEBUG_MSG("Adding wrapper for TGeoNavigatorArray * TGeoManager::GetListOfNavigators() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigatorArray * TGeoManager::GetListOfNavigators()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:484:24
    t.method("GetListOfNavigators", [](TGeoManager const& a)->TGeoNavigatorArray * { return a.GetListOfNavigators(); });
    t.method("GetListOfNavigators", [](TGeoManager const* a)->TGeoNavigatorArray * { return a->GetListOfNavigators(); });

    DEBUG_MSG("Adding wrapper for TGeoElementTable * TGeoManager::GetElementTable() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementTable * TGeoManager::GetElementTable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:485:22
    t.method("GetElementTable", [](TGeoManager& a)->TGeoElementTable * { return a.GetElementTable(); });
    t.method("GetElementTable", [](TGeoManager* a)->TGeoElementTable * { return a->GetElementTable(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DoBackupState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DoBackupState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:488:9
    t.method("DoBackupState", [](TGeoManager& a)->void { a.DoBackupState(); });
    t.method("DoBackupState", [](TGeoManager* a)->void { a->DoBackupState(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::DoRestoreState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::DoRestoreState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:489:9
    t.method("DoRestoreState", [](TGeoManager& a)->void { a.DoRestoreState(); });
    t.method("DoRestoreState", [](TGeoManager* a)->void { a->DoRestoreState(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::GetNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::GetNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:490:14
    t.method("GetNode", [](TGeoManager const& a, Int_t arg0)->TGeoNode * { return a.GetNode(arg0); });
    t.method("GetNode", [](TGeoManager const* a, Int_t arg0)->TGeoNode * { return a->GetNode(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:491:10
    t.method("GetNodeId", [](TGeoManager const& a)->Int_t { return a.GetNodeId(); });
    t.method("GetNodeId", [](TGeoManager const* a)->Int_t { return a->GetNodeId(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::GetNextNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::GetNextNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:492:14
    t.method("GetNextNode", [](TGeoManager const& a)->TGeoNode * { return a.GetNextNode(); });
    t.method("GetNextNode", [](TGeoManager const* a)->TGeoNode * { return a->GetNextNode(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::GetMother(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::GetMother(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:493:14
    t.method("GetMother", [](TGeoManager const& a)->TGeoNode * { return a.GetMother(); });
    t.method("GetMother", [](TGeoManager const& a, Int_t arg0)->TGeoNode * { return a.GetMother(arg0); });
    t.method("GetMother", [](TGeoManager const* a)->TGeoNode * { return a->GetMother(); });
    t.method("GetMother", [](TGeoManager const* a, Int_t arg0)->TGeoNode * { return a->GetMother(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoManager::GetMotherMatrix(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoManager::GetMotherMatrix(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:494:17
    t.method("GetMotherMatrix", [](TGeoManager const& a)->TGeoHMatrix * { return a.GetMotherMatrix(); });
    t.method("GetMotherMatrix", [](TGeoManager const& a, Int_t arg0)->TGeoHMatrix * { return a.GetMotherMatrix(arg0); });
    t.method("GetMotherMatrix", [](TGeoManager const* a)->TGeoHMatrix * { return a->GetMotherMatrix(); });
    t.method("GetMotherMatrix", [](TGeoManager const* a, Int_t arg0)->TGeoHMatrix * { return a->GetMotherMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoManager::GetHMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoManager::GetHMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:495:17
    t.method("GetHMatrix", [](TGeoManager& a)->TGeoHMatrix * { return a.GetHMatrix(); });
    t.method("GetHMatrix", [](TGeoManager* a)->TGeoHMatrix * { return a->GetHMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoManager::GetCurrentMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoManager::GetCurrentMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:496:17
    t.method("GetCurrentMatrix", [](TGeoManager const& a)->TGeoHMatrix * { return a.GetCurrentMatrix(); });
    t.method("GetCurrentMatrix", [](TGeoManager const* a)->TGeoHMatrix * { return a->GetCurrentMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoManager::GetGLMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoManager::GetGLMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:497:17
    t.method("GetGLMatrix", [](TGeoManager const& a)->TGeoHMatrix * { return a.GetGLMatrix(); });
    t.method("GetGLMatrix", [](TGeoManager const* a)->TGeoHMatrix * { return a->GetGLMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoNavigator * TGeoManager::GetCurrentNavigator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigator * TGeoManager::GetCurrentNavigator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:498:19
    t.method("GetCurrentNavigator", [](TGeoManager const& a)->TGeoNavigator * { return a.GetCurrentNavigator(); });
    t.method("GetCurrentNavigator", [](TGeoManager const* a)->TGeoNavigator * { return a->GetCurrentNavigator(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::GetCurrentNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::GetCurrentNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:499:14
    t.method("GetCurrentNode", [](TGeoManager const& a)->TGeoNode * { return a.GetCurrentNode(); });
    t.method("GetCurrentNode", [](TGeoManager const* a)->TGeoNode * { return a->GetCurrentNode(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetCurrentNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetCurrentNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:500:10
    t.method("GetCurrentNodeId", [](TGeoManager const& a)->Int_t { return a.GetCurrentNodeId(); });
    t.method("GetCurrentNodeId", [](TGeoManager const* a)->Int_t { return a->GetCurrentNodeId(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetCurrentPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetCurrentPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:501:20
    t.method("GetCurrentPoint", [](TGeoManager const& a)->const Double_t * { return a.GetCurrentPoint(); });
    t.method("GetCurrentPoint", [](TGeoManager const* a)->const Double_t * { return a->GetCurrentPoint(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetCurrentDirection() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetCurrentDirection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:502:20
    t.method("GetCurrentDirection", [](TGeoManager const& a)->const Double_t * { return a.GetCurrentDirection(); });
    t.method("GetCurrentDirection", [](TGeoManager const* a)->const Double_t * { return a->GetCurrentDirection(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetCurrentVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetCurrentVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:503:16
    t.method("GetCurrentVolume", [](TGeoManager const& a)->TGeoVolume * { return a.GetCurrentVolume(); });
    t.method("GetCurrentVolume", [](TGeoManager const* a)->TGeoVolume * { return a->GetCurrentVolume(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetCldirChecked() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetCldirChecked()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:504:20
    t.method("GetCldirChecked", [](TGeoManager const& a)->const Double_t * { return a.GetCldirChecked(); });
    t.method("GetCldirChecked", [](TGeoManager const* a)->const Double_t * { return a->GetCldirChecked(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetCldir() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetCldir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:505:20
    t.method("GetCldir", [](TGeoManager const& a)->const Double_t * { return a.GetCldir(); });
    t.method("GetCldir", [](TGeoManager const* a)->const Double_t * { return a->GetCldir(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoManager::GetNormal() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoManager::GetNormal()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:506:20
    t.method("GetNormal", [](TGeoManager const& a)->const Double_t * { return a.GetNormal(); });
    t.method("GetNormal", [](TGeoManager const* a)->const Double_t * { return a->GetNormal(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:507:10
    t.method("GetLevel", [](TGeoManager const& a)->Int_t { return a.GetLevel(); });
    t.method("GetLevel", [](TGeoManager const* a)->Int_t { return a->GetLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaxLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaxLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:508:10
    t.method("GetMaxLevel", [](TGeoManager const& a)->Int_t { return a.GetMaxLevel(); });
    t.method("GetMaxLevel", [](TGeoManager const* a)->Int_t { return a->GetMaxLevel(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::GetPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::GetPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:509:16
    t.method("GetPath", [](TGeoManager const& a) { return (std::string)a.GetPath(); });
    t.method("GetPath", [](TGeoManager const* a) { return (std::string)a->GetPath(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetStackLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetStackLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:510:10
    t.method("GetStackLevel", [](TGeoManager const& a)->Int_t { return a.GetStackLevel(); });
    t.method("GetStackLevel", [](TGeoManager const* a)->Int_t { return a->GetStackLevel(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetMasterVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetMasterVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:511:16
    t.method("GetMasterVolume", [](TGeoManager const& a)->TGeoVolume * { return a.GetMasterVolume(); });
    t.method("GetMasterVolume", [](TGeoManager const* a)->TGeoVolume * { return a->GetMasterVolume(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetTopVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetTopVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:512:16
    t.method("GetTopVolume", [](TGeoManager const& a)->TGeoVolume * { return a.GetTopVolume(); });
    t.method("GetTopVolume", [](TGeoManager const* a)->TGeoVolume * { return a->GetTopVolume(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoManager::GetTopNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoManager::GetTopNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:513:14
    t.method("GetTopNode", [](TGeoManager const& a)->TGeoNode * { return a.GetTopNode(); });
    t.method("GetTopNode", [](TGeoManager const* a)->TGeoNode * { return a->GetTopNode(); });

    DEBUG_MSG("Adding wrapper for TGeoPhysicalNode * TGeoManager::GetPhysicalNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoPhysicalNode * TGeoManager::GetPhysicalNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:514:22
    t.method("GetPhysicalNode", [](TGeoManager const& a, Int_t arg0)->TGeoPhysicalNode * { return a.GetPhysicalNode(arg0); });
    t.method("GetPhysicalNode", [](TGeoManager const* a, Int_t arg0)->TGeoPhysicalNode * { return a->GetPhysicalNode(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentPoint(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentPoint(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:515:9
    t.method("SetCurrentPoint", [](TGeoManager& a, Double_t * arg0)->void { a.SetCurrentPoint(arg0); });
    t.method("SetCurrentPoint", [](TGeoManager* a, Double_t * arg0)->void { a->SetCurrentPoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:516:9
    t.method("SetCurrentPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentPoint(arg0, arg1, arg2); });
    t.method("SetCurrentPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetLastPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetLastPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:517:9
    t.method("SetLastPoint", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetLastPoint(arg0, arg1, arg2); });
    t.method("SetLastPoint", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetLastPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentDirection(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentDirection(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:518:9
    t.method("SetCurrentDirection", [](TGeoManager& a, Double_t * arg0)->void { a.SetCurrentDirection(arg0); });
    t.method("SetCurrentDirection", [](TGeoManager* a, Double_t * arg0)->void { a->SetCurrentDirection(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCurrentDirection(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCurrentDirection(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:519:9
    t.method("SetCurrentDirection", [](TGeoManager& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentDirection(arg0, arg1, arg2); });
    t.method("SetCurrentDirection", [](TGeoManager* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentDirection(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetCldirChecked(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetCldirChecked(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:523:9
    t.method("SetCldirChecked", [](TGeoManager& a, Double_t * arg0)->void { a.SetCldirChecked(arg0); });
    t.method("SetCldirChecked", [](TGeoManager* a, Double_t * arg0)->void { a->SetCldirChecked(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:526:9
    t.method("LocalToMaster", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:530:9
    t.method("LocalToMasterVect", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); });
    t.method("LocalToMasterVect", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:534:9
    t.method("LocalToMasterBomb", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); });
    t.method("LocalToMasterBomb", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:538:9
    t.method("MasterToLocal", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:542:9
    t.method("MasterToLocalVect", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); });
    t.method("MasterToLocalVect", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:546:9
    t.method("MasterToLocalBomb", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); });
    t.method("MasterToLocalBomb", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::MasterToTop(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::MasterToTop(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:550:9
    t.method("MasterToTop", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToTop(arg0, arg1); });
    t.method("MasterToTop", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToTop(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::TopToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::TopToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:551:9
    t.method("TopToMaster", [](TGeoManager const& a, const Double_t * arg0, Double_t * arg1)->void { a.TopToMaster(arg0, arg1); });
    t.method("TopToMaster", [](TGeoManager const* a, const Double_t * arg0, Double_t * arg1)->void { a->TopToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::FindDuplicateMaterial(const TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::FindDuplicateMaterial(const TGeoMaterial *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:554:18
    t.method("FindDuplicateMaterial", [](TGeoManager const& a, const TGeoMaterial * arg0)->TGeoMaterial * { return a.FindDuplicateMaterial(arg0); });
    t.method("FindDuplicateMaterial", [](TGeoManager const* a, const TGeoMaterial * arg0)->TGeoMaterial * { return a->FindDuplicateMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::FindVolumeFast(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::FindVolumeFast(const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:555:16
    t.method("FindVolumeFast", [](TGeoManager& a, const char * arg0)->TGeoVolume * { return a.FindVolumeFast(arg0); });
    t.method("FindVolumeFast", [](TGeoManager& a, const char * arg0, Bool_t arg1)->TGeoVolume * { return a.FindVolumeFast(arg0, arg1); });
    t.method("FindVolumeFast", [](TGeoManager* a, const char * arg0)->TGeoVolume * { return a->FindVolumeFast(arg0); });
    t.method("FindVolumeFast", [](TGeoManager* a, const char * arg0, Bool_t arg1)->TGeoVolume * { return a->FindVolumeFast(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::GetMaterial(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::GetMaterial(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:556:18
    t.method("GetMaterial", [](TGeoManager const& a, const char * arg0)->TGeoMaterial * { return a.GetMaterial(arg0); });
    t.method("GetMaterial", [](TGeoManager const* a, const char * arg0)->TGeoMaterial * { return a->GetMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoManager::GetMaterial(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoManager::GetMaterial(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:557:18
    t.method("GetMaterial", [](TGeoManager const& a, Int_t arg0)->TGeoMaterial * { return a.GetMaterial(arg0); });
    t.method("GetMaterial", [](TGeoManager const* a, Int_t arg0)->TGeoMaterial * { return a->GetMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoManager::GetMedium(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoManager::GetMedium(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:558:16
    t.method("GetMedium", [](TGeoManager const& a, const char * arg0)->TGeoMedium * { return a.GetMedium(arg0); });
    t.method("GetMedium", [](TGeoManager const* a, const char * arg0)->TGeoMedium * { return a->GetMedium(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoManager::GetMedium(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoManager::GetMedium(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:559:16
    t.method("GetMedium", [](TGeoManager const& a, Int_t arg0)->TGeoMedium * { return a.GetMedium(arg0); });
    t.method("GetMedium", [](TGeoManager const* a, Int_t arg0)->TGeoMedium * { return a->GetMedium(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetMaterialIndex(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetMaterialIndex(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:560:10
    t.method("GetMaterialIndex", [](TGeoManager const& a, const char * arg0)->Int_t { return a.GetMaterialIndex(arg0); });
    t.method("GetMaterialIndex", [](TGeoManager const* a, const char * arg0)->Int_t { return a->GetMaterialIndex(arg0); });

    DEBUG_MSG("Adding wrapper for TGDMLMatrix * TGeoManager::GetGDMLMatrix(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGDMLMatrix * TGeoManager::GetGDMLMatrix(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:563:17
    t.method("GetGDMLMatrix", [](TGeoManager const& a, const char * arg0)->TGDMLMatrix * { return a.GetGDMLMatrix(arg0); });
    t.method("GetGDMLMatrix", [](TGeoManager const* a, const char * arg0)->TGDMLMatrix * { return a->GetGDMLMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::AddGDMLMatrix(TGDMLMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::AddGDMLMatrix(TGDMLMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:564:9
    t.method("AddGDMLMatrix", [](TGeoManager& a, TGDMLMatrix * arg0)->void { a.AddGDMLMatrix(arg0); });
    t.method("AddGDMLMatrix", [](TGeoManager* a, TGDMLMatrix * arg0)->void { a->AddGDMLMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface * TGeoManager::GetOpticalSurface(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface * TGeoManager::GetOpticalSurface(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:565:24
    t.method("GetOpticalSurface", [](TGeoManager const& a, const char * arg0)->TGeoOpticalSurface * { return a.GetOpticalSurface(arg0); });
    t.method("GetOpticalSurface", [](TGeoManager const* a, const char * arg0)->TGeoOpticalSurface * { return a->GetOpticalSurface(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::AddOpticalSurface(TGeoOpticalSurface *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::AddOpticalSurface(TGeoOpticalSurface *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:566:9
    t.method("AddOpticalSurface", [](TGeoManager& a, TGeoOpticalSurface * arg0)->void { a.AddOpticalSurface(arg0); });
    t.method("AddOpticalSurface", [](TGeoManager* a, TGeoOpticalSurface * arg0)->void { a->AddOpticalSurface(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoSkinSurface * TGeoManager::GetSkinSurface(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoSkinSurface * TGeoManager::GetSkinSurface(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:567:21
    t.method("GetSkinSurface", [](TGeoManager const& a, const char * arg0)->TGeoSkinSurface * { return a.GetSkinSurface(arg0); });
    t.method("GetSkinSurface", [](TGeoManager const* a, const char * arg0)->TGeoSkinSurface * { return a->GetSkinSurface(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::AddSkinSurface(TGeoSkinSurface *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::AddSkinSurface(TGeoSkinSurface *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:568:9
    t.method("AddSkinSurface", [](TGeoManager& a, TGeoSkinSurface * arg0)->void { a.AddSkinSurface(arg0); });
    t.method("AddSkinSurface", [](TGeoManager* a, TGeoSkinSurface * arg0)->void { a->AddSkinSurface(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoBorderSurface * TGeoManager::GetBorderSurface(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBorderSurface * TGeoManager::GetBorderSurface(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:569:23
    t.method("GetBorderSurface", [](TGeoManager const& a, const char * arg0)->TGeoBorderSurface * { return a.GetBorderSurface(arg0); });
    t.method("GetBorderSurface", [](TGeoManager const* a, const char * arg0)->TGeoBorderSurface * { return a->GetBorderSurface(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::AddBorderSurface(TGeoBorderSurface *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::AddBorderSurface(TGeoBorderSurface *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:570:9
    t.method("AddBorderSurface", [](TGeoManager& a, TGeoBorderSurface * arg0)->void { a.AddBorderSurface(arg0); });
    t.method("AddBorderSurface", [](TGeoManager* a, TGeoBorderSurface * arg0)->void { a->AddBorderSurface(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetVolume(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetVolume(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:573:16
    t.method("GetVolume", [](TGeoManager const& a, const char * arg0)->TGeoVolume * { return a.GetVolume(arg0); });
    t.method("GetVolume", [](TGeoManager const* a, const char * arg0)->TGeoVolume * { return a->GetVolume(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoManager::GetVolume(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoManager::GetVolume(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:574:16
    t.method("GetVolume", [](TGeoManager const& a, Int_t arg0)->TGeoVolume * { return a.GetVolume(arg0); });
    t.method("GetVolume", [](TGeoManager const* a, Int_t arg0)->TGeoVolume * { return a->GetVolume(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoManager::GetNregions() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoManager::GetNregions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:575:8
    t.method("GetNregions", [](TGeoManager const& a)->int { return a.GetNregions(); });
    t.method("GetNregions", [](TGeoManager const* a)->int { return a->GetNregions(); });

    DEBUG_MSG("Adding wrapper for TGeoRegion * TGeoManager::GetRegion(int) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRegion * TGeoManager::GetRegion(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:576:16
    t.method("GetRegion", [](TGeoManager& a, int arg0)->TGeoRegion * { return a.GetRegion(arg0); });
    t.method("GetRegion", [](TGeoManager* a, int arg0)->TGeoRegion * { return a->GetRegion(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetUID(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetUID(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:577:10
    t.method("GetUID", [](TGeoManager const& a, const char * arg0)->Int_t { return a.GetUID(arg0); });
    t.method("GetUID", [](TGeoManager const* a, const char * arg0)->Int_t { return a->GetUID(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::GetNNodes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::GetNNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:578:10
    t.method("GetNNodes", [](TGeoManager& a)->Int_t { return a.GetNNodes(); });
    t.method("GetNNodes", [](TGeoManager* a)->Int_t { return a->GetNNodes(); });

    DEBUG_MSG("Adding wrapper for TGeoNodeCache * TGeoManager::GetCache() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNodeCache * TGeoManager::GetCache()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:584:19
    t.method("GetCache", [](TGeoManager const& a)->TGeoNodeCache * { return a.GetCache(); });
    t.method("GetCache", [](TGeoManager const* a)->TGeoNodeCache * { return a->GetCache(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetAnimateTracks(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetAnimateTracks(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:586:9
    t.method("SetAnimateTracks", [](TGeoManager& a)->void { a.SetAnimateTracks(); });
    t.method("SetAnimateTracks", [](TGeoManager& a, Bool_t arg0)->void { a.SetAnimateTracks(arg0); });
    t.method("SetAnimateTracks", [](TGeoManager* a)->void { a->SetAnimateTracks(); });
    t.method("SetAnimateTracks", [](TGeoManager* a, Bool_t arg0)->void { a->SetAnimateTracks(arg0); });

    DEBUG_MSG("Adding wrapper for ULong_t TGeoManager::SizeOf(const TGeoNode *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: ULong_t TGeoManager::SizeOf(const TGeoNode *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:587:20
    t.method("SizeOf", [](TGeoManager& a, const TGeoNode * arg0, Option_t * arg1)->ULong_t { return a.SizeOf(arg0, arg1); });
    t.method("SizeOf", [](TGeoManager* a, const TGeoNode * arg0, Option_t * arg1)->ULong_t { return a->SizeOf(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SelectTrackingMedia() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SelectTrackingMedia()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:588:9
    t.method("SelectTrackingMedia", [](TGeoManager& a)->void { a.SelectTrackingMedia(); });
    t.method("SelectTrackingMedia", [](TGeoManager* a)->void { a->SelectTrackingMedia(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::PushPath(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::PushPath(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:591:10
    t.method("PushPath", [](TGeoManager& a)->Int_t { return a.PushPath(); });
    t.method("PushPath", [](TGeoManager& a, Int_t arg0)->Int_t { return a.PushPath(arg0); });
    t.method("PushPath", [](TGeoManager* a)->Int_t { return a->PushPath(); });
    t.method("PushPath", [](TGeoManager* a, Int_t arg0)->Int_t { return a->PushPath(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::PopPath() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::PopPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:592:11
    t.method("PopPath", [](TGeoManager& a)->Bool_t { return a.PopPath(); });
    t.method("PopPath", [](TGeoManager* a)->Bool_t { return a->PopPath(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::PopPath(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::PopPath(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:593:11
    t.method("PopPath", [](TGeoManager& a, Int_t arg0)->Bool_t { return a.PopPath(arg0); });
    t.method("PopPath", [](TGeoManager* a, Int_t arg0)->Bool_t { return a->PopPath(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoManager::PushPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoManager::PushPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:594:10
    t.method("PushPoint", [](TGeoManager& a)->Int_t { return a.PushPoint(); });
    t.method("PushPoint", [](TGeoManager& a, Int_t arg0)->Int_t { return a.PushPoint(arg0); });
    t.method("PushPoint", [](TGeoManager* a)->Int_t { return a->PushPoint(); });
    t.method("PushPoint", [](TGeoManager* a, Int_t arg0)->Int_t { return a->PushPoint(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::PopPoint() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::PopPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:595:11
    t.method("PopPoint", [](TGeoManager& a)->Bool_t { return a.PopPoint(); });
    t.method("PopPoint", [](TGeoManager* a)->Bool_t { return a->PopPoint(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::PopPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::PopPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:596:11
    t.method("PopPoint", [](TGeoManager& a, Int_t arg0)->Bool_t { return a.PopPoint(arg0); });
    t.method("PopPoint", [](TGeoManager* a, Int_t arg0)->Bool_t { return a->PopPoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::PopDummy(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::PopDummy(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:597:9
    t.method("PopDummy", [](TGeoManager& a)->void { a.PopDummy(); });
    t.method("PopDummy", [](TGeoManager& a, Int_t arg0)->void { a.PopDummy(arg0); });
    t.method("PopDummy", [](TGeoManager* a)->void { a->PopDummy(); });
    t.method("PopDummy", [](TGeoManager* a, Int_t arg0)->void { a->PopDummy(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoParallelWorld * TGeoManager::CreateParallelWorld(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoParallelWorld * TGeoManager::CreateParallelWorld(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:600:23
    t.method("CreateParallelWorld", [](TGeoManager& a, const char * arg0)->TGeoParallelWorld * { return a.CreateParallelWorld(arg0); });
    t.method("CreateParallelWorld", [](TGeoManager* a, const char * arg0)->TGeoParallelWorld * { return a->CreateParallelWorld(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoParallelWorld * TGeoManager::GetParallelWorld() (" __HERE__ ")");
    // signature to use in the veto list: TGeoParallelWorld * TGeoManager::GetParallelWorld()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:601:23
    t.method("GetParallelWorld", [](TGeoManager const& a)->TGeoParallelWorld * { return a.GetParallelWorld(); });
    t.method("GetParallelWorld", [](TGeoManager const* a)->TGeoParallelWorld * { return a->GetParallelWorld(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::SetUseParallelWorldNav(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::SetUseParallelWorldNav(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:602:9
    t.method("SetUseParallelWorldNav", [](TGeoManager& a, Bool_t arg0)->void { a.SetUseParallelWorldNav(arg0); });
    t.method("SetUseParallelWorldNav", [](TGeoManager* a, Bool_t arg0)->void { a->SetUseParallelWorldNav(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoManager::IsParallelWorldNav() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoManager::IsParallelWorldNav()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoManager.h:603:11
    t.method("IsParallelWorldNav", [](TGeoManager const& a)->Bool_t { return a.IsParallelWorldNav(); });
    t.method("IsParallelWorldNav", [](TGeoManager const* a)->Bool_t { return a->IsParallelWorldNav(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoManager::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoManager::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoManager!Class_Version", []()->Version_t { return TGeoManager::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoManager::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoManager::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoManager const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoManager const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoManager& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoManager* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoManager!DeclFileName", []() { return (std::string)TGeoManager::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoManager::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoManager::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoManager!ImplFileLine", []()->int { return TGeoManager::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoManager!ImplFileName", []() { return (std::string)TGeoManager::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoManager::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoManager::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoManager!Class_Name", []() { return (std::string)TGeoManager::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoManager::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoManager::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoManager!Dictionary", []()->TClass * { return TGeoManager::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoManager::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoManager::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoManager!Class", []()->TClass * { return TGeoManager::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoManager::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoManager::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoManager& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoManager* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoManager::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoManager::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoManager!DeclFileLine", []()->int { return TGeoManager::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoManager>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoManager(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoManager(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoMaterial> : std::false_type { };
  template<> struct DefaultConstructible<TGeoMaterial> : std::false_type { };
template<> struct SuperType<TGeoMaterial> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoMaterial
// signature to use in the veto file: TGeoMaterial
struct JlTGeoMaterial: public Wrapper {

  JlTGeoMaterial(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoMaterial (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:34:7
    jlcxx::TypeWrapper<TGeoMaterial>  t = jlModule.add_type<TGeoMaterial>("TGeoMaterial",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoMaterial>>(new jlcxx::TypeWrapper<TGeoMaterial>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMaterial::TGeoMaterial(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:64:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMaterial::TGeoMaterial(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:65:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMaterial::TGeoMaterial(const char *, Double_t, Double_t, Double_t, TGeoMaterial::EGeoMaterialState, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:66:4
    t.constructor<const char *, Double_t, Double_t, Double_t, TGeoMaterial::EGeoMaterialState>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, Double_t, Double_t, Double_t, TGeoMaterial::EGeoMaterialState, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, Double_t, Double_t, Double_t, TGeoMaterial::EGeoMaterialState, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMaterial::TGeoMaterial(const char *, TGeoElement *, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:68:4
    t.constructor<const char *, TGeoElement *, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::Coulomb(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::Coulomb(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:73:20
    module_.method("TGeoMaterial!Coulomb", [](Double_t arg0)->Double_t { return TGeoMaterial::Coulomb(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoMaterial::DecayMaterial(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoMaterial::DecayMaterial(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:75:26
    t.method("DecayMaterial", [](TGeoMaterial& a, Double_t arg0)->TGeoMaterial * { return a.DecayMaterial(arg0); });
    t.method("DecayMaterial", [](TGeoMaterial& a, Double_t arg0, Double_t arg1)->TGeoMaterial * { return a.DecayMaterial(arg0, arg1); });
    t.method("DecayMaterial", [](TGeoMaterial* a, Double_t arg0)->TGeoMaterial * { return a->DecayMaterial(arg0); });
    t.method("DecayMaterial", [](TGeoMaterial* a, Double_t arg0, Double_t arg1)->TGeoMaterial * { return a->DecayMaterial(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::FillMaterialEvolution(TObjArray *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::FillMaterialEvolution(TObjArray *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:76:17
    t.method("FillMaterialEvolution", [](TGeoMaterial& a, TObjArray * arg0)->void { a.FillMaterialEvolution(arg0); });
    t.method("FillMaterialEvolution", [](TGeoMaterial& a, TObjArray * arg0, Double_t arg1)->void { a.FillMaterialEvolution(arg0, arg1); });
    t.method("FillMaterialEvolution", [](TGeoMaterial* a, TObjArray * arg0)->void { a->FillMaterialEvolution(arg0); });
    t.method("FillMaterialEvolution", [](TGeoMaterial* a, TObjArray * arg0, Double_t arg1)->void { a->FillMaterialEvolution(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TGeoMaterial::AddProperty(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoMaterial::AddProperty(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:78:9
    t.method("AddProperty", [](TGeoMaterial& a, const char * arg0, const char * arg1)->bool { return a.AddProperty(arg0, arg1); });
    t.method("AddProperty", [](TGeoMaterial* a, const char * arg0, const char * arg1)->bool { return a->AddProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TGeoMaterial::AddConstProperty(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoMaterial::AddConstProperty(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:79:9
    t.method("AddConstProperty", [](TGeoMaterial& a, const char * arg0, const char * arg1)->bool { return a.AddConstProperty(arg0, arg1); });
    t.method("AddConstProperty", [](TGeoMaterial* a, const char * arg0, const char * arg1)->bool { return a->AddConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetNproperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetNproperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:80:10
    t.method("GetNproperties", [](TGeoMaterial const& a)->Int_t { return a.GetNproperties(); });
    t.method("GetNproperties", [](TGeoMaterial const* a)->Int_t { return a->GetNproperties(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetNconstProperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetNconstProperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:81:10
    t.method("GetNconstProperties", [](TGeoMaterial const& a)->Int_t { return a.GetNconstProperties(); });
    t.method("GetNconstProperties", [](TGeoMaterial const* a)->Int_t { return a->GetNconstProperties(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::GetPropertyRef(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::GetPropertyRef(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:82:16
    t.method("GetPropertyRef", [](TGeoMaterial const& a, const char * arg0) { return (std::string)a.GetPropertyRef(arg0); });
    t.method("GetPropertyRef", [](TGeoMaterial const* a, const char * arg0) { return (std::string)a->GetPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::GetPropertyRef(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::GetPropertyRef(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:83:16
    t.method("GetPropertyRef", [](TGeoMaterial const& a, Int_t arg0) { return (std::string)a.GetPropertyRef(arg0); });
    t.method("GetPropertyRef", [](TGeoMaterial const* a, Int_t arg0) { return (std::string)a->GetPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetConstProperty(const char *, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetConstProperty(const char *, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:87:13
    t.method("GetConstProperty", [](TGeoMaterial const& a, const char * arg0)->Double_t { return a.GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoMaterial const& a, const char * arg0, Bool_t * arg1)->Double_t { return a.GetConstProperty(arg0, arg1); });
    t.method("GetConstProperty", [](TGeoMaterial const* a, const char * arg0)->Double_t { return a->GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoMaterial const* a, const char * arg0, Bool_t * arg1)->Double_t { return a->GetConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetConstProperty(Int_t, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetConstProperty(Int_t, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:88:13
    t.method("GetConstProperty", [](TGeoMaterial const& a, Int_t arg0)->Double_t { return a.GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoMaterial const& a, Int_t arg0, Bool_t * arg1)->Double_t { return a.GetConstProperty(arg0, arg1); });
    t.method("GetConstProperty", [](TGeoMaterial const* a, Int_t arg0)->Double_t { return a->GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoMaterial const* a, Int_t arg0, Bool_t * arg1)->Double_t { return a->GetConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::GetConstPropertyRef(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::GetConstPropertyRef(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:89:16
    t.method("GetConstPropertyRef", [](TGeoMaterial const& a, const char * arg0) { return (std::string)a.GetConstPropertyRef(arg0); });
    t.method("GetConstPropertyRef", [](TGeoMaterial const* a, const char * arg0) { return (std::string)a->GetConstPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::GetConstPropertyRef(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::GetConstPropertyRef(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:90:16
    t.method("GetConstPropertyRef", [](TGeoMaterial const& a, Int_t arg0) { return (std::string)a.GetConstPropertyRef(arg0); });
    t.method("GetConstPropertyRef", [](TGeoMaterial const* a, Int_t arg0) { return (std::string)a->GetConstPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const TList & TGeoMaterial::GetProperties() (" __HERE__ ")");
    // signature to use in the veto list: const TList & TGeoMaterial::GetProperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:94:17
    t.method("GetProperties", [](TGeoMaterial const& a)->const TList & { return a.GetProperties(); });
    t.method("GetProperties", [](TGeoMaterial const* a)->const TList & { return a->GetProperties(); });

    DEBUG_MSG("Adding wrapper for const TList & TGeoMaterial::GetConstProperties() (" __HERE__ ")");
    // signature to use in the veto list: const TList & TGeoMaterial::GetConstProperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:95:17
    t.method("GetConstProperties", [](TGeoMaterial const& a)->const TList & { return a.GetConstProperties(); });
    t.method("GetConstProperties", [](TGeoMaterial const* a)->const TList & { return a->GetConstProperties(); });

    DEBUG_MSG("Adding wrapper for TGDMLMatrix * TGeoMaterial::GetProperty(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGDMLMatrix * TGeoMaterial::GetProperty(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:96:17
    t.method("GetProperty", [](TGeoMaterial const& a, const char * arg0)->TGDMLMatrix * { return a.GetProperty(arg0); });
    t.method("GetProperty", [](TGeoMaterial const* a, const char * arg0)->TGDMLMatrix * { return a->GetProperty(arg0); });

    DEBUG_MSG("Adding wrapper for TGDMLMatrix * TGeoMaterial::GetProperty(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGDMLMatrix * TGeoMaterial::GetProperty(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:97:17
    t.method("GetProperty", [](TGeoMaterial const& a, Int_t arg0)->TGDMLMatrix * { return a.GetProperty(arg0); });
    t.method("GetProperty", [](TGeoMaterial const* a, Int_t arg0)->TGDMLMatrix * { return a->GetProperty(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:98:18
    t.method("GetByteCount", [](TGeoMaterial const& a)->Int_t { return a.GetByteCount(); });
    t.method("GetByteCount", [](TGeoMaterial const* a)->Int_t { return a->GetByteCount(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetA() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:99:21
    t.method("GetA", [](TGeoMaterial const& a)->Double_t { return a.GetA(); });
    t.method("GetA", [](TGeoMaterial const* a)->Double_t { return a->GetA(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:100:21
    t.method("GetZ", [](TGeoMaterial const& a)->Double_t { return a.GetZ(); });
    t.method("GetZ", [](TGeoMaterial const* a)->Double_t { return a->GetZ(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetDefaultColor() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetDefaultColor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:101:18
    t.method("GetDefaultColor", [](TGeoMaterial const& a)->Int_t { return a.GetDefaultColor(); });
    t.method("GetDefaultColor", [](TGeoMaterial const* a)->Int_t { return a->GetDefaultColor(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetDensity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetDensity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:102:21
    t.method("GetDensity", [](TGeoMaterial const& a)->Double_t { return a.GetDensity(); });
    t.method("GetDensity", [](TGeoMaterial const* a)->Double_t { return a->GetDensity(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetNelements() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetNelements()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:103:18
    t.method("GetNelements", [](TGeoMaterial const& a)->Int_t { return a.GetNelements(); });
    t.method("GetNelements", [](TGeoMaterial const* a)->Int_t { return a->GetNelements(); });

    DEBUG_MSG("Adding wrapper for TGeoElement * TGeoMaterial::GetElement() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElement * TGeoMaterial::GetElement()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:104:17
    t.method("GetElement", [](TGeoMaterial const& a)->TGeoElement * { return a.GetElement(); });
    t.method("GetElement", [](TGeoMaterial const* a)->TGeoElement * { return a->GetElement(); });

    DEBUG_MSG("Adding wrapper for TGeoElement * TGeoMaterial::GetElement(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoElement * TGeoMaterial::GetElement(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:105:25
    t.method("GetElement", [](TGeoMaterial const& a, Int_t arg0)->TGeoElement * { return a.GetElement(arg0); });
    t.method("GetElement", [](TGeoMaterial const* a, Int_t arg0)->TGeoElement * { return a->GetElement(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::GetElementProp(Double_t &, Double_t &, Double_t &, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::GetElementProp(Double_t &, Double_t &, Double_t &, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:106:17
    t.method("GetElementProp", [](TGeoMaterial& a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a.GetElementProp(arg0, arg1, arg2); });
    t.method("GetElementProp", [](TGeoMaterial& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t arg3)->void { a.GetElementProp(arg0, arg1, arg2, arg3); });
    t.method("GetElementProp", [](TGeoMaterial* a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a->GetElementProp(arg0, arg1, arg2); });
    t.method("GetElementProp", [](TGeoMaterial* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t arg3)->void { a->GetElementProp(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGeoElement * TGeoMaterial::GetBaseElement() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElement * TGeoMaterial::GetBaseElement()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:107:17
    t.method("GetBaseElement", [](TGeoMaterial const& a)->TGeoElement * { return a.GetBaseElement(); });
    t.method("GetBaseElement", [](TGeoMaterial const* a)->TGeoElement * { return a->GetBaseElement(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::GetPointerName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::GetPointerName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:108:16
    t.method("GetPointerName", [](TGeoMaterial const& a) { return (std::string)a.GetPointerName(); });
    t.method("GetPointerName", [](TGeoMaterial const* a) { return (std::string)a->GetPointerName(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetRadLen() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetRadLen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:109:21
    t.method("GetRadLen", [](TGeoMaterial const& a)->Double_t { return a.GetRadLen(); });
    t.method("GetRadLen", [](TGeoMaterial const* a)->Double_t { return a->GetRadLen(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetIntLen() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetIntLen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:110:21
    t.method("GetIntLen", [](TGeoMaterial const& a)->Double_t { return a.GetIntLen(); });
    t.method("GetIntLen", [](TGeoMaterial const* a)->Double_t { return a->GetIntLen(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMaterial::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMaterial::GetIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:111:10
    t.method("GetIndex", [](TGeoMaterial& a)->Int_t { return a.GetIndex(); });
    t.method("GetIndex", [](TGeoMaterial* a)->Int_t { return a->GetIndex(); });

    DEBUG_MSG("Adding wrapper for TObject * TGeoMaterial::GetCerenkovProperties() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGeoMaterial::GetCerenkovProperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:112:21
    t.method("GetCerenkovProperties", [](TGeoMaterial const& a)->TObject * { return a.GetCerenkovProperties(); });
    t.method("GetCerenkovProperties", [](TGeoMaterial const* a)->TObject * { return a->GetCerenkovProperties(); });

    DEBUG_MSG("Adding wrapper for Char_t TGeoMaterial::GetTransparency() (" __HERE__ ")");
    // signature to use in the veto list: Char_t TGeoMaterial::GetTransparency()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:113:11
    t.method("GetTransparency", [](TGeoMaterial const& a)->Char_t { return a.GetTransparency(); });
    t.method("GetTransparency", [](TGeoMaterial const* a)->Char_t { return a->GetTransparency(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetTemperature() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetTemperature()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:114:13
    t.method("GetTemperature", [](TGeoMaterial const& a)->Double_t { return a.GetTemperature(); });
    t.method("GetTemperature", [](TGeoMaterial const* a)->Double_t { return a->GetTemperature(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetPressure() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetPressure()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:115:13
    t.method("GetPressure", [](TGeoMaterial const& a)->Double_t { return a.GetPressure(); });
    t.method("GetPressure", [](TGeoMaterial const* a)->Double_t { return a->GetPressure(); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial::EGeoMaterialState TGeoMaterial::GetState() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial::EGeoMaterialState TGeoMaterial::GetState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:116:22
    t.method("GetState", [](TGeoMaterial const& a)->TGeoMaterial::EGeoMaterialState { return a.GetState(); });
    t.method("GetState", [](TGeoMaterial const* a)->TGeoMaterial::EGeoMaterialState { return a->GetState(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::GetSpecificActivity(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::GetSpecificActivity(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:117:21
    t.method("GetSpecificActivity", [](TGeoMaterial const& a, Int_t arg0)->Double_t { return a.GetSpecificActivity(arg0); });
    t.method("GetSpecificActivity", [](TGeoMaterial const* a, Int_t arg0)->Double_t { return a->GetSpecificActivity(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoMaterial::GetUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoMaterial::GetUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:118:19
    t.method("GetUserExtension", [](TGeoMaterial const& a)->TGeoExtension * { return a.GetUserExtension(); });
    t.method("GetUserExtension", [](TGeoMaterial const* a)->TGeoExtension * { return a->GetUserExtension(); });

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoMaterial::GetFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoMaterial::GetFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:119:19
    t.method("GetFWExtension", [](TGeoMaterial const& a)->TGeoExtension * { return a.GetFWExtension(); });
    t.method("GetFWExtension", [](TGeoMaterial const* a)->TGeoExtension * { return a->GetFWExtension(); });

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoMaterial::GrabUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoMaterial::GrabUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:120:19
    t.method("GrabUserExtension", [](TGeoMaterial const& a)->TGeoExtension * { return a.GrabUserExtension(); });
    t.method("GrabUserExtension", [](TGeoMaterial const* a)->TGeoExtension * { return a->GrabUserExtension(); });

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoMaterial::GrabFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoMaterial::GrabFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:121:19
    t.method("GrabFWExtension", [](TGeoMaterial const& a)->TGeoExtension * { return a.GrabFWExtension(); });
    t.method("GrabFWExtension", [](TGeoMaterial const* a)->TGeoExtension * { return a->GrabFWExtension(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMaterial::IsEq(const TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMaterial::IsEq(const TGeoMaterial *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:122:19
    t.method("IsEq", [](TGeoMaterial const& a, const TGeoMaterial * arg0)->Bool_t { return a.IsEq(arg0); });
    t.method("IsEq", [](TGeoMaterial const* a, const TGeoMaterial * arg0)->Bool_t { return a->IsEq(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMaterial::IsUsed() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMaterial::IsUsed()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:123:11
    t.method("IsUsed", [](TGeoMaterial const& a)->Bool_t { return a.IsUsed(); });
    t.method("IsUsed", [](TGeoMaterial const* a)->Bool_t { return a->IsUsed(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMaterial::IsMixture() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMaterial::IsMixture()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:124:19
    t.method("IsMixture", [](TGeoMaterial const& a)->Bool_t { return a.IsMixture(); });
    t.method("IsMixture", [](TGeoMaterial const* a)->Bool_t { return a->IsMixture(); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::Print(const Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::Print(const Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:125:9
    t.method("Print", [](TGeoMaterial const& a)->void { a.Print(); });
    t.method("Print", [](TGeoMaterial const& a, const Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGeoMaterial const* a)->void { a->Print(); });
    t.method("Print", [](TGeoMaterial const* a, const Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetA(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetA(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:127:17
    t.method("SetA", [](TGeoMaterial& a, Double_t arg0)->void { a.SetA(arg0); });
    t.method("SetA", [](TGeoMaterial* a, Double_t arg0)->void { a->SetA(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:132:17
    t.method("SetZ", [](TGeoMaterial& a, Double_t arg0)->void { a.SetZ(arg0); });
    t.method("SetZ", [](TGeoMaterial* a, Double_t arg0)->void { a->SetZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetDensity(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetDensity(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:137:17
    t.method("SetDensity", [](TGeoMaterial& a, Double_t arg0)->void { a.SetDensity(arg0); });
    t.method("SetDensity", [](TGeoMaterial* a, Double_t arg0)->void { a->SetDensity(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetIndex(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetIndex(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:142:9
    t.method("SetIndex", [](TGeoMaterial& a, Int_t arg0)->void { a.SetIndex(arg0); });
    t.method("SetIndex", [](TGeoMaterial* a, Int_t arg0)->void { a->SetIndex(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetCerenkovProperties(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetCerenkovProperties(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:143:17
    t.method("SetCerenkovProperties", [](TGeoMaterial& a, TObject * arg0)->void { a.SetCerenkovProperties(arg0); });
    t.method("SetCerenkovProperties", [](TGeoMaterial* a, TObject * arg0)->void { a->SetCerenkovProperties(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetRadLen(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetRadLen(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:144:9
    t.method("SetRadLen", [](TGeoMaterial& a, Double_t arg0)->void { a.SetRadLen(arg0); });
    t.method("SetRadLen", [](TGeoMaterial& a, Double_t arg0, Double_t arg1)->void { a.SetRadLen(arg0, arg1); });
    t.method("SetRadLen", [](TGeoMaterial* a, Double_t arg0)->void { a->SetRadLen(arg0); });
    t.method("SetRadLen", [](TGeoMaterial* a, Double_t arg0, Double_t arg1)->void { a->SetRadLen(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetUsed(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetUsed(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:145:9
    t.method("SetUsed", [](TGeoMaterial& a)->void { a.SetUsed(); });
    t.method("SetUsed", [](TGeoMaterial& a, Bool_t arg0)->void { a.SetUsed(arg0); });
    t.method("SetUsed", [](TGeoMaterial* a)->void { a->SetUsed(); });
    t.method("SetUsed", [](TGeoMaterial* a, Bool_t arg0)->void { a->SetUsed(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetTransparency(Char_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetTransparency(Char_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:146:9
    t.method("SetTransparency", [](TGeoMaterial& a)->void { a.SetTransparency(); });
    t.method("SetTransparency", [](TGeoMaterial& a, Char_t arg0)->void { a.SetTransparency(arg0); });
    t.method("SetTransparency", [](TGeoMaterial* a)->void { a->SetTransparency(); });
    t.method("SetTransparency", [](TGeoMaterial* a, Char_t arg0)->void { a->SetTransparency(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetTemperature(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetTemperature(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:147:9
    t.method("SetTemperature", [](TGeoMaterial& a, Double_t arg0)->void { a.SetTemperature(arg0); });
    t.method("SetTemperature", [](TGeoMaterial* a, Double_t arg0)->void { a->SetTemperature(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetPressure(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetPressure(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:148:9
    t.method("SetPressure", [](TGeoMaterial& a, Double_t arg0)->void { a.SetPressure(arg0); });
    t.method("SetPressure", [](TGeoMaterial* a, Double_t arg0)->void { a->SetPressure(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetState(TGeoMaterial::EGeoMaterialState) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetState(TGeoMaterial::EGeoMaterialState)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:149:9
    t.method("SetState", [](TGeoMaterial& a, TGeoMaterial::EGeoMaterialState arg0)->void { a.SetState(arg0); });
    t.method("SetState", [](TGeoMaterial* a, TGeoMaterial::EGeoMaterialState arg0)->void { a->SetState(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetUserExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetUserExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:150:9
    t.method("SetUserExtension", [](TGeoMaterial& a, TGeoExtension * arg0)->void { a.SetUserExtension(arg0); });
    t.method("SetUserExtension", [](TGeoMaterial* a, TGeoExtension * arg0)->void { a->SetUserExtension(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::SetFWExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::SetFWExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:151:9
    t.method("SetFWExtension", [](TGeoMaterial& a, TGeoExtension * arg0)->void { a.SetFWExtension(arg0); });
    t.method("SetFWExtension", [](TGeoMaterial* a, TGeoExtension * arg0)->void { a->SetFWExtension(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMaterial::ScreenFactor(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMaterial::ScreenFactor(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMaterial.h:152:20
    module_.method("TGeoMaterial!ScreenFactor", [](Double_t arg0)->Double_t { return TGeoMaterial::ScreenFactor(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoMaterial::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoMaterial::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoMaterial!Class_Version", []()->Version_t { return TGeoMaterial::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMaterial::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMaterial::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoMaterial const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoMaterial const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoMaterial& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoMaterial* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoMaterial!DeclFileName", []() { return (std::string)TGeoMaterial::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoMaterial::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMaterial::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoMaterial!ImplFileLine", []()->int { return TGeoMaterial::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoMaterial!ImplFileName", []() { return (std::string)TGeoMaterial::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMaterial::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMaterial::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoMaterial!Class_Name", []() { return (std::string)TGeoMaterial::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMaterial::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMaterial::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoMaterial!Dictionary", []()->TClass * { return TGeoMaterial::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMaterial::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMaterial::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoMaterial!Class", []()->TClass * { return TGeoMaterial::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoMaterial::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMaterial::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoMaterial& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoMaterial* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoMaterial::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMaterial::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoMaterial!DeclFileLine", []()->int { return TGeoMaterial::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoMaterial>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoMaterial(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoMaterial(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoMedium> : std::false_type { };
  template<> struct DefaultConstructible<TGeoMedium> : std::false_type { };
template<> struct SuperType<TGeoMedium> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoMedium
// signature to use in the veto file: TGeoMedium
struct JlTGeoMedium: public Wrapper {

  JlTGeoMedium(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoMedium (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:23:7
    jlcxx::TypeWrapper<TGeoMedium>  t = jlModule.add_type<TGeoMedium>("TGeoMedium",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoMedium>>(new jlcxx::TypeWrapper<TGeoMedium>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMedium::TGeoMedium(const char *, Int_t, const TGeoMaterial *, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:39:4
    t.constructor<const char *, Int_t, const TGeoMaterial *>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, Int_t, const TGeoMaterial *, Double_t *>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoMedium::TGeoMedium(const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:40:4
    t.constructor<const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for Int_t TGeoMedium::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMedium::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:44:18
    t.method("GetByteCount", [](TGeoMedium const& a)->Int_t { return a.GetByteCount(); });
    t.method("GetByteCount", [](TGeoMedium const* a)->Int_t { return a->GetByteCount(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMedium::GetId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMedium::GetId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:45:10
    t.method("GetId", [](TGeoMedium const& a)->Int_t { return a.GetId(); });
    t.method("GetId", [](TGeoMedium const* a)->Int_t { return a->GetId(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoMedium::GetParam(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMedium::GetParam(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:46:13
    t.method("GetParam", [](TGeoMedium const& a, Int_t arg0)->Double_t { return a.GetParam(arg0); });
    t.method("GetParam", [](TGeoMedium const* a, Int_t arg0)->Double_t { return a->GetParam(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::SetParam(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::SetParam(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:47:9
    t.method("SetParam", [](TGeoMedium& a, Int_t arg0, Double_t arg1)->void { a.SetParam(arg0, arg1); });
    t.method("SetParam", [](TGeoMedium* a, Int_t arg0, Double_t arg1)->void { a->SetParam(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMedium::GetPointerName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMedium::GetPointerName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:48:16
    t.method("GetPointerName", [](TGeoMedium const& a) { return (std::string)a.GetPointerName(); });
    t.method("GetPointerName", [](TGeoMedium const* a) { return (std::string)a->GetPointerName(); });

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoMedium::GetMaterial() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoMedium::GetMaterial()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:49:18
    t.method("GetMaterial", [](TGeoMedium const& a)->TGeoMaterial * { return a.GetMaterial(); });
    t.method("GetMaterial", [](TGeoMedium const* a)->TGeoMaterial * { return a->GetMaterial(); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::SetId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::SetId(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:51:9
    t.method("SetId", [](TGeoMedium& a, Int_t arg0)->void { a.SetId(arg0); });
    t.method("SetId", [](TGeoMedium* a, Int_t arg0)->void { a->SetId(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::SetMaterial(TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::SetMaterial(TGeoMaterial *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:52:9
    t.method("SetMaterial", [](TGeoMedium& a, TGeoMaterial * arg0)->void { a.SetMaterial(arg0); });
    t.method("SetMaterial", [](TGeoMedium* a, TGeoMaterial * arg0)->void { a->SetMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::SetCerenkovProperties(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::SetCerenkovProperties(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMedium.h:53:17
    t.method("SetCerenkovProperties", [](TGeoMedium& a, TObject * arg0)->void { a.SetCerenkovProperties(arg0); });
    t.method("SetCerenkovProperties", [](TGeoMedium* a, TObject * arg0)->void { a->SetCerenkovProperties(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoMedium::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoMedium::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoMedium!Class_Version", []()->Version_t { return TGeoMedium::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMedium::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMedium::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoMedium const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoMedium const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoMedium& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoMedium* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMedium::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMedium::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoMedium!DeclFileName", []() { return (std::string)TGeoMedium::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoMedium::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMedium::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoMedium!ImplFileLine", []()->int { return TGeoMedium::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMedium::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMedium::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoMedium!ImplFileName", []() { return (std::string)TGeoMedium::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMedium::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMedium::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoMedium!Class_Name", []() { return (std::string)TGeoMedium::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMedium::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMedium::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoMedium!Dictionary", []()->TClass * { return TGeoMedium::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMedium::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMedium::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoMedium!Class", []()->TClass * { return TGeoMedium::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoMedium::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMedium::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoMedium& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoMedium* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoMedium::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMedium::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoMedium!DeclFileLine", []()->int { return TGeoMedium::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoMedium>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoMedium(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoMedium(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoVolumeAssembly> : std::false_type { };
  template<> struct DefaultConstructible<TGeoVolumeAssembly> : std::false_type { };
template<> struct SuperType<TGeoVolumeAssembly> { typedef TGeoVolume type; };
}

// Class generating the wrapper for type TGeoVolumeAssembly
// signature to use in the veto file: TGeoVolumeAssembly
struct JlTGeoVolumeAssembly: public Wrapper {

  JlTGeoVolumeAssembly(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoVolumeAssembly (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:316:7
    jlcxx::TypeWrapper<TGeoVolumeAssembly>  t = jlModule.add_type<TGeoVolumeAssembly>("TGeoVolumeAssembly",
      jlcxx::julia_base_type<TGeoVolume>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoVolumeAssembly>>(new jlcxx::TypeWrapper<TGeoVolumeAssembly>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoVolumeAssembly::ThreadData_t & TGeoVolumeAssembly::GetThreadData() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeAssembly::ThreadData_t & TGeoVolumeAssembly::GetThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:326:18
    t.method("GetThreadData", [](TGeoVolumeAssembly const& a)->TGeoVolumeAssembly::ThreadData_t & { return a.GetThreadData(); });
    t.method("GetThreadData", [](TGeoVolumeAssembly const* a)->TGeoVolumeAssembly::ThreadData_t & { return a->GetThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:327:9
    t.method("ClearThreadData", [](TGeoVolumeAssembly const& a)->void { a.ClearThreadData(); });
    t.method("ClearThreadData", [](TGeoVolumeAssembly const* a)->void { a->ClearThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:328:9
    t.method("CreateThreadData", [](TGeoVolumeAssembly& a, Int_t arg0)->void { a.CreateThreadData(arg0); });
    t.method("CreateThreadData", [](TGeoVolumeAssembly* a, Int_t arg0)->void { a->CreateThreadData(arg0); });


    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::TGeoVolumeAssembly(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:341:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolumeAssembly::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolumeAssembly::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:344:14
    t.method("AddNode", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, Int_t arg1)->TGeoNode * { return a.AddNode(arg0, arg1); });
    t.method("AddNode", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a.AddNode(arg0, arg1, arg2); });
    t.method("AddNode", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a.AddNode(arg0, arg1, arg2, arg3); });
    t.method("AddNode", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, Int_t arg1)->TGeoNode * { return a->AddNode(arg0, arg1); });
    t.method("AddNode", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a->AddNode(arg0, arg1, arg2); });
    t.method("AddNode", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a->AddNode(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:345:9
    t.method("AddNodeOverlap", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a.AddNodeOverlap(arg0, arg1, arg2, arg3); });
    t.method("AddNodeOverlap", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a->AddNodeOverlap(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeAssembly::CloneVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeAssembly::CloneVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:346:16
    t.method("CloneVolume", [](TGeoVolumeAssembly const& a)->TGeoVolume * { return a.CloneVolume(); });
    t.method("CloneVolume", [](TGeoVolumeAssembly const* a)->TGeoVolume * { return a->CloneVolume(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeAssembly::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeAssembly::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:347:16
    t.method("Divide", [](TGeoVolumeAssembly& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](TGeoVolumeAssembly& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoVolumeAssembly& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Divide", [](TGeoVolumeAssembly* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](TGeoVolumeAssembly* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoVolumeAssembly* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeAssembly::Divide(TGeoVolume *, TGeoPatternFinder *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeAssembly::Divide(TGeoVolume *, TGeoPatternFinder *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:349:16
    t.method("Divide", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, TGeoPatternFinder * arg1)->TGeoVolume * { return a.Divide(arg0, arg1); });
    t.method("Divide", [](TGeoVolumeAssembly& a, TGeoVolume * arg0, TGeoPatternFinder * arg1, Option_t * arg2)->TGeoVolume * { return a.Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, TGeoPatternFinder * arg1)->TGeoVolume * { return a->Divide(arg0, arg1); });
    t.method("Divide", [](TGeoVolumeAssembly* a, TGeoVolume * arg0, TGeoPatternFinder * arg1, Option_t * arg2)->TGeoVolume * { return a->Divide(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::DrawOnly(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::DrawOnly(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:350:9
    t.method("DrawOnly", [](TGeoVolumeAssembly& a, Option_t * arg0)->void { a.DrawOnly(arg0); });
    t.method("DrawOnly", [](TGeoVolumeAssembly* a, Option_t * arg0)->void { a->DrawOnly(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolumeAssembly::GetCurrentNodeIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolumeAssembly::GetCurrentNodeIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:351:10
    t.method("GetCurrentNodeIndex", [](TGeoVolumeAssembly const& a)->Int_t { return a.GetCurrentNodeIndex(); });
    t.method("GetCurrentNodeIndex", [](TGeoVolumeAssembly const* a)->Int_t { return a->GetCurrentNodeIndex(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolumeAssembly::GetNextNodeIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolumeAssembly::GetNextNodeIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:352:10
    t.method("GetNextNodeIndex", [](TGeoVolumeAssembly const& a)->Int_t { return a.GetNextNodeIndex(); });
    t.method("GetNextNodeIndex", [](TGeoVolumeAssembly const* a)->Int_t { return a->GetNextNodeIndex(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolumeAssembly::IsAssembly() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolumeAssembly::IsAssembly()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:353:11
    t.method("IsAssembly", [](TGeoVolumeAssembly const& a)->Bool_t { return a.IsAssembly(); });
    t.method("IsAssembly", [](TGeoVolumeAssembly const* a)->Bool_t { return a->IsAssembly(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolumeAssembly::IsVisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolumeAssembly::IsVisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:354:11
    t.method("IsVisible", [](TGeoVolumeAssembly const& a)->Bool_t { return a.IsVisible(); });
    t.method("IsVisible", [](TGeoVolumeAssembly const* a)->Bool_t { return a->IsVisible(); });

    DEBUG_MSG("Adding wrapper for TGeoVolumeAssembly * TGeoVolumeAssembly::MakeAssemblyFromVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeAssembly * TGeoVolumeAssembly::MakeAssemblyFromVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:355:31
    module_.method("TGeoVolumeAssembly!MakeAssemblyFromVolume", [](TGeoVolume * arg0)->TGeoVolumeAssembly * { return TGeoVolumeAssembly::MakeAssemblyFromVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::SetCurrentNodeIndex(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::SetCurrentNodeIndex(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:356:9
    t.method("SetCurrentNodeIndex", [](TGeoVolumeAssembly& a, Int_t arg0)->void { a.SetCurrentNodeIndex(arg0); });
    t.method("SetCurrentNodeIndex", [](TGeoVolumeAssembly* a, Int_t arg0)->void { a->SetCurrentNodeIndex(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::SetNextNodeIndex(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::SetNextNodeIndex(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:357:9
    t.method("SetNextNodeIndex", [](TGeoVolumeAssembly& a, Int_t arg0)->void { a.SetNextNodeIndex(arg0); });
    t.method("SetNextNodeIndex", [](TGeoVolumeAssembly* a, Int_t arg0)->void { a->SetNextNodeIndex(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoVolumeAssembly::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoVolumeAssembly::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoVolumeAssembly!Class_Version", []()->Version_t { return TGeoVolumeAssembly::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeAssembly::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeAssembly::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoVolumeAssembly const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoVolumeAssembly const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoVolumeAssembly& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoVolumeAssembly* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeAssembly::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeAssembly::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoVolumeAssembly!DeclFileName", []() { return (std::string)TGeoVolumeAssembly::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoVolumeAssembly::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolumeAssembly::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoVolumeAssembly!ImplFileLine", []()->int { return TGeoVolumeAssembly::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeAssembly::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeAssembly::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoVolumeAssembly!ImplFileName", []() { return (std::string)TGeoVolumeAssembly::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeAssembly::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeAssembly::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoVolumeAssembly!Class_Name", []() { return (std::string)TGeoVolumeAssembly::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeAssembly::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeAssembly::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoVolumeAssembly!Dictionary", []()->TClass * { return TGeoVolumeAssembly::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeAssembly::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeAssembly::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoVolumeAssembly!Class", []()->TClass * { return TGeoVolumeAssembly::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeAssembly::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeAssembly::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoVolumeAssembly& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoVolumeAssembly* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoVolumeAssembly::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolumeAssembly::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoVolumeAssembly!DeclFileLine", []()->int { return TGeoVolumeAssembly::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoVolumeAssembly>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoVolumeAssembly(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoVolumeAssembly(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoVolumeMulti> : std::false_type { };
  template<> struct DefaultConstructible<TGeoVolumeMulti> : std::false_type { };
template<> struct SuperType<TGeoVolumeMulti> { typedef TGeoVolume type; };
}

// Class generating the wrapper for type TGeoVolumeMulti
// signature to use in the veto file: TGeoVolumeMulti
struct JlTGeoVolumeMulti: public Wrapper {

  JlTGeoVolumeMulti(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoVolumeMulti (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:266:7
    jlcxx::TypeWrapper<TGeoVolumeMulti>  t = jlModule.add_type<TGeoVolumeMulti>("TGeoVolumeMulti",
      jlcxx::julia_base_type<TGeoVolume>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoVolumeMulti>>(new jlcxx::TypeWrapper<TGeoVolumeMulti>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::TGeoVolumeMulti(const char *, TGeoMedium *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:282:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TGeoMedium *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::AddVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::AddVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:285:9
    t.method("AddVolume", [](TGeoVolumeMulti& a, TGeoVolume * arg0)->void { a.AddVolume(arg0); });
    t.method("AddVolume", [](TGeoVolumeMulti* a, TGeoVolume * arg0)->void { a->AddVolume(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeMulti::GetVolume(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeMulti::GetVolume(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:286:16
    t.method("GetVolume", [](TGeoVolumeMulti const& a, Int_t arg0)->TGeoVolume * { return a.GetVolume(arg0); });
    t.method("GetVolume", [](TGeoVolumeMulti const* a, Int_t arg0)->TGeoVolume * { return a->GetVolume(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolumeMulti::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolumeMulti::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:288:4
    t.method("AddNode", [](TGeoVolumeMulti& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a.AddNode(arg0, arg1, arg2); });
    t.method("AddNode", [](TGeoVolumeMulti& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a.AddNode(arg0, arg1, arg2, arg3); });
    t.method("AddNode", [](TGeoVolumeMulti* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a->AddNode(arg0, arg1, arg2); });
    t.method("AddNode", [](TGeoVolumeMulti* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a->AddNode(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:289:9
    t.method("AddNodeOverlap", [](TGeoVolumeMulti& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->void { a.AddNodeOverlap(arg0, arg1, arg2); });
    t.method("AddNodeOverlap", [](TGeoVolumeMulti& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a.AddNodeOverlap(arg0, arg1, arg2, arg3); });
    t.method("AddNodeOverlap", [](TGeoVolumeMulti* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->void { a->AddNodeOverlap(arg0, arg1, arg2); });
    t.method("AddNodeOverlap", [](TGeoVolumeMulti* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a->AddNodeOverlap(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeMulti::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeMulti::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:290:16
    t.method("Divide", [](TGeoVolumeMulti& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](TGeoVolumeMulti& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoVolumeMulti& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Divide", [](TGeoVolumeMulti* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](TGeoVolumeMulti* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoVolumeMulti* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoVolumeMulti::GetLastShape() (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoVolumeMulti::GetLastShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:292:15
    t.method("GetLastShape", [](TGeoVolumeMulti const& a)->TGeoShape * { return a.GetLastShape(); });
    t.method("GetLastShape", [](TGeoVolumeMulti const* a)->TGeoShape * { return a->GetLastShape(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolumeMulti::GetNvolumes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolumeMulti::GetNvolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:293:10
    t.method("GetNvolumes", [](TGeoVolumeMulti const& a)->Int_t { return a.GetNvolumes(); });
    t.method("GetNvolumes", [](TGeoVolumeMulti const* a)->Int_t { return a->GetNvolumes(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolumeMulti::GetAxis() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolumeMulti::GetAxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:294:10
    t.method("GetAxis", [](TGeoVolumeMulti const& a)->Int_t { return a.GetAxis(); });
    t.method("GetAxis", [](TGeoVolumeMulti const* a)->Int_t { return a->GetAxis(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolumeMulti::GetNdiv() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolumeMulti::GetNdiv()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:295:10
    t.method("GetNdiv", [](TGeoVolumeMulti const& a)->Int_t { return a.GetNdiv(); });
    t.method("GetNdiv", [](TGeoVolumeMulti const* a)->Int_t { return a->GetNdiv(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoVolumeMulti::GetStart() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoVolumeMulti::GetStart()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:296:13
    t.method("GetStart", [](TGeoVolumeMulti const& a)->Double_t { return a.GetStart(); });
    t.method("GetStart", [](TGeoVolumeMulti const* a)->Double_t { return a->GetStart(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoVolumeMulti::GetStep() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoVolumeMulti::GetStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:297:13
    t.method("GetStep", [](TGeoVolumeMulti const& a)->Double_t { return a.GetStep(); });
    t.method("GetStep", [](TGeoVolumeMulti const* a)->Double_t { return a->GetStep(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolumeMulti::IsVolumeMulti() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolumeMulti::IsVolumeMulti()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:298:11
    t.method("IsVolumeMulti", [](TGeoVolumeMulti const& a)->Bool_t { return a.IsVolumeMulti(); });
    t.method("IsVolumeMulti", [](TGeoVolumeMulti const* a)->Bool_t { return a->IsVolumeMulti(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolumeMulti::MakeCopyVolume(TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolumeMulti::MakeCopyVolume(TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:299:16
    t.method("MakeCopyVolume", [](TGeoVolumeMulti& a, TGeoShape * arg0)->TGeoVolume * { return a.MakeCopyVolume(arg0); });
    t.method("MakeCopyVolume", [](TGeoVolumeMulti* a, TGeoShape * arg0)->TGeoVolume * { return a->MakeCopyVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::SetLineColor(Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::SetLineColor(Color_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:300:9
    t.method("SetLineColor", [](TGeoVolumeMulti& a, Color_t arg0)->void { a.SetLineColor(arg0); });
    t.method("SetLineColor", [](TGeoVolumeMulti* a, Color_t arg0)->void { a->SetLineColor(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::SetLineStyle(Style_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::SetLineStyle(Style_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:301:9
    t.method("SetLineStyle", [](TGeoVolumeMulti& a, Style_t arg0)->void { a.SetLineStyle(arg0); });
    t.method("SetLineStyle", [](TGeoVolumeMulti* a, Style_t arg0)->void { a->SetLineStyle(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::SetLineWidth(Width_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::SetLineWidth(Width_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:302:9
    t.method("SetLineWidth", [](TGeoVolumeMulti& a, Width_t arg0)->void { a.SetLineWidth(arg0); });
    t.method("SetLineWidth", [](TGeoVolumeMulti* a, Width_t arg0)->void { a->SetLineWidth(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::SetMedium(TGeoMedium *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::SetMedium(TGeoMedium *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:303:9
    t.method("SetMedium", [](TGeoVolumeMulti& a, TGeoMedium * arg0)->void { a.SetMedium(arg0); });
    t.method("SetMedium", [](TGeoVolumeMulti* a, TGeoMedium * arg0)->void { a->SetMedium(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::SetVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::SetVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:304:9
    t.method("SetVisibility", [](TGeoVolumeMulti& a)->void { a.SetVisibility(); });
    t.method("SetVisibility", [](TGeoVolumeMulti& a, Bool_t arg0)->void { a.SetVisibility(arg0); });
    t.method("SetVisibility", [](TGeoVolumeMulti* a)->void { a->SetVisibility(); });
    t.method("SetVisibility", [](TGeoVolumeMulti* a, Bool_t arg0)->void { a->SetVisibility(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoVolumeMulti::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoVolumeMulti::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoVolumeMulti!Class_Version", []()->Version_t { return TGeoVolumeMulti::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeMulti::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeMulti::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoVolumeMulti const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoVolumeMulti const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoVolumeMulti& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoVolumeMulti* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeMulti::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeMulti::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoVolumeMulti!DeclFileName", []() { return (std::string)TGeoVolumeMulti::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoVolumeMulti::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolumeMulti::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoVolumeMulti!ImplFileLine", []()->int { return TGeoVolumeMulti::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeMulti::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeMulti::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoVolumeMulti!ImplFileName", []() { return (std::string)TGeoVolumeMulti::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolumeMulti::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolumeMulti::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoVolumeMulti!Class_Name", []() { return (std::string)TGeoVolumeMulti::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeMulti::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeMulti::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoVolumeMulti!Dictionary", []()->TClass * { return TGeoVolumeMulti::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolumeMulti::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolumeMulti::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoVolumeMulti!Class", []()->TClass * { return TGeoVolumeMulti::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolumeMulti::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolumeMulti::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoVolumeMulti& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoVolumeMulti* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoVolumeMulti::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolumeMulti::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoVolumeMulti!DeclFileLine", []()->int { return TGeoVolumeMulti::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoVolumeMulti>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoVolumeMulti(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoVolumeMulti(module));
}
