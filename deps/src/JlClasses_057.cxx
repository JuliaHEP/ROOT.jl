// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPcon> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPcon> : std::false_type { };
template<> struct SuperType<TGeoPcon> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoPcon
// signature to use in the veto file: TGeoPcon
struct JlTGeoPcon: public Wrapper {

  JlTGeoPcon(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPcon (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:17:7
    jlcxx::TypeWrapper<TGeoPcon>  t = jlModule.add_type<TGeoPcon>("TGeoPcon",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPcon>>(new jlcxx::TypeWrapper<TGeoPcon>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPcon::TGeoPcon(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:45:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPcon::TGeoPcon(Double_t, Double_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:46:4
    t.constructor<Double_t, Double_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPcon::TGeoPcon(const char *, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:47:4
    t.constructor<const char *, Double_t, Double_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPcon::TGeoPcon(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:48:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:52:13
    t.method("Capacity", [](TGeoPcon const& a)->Double_t { return a.Capacity(); });
    t.method("Capacity", [](TGeoPcon const* a)->Double_t { return a->Capacity(); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:53:9
    t.method("ComputeBBox", [](TGeoPcon& a)->void { a.ComputeBBox(); });
    t.method("ComputeBBox", [](TGeoPcon* a)->void { a->ComputeBBox(); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:54:9
    t.method("ComputeNormal", [](TGeoPcon& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoPcon* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:55:9
    t.method("ComputeNormal_v", [](TGeoPcon& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); });
    t.method("ComputeNormal_v", [](TGeoPcon* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPcon::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPcon::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:56:11
    t.method("Contains", [](TGeoPcon const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoPcon const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:57:9
    t.method("Contains_v", [](TGeoPcon const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); });
    t.method("Contains_v", [](TGeoPcon const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::DefineSection(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::DefineSection(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:58:17
    t.method("DefineSection", [](TGeoPcon& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.DefineSection(arg0, arg1, arg2, arg3); });
    t.method("DefineSection", [](TGeoPcon* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->DefineSection(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:59:13
    t.method("DistFromInside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:61:9
    t.method("DistFromInside_v", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside_v", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:63:13
    t.method("DistFromOutside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:65:9
    t.method("DistFromOutside_v", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside_v", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::DistToSegZ(const Double_t *, const Double_t *, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::DistToSegZ(const Double_t *, const Double_t *, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:67:13
    t.method("DistToSegZ", [](TGeoPcon const& a, const Double_t * arg0, const Double_t * arg1, Int_t & arg2)->Double_t { return a.DistToSegZ(arg0, arg1, arg2); });
    t.method("DistToSegZ", [](TGeoPcon const* a, const Double_t * arg0, const Double_t * arg1, Int_t & arg2)->Double_t { return a->DistToSegZ(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPcon::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPcon::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:68:10
    t.method("DistancetoPrimitive", [](TGeoPcon& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TGeoPcon* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoPcon::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoPcon::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:70:4
    t.method("Divide", [](TGeoPcon& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoPcon* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPcon::GetAxisName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPcon::GetAxisName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:71:16
    t.method("GetAxisName", [](TGeoPcon const& a, Int_t arg0) { return (std::string)a.GetAxisName(arg0); });
    t.method("GetAxisName", [](TGeoPcon const* a, Int_t arg0) { return (std::string)a->GetAxisName(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:72:13
    t.method("GetAxisRange", [](TGeoPcon const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); });
    t.method("GetAxisRange", [](TGeoPcon const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:73:9
    t.method("GetBoundingCylinder", [](TGeoPcon const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); });
    t.method("GetBoundingCylinder", [](TGeoPcon const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPcon::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPcon::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:75:10
    t.method("GetByteCount", [](TGeoPcon const& a)->Int_t { return a.GetByteCount(); });
    t.method("GetByteCount", [](TGeoPcon const* a)->Int_t { return a->GetByteCount(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetPhi1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetPhi1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:76:13
    t.method("GetPhi1", [](TGeoPcon const& a)->Double_t { return a.GetPhi1(); });
    t.method("GetPhi1", [](TGeoPcon const* a)->Double_t { return a->GetPhi1(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetDphi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetDphi()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:77:13
    t.method("GetDphi", [](TGeoPcon const& a)->Double_t { return a.GetDphi(); });
    t.method("GetDphi", [](TGeoPcon const* a)->Double_t { return a->GetDphi(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPcon::GetNz() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPcon::GetNz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:78:10
    t.method("GetNz", [](TGeoPcon const& a)->Int_t { return a.GetNz(); });
    t.method("GetNz", [](TGeoPcon const* a)->Int_t { return a->GetNz(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPcon::GetNsegments() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPcon::GetNsegments()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:79:18
    t.method("GetNsegments", [](TGeoPcon const& a)->Int_t { return a.GetNsegments(); });
    t.method("GetNsegments", [](TGeoPcon const* a)->Int_t { return a->GetNsegments(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoPcon::GetRmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoPcon::GetRmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:80:14
    t.method("GetRmin", [](TGeoPcon const& a)->Double_t * { return a.GetRmin(); });
    t.method("GetRmin", [](TGeoPcon const* a)->Double_t * { return a->GetRmin(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetRmin(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetRmin(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:81:13
    t.method("GetRmin", [](TGeoPcon const& a, Int_t arg0)->Double_t { return a.GetRmin(arg0); });
    t.method("GetRmin", [](TGeoPcon const* a, Int_t arg0)->Double_t { return a->GetRmin(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoPcon::GetRmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoPcon::GetRmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:82:14
    t.method("GetRmax", [](TGeoPcon const& a)->Double_t * { return a.GetRmax(); });
    t.method("GetRmax", [](TGeoPcon const* a)->Double_t * { return a->GetRmax(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetRmax(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetRmax(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:83:13
    t.method("GetRmax", [](TGeoPcon const& a, Int_t arg0)->Double_t { return a.GetRmax(arg0); });
    t.method("GetRmax", [](TGeoPcon const* a, Int_t arg0)->Double_t { return a->GetRmax(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoPcon::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoPcon::GetZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:84:14
    t.method("GetZ", [](TGeoPcon const& a)->Double_t * { return a.GetZ(); });
    t.method("GetZ", [](TGeoPcon const* a)->Double_t * { return a->GetZ(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::GetZ(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::GetZ(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:85:13
    t.method("GetZ", [](TGeoPcon const& a, Int_t arg0)->Double_t { return a.GetZ(arg0); });
    t.method("GetZ", [](TGeoPcon const* a, Int_t arg0)->Double_t { return a->GetZ(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoPcon::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoPcon::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:86:15
    t.method("GetMakeRuntimeShape", [](TGeoPcon const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); });
    t.method("GetMakeRuntimeShape", [](TGeoPcon const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPcon::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPcon::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:87:10
    t.method("GetNmeshVertices", [](TGeoPcon const& a)->Int_t { return a.GetNmeshVertices(); });
    t.method("GetNmeshVertices", [](TGeoPcon const* a)->Int_t { return a->GetNmeshVertices(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPcon::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPcon::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:88:11
    t.method("GetPointsOnSegments", [](TGeoPcon const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); });
    t.method("GetPointsOnSegments", [](TGeoPcon const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:89:9
    t.method("GetMeshNumbers", [](TGeoPcon const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); });
    t.method("GetMeshNumbers", [](TGeoPcon const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:90:9
    t.method("InspectShape", [](TGeoPcon const& a)->void { a.InspectShape(); });
    t.method("InspectShape", [](TGeoPcon const* a)->void { a->InspectShape(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPcon::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPcon::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:91:11
    t.method("IsCylType", [](TGeoPcon const& a)->Bool_t { return a.IsCylType(); });
    t.method("IsCylType", [](TGeoPcon const* a)->Bool_t { return a->IsCylType(); });

    DEBUG_MSG("Adding wrapper for Double_t & TGeoPcon::Phi1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoPcon::Phi1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:93:14
    t.method("Phi1", [](TGeoPcon& a)->Double_t & { return a.Phi1(); });
    t.method("Phi1", [](TGeoPcon* a)->Double_t & { return a->Phi1(); });

    DEBUG_MSG("Adding wrapper for Double_t & TGeoPcon::Dphi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoPcon::Dphi()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:94:14
    t.method("Dphi", [](TGeoPcon& a)->Double_t & { return a.Dphi(); });
    t.method("Dphi", [](TGeoPcon* a)->Double_t & { return a->Dphi(); });

    DEBUG_MSG("Adding wrapper for Double_t & TGeoPcon::Rmin(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoPcon::Rmin(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:95:14
    t.method("Rmin", [](TGeoPcon& a, Int_t arg0)->Double_t & { return a.Rmin(arg0); });
    t.method("Rmin", [](TGeoPcon* a, Int_t arg0)->Double_t & { return a->Rmin(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t & TGeoPcon::Rmax(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoPcon::Rmax(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:96:14
    t.method("Rmax", [](TGeoPcon& a, Int_t arg0)->Double_t & { return a.Rmax(arg0); });
    t.method("Rmax", [](TGeoPcon* a, Int_t arg0)->Double_t & { return a->Rmax(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t & TGeoPcon::Z(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoPcon::Z(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:97:14
    t.method("Z", [](TGeoPcon& a, Int_t arg0)->Double_t & { return a.Z(arg0); });
    t.method("Z", [](TGeoPcon* a, Int_t arg0)->Double_t & { return a->Z(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:98:13
    t.method("Safety", [](TGeoPcon const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoPcon const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoPcon const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoPcon const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:99:9
    t.method("Safety_v", [](TGeoPcon const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); });
    t.method("Safety_v", [](TGeoPcon const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPcon::SafetyToSegment(const Double_t *, Int_t, Bool_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPcon::SafetyToSegment(const Double_t *, Int_t, Bool_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:101:4
    t.method("SafetyToSegment", [](TGeoPcon const& a, const Double_t * arg0, Int_t arg1)->Double_t { return a.SafetyToSegment(arg0, arg1); });
    t.method("SafetyToSegment", [](TGeoPcon const& a, const Double_t * arg0, Int_t arg1, Bool_t arg2)->Double_t { return a.SafetyToSegment(arg0, arg1, arg2); });
    t.method("SafetyToSegment", [](TGeoPcon const& a, const Double_t * arg0, Int_t arg1, Bool_t arg2, Double_t arg3)->Double_t { return a.SafetyToSegment(arg0, arg1, arg2, arg3); });
    t.method("SafetyToSegment", [](TGeoPcon const* a, const Double_t * arg0, Int_t arg1)->Double_t { return a->SafetyToSegment(arg0, arg1); });
    t.method("SafetyToSegment", [](TGeoPcon const* a, const Double_t * arg0, Int_t arg1, Bool_t arg2)->Double_t { return a->SafetyToSegment(arg0, arg1, arg2); });
    t.method("SafetyToSegment", [](TGeoPcon const* a, const Double_t * arg0, Int_t arg1, Bool_t arg2, Double_t arg3)->Double_t { return a->SafetyToSegment(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:103:9
    t.method("SetDimensions", [](TGeoPcon& a, Double_t * arg0)->void { a.SetDimensions(arg0); });
    t.method("SetDimensions", [](TGeoPcon* a, Double_t * arg0)->void { a->SetDimensions(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:104:9
    t.method("SetPoints", [](TGeoPcon const& a, Double_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoPcon const* a, Double_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:105:9
    t.method("SetPoints", [](TGeoPcon const& a, Float_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoPcon const* a, Float_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPcon.h:107:9
    t.method("Sizeof3D", [](TGeoPcon const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoPcon const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoPcon::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPcon::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoPcon!Class_Version", []()->Version_t { return TGeoPcon::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPcon::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPcon::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoPcon const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoPcon const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoPcon& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoPcon* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPcon::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPcon::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoPcon!DeclFileName", []() { return (std::string)TGeoPcon::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPcon::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPcon::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoPcon!ImplFileLine", []()->int { return TGeoPcon::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPcon::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPcon::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoPcon!ImplFileName", []() { return (std::string)TGeoPcon::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPcon::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPcon::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoPcon!Class_Name", []() { return (std::string)TGeoPcon::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPcon::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPcon::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoPcon!Dictionary", []()->TClass * { return TGeoPcon::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPcon::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPcon::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoPcon!Class", []()->TClass * { return TGeoPcon::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoPcon::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPcon::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoPcon& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoPcon* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoPcon::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPcon::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoPcon!DeclFileLine", []()->int { return TGeoPcon::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPcon>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPcon(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPcon(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPgon> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPgon> : std::false_type { };
template<> struct SuperType<TGeoPgon> { typedef TGeoPcon type; };
}

// Class generating the wrapper for type TGeoPgon
// signature to use in the veto file: TGeoPgon
struct JlTGeoPgon: public Wrapper {

  JlTGeoPgon(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPgon (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:20:7
    jlcxx::TypeWrapper<TGeoPgon>  t = jlModule.add_type<TGeoPgon>("TGeoPgon",
      jlcxx::julia_base_type<TGeoPcon>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPgon>>(new jlcxx::TypeWrapper<TGeoPgon>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoPgon::ThreadData_t & TGeoPgon::GetThreadData() (" __HERE__ ")");
    // signature to use in the veto list: TGeoPgon::ThreadData_t & TGeoPgon::GetThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:29:18
    t.method("GetThreadData", [](TGeoPgon const& a)->TGeoPgon::ThreadData_t & { return a.GetThreadData(); });
    t.method("GetThreadData", [](TGeoPgon const* a)->TGeoPgon::ThreadData_t & { return a->GetThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:30:9
    t.method("ClearThreadData", [](TGeoPgon const& a)->void { a.ClearThreadData(); });
    t.method("ClearThreadData", [](TGeoPgon const* a)->void { a->ClearThreadData(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:31:9
    t.method("CreateThreadData", [](TGeoPgon& a, Int_t arg0)->void { a.CreateThreadData(arg0); });
    t.method("CreateThreadData", [](TGeoPgon* a, Int_t arg0)->void { a->CreateThreadData(arg0); });


    DEBUG_MSG("Adding wrapper for void TGeoPgon::TGeoPgon(Double_t, Double_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:65:4
    t.constructor<Double_t, Double_t, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPgon::TGeoPgon(const char *, Double_t, Double_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:66:4
    t.constructor<const char *, Double_t, Double_t, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPgon::TGeoPgon(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:67:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TGeoPgon::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPgon::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:71:13
    t.method("Capacity", [](TGeoPgon const& a)->Double_t { return a.Capacity(); });
    t.method("Capacity", [](TGeoPgon const* a)->Double_t { return a->Capacity(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:72:9
    t.method("ComputeBBox", [](TGeoPgon& a)->void { a.ComputeBBox(); });
    t.method("ComputeBBox", [](TGeoPgon* a)->void { a->ComputeBBox(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:73:9
    t.method("ComputeNormal", [](TGeoPgon& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoPgon* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:74:9
    t.method("ComputeNormal_v", [](TGeoPgon& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); });
    t.method("ComputeNormal_v", [](TGeoPgon* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPgon::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPgon::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:75:11
    t.method("Contains", [](TGeoPgon const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoPgon const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:76:9
    t.method("Contains_v", [](TGeoPgon const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); });
    t.method("Contains_v", [](TGeoPgon const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPgon::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPgon::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:77:13
    t.method("DistFromInside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:79:9
    t.method("DistFromInside_v", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside_v", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPgon::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPgon::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:81:13
    t.method("DistFromOutside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:83:9
    t.method("DistFromOutside_v", [](TGeoPgon const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside_v", [](TGeoPgon const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPgon::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPgon::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:85:10
    t.method("DistancetoPrimitive", [](TGeoPgon& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TGeoPgon* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoPgon::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoPgon::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:87:4
    t.method("Divide", [](TGeoPgon& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoPgon* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:88:9
    t.method("GetBoundingCylinder", [](TGeoPgon const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); });
    t.method("GetBoundingCylinder", [](TGeoPgon const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPgon::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPgon::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:90:10
    t.method("GetByteCount", [](TGeoPgon const& a)->Int_t { return a.GetByteCount(); });
    t.method("GetByteCount", [](TGeoPgon const* a)->Int_t { return a->GetByteCount(); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoPgon::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoPgon::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:91:15
    t.method("GetMakeRuntimeShape", [](TGeoPgon const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); });
    t.method("GetMakeRuntimeShape", [](TGeoPgon const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:92:9
    t.method("GetMeshNumbers", [](TGeoPgon const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); });
    t.method("GetMeshNumbers", [](TGeoPgon const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPgon::GetNedges() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPgon::GetNedges()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:93:10
    t.method("GetNedges", [](TGeoPgon const& a)->Int_t { return a.GetNedges(); });
    t.method("GetNedges", [](TGeoPgon const* a)->Int_t { return a->GetNedges(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPgon::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPgon::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:94:10
    t.method("GetNmeshVertices", [](TGeoPgon const& a)->Int_t { return a.GetNmeshVertices(); });
    t.method("GetNmeshVertices", [](TGeoPgon const* a)->Int_t { return a->GetNmeshVertices(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPgon::GetNsegments() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPgon::GetNsegments()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:95:10
    t.method("GetNsegments", [](TGeoPgon const& a)->Int_t { return a.GetNsegments(); });
    t.method("GetNsegments", [](TGeoPgon const* a)->Int_t { return a->GetNsegments(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPgon::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPgon::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:96:11
    t.method("GetPointsOnSegments", [](TGeoPgon const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); });
    t.method("GetPointsOnSegments", [](TGeoPgon const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:100:9
    t.method("InspectShape", [](TGeoPgon const& a)->void { a.InspectShape(); });
    t.method("InspectShape", [](TGeoPgon const* a)->void { a->InspectShape(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPgon::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPgon::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:102:13
    t.method("Safety", [](TGeoPgon const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoPgon const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoPgon const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoPgon const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:103:9
    t.method("Safety_v", [](TGeoPgon const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); });
    t.method("Safety_v", [](TGeoPgon const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoPgon::SafetyToSegment(const Double_t *, Int_t, Int_t, Bool_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPgon::SafetyToSegment(const Double_t *, Int_t, Int_t, Bool_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:104:13
    t.method("SafetyToSegment", [](TGeoPgon const& a, const Double_t * arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t arg4)->Double_t { return a.SafetyToSegment(arg0, arg1, arg2, arg3, arg4); });
    t.method("SafetyToSegment", [](TGeoPgon const& a, const Double_t * arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t arg4, Double_t arg5)->Double_t { return a.SafetyToSegment(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SafetyToSegment", [](TGeoPgon const* a, const Double_t * arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t arg4)->Double_t { return a->SafetyToSegment(arg0, arg1, arg2, arg3, arg4); });
    t.method("SafetyToSegment", [](TGeoPgon const* a, const Double_t * arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t arg4, Double_t arg5)->Double_t { return a->SafetyToSegment(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:107:9
    t.method("SetDimensions", [](TGeoPgon& a, Double_t * arg0)->void { a.SetDimensions(arg0); });
    t.method("SetDimensions", [](TGeoPgon* a, Double_t * arg0)->void { a->SetDimensions(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::SetNedges(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::SetNedges(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:108:9
    t.method("SetNedges", [](TGeoPgon& a, Int_t arg0)->void { a.SetNedges(arg0); });
    t.method("SetNedges", [](TGeoPgon* a, Int_t arg0)->void { a->SetNedges(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:113:9
    t.method("SetPoints", [](TGeoPgon const& a, Double_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoPgon const* a, Double_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:114:9
    t.method("SetPoints", [](TGeoPgon const& a, Float_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoPgon const* a, Float_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:116:9
    t.method("Sizeof3D", [](TGeoPgon const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoPgon const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoPgon::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPgon::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoPgon!Class_Version", []()->Version_t { return TGeoPgon::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPgon::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPgon::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoPgon const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoPgon const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoPgon& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoPgon* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPgon::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPgon::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoPgon!DeclFileName", []() { return (std::string)TGeoPgon::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPgon::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPgon::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoPgon!ImplFileLine", []()->int { return TGeoPgon::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPgon::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPgon::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoPgon!ImplFileName", []() { return (std::string)TGeoPgon::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPgon::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPgon::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoPgon!Class_Name", []() { return (std::string)TGeoPgon::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPgon::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPgon::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoPgon!Dictionary", []()->TClass * { return TGeoPgon::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPgon::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPgon::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoPgon!Class", []()->TClass * { return TGeoPgon::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoPgon::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPgon::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoPgon& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoPgon* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoPgon::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPgon::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoPgon!DeclFileLine", []()->int { return TGeoPgon::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPgon>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPgon(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPgon(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPgon::ThreadData_t> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPgon::ThreadData_t> : std::false_type { };
}

// Class generating the wrapper for type TGeoPgon::ThreadData_t
// signature to use in the veto file: TGeoPgon::ThreadData_t
struct JlTGeoPgon_ThreadData_t: public Wrapper {

  JlTGeoPgon_ThreadData_t(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPgon::ThreadData_t (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:22:11
    jlcxx::TypeWrapper<TGeoPgon::ThreadData_t>  t = jlModule.add_type<TGeoPgon::ThreadData_t>("TGeoPgon!ThreadData_t");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPgon::ThreadData_t>>(new jlcxx::TypeWrapper<TGeoPgon::ThreadData_t>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding fIntBuffer methods  to provide read access to the field fIntBuffer (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:23:14
    // signature to use in the veto list: TGeoPgon::ThreadData_t::fIntBuffer
    t.method("fIntBuffer", [](const TGeoPgon::ThreadData_t& a) -> Int_t * { return a.fIntBuffer; });
    t.method("fIntBuffer", [](TGeoPgon::ThreadData_t& a) -> Int_t * { return a.fIntBuffer; });
    t.method("fIntBuffer", [](const TGeoPgon::ThreadData_t* a) -> Int_t * { return a->fIntBuffer; });
    t.method("fIntBuffer", [](TGeoPgon::ThreadData_t* a) -> Int_t * { return a->fIntBuffer; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:23:14
    // signature to use in the veto list: TGeoPgon::ThreadData_t::fIntBuffer
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fIntBuffer! methods to provide write access to the field fIntBuffer (" __HERE__ ")");
    t.method("fIntBuffer!", [](TGeoPgon::ThreadData_t& a, Int_t * val) -> Int_t * { return a.fIntBuffer = val; });

    DEBUG_MSG("Adding fIntBuffer! methods to provide write access to the field fIntBuffer (" __HERE__ ")");
    t.method("fIntBuffer!", [](TGeoPgon::ThreadData_t* a, Int_t * val) -> Int_t * { return a->fIntBuffer = val; });

    DEBUG_MSG("Adding fDblBuffer methods  to provide read access to the field fDblBuffer (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:24:17
    // signature to use in the veto list: TGeoPgon::ThreadData_t::fDblBuffer
    t.method("fDblBuffer", [](const TGeoPgon::ThreadData_t& a) -> Double_t * { return a.fDblBuffer; });
    t.method("fDblBuffer", [](TGeoPgon::ThreadData_t& a) -> Double_t * { return a.fDblBuffer; });
    t.method("fDblBuffer", [](const TGeoPgon::ThreadData_t* a) -> Double_t * { return a->fDblBuffer; });
    t.method("fDblBuffer", [](TGeoPgon::ThreadData_t* a) -> Double_t * { return a->fDblBuffer; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPgon.h:24:17
    // signature to use in the veto list: TGeoPgon::ThreadData_t::fDblBuffer
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDblBuffer! methods to provide write access to the field fDblBuffer (" __HERE__ ")");
    t.method("fDblBuffer!", [](TGeoPgon::ThreadData_t& a, Double_t * val) -> Double_t * { return a.fDblBuffer = val; });

    DEBUG_MSG("Adding fDblBuffer! methods to provide write access to the field fDblBuffer (" __HERE__ ")");
    t.method("fDblBuffer!", [](TGeoPgon::ThreadData_t* a, Double_t * val) -> Double_t * { return a->fDblBuffer = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPgon::ThreadData_t>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPgon_ThreadData_t(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPgon_ThreadData_t(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoRegionCut> : std::false_type { };
  template<> struct DefaultConstructible<TGeoRegionCut> : std::false_type { };
template<> struct SuperType<TGeoRegionCut> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoRegionCut
// signature to use in the veto file: TGeoRegionCut
struct JlTGeoRegionCut: public Wrapper {

  JlTGeoRegionCut(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoRegionCut (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:20:7
    jlcxx::TypeWrapper<TGeoRegionCut>  t = jlModule.add_type<TGeoRegionCut>("TGeoRegionCut",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoRegionCut>>(new jlcxx::TypeWrapper<TGeoRegionCut>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRegionCut::TGeoRegionCut(const char *, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:26:4
    t.constructor<const char *, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TGeoRegionCut::GetCut() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoRegionCut::GetCut()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:30:13
    t.method("GetCut", [](TGeoRegionCut const& a)->Double_t { return a.GetCut(); });
    t.method("GetCut", [](TGeoRegionCut const* a)->Double_t { return a->GetCut(); });

    DEBUG_MSG("Adding wrapper for void TGeoRegionCut::SetCut(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegionCut::SetCut(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:31:9
    t.method("SetCut", [](TGeoRegionCut& a, Double_t arg0)->void { a.SetCut(arg0); });
    t.method("SetCut", [](TGeoRegionCut* a, Double_t arg0)->void { a->SetCut(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoRegionCut::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoRegionCut::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoRegionCut!Class_Version", []()->Version_t { return TGeoRegionCut::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegionCut::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegionCut::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoRegionCut const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoRegionCut const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoRegionCut::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegionCut::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoRegionCut& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoRegionCut* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRegionCut::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegionCut::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoRegionCut!DeclFileName", []() { return (std::string)TGeoRegionCut::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoRegionCut::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegionCut::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoRegionCut!ImplFileLine", []()->int { return TGeoRegionCut::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRegionCut::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegionCut::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoRegionCut!ImplFileName", []() { return (std::string)TGeoRegionCut::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRegionCut::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegionCut::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoRegionCut!Class_Name", []() { return (std::string)TGeoRegionCut::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegionCut::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegionCut::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoRegionCut!Dictionary", []()->TClass * { return TGeoRegionCut::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegionCut::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegionCut::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoRegionCut!Class", []()->TClass * { return TGeoRegionCut::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoRegionCut::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegionCut::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoRegionCut& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoRegionCut* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoRegionCut::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegionCut::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoRegionCut!DeclFileLine", []()->int { return TGeoRegionCut::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoRegionCut>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoRegionCut(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoRegionCut(module));
}
