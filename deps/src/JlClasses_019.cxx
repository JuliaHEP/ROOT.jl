// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TArrayD> : std::false_type { };
  template<> struct DefaultConstructible<TArrayD> : std::false_type { };
template<> struct SuperType<TArrayD> { typedef TArray type; };
}

// Class generating the wrapper for type TArrayD
// signature to use in the veto file: TArrayD
struct JlTArrayD: public Wrapper {

  JlTArrayD(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TArrayD (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TArrayD.h:27:7
    jlcxx::TypeWrapper<TArrayD>  t = jlModule.add_type<TArrayD>("TArrayD",
      jlcxx::julia_base_type<TArray>());
    jlcxx::stl::apply_stl<TArrayD>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TArrayD>>(new jlcxx::TypeWrapper<TArrayD>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TArrayD>> type_;
};
std::shared_ptr<Wrapper> newJlTArrayD(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTArrayD(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TAxisModLab> : std::false_type { };
  template<> struct DefaultConstructible<TAxisModLab> : std::false_type { };
template<> struct SuperType<TAxisModLab> { typedef TObject type; };
}

// Class generating the wrapper for type TAxisModLab
// signature to use in the veto file: TAxisModLab
struct JlTAxisModLab: public Wrapper {

  JlTAxisModLab(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TAxisModLab (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:21:7
    jlcxx::TypeWrapper<TAxisModLab>  t = jlModule.add_type<TAxisModLab>("TAxisModLab",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TAxisModLab>>(new jlcxx::TypeWrapper<TAxisModLab>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetLabNum(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetLabNum(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:32:9
    t.method("SetLabNum", [](TAxisModLab& a)->void { a.SetLabNum(); });
    t.method("SetLabNum", [](TAxisModLab& a, Int_t arg0)->void { a.SetLabNum(arg0); });
    t.method("SetLabNum", [](TAxisModLab* a)->void { a->SetLabNum(); });
    t.method("SetLabNum", [](TAxisModLab* a, Int_t arg0)->void { a->SetLabNum(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetLabValue(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetLabValue(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:33:9
    t.method("SetLabValue", [](TAxisModLab& a)->void { a.SetLabValue(); });
    t.method("SetLabValue", [](TAxisModLab& a, Double_t arg0)->void { a.SetLabValue(arg0); });
    t.method("SetLabValue", [](TAxisModLab* a)->void { a->SetLabValue(); });
    t.method("SetLabValue", [](TAxisModLab* a, Double_t arg0)->void { a->SetLabValue(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetAngle(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetAngle(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:34:9
    t.method("SetAngle", [](TAxisModLab& a)->void { a.SetAngle(); });
    t.method("SetAngle", [](TAxisModLab& a, Double_t arg0)->void { a.SetAngle(arg0); });
    t.method("SetAngle", [](TAxisModLab* a)->void { a->SetAngle(); });
    t.method("SetAngle", [](TAxisModLab* a, Double_t arg0)->void { a->SetAngle(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetSize(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetSize(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:35:9
    t.method("SetSize", [](TAxisModLab& a)->void { a.SetSize(); });
    t.method("SetSize", [](TAxisModLab& a, Double_t arg0)->void { a.SetSize(arg0); });
    t.method("SetSize", [](TAxisModLab* a)->void { a->SetSize(); });
    t.method("SetSize", [](TAxisModLab* a, Double_t arg0)->void { a->SetSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetAlign(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetAlign(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:36:9
    t.method("SetAlign", [](TAxisModLab& a)->void { a.SetAlign(); });
    t.method("SetAlign", [](TAxisModLab& a, Int_t arg0)->void { a.SetAlign(arg0); });
    t.method("SetAlign", [](TAxisModLab* a)->void { a->SetAlign(); });
    t.method("SetAlign", [](TAxisModLab* a, Int_t arg0)->void { a->SetAlign(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetColor(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetColor(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:37:9
    t.method("SetColor", [](TAxisModLab& a)->void { a.SetColor(); });
    t.method("SetColor", [](TAxisModLab& a, Int_t arg0)->void { a.SetColor(arg0); });
    t.method("SetColor", [](TAxisModLab* a)->void { a->SetColor(); });
    t.method("SetColor", [](TAxisModLab* a, Int_t arg0)->void { a->SetColor(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetFont(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetFont(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:38:9
    t.method("SetFont", [](TAxisModLab& a)->void { a.SetFont(); });
    t.method("SetFont", [](TAxisModLab& a, Int_t arg0)->void { a.SetFont(arg0); });
    t.method("SetFont", [](TAxisModLab* a)->void { a->SetFont(); });
    t.method("SetFont", [](TAxisModLab* a, Int_t arg0)->void { a->SetFont(arg0); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::SetText(TString) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::SetText(TString)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:39:9
    t.method("SetText", [](TAxisModLab& a)->void { a.SetText(); });
    t.method("SetText", [](TAxisModLab& a, TString arg0)->void { a.SetText(arg0); });
    t.method("SetText", [](TAxisModLab* a)->void { a->SetText(); });
    t.method("SetText", [](TAxisModLab* a, TString arg0)->void { a->SetText(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TAxisModLab::GetLabNum() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxisModLab::GetLabNum()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:41:10
    t.method("GetLabNum", [](TAxisModLab const& a)->Int_t { return a.GetLabNum(); });
    t.method("GetLabNum", [](TAxisModLab const* a)->Int_t { return a->GetLabNum(); });

    DEBUG_MSG("Adding wrapper for Double_t TAxisModLab::GetLabValue() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxisModLab::GetLabValue()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:42:13
    t.method("GetLabValue", [](TAxisModLab const& a)->Double_t { return a.GetLabValue(); });
    t.method("GetLabValue", [](TAxisModLab const* a)->Double_t { return a->GetLabValue(); });

    DEBUG_MSG("Adding wrapper for Double_t TAxisModLab::GetAngle() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxisModLab::GetAngle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:43:13
    t.method("GetAngle", [](TAxisModLab const& a)->Double_t { return a.GetAngle(); });
    t.method("GetAngle", [](TAxisModLab const* a)->Double_t { return a->GetAngle(); });

    DEBUG_MSG("Adding wrapper for Double_t TAxisModLab::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxisModLab::GetSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:44:13
    t.method("GetSize", [](TAxisModLab const& a)->Double_t { return a.GetSize(); });
    t.method("GetSize", [](TAxisModLab const* a)->Double_t { return a->GetSize(); });

    DEBUG_MSG("Adding wrapper for Int_t TAxisModLab::GetAlign() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxisModLab::GetAlign()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:45:10
    t.method("GetAlign", [](TAxisModLab const& a)->Int_t { return a.GetAlign(); });
    t.method("GetAlign", [](TAxisModLab const* a)->Int_t { return a->GetAlign(); });

    DEBUG_MSG("Adding wrapper for Int_t TAxisModLab::GetColor() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxisModLab::GetColor()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:46:10
    t.method("GetColor", [](TAxisModLab const& a)->Int_t { return a.GetColor(); });
    t.method("GetColor", [](TAxisModLab const* a)->Int_t { return a->GetColor(); });

    DEBUG_MSG("Adding wrapper for Int_t TAxisModLab::GetFont() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxisModLab::GetFont()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:47:10
    t.method("GetFont", [](TAxisModLab const& a)->Int_t { return a.GetFont(); });
    t.method("GetFont", [](TAxisModLab const* a)->Int_t { return a->GetFont(); });

    DEBUG_MSG("Adding wrapper for const TString & TAxisModLab::GetText() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TAxisModLab::GetText()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:48:19
    t.method("GetText", [](TAxisModLab const& a)->const TString & { return a.GetText(); });
    t.method("GetText", [](TAxisModLab const* a)->const TString & { return a->GetText(); });

    DEBUG_MSG("Adding wrapper for Version_t TAxisModLab::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TAxisModLab::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!Class_Version", []()->Version_t { return TAxisModLab::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxisModLab::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxisModLab::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    t.method("IsA", [](TAxisModLab const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TAxisModLab const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    t.method("StreamerNVirtual", [](TAxisModLab& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TAxisModLab* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TAxisModLab::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxisModLab::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!DeclFileName", []() { return (std::string)TAxisModLab::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TAxisModLab::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TAxisModLab::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!ImplFileLine", []()->int { return TAxisModLab::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TAxisModLab::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxisModLab::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!ImplFileName", []() { return (std::string)TAxisModLab::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TAxisModLab::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxisModLab::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!Class_Name", []() { return (std::string)TAxisModLab::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxisModLab::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxisModLab::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!Dictionary", []()->TClass * { return TAxisModLab::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxisModLab::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxisModLab::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!Class", []()->TClass * { return TAxisModLab::Class(); });

    DEBUG_MSG("Adding wrapper for void TAxisModLab::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxisModLab::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    t.method("Streamer", [](TAxisModLab& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TAxisModLab* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TAxisModLab::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TAxisModLab::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TAxisModLab.h:50:4
    module_.method("TAxisModLab!DeclFileLine", []()->int { return TAxisModLab::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TAxisModLab>> type_;
};
std::shared_ptr<Wrapper> newJlTAxisModLab(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTAxisModLab(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualFitter> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualFitter> : std::false_type { };
template<> struct SuperType<TVirtualFitter> { typedef TNamed type; };
}

// Class generating the wrapper for type TVirtualFitter
// signature to use in the veto file: TVirtualFitter
struct JlTVirtualFitter: public Wrapper {

  JlTVirtualFitter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualFitter (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:29:7
    jlcxx::TypeWrapper<TVirtualFitter>  t = jlModule.add_type<TVirtualFitter>("TVirtualFitter",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualFitter>>(new jlcxx::TypeWrapper<TVirtualFitter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::Chisquare(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::Chisquare(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:61:22
    t.method("Chisquare", [](TVirtualFitter const& a, Int_t arg0, Double_t * arg1)->Double_t { return a.Chisquare(arg0, arg1); });
    t.method("Chisquare", [](TVirtualFitter const* a, Int_t arg0, Double_t * arg1)->Double_t { return a->Chisquare(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:63:14
    t.method("Clear", [](TVirtualFitter& a)->void { a.Clear(); });
    t.method("Clear", [](TVirtualFitter& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TVirtualFitter* a)->void { a->Clear(); });
    t.method("Clear", [](TVirtualFitter* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::ExecuteCommand(const char *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::ExecuteCommand(const char *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:64:22
    t.method("ExecuteCommand", [](TVirtualFitter& a, const char * arg0, Double_t * arg1, Int_t arg2)->Int_t { return a.ExecuteCommand(arg0, arg1, arg2); });
    t.method("ExecuteCommand", [](TVirtualFitter* a, const char * arg0, Double_t * arg1, Int_t arg2)->Int_t { return a->ExecuteCommand(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::FixParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::FixParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:65:22
    t.method("FixParameter", [](TVirtualFitter& a, Int_t arg0)->void { a.FixParameter(arg0); });
    t.method("FixParameter", [](TVirtualFitter* a, Int_t arg0)->void { a->FixParameter(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::GetConfidenceIntervals(Int_t, Int_t, const Double_t *, Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::GetConfidenceIntervals(Int_t, Int_t, const Double_t *, Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:66:22
    t.method("GetConfidenceIntervals", [](TVirtualFitter& a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3)->void { a.GetConfidenceIntervals(arg0, arg1, arg2, arg3); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter& a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3, Double_t arg4)->void { a.GetConfidenceIntervals(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter* a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3)->void { a->GetConfidenceIntervals(arg0, arg1, arg2, arg3); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter* a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3, Double_t arg4)->void { a->GetConfidenceIntervals(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::GetConfidenceIntervals(TObject *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::GetConfidenceIntervals(TObject *, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:67:22
    t.method("GetConfidenceIntervals", [](TVirtualFitter& a, TObject * arg0)->void { a.GetConfidenceIntervals(arg0); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter& a, TObject * arg0, Double_t arg1)->void { a.GetConfidenceIntervals(arg0, arg1); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter* a, TObject * arg0)->void { a->GetConfidenceIntervals(arg0); });
    t.method("GetConfidenceIntervals", [](TVirtualFitter* a, TObject * arg0, Double_t arg1)->void { a->GetConfidenceIntervals(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t * TVirtualFitter::GetCovarianceMatrix() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TVirtualFitter::GetCovarianceMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:68:22
    t.method("GetCovarianceMatrix", [](TVirtualFitter const& a)->Double_t * { return a.GetCovarianceMatrix(); });
    t.method("GetCovarianceMatrix", [](TVirtualFitter const* a)->Double_t * { return a->GetCovarianceMatrix(); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetCovarianceMatrixElement(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetCovarianceMatrixElement(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:69:22
    t.method("GetCovarianceMatrixElement", [](TVirtualFitter const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetCovarianceMatrixElement(arg0, arg1); });
    t.method("GetCovarianceMatrixElement", [](TVirtualFitter const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetCovarianceMatrixElement(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetErrors(Int_t, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetErrors(Int_t, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:70:22
    t.method("GetErrors", [](TVirtualFitter const& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetErrors(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetErrors", [](TVirtualFitter const* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetErrors(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Foption_t TVirtualFitter::GetFitOption() (" __HERE__ ")");
    // signature to use in the veto list: Foption_t TVirtualFitter::GetFitOption()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:73:22
    t.method("GetFitOption", [](TVirtualFitter const& a)->Foption_t { return a.GetFitOption(); });
    t.method("GetFitOption", [](TVirtualFitter const* a)->Foption_t { return a->GetFitOption(); });

    DEBUG_MSG("Adding wrapper for TMethodCall * TVirtualFitter::GetMethodCall() (" __HERE__ ")");
    // signature to use in the veto list: TMethodCall * TVirtualFitter::GetMethodCall()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:74:22
    t.method("GetMethodCall", [](TVirtualFitter const& a)->TMethodCall * { return a.GetMethodCall(); });
    t.method("GetMethodCall", [](TVirtualFitter const* a)->TMethodCall * { return a->GetMethodCall(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetNumberTotalParameters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetNumberTotalParameters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:75:22
    t.method("GetNumberTotalParameters", [](TVirtualFitter const& a)->Int_t { return a.GetNumberTotalParameters(); });
    t.method("GetNumberTotalParameters", [](TVirtualFitter const* a)->Int_t { return a->GetNumberTotalParameters(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetNumberFreeParameters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetNumberFreeParameters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:76:22
    t.method("GetNumberFreeParameters", [](TVirtualFitter const& a)->Int_t { return a.GetNumberFreeParameters(); });
    t.method("GetNumberFreeParameters", [](TVirtualFitter const* a)->Int_t { return a->GetNumberFreeParameters(); });

    DEBUG_MSG("Adding wrapper for TObject * TVirtualFitter::GetObjectFit() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TVirtualFitter::GetObjectFit()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:77:22
    t.method("GetObjectFit", [](TVirtualFitter const& a)->TObject * { return a.GetObjectFit(); });
    t.method("GetObjectFit", [](TVirtualFitter const* a)->TObject * { return a->GetObjectFit(); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetParError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetParError(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:78:22
    t.method("GetParError", [](TVirtualFitter const& a, Int_t arg0)->Double_t { return a.GetParError(arg0); });
    t.method("GetParError", [](TVirtualFitter const* a, Int_t arg0)->Double_t { return a->GetParError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:79:22
    t.method("GetParameter", [](TVirtualFitter const& a, Int_t arg0)->Double_t { return a.GetParameter(arg0); });
    t.method("GetParameter", [](TVirtualFitter const* a, Int_t arg0)->Double_t { return a->GetParameter(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetParameter(Int_t, char *, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetParameter(Int_t, char *, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:80:22
    t.method("GetParameter", [](TVirtualFitter const& a, Int_t arg0, char * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->Int_t { return a.GetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("GetParameter", [](TVirtualFitter const* a, Int_t arg0, char * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->Int_t { return a->GetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualFitter::GetParName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualFitter::GetParName(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:81:24
    t.method("GetParName", [](TVirtualFitter const& a, Int_t arg0) { return (std::string)a.GetParName(arg0); });
    t.method("GetParName", [](TVirtualFitter const* a, Int_t arg0) { return (std::string)a->GetParName(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetStats(Double_t &, Double_t &, Double_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetStats(Double_t &, Double_t &, Double_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:82:22
    t.method("GetStats", [](TVirtualFitter const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Int_t & arg4)->Int_t { return a.GetStats(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetStats", [](TVirtualFitter const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Int_t & arg4)->Int_t { return a->GetStats(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetSumLog(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetSumLog(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:83:22
    t.method("GetSumLog", [](TVirtualFitter& a, Int_t arg0)->Double_t { return a.GetSumLog(arg0); });
    t.method("GetSumLog", [](TVirtualFitter* a, Int_t arg0)->Double_t { return a->GetSumLog(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TVirtualFitter::GetUserFunc() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TVirtualFitter::GetUserFunc()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:84:22
    t.method("GetUserFunc", [](TVirtualFitter const& a)->TObject * { return a.GetUserFunc(); });
    t.method("GetUserFunc", [](TVirtualFitter const* a)->TObject * { return a->GetUserFunc(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetXfirst() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetXfirst()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:85:22
    t.method("GetXfirst", [](TVirtualFitter const& a)->Int_t { return a.GetXfirst(); });
    t.method("GetXfirst", [](TVirtualFitter const* a)->Int_t { return a->GetXfirst(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetXlast() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetXlast()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:86:22
    t.method("GetXlast", [](TVirtualFitter const& a)->Int_t { return a.GetXlast(); });
    t.method("GetXlast", [](TVirtualFitter const* a)->Int_t { return a->GetXlast(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetYfirst() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetYfirst()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:87:22
    t.method("GetYfirst", [](TVirtualFitter const& a)->Int_t { return a.GetYfirst(); });
    t.method("GetYfirst", [](TVirtualFitter const* a)->Int_t { return a->GetYfirst(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetYlast() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetYlast()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:88:22
    t.method("GetYlast", [](TVirtualFitter const& a)->Int_t { return a.GetYlast(); });
    t.method("GetYlast", [](TVirtualFitter const* a)->Int_t { return a->GetYlast(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetZfirst() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetZfirst()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:89:22
    t.method("GetZfirst", [](TVirtualFitter const& a)->Int_t { return a.GetZfirst(); });
    t.method("GetZfirst", [](TVirtualFitter const* a)->Int_t { return a->GetZfirst(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetZlast() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetZlast()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:90:22
    t.method("GetZlast", [](TVirtualFitter const& a)->Int_t { return a.GetZlast(); });
    t.method("GetZlast", [](TVirtualFitter const* a)->Int_t { return a->GetZlast(); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualFitter::IsFixed(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualFitter::IsFixed(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:91:22
    t.method("IsFixed", [](TVirtualFitter const& a, Int_t arg0)->Bool_t { return a.IsFixed(arg0); });
    t.method("IsFixed", [](TVirtualFitter const* a, Int_t arg0)->Bool_t { return a->IsFixed(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::PrintResults(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::PrintResults(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:92:22
    t.method("PrintResults", [](TVirtualFitter const& a, Int_t arg0, Double_t arg1)->void { a.PrintResults(arg0, arg1); });
    t.method("PrintResults", [](TVirtualFitter const* a, Int_t arg0, Double_t arg1)->void { a->PrintResults(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::ReleaseParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::ReleaseParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:93:22
    t.method("ReleaseParameter", [](TVirtualFitter& a, Int_t arg0)->void { a.ReleaseParameter(arg0); });
    t.method("ReleaseParameter", [](TVirtualFitter* a, Int_t arg0)->void { a->ReleaseParameter(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TVirtualFitter::SetCache(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TVirtualFitter::SetCache(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:94:22
    t.method("SetCache", [](TVirtualFitter& a, Int_t arg0, Int_t arg1)->Double_t * { return a.SetCache(arg0, arg1); });
    t.method("SetCache", [](TVirtualFitter* a, Int_t arg0, Int_t arg1)->Double_t * { return a->SetCache(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetFCN(void (*)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t)) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetFCN(void (*)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:95:22
    t.method("SetFCN", [](TVirtualFitter& a, void (*arg0)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))->void { a.SetFCN(arg0); });
    t.method("SetFCN", [](TVirtualFitter* a, void (*arg0)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))->void { a->SetFCN(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetFitMethod(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetFitMethod(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:96:22
    t.method("SetFitMethod", [](TVirtualFitter& a, const char * arg0)->void { a.SetFitMethod(arg0); });
    t.method("SetFitMethod", [](TVirtualFitter* a, const char * arg0)->void { a->SetFitMethod(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetFitOption(Foption_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetFitOption(Foption_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:97:22
    t.method("SetFitOption", [](TVirtualFitter& a, Foption_t arg0)->void { a.SetFitOption(arg0); });
    t.method("SetFitOption", [](TVirtualFitter* a, Foption_t arg0)->void { a->SetFitOption(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetObjectFit(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetObjectFit(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:98:22
    t.method("SetObjectFit", [](TVirtualFitter& a, TObject * arg0)->void { a.SetObjectFit(arg0); });
    t.method("SetObjectFit", [](TVirtualFitter* a, TObject * arg0)->void { a->SetObjectFit(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::SetParameter(Int_t, const char *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::SetParameter(Int_t, const char *, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:99:22
    t.method("SetParameter", [](TVirtualFitter& a, Int_t arg0, const char * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->Int_t { return a.SetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetParameter", [](TVirtualFitter* a, Int_t arg0, const char * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->Int_t { return a->SetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetUserFunc(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetUserFunc(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:100:22
    t.method("SetUserFunc", [](TVirtualFitter& a, TObject * arg0)->void { a.SetUserFunc(arg0); });
    t.method("SetUserFunc", [](TVirtualFitter* a, TObject * arg0)->void { a->SetUserFunc(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetXfirst(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetXfirst(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:101:22
    t.method("SetXfirst", [](TVirtualFitter& a, Int_t arg0)->void { a.SetXfirst(arg0); });
    t.method("SetXfirst", [](TVirtualFitter* a, Int_t arg0)->void { a->SetXfirst(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetXlast(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetXlast(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:102:22
    t.method("SetXlast", [](TVirtualFitter& a, Int_t arg0)->void { a.SetXlast(arg0); });
    t.method("SetXlast", [](TVirtualFitter* a, Int_t arg0)->void { a->SetXlast(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetYfirst(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetYfirst(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:103:22
    t.method("SetYfirst", [](TVirtualFitter& a, Int_t arg0)->void { a.SetYfirst(arg0); });
    t.method("SetYfirst", [](TVirtualFitter* a, Int_t arg0)->void { a->SetYfirst(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetYlast(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetYlast(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:104:22
    t.method("SetYlast", [](TVirtualFitter& a, Int_t arg0)->void { a.SetYlast(arg0); });
    t.method("SetYlast", [](TVirtualFitter* a, Int_t arg0)->void { a->SetYlast(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetZfirst(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetZfirst(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:105:22
    t.method("SetZfirst", [](TVirtualFitter& a, Int_t arg0)->void { a.SetZfirst(arg0); });
    t.method("SetZfirst", [](TVirtualFitter* a, Int_t arg0)->void { a->SetZfirst(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetZlast(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetZlast(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:106:22
    t.method("SetZlast", [](TVirtualFitter& a, Int_t arg0)->void { a.SetZlast(arg0); });
    t.method("SetZlast", [](TVirtualFitter* a, Int_t arg0)->void { a->SetZlast(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualFitter * TVirtualFitter::GetFitter() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualFitter * TVirtualFitter::GetFitter()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:108:28
    module_.method("TVirtualFitter!GetFitter", []()->TVirtualFitter * { return TVirtualFitter::GetFitter(); });

    DEBUG_MSG("Adding wrapper for TVirtualFitter * TVirtualFitter::Fitter(TObject *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualFitter * TVirtualFitter::Fitter(TObject *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:109:28
    module_.method("TVirtualFitter!Fitter", [](TObject * arg0)->TVirtualFitter * { return TVirtualFitter::Fitter(arg0); });
    module_.method("TVirtualFitter!Fitter", [](TObject * arg0, Int_t arg1)->TVirtualFitter * { return TVirtualFitter::Fitter(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualFitter::GetDefaultFitter() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualFitter::GetDefaultFitter()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:110:23
    module_.method("TVirtualFitter!GetDefaultFitter", []() { return (std::string)TVirtualFitter::GetDefaultFitter(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualFitter::GetMaxIterations() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualFitter::GetMaxIterations()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:111:21
    module_.method("TVirtualFitter!GetMaxIterations", []()->Int_t { return TVirtualFitter::GetMaxIterations(); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetErrorDef() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetErrorDef()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:112:21
    module_.method("TVirtualFitter!GetErrorDef", []()->Double_t { return TVirtualFitter::GetErrorDef(); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualFitter::GetPrecision() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualFitter::GetPrecision()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:113:21
    module_.method("TVirtualFitter!GetPrecision", []()->Double_t { return TVirtualFitter::GetPrecision(); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetDefaultFitter(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetDefaultFitter(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:114:21
    module_.method("TVirtualFitter!SetDefaultFitter", []()->void { TVirtualFitter::SetDefaultFitter(); });
    module_.method("TVirtualFitter!SetDefaultFitter", [](const char * arg0)->void { TVirtualFitter::SetDefaultFitter(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetFitter(TVirtualFitter *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetFitter(TVirtualFitter *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:115:21
    module_.method("TVirtualFitter!SetFitter", [](TVirtualFitter * arg0)->void { TVirtualFitter::SetFitter(arg0); });
    module_.method("TVirtualFitter!SetFitter", [](TVirtualFitter * arg0, Int_t arg1)->void { TVirtualFitter::SetFitter(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetMaxIterations(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetMaxIterations(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:116:21
    module_.method("TVirtualFitter!SetMaxIterations", []()->void { TVirtualFitter::SetMaxIterations(); });
    module_.method("TVirtualFitter!SetMaxIterations", [](Int_t arg0)->void { TVirtualFitter::SetMaxIterations(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetErrorDef(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetErrorDef(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:117:21
    module_.method("TVirtualFitter!SetErrorDef", []()->void { TVirtualFitter::SetErrorDef(); });
    module_.method("TVirtualFitter!SetErrorDef", [](Double_t arg0)->void { TVirtualFitter::SetErrorDef(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::SetPrecision(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::SetPrecision(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:118:21
    module_.method("TVirtualFitter!SetPrecision", []()->void { TVirtualFitter::SetPrecision(); });
    module_.method("TVirtualFitter!SetPrecision", [](Double_t arg0)->void { TVirtualFitter::SetPrecision(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TVirtualFitter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TVirtualFitter::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!Class_Version", []()->Version_t { return TVirtualFitter::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualFitter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualFitter::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    t.method("IsA", [](TVirtualFitter const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TVirtualFitter const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    t.method("StreamerNVirtual", [](TVirtualFitter& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TVirtualFitter* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualFitter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualFitter::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!DeclFileName", []() { return (std::string)TVirtualFitter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TVirtualFitter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualFitter::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!ImplFileLine", []()->int { return TVirtualFitter::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualFitter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualFitter::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!ImplFileName", []() { return (std::string)TVirtualFitter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualFitter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualFitter::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!Class_Name", []() { return (std::string)TVirtualFitter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualFitter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualFitter::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!Dictionary", []()->TClass * { return TVirtualFitter::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualFitter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualFitter::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!Class", []()->TClass * { return TVirtualFitter::Class(); });

    DEBUG_MSG("Adding wrapper for void TVirtualFitter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualFitter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    t.method("Streamer", [](TVirtualFitter& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TVirtualFitter* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TVirtualFitter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualFitter::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualFitter.h:120:4
    module_.method("TVirtualFitter!DeclFileLine", []()->int { return TVirtualFitter::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualFitter>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualFitter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualFitter(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TMethodCall> : std::false_type { };
  template<> struct DefaultConstructible<TMethodCall> : std::false_type { };
template<> struct SuperType<TMethodCall> { typedef TObject type; };
}

// Class generating the wrapper for type TMethodCall
// signature to use in the veto file: TMethodCall
struct JlTMethodCall: public Wrapper {

  JlTMethodCall(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TMethodCall (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TMethodCall.h:37:7
    jlcxx::TypeWrapper<TMethodCall>  t = jlModule.add_type<TMethodCall>("TMethodCall",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TMethodCall>>(new jlcxx::TypeWrapper<TMethodCall>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TMethodCall>> type_;
};
std::shared_ptr<Wrapper> newJlTMethodCall(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTMethodCall(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TBackCompFitter> : std::false_type { };
  template<> struct DefaultConstructible<TBackCompFitter> : std::false_type { };
template<> struct SuperType<TBackCompFitter> { typedef TVirtualFitter type; };
}

// Class generating the wrapper for type TBackCompFitter
// signature to use in the veto file: TBackCompFitter
struct JlTBackCompFitter: public Wrapper {

  JlTBackCompFitter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TBackCompFitter (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:37:7
    jlcxx::TypeWrapper<TBackCompFitter>  t = jlModule.add_type<TBackCompFitter>("TBackCompFitter",
      jlcxx::julia_base_type<TVirtualFitter>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TBackCompFitter>>(new jlcxx::TypeWrapper<TBackCompFitter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TBackCompFitter::TBackCompFitter(const std::shared_ptr<ROOT::Fit::Fitter> &, const std::shared_ptr<ROOT::Fit::FitData> &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:46:4
    t.constructor<const std::shared_ptr<ROOT::Fit::Fitter> &, const std::shared_ptr<ROOT::Fit::FitData> &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TBackCompFitter::Chisquare(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TBackCompFitter::Chisquare(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:57:14
    t.method("Chisquare", [](TBackCompFitter const& a, Int_t arg0, Double_t * arg1)->Double_t { return a.Chisquare(arg0, arg1); });
    t.method("Chisquare", [](TBackCompFitter const* a, Int_t arg0, Double_t * arg1)->Double_t { return a->Chisquare(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:58:14
    t.method("Clear", [](TBackCompFitter& a)->void { a.Clear(); });
    t.method("Clear", [](TBackCompFitter& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TBackCompFitter* a)->void { a->Clear(); });
    t.method("Clear", [](TBackCompFitter* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::ExecuteCommand(const char *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::ExecuteCommand(const char *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:59:14
    t.method("ExecuteCommand", [](TBackCompFitter& a, const char * arg0, Double_t * arg1, Int_t arg2)->Int_t { return a.ExecuteCommand(arg0, arg1, arg2); });
    t.method("ExecuteCommand", [](TBackCompFitter* a, const char * arg0, Double_t * arg1, Int_t arg2)->Int_t { return a->ExecuteCommand(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::FixParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::FixParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:60:14
    t.method("FixParameter", [](TBackCompFitter& a, Int_t arg0)->void { a.FixParameter(arg0); });
    t.method("FixParameter", [](TBackCompFitter* a, Int_t arg0)->void { a->FixParameter(arg0); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::GetConfidenceIntervals(Int_t, Int_t, const Double_t *, Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::GetConfidenceIntervals(Int_t, Int_t, const Double_t *, Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:62:14
    t.method("GetConfidenceIntervals", [](TBackCompFitter& a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3)->void { a.GetConfidenceIntervals(arg0, arg1, arg2, arg3); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter& a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3, Double_t arg4)->void { a.GetConfidenceIntervals(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter* a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3)->void { a->GetConfidenceIntervals(arg0, arg1, arg2, arg3); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter* a, Int_t arg0, Int_t arg1, const Double_t * arg2, Double_t * arg3, Double_t arg4)->void { a->GetConfidenceIntervals(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::GetConfidenceIntervals(TObject *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::GetConfidenceIntervals(TObject *, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:63:14
    t.method("GetConfidenceIntervals", [](TBackCompFitter& a, TObject * arg0)->void { a.GetConfidenceIntervals(arg0); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter& a, TObject * arg0, Double_t arg1)->void { a.GetConfidenceIntervals(arg0, arg1); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter* a, TObject * arg0)->void { a->GetConfidenceIntervals(arg0); });
    t.method("GetConfidenceIntervals", [](TBackCompFitter* a, TObject * arg0, Double_t arg1)->void { a->GetConfidenceIntervals(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t * TBackCompFitter::GetCovarianceMatrix() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TBackCompFitter::GetCovarianceMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:65:14
    t.method("GetCovarianceMatrix", [](TBackCompFitter const& a)->Double_t * { return a.GetCovarianceMatrix(); });
    t.method("GetCovarianceMatrix", [](TBackCompFitter const* a)->Double_t * { return a->GetCovarianceMatrix(); });

    DEBUG_MSG("Adding wrapper for Double_t TBackCompFitter::GetCovarianceMatrixElement(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TBackCompFitter::GetCovarianceMatrixElement(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:66:14
    t.method("GetCovarianceMatrixElement", [](TBackCompFitter const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetCovarianceMatrixElement(arg0, arg1); });
    t.method("GetCovarianceMatrixElement", [](TBackCompFitter const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetCovarianceMatrixElement(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::GetErrors(Int_t, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::GetErrors(Int_t, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:67:14
    t.method("GetErrors", [](TBackCompFitter const& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetErrors(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetErrors", [](TBackCompFitter const* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetErrors(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::GetNumberTotalParameters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::GetNumberTotalParameters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:68:14
    t.method("GetNumberTotalParameters", [](TBackCompFitter const& a)->Int_t { return a.GetNumberTotalParameters(); });
    t.method("GetNumberTotalParameters", [](TBackCompFitter const* a)->Int_t { return a->GetNumberTotalParameters(); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::GetNumberFreeParameters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::GetNumberFreeParameters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:69:14
    t.method("GetNumberFreeParameters", [](TBackCompFitter const& a)->Int_t { return a.GetNumberFreeParameters(); });
    t.method("GetNumberFreeParameters", [](TBackCompFitter const* a)->Int_t { return a->GetNumberFreeParameters(); });

    DEBUG_MSG("Adding wrapper for Double_t TBackCompFitter::GetParError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TBackCompFitter::GetParError(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:71:14
    t.method("GetParError", [](TBackCompFitter const& a, Int_t arg0)->Double_t { return a.GetParError(arg0); });
    t.method("GetParError", [](TBackCompFitter const* a, Int_t arg0)->Double_t { return a->GetParError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TBackCompFitter::GetParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TBackCompFitter::GetParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:72:14
    t.method("GetParameter", [](TBackCompFitter const& a, Int_t arg0)->Double_t { return a.GetParameter(arg0); });
    t.method("GetParameter", [](TBackCompFitter const* a, Int_t arg0)->Double_t { return a->GetParameter(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::GetParameter(Int_t, char *, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::GetParameter(Int_t, char *, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:73:14
    t.method("GetParameter", [](TBackCompFitter const& a, Int_t arg0, char * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->Int_t { return a.GetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("GetParameter", [](TBackCompFitter const* a, Int_t arg0, char * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->Int_t { return a->GetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for const char * TBackCompFitter::GetParName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TBackCompFitter::GetParName(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:74:16
    t.method("GetParName", [](TBackCompFitter const& a, Int_t arg0) { return (std::string)a.GetParName(arg0); });
    t.method("GetParName", [](TBackCompFitter const* a, Int_t arg0) { return (std::string)a->GetParName(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::GetStats(Double_t &, Double_t &, Double_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::GetStats(Double_t &, Double_t &, Double_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:75:14
    t.method("GetStats", [](TBackCompFitter const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Int_t & arg4)->Int_t { return a.GetStats(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetStats", [](TBackCompFitter const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Int_t & arg4)->Int_t { return a->GetStats(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TBackCompFitter::GetSumLog(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TBackCompFitter::GetSumLog(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:76:14
    t.method("GetSumLog", [](TBackCompFitter& a, Int_t arg0)->Double_t { return a.GetSumLog(arg0); });
    t.method("GetSumLog", [](TBackCompFitter* a, Int_t arg0)->Double_t { return a->GetSumLog(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TBackCompFitter::IsFixed(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TBackCompFitter::IsFixed(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:78:14
    t.method("IsFixed", [](TBackCompFitter const& a, Int_t arg0)->Bool_t { return a.IsFixed(arg0); });
    t.method("IsFixed", [](TBackCompFitter const* a, Int_t arg0)->Bool_t { return a->IsFixed(arg0); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::PrintResults(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::PrintResults(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:80:14
    t.method("PrintResults", [](TBackCompFitter const& a, Int_t arg0, Double_t arg1)->void { a.PrintResults(arg0, arg1); });
    t.method("PrintResults", [](TBackCompFitter const* a, Int_t arg0, Double_t arg1)->void { a->PrintResults(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::ReleaseParameter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::ReleaseParameter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:81:14
    t.method("ReleaseParameter", [](TBackCompFitter& a, Int_t arg0)->void { a.ReleaseParameter(arg0); });
    t.method("ReleaseParameter", [](TBackCompFitter* a, Int_t arg0)->void { a->ReleaseParameter(arg0); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::SetFitMethod(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::SetFitMethod(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:82:14
    t.method("SetFitMethod", [](TBackCompFitter& a, const char * arg0)->void { a.SetFitMethod(arg0); });
    t.method("SetFitMethod", [](TBackCompFitter* a, const char * arg0)->void { a->SetFitMethod(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBackCompFitter::SetParameter(Int_t, const char *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBackCompFitter::SetParameter(Int_t, const char *, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:83:14
    t.method("SetParameter", [](TBackCompFitter& a, Int_t arg0, const char * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->Int_t { return a.SetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetParameter", [](TBackCompFitter* a, Int_t arg0, const char * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->Int_t { return a->SetParameter(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::SetFCN(void (*)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t)) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::SetFCN(void (*)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:85:14
    t.method("SetFCN", [](TBackCompFitter& a, void (*arg0)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))->void { a.SetFCN(arg0); });
    t.method("SetFCN", [](TBackCompFitter* a, void (*arg0)(Int_t &, Double_t *, Double_t &, Double_t *, Int_t))->void { a->SetFCN(arg0); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::SetMethodCall(TMethodCall *) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::SetMethodCall(TMethodCall *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:88:17
    t.method("SetMethodCall", [](TBackCompFitter& a, TMethodCall * arg0)->void { a.SetMethodCall(arg0); });
    t.method("SetMethodCall", [](TBackCompFitter* a, TMethodCall * arg0)->void { a->SetMethodCall(arg0); });

    DEBUG_MSG("Adding wrapper for ROOT::Fit::FitConfig & TBackCompFitter::GetFitConfig() (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Fit::FitConfig & TBackCompFitter::GetFitConfig()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:91:27
    t.method("GetFitConfig", [](TBackCompFitter& a)->ROOT::Fit::FitConfig & { return a.GetFitConfig(); });
    t.method("GetFitConfig", [](TBackCompFitter* a)->ROOT::Fit::FitConfig & { return a->GetFitConfig(); });

    DEBUG_MSG("Adding wrapper for const ROOT::Fit::FitResult & TBackCompFitter::GetFitResult() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Fit::FitResult & TBackCompFitter::GetFitResult()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:94:33
    t.method("GetFitResult", [](TBackCompFitter const& a)->const ROOT::Fit::FitResult & { return a.GetFitResult(); });
    t.method("GetFitResult", [](TBackCompFitter const* a)->const ROOT::Fit::FitResult & { return a->GetFitResult(); });

    DEBUG_MSG("Adding wrapper for TFitResult * TBackCompFitter::GetTFitResult() (" __HERE__ ")");
    // signature to use in the veto list: TFitResult * TBackCompFitter::GetTFitResult()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:97:17
    t.method("GetTFitResult", [](TBackCompFitter const& a)->TFitResult * { return a.GetTFitResult(); });
    t.method("GetTFitResult", [](TBackCompFitter const* a)->TFitResult * { return a->GetTFitResult(); });

    DEBUG_MSG("Adding wrapper for const ROOT::Fit::FitData & TBackCompFitter::GetFitData() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Fit::FitData & TBackCompFitter::GetFitData()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:100:31
    t.method("GetFitData", [](TBackCompFitter const& a)->const ROOT::Fit::FitData & { return a.GetFitData(); });
    t.method("GetFitData", [](TBackCompFitter const* a)->const ROOT::Fit::FitData & { return a->GetFitData(); });

    DEBUG_MSG("Adding wrapper for bool TBackCompFitter::Scan(unsigned int, TGraph *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool TBackCompFitter::Scan(unsigned int, TGraph *, double, double)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:109:10
    t.method("Scan", [](TBackCompFitter& a, unsigned int arg0, TGraph * arg1)->bool { return a.Scan(arg0, arg1); });
    t.method("Scan", [](TBackCompFitter& a, unsigned int arg0, TGraph * arg1, double arg2)->bool { return a.Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TBackCompFitter& a, unsigned int arg0, TGraph * arg1, double arg2, double arg3)->bool { return a.Scan(arg0, arg1, arg2, arg3); });
    t.method("Scan", [](TBackCompFitter* a, unsigned int arg0, TGraph * arg1)->bool { return a->Scan(arg0, arg1); });
    t.method("Scan", [](TBackCompFitter* a, unsigned int arg0, TGraph * arg1, double arg2)->bool { return a->Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TBackCompFitter* a, unsigned int arg0, TGraph * arg1, double arg2, double arg3)->bool { return a->Scan(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for bool TBackCompFitter::Contour(unsigned int, unsigned int, TGraph *, double) (" __HERE__ ")");
    // signature to use in the veto list: bool TBackCompFitter::Contour(unsigned int, unsigned int, TGraph *, double)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:117:10
    t.method("Contour", [](TBackCompFitter& a, unsigned int arg0, unsigned int arg1, TGraph * arg2)->bool { return a.Contour(arg0, arg1, arg2); });
    t.method("Contour", [](TBackCompFitter& a, unsigned int arg0, unsigned int arg1, TGraph * arg2, double arg3)->bool { return a.Contour(arg0, arg1, arg2, arg3); });
    t.method("Contour", [](TBackCompFitter* a, unsigned int arg0, unsigned int arg1, TGraph * arg2)->bool { return a->Contour(arg0, arg1, arg2); });
    t.method("Contour", [](TBackCompFitter* a, unsigned int arg0, unsigned int arg1, TGraph * arg2, double arg3)->bool { return a->Contour(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::ReCreateMinimizer() (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::ReCreateMinimizer()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:123:9
    t.method("ReCreateMinimizer", [](TBackCompFitter& a)->void { a.ReCreateMinimizer(); });
    t.method("ReCreateMinimizer", [](TBackCompFitter* a)->void { a->ReCreateMinimizer(); });

    DEBUG_MSG("Adding wrapper for Version_t TBackCompFitter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TBackCompFitter::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!Class_Version", []()->Version_t { return TBackCompFitter::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TBackCompFitter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBackCompFitter::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    t.method("IsA", [](TBackCompFitter const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TBackCompFitter const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    t.method("StreamerNVirtual", [](TBackCompFitter& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TBackCompFitter* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TBackCompFitter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBackCompFitter::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!DeclFileName", []() { return (std::string)TBackCompFitter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TBackCompFitter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBackCompFitter::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!ImplFileLine", []()->int { return TBackCompFitter::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TBackCompFitter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBackCompFitter::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!ImplFileName", []() { return (std::string)TBackCompFitter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TBackCompFitter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBackCompFitter::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!Class_Name", []() { return (std::string)TBackCompFitter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TBackCompFitter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBackCompFitter::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!Dictionary", []()->TClass * { return TBackCompFitter::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TBackCompFitter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBackCompFitter::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!Class", []()->TClass * { return TBackCompFitter::Class(); });

    DEBUG_MSG("Adding wrapper for void TBackCompFitter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBackCompFitter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    t.method("Streamer", [](TBackCompFitter& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TBackCompFitter* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TBackCompFitter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBackCompFitter::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBackCompFitter.h:143:4
    module_.method("TBackCompFitter!DeclFileLine", []()->int { return TBackCompFitter::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TBackCompFitter>> type_;
};
std::shared_ptr<Wrapper> newJlTBackCompFitter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTBackCompFitter(module));
}
