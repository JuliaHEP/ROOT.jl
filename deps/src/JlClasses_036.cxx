// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TPolyMarker> : std::false_type { };
  template<> struct DefaultConstructible<TPolyMarker> : std::false_type { };
template<> struct SuperType<TPolyMarker> { typedef TObject type; };
}

// Class generating the wrapper for type TPolyMarker
// signature to use in the veto file: TPolyMarker
struct JlTPolyMarker: public Wrapper {

  JlTPolyMarker(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TPolyMarker (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TPolyMarker.h:31:7
    jlcxx::TypeWrapper<TPolyMarker>  t = jlModule.add_type<TPolyMarker>("TPolyMarker",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TPolyMarker>>(new jlcxx::TypeWrapper<TPolyMarker>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TPolyMarker::TPolyMarker(Int_t, Option_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TPolyMarker.h:43:4
    t.constructor<Int_t>(/*finalize=*/true);
    t.constructor<Int_t, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TPolyMarker::TPolyMarker(Int_t, Float_t *, Float_t *, Option_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TPolyMarker.h:44:4
    t.constructor<Int_t, Float_t *, Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, Float_t *, Float_t *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TPolyMarker::TPolyMarker(Int_t, Double_t *, Double_t *, Option_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TPolyMarker.h:45:4
    t.constructor<Int_t, Double_t *, Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, Double_t *, Double_t *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TPolyMarker::TPolyMarker(const TPolyMarker &) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TPolyMarker.h:46:4
    t.constructor<const TPolyMarker &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TPolyMarker::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::Copy(TObject &)
    // defined in /opt/root63206jll/include/TPolyMarker.h:48:13
    t.method("Copy", static_cast<void (TPolyMarker::*)(TObject &)  const>(&TPolyMarker::Copy));

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::DistancetoPrimitive(Int_t, Int_t)
    // defined in /opt/root63206jll/include/TPolyMarker.h:49:13
    t.method("DistancetoPrimitive", static_cast<Int_t (TPolyMarker::*)(Int_t, Int_t) >(&TPolyMarker::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::Draw(Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:50:13
    t.method("Draw", static_cast<void (TPolyMarker::*)(Option_t *) >(&TPolyMarker::Draw));
    t.method("Draw", [](TPolyMarker& a)->void { a.Draw(); });
    t.method("Draw", [](TPolyMarker* a)->void { a->Draw(); });

    DEBUG_MSG("Adding wrapper for void TPolyMarker::DrawPolyMarker(Int_t, Double_t *, Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::DrawPolyMarker(Int_t, Double_t *, Double_t *, Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:51:21
    t.method("DrawPolyMarker", static_cast<void (TPolyMarker::*)(Int_t, Double_t *, Double_t *, Option_t *) >(&TPolyMarker::DrawPolyMarker));
    t.method("DrawPolyMarker", [](TPolyMarker& a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a.DrawPolyMarker(arg0, arg1, arg2); });
    t.method("DrawPolyMarker", [](TPolyMarker* a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a->DrawPolyMarker(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TPolyMarker::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /opt/root63206jll/include/TPolyMarker.h:52:13
    t.method("ExecuteEvent", static_cast<void (TPolyMarker::*)(Int_t, Int_t, Int_t) >(&TPolyMarker::ExecuteEvent));

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::GetLastPoint() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::GetLastPoint()
    // defined in /opt/root63206jll/include/TPolyMarker.h:53:21
    t.method("GetLastPoint", static_cast<Int_t (TPolyMarker::*)()  const>(&TPolyMarker::GetLastPoint));

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::GetN() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::GetN()
    // defined in /opt/root63206jll/include/TPolyMarker.h:54:21
    t.method("GetN", static_cast<Int_t (TPolyMarker::*)()  const>(&TPolyMarker::GetN));

    DEBUG_MSG("Adding wrapper for Option_t * TPolyMarker::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TPolyMarker::GetOption()
    // defined in /opt/root63206jll/include/TPolyMarker.h:55:21
    t.method("GetOption", static_cast<Option_t * (TPolyMarker::*)()  const>(&TPolyMarker::GetOption));

    DEBUG_MSG("Adding wrapper for Double_t * TPolyMarker::GetX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TPolyMarker::GetX()
    // defined in /opt/root63206jll/include/TPolyMarker.h:56:21
    t.method("GetX", static_cast<Double_t * (TPolyMarker::*)()  const>(&TPolyMarker::GetX));

    DEBUG_MSG("Adding wrapper for Double_t * TPolyMarker::GetY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TPolyMarker::GetY()
    // defined in /opt/root63206jll/include/TPolyMarker.h:57:21
    t.method("GetY", static_cast<Double_t * (TPolyMarker::*)()  const>(&TPolyMarker::GetY));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::ls(Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:58:13
    t.method("ls", static_cast<void (TPolyMarker::*)(Option_t *)  const>(&TPolyMarker::ls));
    t.method("ls", [](TPolyMarker const& a)->void { a.ls(); });
    t.method("ls", [](TPolyMarker const* a)->void { a->ls(); });

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::Merge(TCollection *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:59:21
    t.method("Merge", static_cast<Int_t (TPolyMarker::*)(TCollection *) >(&TPolyMarker::Merge));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::Paint(Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:60:13
    t.method("Paint", static_cast<void (TPolyMarker::*)(Option_t *) >(&TPolyMarker::Paint));
    t.method("Paint", [](TPolyMarker& a)->void { a.Paint(); });
    t.method("Paint", [](TPolyMarker* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for void TPolyMarker::PaintPolyMarker(Int_t, Double_t *, Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::PaintPolyMarker(Int_t, Double_t *, Double_t *, Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:61:21
    t.method("PaintPolyMarker", static_cast<void (TPolyMarker::*)(Int_t, Double_t *, Double_t *, Option_t *) >(&TPolyMarker::PaintPolyMarker));
    t.method("PaintPolyMarker", [](TPolyMarker& a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a.PaintPolyMarker(arg0, arg1, arg2); });
    t.method("PaintPolyMarker", [](TPolyMarker* a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a->PaintPolyMarker(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TPolyMarker::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::Print(Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:62:13
    t.method("Print", static_cast<void (TPolyMarker::*)(Option_t *)  const>(&TPolyMarker::Print));
    t.method("Print", [](TPolyMarker const& a)->void { a.Print(); });
    t.method("Print", [](TPolyMarker const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::SetNextPoint(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::SetNextPoint(Double_t, Double_t)
    // defined in /opt/root63206jll/include/TPolyMarker.h:64:21
    t.method("SetNextPoint", static_cast<Int_t (TPolyMarker::*)(Double_t, Double_t) >(&TPolyMarker::SetNextPoint));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::SetPoint(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::SetPoint(Int_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TPolyMarker.h:65:21
    t.method("SetPoint", static_cast<void (TPolyMarker::*)(Int_t, Double_t, Double_t) >(&TPolyMarker::SetPoint));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::SetPolyMarker(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::SetPolyMarker(Int_t)
    // defined in /opt/root63206jll/include/TPolyMarker.h:66:21
    t.method("SetPolyMarker", static_cast<void (TPolyMarker::*)(Int_t) >(&TPolyMarker::SetPolyMarker));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::SetPolyMarker(Int_t, Float_t *, Float_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::SetPolyMarker(Int_t, Float_t *, Float_t *, Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:67:21
    t.method("SetPolyMarker", static_cast<void (TPolyMarker::*)(Int_t, Float_t *, Float_t *, Option_t *) >(&TPolyMarker::SetPolyMarker));
    t.method("SetPolyMarker", [](TPolyMarker& a, Int_t arg0, Float_t * arg1, Float_t * arg2)->void { a.SetPolyMarker(arg0, arg1, arg2); });
    t.method("SetPolyMarker", [](TPolyMarker* a, Int_t arg0, Float_t * arg1, Float_t * arg2)->void { a->SetPolyMarker(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TPolyMarker::SetPolyMarker(Int_t, Double_t *, Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::SetPolyMarker(Int_t, Double_t *, Double_t *, Option_t *)
    // defined in /opt/root63206jll/include/TPolyMarker.h:68:21
    t.method("SetPolyMarker", static_cast<void (TPolyMarker::*)(Int_t, Double_t *, Double_t *, Option_t *) >(&TPolyMarker::SetPolyMarker));
    t.method("SetPolyMarker", [](TPolyMarker& a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a.SetPolyMarker(arg0, arg1, arg2); });
    t.method("SetPolyMarker", [](TPolyMarker* a, Int_t arg0, Double_t * arg1, Double_t * arg2)->void { a->SetPolyMarker(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TPolyMarker::Size() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TPolyMarker::Size()
    // defined in /opt/root63206jll/include/TPolyMarker.h:69:21
    t.method("Size", static_cast<Int_t (TPolyMarker::*)()  const>(&TPolyMarker::Size));

    DEBUG_MSG("Adding wrapper for Version_t TPolyMarker::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TPolyMarker::Class_Version()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!Class_Version", static_cast<Version_t (*)() >(&TPolyMarker::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TPolyMarker::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPolyMarker::IsA()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    t.method("IsA", static_cast<TClass * (TPolyMarker::*)()  const>(&TPolyMarker::IsA));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::StreamerNVirtual(TBuffer &)
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    t.method("StreamerNVirtual", static_cast<void (TPolyMarker::*)(TBuffer &) >(&TPolyMarker::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TPolyMarker::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPolyMarker::DeclFileName()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!DeclFileName", []() { return (std::string)TPolyMarker::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TPolyMarker::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TPolyMarker::ImplFileLine()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!ImplFileLine", static_cast<int (*)() >(&TPolyMarker::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TPolyMarker::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPolyMarker::ImplFileName()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!ImplFileName", []() { return (std::string)TPolyMarker::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TPolyMarker::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPolyMarker::Class_Name()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!Class_Name", []() { return (std::string)TPolyMarker::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TPolyMarker::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPolyMarker::Dictionary()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!Dictionary", static_cast<TClass * (*)() >(&TPolyMarker::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TPolyMarker::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPolyMarker::Class()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!Class", static_cast<TClass * (*)() >(&TPolyMarker::Class));

    DEBUG_MSG("Adding wrapper for void TPolyMarker::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TPolyMarker::Streamer(TBuffer &)
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    t.method("Streamer", static_cast<void (TPolyMarker::*)(TBuffer &) >(&TPolyMarker::Streamer));

    DEBUG_MSG("Adding wrapper for int TPolyMarker::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TPolyMarker::DeclFileLine()
    // defined in /opt/root63206jll/include/TPolyMarker.h:71:4
    module_.method("TPolyMarker!DeclFileLine", static_cast<int (*)() >(&TPolyMarker::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TPolyMarker>> type_;
};
std::shared_ptr<Wrapper> newJlTPolyMarker(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTPolyMarker(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TProfile2PolyBin> : std::false_type { };
  template<> struct DefaultConstructible<TProfile2PolyBin> : std::false_type { };
template<> struct SuperType<TProfile2PolyBin> { typedef TH2PolyBin type; };
}

// Class generating the wrapper for type TProfile2PolyBin
// signature to use in the veto file: TProfile2PolyBin
struct JlTProfile2PolyBin: public Wrapper {

  JlTProfile2PolyBin(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TProfile2PolyBin (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile2Poly.h:19:7
    jlcxx::TypeWrapper<TProfile2PolyBin>  t = jlModule.add_type<TProfile2PolyBin>("TProfile2PolyBin",
      jlcxx::julia_base_type<TH2PolyBin>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TProfile2PolyBin>>(new jlcxx::TypeWrapper<TProfile2PolyBin>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::TProfile2PolyBin(TObject *, Int_t) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile2Poly.h:24:4
    t.constructor<TObject *, Int_t>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::Merge(const TProfile2PolyBin *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2PolyBin::Merge(const TProfile2PolyBin *)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:27:9
    t.method("Merge", static_cast<void (TProfile2PolyBin::*)(const TProfile2PolyBin *) >(&TProfile2PolyBin::Merge));

    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::Update() (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2PolyBin::Update()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:29:9
    t.method("Update", static_cast<void (TProfile2PolyBin::*)() >(&TProfile2PolyBin::Update));

    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::ClearStats() (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2PolyBin::ClearStats()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:30:9
    t.method("ClearStats", static_cast<void (TProfile2PolyBin::*)() >(&TProfile2PolyBin::ClearStats));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetEffectiveEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetEffectiveEntries()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:32:13
    t.method("GetEffectiveEntries", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetEffectiveEntries));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetEntries()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:33:13
    t.method("GetEntries", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetEntries));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetEntriesW2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetEntriesW2()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:34:13
    t.method("GetEntriesW2", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetEntriesW2));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetEntriesVW() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetEntriesVW()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:35:13
    t.method("GetEntriesVW", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetEntriesVW));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetEntriesWV2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetEntriesWV2()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:36:13
    t.method("GetEntriesWV2", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetEntriesWV2));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2PolyBin::GetError() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2PolyBin::GetError()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:37:13
    t.method("GetError", static_cast<Double_t (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::GetError));

    DEBUG_MSG("Adding wrapper for Version_t TProfile2PolyBin::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TProfile2PolyBin::Class_Version()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!Class_Version", static_cast<Version_t (*)() >(&TProfile2PolyBin::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TProfile2PolyBin::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2PolyBin::IsA()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    t.method("IsA", static_cast<TClass * (TProfile2PolyBin::*)()  const>(&TProfile2PolyBin::IsA));

    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2PolyBin::StreamerNVirtual(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    t.method("StreamerNVirtual", static_cast<void (TProfile2PolyBin::*)(TBuffer &) >(&TProfile2PolyBin::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TProfile2PolyBin::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2PolyBin::DeclFileName()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!DeclFileName", []() { return (std::string)TProfile2PolyBin::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TProfile2PolyBin::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile2PolyBin::ImplFileLine()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!ImplFileLine", static_cast<int (*)() >(&TProfile2PolyBin::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TProfile2PolyBin::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2PolyBin::ImplFileName()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!ImplFileName", []() { return (std::string)TProfile2PolyBin::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TProfile2PolyBin::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2PolyBin::Class_Name()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!Class_Name", []() { return (std::string)TProfile2PolyBin::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TProfile2PolyBin::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2PolyBin::Dictionary()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!Dictionary", static_cast<TClass * (*)() >(&TProfile2PolyBin::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TProfile2PolyBin::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2PolyBin::Class()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!Class", static_cast<TClass * (*)() >(&TProfile2PolyBin::Class));

    DEBUG_MSG("Adding wrapper for void TProfile2PolyBin::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2PolyBin::Streamer(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    t.method("Streamer", static_cast<void (TProfile2PolyBin::*)(TBuffer &) >(&TProfile2PolyBin::Streamer));

    DEBUG_MSG("Adding wrapper for int TProfile2PolyBin::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile2PolyBin::DeclFileLine()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:55:4
    module_.method("TProfile2PolyBin!DeclFileLine", static_cast<int (*)() >(&TProfile2PolyBin::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TProfile2PolyBin>> type_;
};
std::shared_ptr<Wrapper> newJlTProfile2PolyBin(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTProfile2PolyBin(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TProfile2Poly> : std::false_type { };
  template<> struct DefaultConstructible<TProfile2Poly> : std::false_type { };
template<> struct SuperType<TProfile2Poly> { typedef TH2Poly type; };
}

// Class generating the wrapper for type TProfile2Poly
// signature to use in the veto file: TProfile2Poly
struct JlTProfile2Poly: public Wrapper {

  JlTProfile2Poly(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TProfile2Poly (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile2Poly.h:58:7
    jlcxx::TypeWrapper<TProfile2Poly>  t = jlModule.add_type<TProfile2Poly>("TProfile2Poly",
      jlcxx::julia_base_type<TH2Poly>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TProfile2Poly>>(new jlcxx::TypeWrapper<TProfile2Poly>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile2Poly::TProfile2Poly(const char *, const char *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile2Poly.h:65:4
    t.constructor<const char *, const char *, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile2Poly::TProfile2Poly(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile2Poly.h:66:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Int_t TProfile2Poly::Fill(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TProfile2Poly::Fill(Double_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:71:10
    t.method("Fill", static_cast<Int_t (TProfile2Poly::*)(Double_t, Double_t, Double_t) >(&TProfile2Poly::Fill));

    DEBUG_MSG("Adding wrapper for Int_t TProfile2Poly::Fill(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TProfile2Poly::Fill(Double_t, Double_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:72:18
    t.method("Fill", static_cast<Int_t (TProfile2Poly::*)(Double_t, Double_t, Double_t, Double_t) >(&TProfile2Poly::Fill));

    DEBUG_MSG("Adding wrapper for Long64_t TProfile2Poly::Merge(const std::vector<TProfile2Poly *> &) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TProfile2Poly::Merge(const std::vector<TProfile2Poly *> &)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:74:13
    t.method("Merge", static_cast<Long64_t (TProfile2Poly::*)(const std::vector<TProfile2Poly *> &) >(&TProfile2Poly::Merge));

    DEBUG_MSG("Adding wrapper for Long64_t TProfile2Poly::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TProfile2Poly::Merge(TCollection *)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:75:13
    t.method("Merge", static_cast<Long64_t (TProfile2Poly::*)(TCollection *) >(&TProfile2Poly::Merge));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::Reset(Option_t *)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:76:9
    t.method("Reset", static_cast<void (TProfile2Poly::*)(Option_t *) >(&TProfile2Poly::Reset));
    t.method("Reset", [](TProfile2Poly& a)->void { a.Reset(); });
    t.method("Reset", [](TProfile2Poly* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::SetContentToAverage() (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::SetContentToAverage()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:79:9
    t.method("SetContentToAverage", static_cast<void (TProfile2Poly::*)() >(&TProfile2Poly::SetContentToAverage));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::SetContentToError() (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::SetContentToError()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:80:9
    t.method("SetContentToError", static_cast<void (TProfile2Poly::*)() >(&TProfile2Poly::SetContentToError));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::SetErrorOption(EErrorType) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::SetErrorOption(EErrorType)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:82:9
    t.method("SetErrorOption", static_cast<void (TProfile2Poly::*)(EErrorType) >(&TProfile2Poly::SetErrorOption));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinEffectiveEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinEffectiveEntries(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:84:13
    t.method("GetBinEffectiveEntries", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinEffectiveEntries));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinEntries(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:85:13
    t.method("GetBinEntries", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinEntries));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinEntriesW2(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinEntriesW2(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:86:13
    t.method("GetBinEntriesW2", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinEntriesW2));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinEntriesVW(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinEntriesVW(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:87:13
    t.method("GetBinEntriesVW", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinEntriesVW));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinEntriesWV2(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinEntriesWV2(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:88:13
    t.method("GetBinEntriesWV2", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinEntriesWV2));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinContent(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:91:13
    t.method("GetBinContent", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetBinError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetBinError(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:94:13
    t.method("GetBinError", static_cast<Double_t (TProfile2Poly::*)(Int_t)  const>(&TProfile2Poly::GetBinError));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::GetStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::GetStats(Double_t *)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:96:9
    t.method("GetStats", static_cast<void (TProfile2Poly::*)(Double_t *)  const>(&TProfile2Poly::GetStats));

    DEBUG_MSG("Adding wrapper for Double_t TProfile2Poly::GetOverflowContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile2Poly::GetOverflowContent(Int_t)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:99:13
    t.method("GetOverflowContent", static_cast<Double_t (TProfile2Poly::*)(Int_t) >(&TProfile2Poly::GetOverflowContent));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::PrintOverflowRegions() (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::PrintOverflowRegions()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:100:9
    t.method("PrintOverflowRegions", static_cast<void (TProfile2Poly::*)() >(&TProfile2Poly::PrintOverflowRegions));

    DEBUG_MSG("Adding wrapper for Version_t TProfile2Poly::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TProfile2Poly::Class_Version()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!Class_Version", static_cast<Version_t (*)() >(&TProfile2Poly::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TProfile2Poly::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2Poly::IsA()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    t.method("IsA", static_cast<TClass * (TProfile2Poly::*)()  const>(&TProfile2Poly::IsA));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::StreamerNVirtual(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    t.method("StreamerNVirtual", static_cast<void (TProfile2Poly::*)(TBuffer &) >(&TProfile2Poly::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TProfile2Poly::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2Poly::DeclFileName()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!DeclFileName", []() { return (std::string)TProfile2Poly::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TProfile2Poly::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile2Poly::ImplFileLine()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!ImplFileLine", static_cast<int (*)() >(&TProfile2Poly::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TProfile2Poly::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2Poly::ImplFileName()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!ImplFileName", []() { return (std::string)TProfile2Poly::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TProfile2Poly::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile2Poly::Class_Name()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!Class_Name", []() { return (std::string)TProfile2Poly::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TProfile2Poly::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2Poly::Dictionary()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!Dictionary", static_cast<TClass * (*)() >(&TProfile2Poly::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TProfile2Poly::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile2Poly::Class()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!Class", static_cast<TClass * (*)() >(&TProfile2Poly::Class));

    DEBUG_MSG("Adding wrapper for void TProfile2Poly::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile2Poly::Streamer(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    t.method("Streamer", static_cast<void (TProfile2Poly::*)(TBuffer &) >(&TProfile2Poly::Streamer));

    DEBUG_MSG("Adding wrapper for int TProfile2Poly::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile2Poly::DeclFileLine()
    // defined in /opt/root63206jll/include/TProfile2Poly.h:115:4
    module_.method("TProfile2Poly!DeclFileLine", static_cast<int (*)() >(&TProfile2Poly::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TProfile2Poly>> type_;
};
std::shared_ptr<Wrapper> newJlTProfile2Poly(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTProfile2Poly(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TProfile3D> : std::false_type { };
  template<> struct DefaultConstructible<TProfile3D> : std::false_type { };
template<> struct SuperType<TProfile3D> { typedef TH3D type; };
}

// Class generating the wrapper for type TProfile3D
// signature to use in the veto file: TProfile3D
struct JlTProfile3D: public Wrapper {

  JlTProfile3D(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TProfile3D (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile3D.h:27:7
    jlcxx::TypeWrapper<TProfile3D>  t = jlModule.add_type<TProfile3D>("TProfile3D",
      jlcxx::julia_base_type<TH3D>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TProfile3D>>(new jlcxx::TypeWrapper<TProfile3D>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile3D::TProfile3D(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile3D.h:88:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile3D::TProfile3D(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *, Option_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile3D.h:91:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TProfile3D::TProfile3D(const TProfile3D &) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TProfile3D.h:94:4
    t.constructor<const TProfile3D &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TProfile3D & TProfile3D::operator=(const TProfile3D &) (" __HERE__ ")");
    // signature to use in the veto list: TProfile3D & TProfile3D::operator=(const TProfile3D &)
    // defined in /opt/root63206jll/include/TProfile3D.h:95:16
    t.method("assign", static_cast<TProfile3D & (TProfile3D::*)(const TProfile3D &) >(&TProfile3D::operator=));

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Add(TF1 *, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Add(TF1 *, Double_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:97:14
    t.method("Add", static_cast<Bool_t (TProfile3D::*)(TF1 *, Double_t, Option_t *) >(&TProfile3D::Add));
    t.method("Add", [](TProfile3D& a, TF1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TProfile3D& a, TF1 * arg0, Double_t arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TProfile3D* a, TF1 * arg0)->Bool_t { return a->Add(arg0); });
    t.method("Add", [](TProfile3D* a, TF1 * arg0, Double_t arg1)->Bool_t { return a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Add(const TH1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Add(const TH1 *, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:98:14
    t.method("Add", static_cast<Bool_t (TProfile3D::*)(const TH1 *, Double_t) >(&TProfile3D::Add));
    t.method("Add", [](TProfile3D& a, const TH1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TProfile3D* a, const TH1 * arg0)->Bool_t { return a->Add(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Add(const TH1 *, const TH1 *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Add(const TH1 *, const TH1 *, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:99:14
    t.method("Add", static_cast<Bool_t (TProfile3D::*)(const TH1 *, const TH1 *, Double_t, Double_t) >(&TProfile3D::Add));
    t.method("Add", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Add(arg0, arg1, arg2); });
    t.method("Add", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Add(arg0, arg1); });
    t.method("Add", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Add(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::Approximate(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Approximate(Bool_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:100:22
    module_.method("TProfile3D!Approximate", static_cast<void (*)(Bool_t) >(&TProfile3D::Approximate));
    module_.method("TProfile3D!Approximate", []()->void { TProfile3D::Approximate(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::BuildOptions(Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::BuildOptions(Double_t, Double_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:101:22
    t.method("BuildOptions", static_cast<void (TProfile3D::*)(Double_t, Double_t, Option_t *) >(&TProfile3D::BuildOptions));

    DEBUG_MSG("Adding wrapper for Int_t TProfile3D::BufferEmpty(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TProfile3D::BufferEmpty(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:102:14
    t.method("BufferEmpty", static_cast<Int_t (TProfile3D::*)(Int_t) >(&TProfile3D::BufferEmpty));
    t.method("BufferEmpty", [](TProfile3D& a)->Int_t { return a.BufferEmpty(); });
    t.method("BufferEmpty", [](TProfile3D* a)->Int_t { return a->BufferEmpty(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Copy(TObject &)
    // defined in /opt/root63206jll/include/TProfile3D.h:103:14
    t.method("Copy", static_cast<void (TProfile3D::*)(TObject &)  const>(&TProfile3D::Copy));

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Divide(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Divide(TF1 *, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:104:14
    t.method("Divide", static_cast<Bool_t (TProfile3D::*)(TF1 *, Double_t) >(&TProfile3D::Divide));
    t.method("Divide", [](TProfile3D& a, TF1 * arg0)->Bool_t { return a.Divide(arg0); });
    t.method("Divide", [](TProfile3D* a, TF1 * arg0)->Bool_t { return a->Divide(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Divide(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Divide(const TH1 *)
    // defined in /opt/root63206jll/include/TProfile3D.h:105:14
    t.method("Divide", static_cast<Bool_t (TProfile3D::*)(const TH1 *) >(&TProfile3D::Divide));

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:106:14
    t.method("Divide", static_cast<Bool_t (TProfile3D::*)(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) >(&TProfile3D::Divide));
    t.method("Divide", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Divide(arg0, arg1); });
    t.method("Divide", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Divide(arg0, arg1); });
    t.method("Divide", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Divide(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::ExtendAxis(Double_t, TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::ExtendAxis(Double_t, TAxis *)
    // defined in /opt/root63206jll/include/TProfile3D.h:107:14
    t.method("ExtendAxis", static_cast<void (TProfile3D::*)(Double_t, TAxis *) >(&TProfile3D::ExtendAxis));

    DEBUG_MSG("Adding wrapper for Int_t TProfile3D::Fill(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TProfile3D::Fill(Double_t, Double_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:108:14
    t.method("Fill", static_cast<Int_t (TProfile3D::*)(Double_t, Double_t, Double_t, Double_t) >(&TProfile3D::Fill));

    DEBUG_MSG("Adding wrapper for Int_t TProfile3D::Fill(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TProfile3D::Fill(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:109:22
    t.method("Fill", static_cast<Int_t (TProfile3D::*)(Double_t, Double_t, Double_t, Double_t, Double_t) >(&TProfile3D::Fill));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinContent(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:110:14
    t.method("GetBinContent", static_cast<Double_t (TProfile3D::*)(Int_t)  const>(&TProfile3D::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinContent(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinContent(Int_t, Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:111:14
    t.method("GetBinContent", static_cast<Double_t (TProfile3D::*)(Int_t, Int_t)  const>(&TProfile3D::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinContent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinContent(Int_t, Int_t, Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:113:14
    t.method("GetBinContent", static_cast<Double_t (TProfile3D::*)(Int_t, Int_t, Int_t)  const>(&TProfile3D::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinError(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:114:14
    t.method("GetBinError", static_cast<Double_t (TProfile3D::*)(Int_t)  const>(&TProfile3D::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinError(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinError(Int_t, Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:115:14
    t.method("GetBinError", static_cast<Double_t (TProfile3D::*)(Int_t, Int_t)  const>(&TProfile3D::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinError(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinError(Int_t, Int_t, Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:117:14
    t.method("GetBinError", static_cast<Double_t (TProfile3D::*)(Int_t, Int_t, Int_t)  const>(&TProfile3D::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinEntries(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:118:22
    t.method("GetBinEntries", static_cast<Double_t (TProfile3D::*)(Int_t)  const>(&TProfile3D::GetBinEntries));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetBinEffectiveEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetBinEffectiveEntries(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:119:22
    t.method("GetBinEffectiveEntries", static_cast<Double_t (TProfile3D::*)(Int_t) >(&TProfile3D::GetBinEffectiveEntries));

    DEBUG_MSG("Adding wrapper for TArrayD * TProfile3D::GetBinSumw2() (" __HERE__ ")");
    // signature to use in the veto list: TArrayD * TProfile3D::GetBinSumw2()
    // defined in /opt/root63206jll/include/TProfile3D.h:120:21
    t.method("GetBinSumw2", static_cast<TArrayD * (TProfile3D::*)() >(&TProfile3D::GetBinSumw2));

    DEBUG_MSG("Adding wrapper for const TArrayD * TProfile3D::GetBinSumw2() (" __HERE__ ")");
    // signature to use in the veto list: const TArrayD * TProfile3D::GetBinSumw2()
    // defined in /opt/root63206jll/include/TProfile3D.h:121:27
    t.method("GetBinSumw2", static_cast<const TArrayD * (TProfile3D::*)()  const>(&TProfile3D::GetBinSumw2));

    DEBUG_MSG("Adding wrapper for Option_t * TProfile3D::GetErrorOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TProfile3D::GetErrorOption()
    // defined in /opt/root63206jll/include/TProfile3D.h:122:22
    t.method("GetErrorOption", static_cast<Option_t * (TProfile3D::*)()  const>(&TProfile3D::GetErrorOption));

    DEBUG_MSG("Adding wrapper for void TProfile3D::GetStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::GetStats(Double_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:123:14
    t.method("GetStats", static_cast<void (TProfile3D::*)(Double_t *)  const>(&TProfile3D::GetStats));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetTmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetTmin()
    // defined in /opt/root63206jll/include/TProfile3D.h:124:22
    t.method("GetTmin", static_cast<Double_t (TProfile3D::*)()  const>(&TProfile3D::GetTmin));

    DEBUG_MSG("Adding wrapper for Double_t TProfile3D::GetTmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TProfile3D::GetTmax()
    // defined in /opt/root63206jll/include/TProfile3D.h:125:22
    t.method("GetTmax", static_cast<Double_t (TProfile3D::*)()  const>(&TProfile3D::GetTmax));

    DEBUG_MSG("Adding wrapper for void TProfile3D::LabelsDeflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::LabelsDeflate(Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:126:14
    t.method("LabelsDeflate", static_cast<void (TProfile3D::*)(Option_t *) >(&TProfile3D::LabelsDeflate));
    t.method("LabelsDeflate", [](TProfile3D& a)->void { a.LabelsDeflate(); });
    t.method("LabelsDeflate", [](TProfile3D* a)->void { a->LabelsDeflate(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::LabelsInflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::LabelsInflate(Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:127:14
    t.method("LabelsInflate", static_cast<void (TProfile3D::*)(Option_t *) >(&TProfile3D::LabelsInflate));
    t.method("LabelsInflate", [](TProfile3D& a)->void { a.LabelsInflate(); });
    t.method("LabelsInflate", [](TProfile3D* a)->void { a->LabelsInflate(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::LabelsOption(Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::LabelsOption(Option_t *, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:128:14
    t.method("LabelsOption", static_cast<void (TProfile3D::*)(Option_t *, Option_t *) >(&TProfile3D::LabelsOption));
    t.method("LabelsOption", [](TProfile3D& a)->void { a.LabelsOption(); });
    t.method("LabelsOption", [](TProfile3D& a, Option_t * arg0)->void { a.LabelsOption(arg0); });
    t.method("LabelsOption", [](TProfile3D* a)->void { a->LabelsOption(); });
    t.method("LabelsOption", [](TProfile3D* a, Option_t * arg0)->void { a->LabelsOption(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TProfile3D::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TProfile3D::Merge(TCollection *)
    // defined in /opt/root63206jll/include/TProfile3D.h:129:14
    t.method("Merge", static_cast<Long64_t (TProfile3D::*)(TCollection *) >(&TProfile3D::Merge));

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Multiply(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Multiply(TF1 *, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:130:14
    t.method("Multiply", static_cast<Bool_t (TProfile3D::*)(TF1 *, Double_t) >(&TProfile3D::Multiply));
    t.method("Multiply", [](TProfile3D& a, TF1 * arg0)->Bool_t { return a.Multiply(arg0); });
    t.method("Multiply", [](TProfile3D* a, TF1 * arg0)->Bool_t { return a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Multiply(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Multiply(const TH1 *)
    // defined in /opt/root63206jll/include/TProfile3D.h:131:14
    t.method("Multiply", static_cast<Bool_t (TProfile3D::*)(const TH1 *) >(&TProfile3D::Multiply));

    DEBUG_MSG("Adding wrapper for Bool_t TProfile3D::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProfile3D::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:132:14
    t.method("Multiply", static_cast<Bool_t (TProfile3D::*)(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) >(&TProfile3D::Multiply));
    t.method("Multiply", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Multiply(arg0, arg1); });
    t.method("Multiply", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TProfile3D& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Multiply(arg0, arg1, arg2, arg3); });
    t.method("Multiply", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Multiply(arg0, arg1); });
    t.method("Multiply", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TProfile3D* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Multiply(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TH3D * TProfile3D::ProjectionXYZ(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH3D * TProfile3D::ProjectionXYZ(const char *, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:133:22
    t.method("ProjectionXYZ", static_cast<TH3D * (TProfile3D::*)(const char *, Option_t *)  const>(&TProfile3D::ProjectionXYZ));
    t.method("ProjectionXYZ", [](TProfile3D const& a)->TH3D * { return a.ProjectionXYZ(); });
    t.method("ProjectionXYZ", [](TProfile3D const& a, const char * arg0)->TH3D * { return a.ProjectionXYZ(arg0); });
    t.method("ProjectionXYZ", [](TProfile3D const* a)->TH3D * { return a->ProjectionXYZ(); });
    t.method("ProjectionXYZ", [](TProfile3D const* a, const char * arg0)->TH3D * { return a->ProjectionXYZ(arg0); });

    DEBUG_MSG("Adding wrapper for TProfile2D * TProfile3D::Project3DProfile(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TProfile2D * TProfile3D::Project3DProfile(Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:134:17
    t.method("Project3DProfile", static_cast<TProfile2D * (TProfile3D::*)(Option_t *)  const>(&TProfile3D::Project3DProfile));
    t.method("Project3DProfile", [](TProfile3D const& a)->TProfile2D * { return a.Project3DProfile(); });
    t.method("Project3DProfile", [](TProfile3D const* a)->TProfile2D * { return a->Project3DProfile(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::PutStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::PutStats(Double_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:135:14
    t.method("PutStats", static_cast<void (TProfile3D::*)(Double_t *) >(&TProfile3D::PutStats));

    DEBUG_MSG("Adding wrapper for void TProfile3D::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Reset(Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:136:14
    t.method("Reset", static_cast<void (TProfile3D::*)(Option_t *) >(&TProfile3D::Reset));
    t.method("Reset", [](TProfile3D& a)->void { a.Reset(); });
    t.method("Reset", [](TProfile3D* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Scale(Double_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:138:14
    t.method("Scale", static_cast<void (TProfile3D::*)(Double_t, Option_t *) >(&TProfile3D::Scale));
    t.method("Scale", [](TProfile3D& a)->void { a.Scale(); });
    t.method("Scale", [](TProfile3D& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TProfile3D* a)->void { a->Scale(); });
    t.method("Scale", [](TProfile3D* a, Double_t arg0)->void { a->Scale(arg0); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetBinEntries(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetBinEntries(Int_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:139:22
    t.method("SetBinEntries", static_cast<void (TProfile3D::*)(Int_t, Double_t) >(&TProfile3D::SetBinEntries));

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:140:14
    t.method("SetBins", static_cast<void (TProfile3D::*)(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) >(&TProfile3D::SetBins));

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:143:14
    t.method("SetBins", static_cast<void (TProfile3D::*)(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) >(&TProfile3D::SetBins));

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetBinsLength(Int_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:145:14
    t.method("SetBinsLength", static_cast<void (TProfile3D::*)(Int_t) >(&TProfile3D::SetBinsLength));
    t.method("SetBinsLength", [](TProfile3D& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TProfile3D* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetBuffer(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetBuffer(Int_t, Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:146:14
    t.method("SetBuffer", static_cast<void (TProfile3D::*)(Int_t, Option_t *) >(&TProfile3D::SetBuffer));
    t.method("SetBuffer", [](TProfile3D& a, Int_t arg0)->void { a.SetBuffer(arg0); });
    t.method("SetBuffer", [](TProfile3D* a, Int_t arg0)->void { a->SetBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::SetErrorOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::SetErrorOption(Option_t *)
    // defined in /opt/root63206jll/include/TProfile3D.h:147:22
    t.method("SetErrorOption", static_cast<void (TProfile3D::*)(Option_t *) >(&TProfile3D::SetErrorOption));
    t.method("SetErrorOption", [](TProfile3D& a)->void { a.SetErrorOption(); });
    t.method("SetErrorOption", [](TProfile3D* a)->void { a->SetErrorOption(); });

    DEBUG_MSG("Adding wrapper for void TProfile3D::Sumw2(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Sumw2(Bool_t)
    // defined in /opt/root63206jll/include/TProfile3D.h:148:14
    t.method("Sumw2", static_cast<void (TProfile3D::*)(Bool_t) >(&TProfile3D::Sumw2));
    t.method("Sumw2", [](TProfile3D& a)->void { a.Sumw2(); });
    t.method("Sumw2", [](TProfile3D* a)->void { a->Sumw2(); });

    DEBUG_MSG("Adding wrapper for Version_t TProfile3D::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TProfile3D::Class_Version()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!Class_Version", static_cast<Version_t (*)() >(&TProfile3D::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TProfile3D::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile3D::IsA()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    t.method("IsA", static_cast<TClass * (TProfile3D::*)()  const>(&TProfile3D::IsA));

    DEBUG_MSG("Adding wrapper for void TProfile3D::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::StreamerNVirtual(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    t.method("StreamerNVirtual", static_cast<void (TProfile3D::*)(TBuffer &) >(&TProfile3D::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TProfile3D::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile3D::DeclFileName()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!DeclFileName", []() { return (std::string)TProfile3D::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TProfile3D::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile3D::ImplFileLine()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!ImplFileLine", static_cast<int (*)() >(&TProfile3D::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TProfile3D::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile3D::ImplFileName()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!ImplFileName", []() { return (std::string)TProfile3D::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TProfile3D::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProfile3D::Class_Name()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!Class_Name", []() { return (std::string)TProfile3D::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TProfile3D::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile3D::Dictionary()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!Dictionary", static_cast<TClass * (*)() >(&TProfile3D::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TProfile3D::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProfile3D::Class()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!Class", static_cast<TClass * (*)() >(&TProfile3D::Class));

    DEBUG_MSG("Adding wrapper for void TProfile3D::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProfile3D::Streamer(TBuffer &)
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    t.method("Streamer", static_cast<void (TProfile3D::*)(TBuffer &) >(&TProfile3D::Streamer));

    DEBUG_MSG("Adding wrapper for int TProfile3D::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProfile3D::DeclFileLine()
    // defined in /opt/root63206jll/include/TProfile3D.h:150:4
    module_.method("TProfile3D!DeclFileLine", static_cast<int (*)() >(&TProfile3D::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TProfile3D>> type_;
};
std::shared_ptr<Wrapper> newJlTProfile3D(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTProfile3D(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TScatter> : std::false_type { };
  template<> struct DefaultConstructible<TScatter> : std::false_type { };
template<> struct SuperType<TScatter> { typedef TNamed type; };
}

// Class generating the wrapper for type TScatter
// signature to use in the veto file: TScatter
struct JlTScatter: public Wrapper {

  JlTScatter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TScatter (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TScatter.h:32:7
    jlcxx::TypeWrapper<TScatter>  t = jlModule.add_type<TScatter>("TScatter",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TScatter>>(new jlcxx::TypeWrapper<TScatter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TScatter::TScatter(Int_t) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TScatter.h:47:4
    t.constructor<Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TScatter::TScatter(Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *) (" __HERE__ ")");
    // defined in /opt/root63206jll/include/TScatter.h:48:4
    t.constructor<Int_t, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Int_t TScatter::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TScatter::DistancetoPrimitive(Int_t, Int_t)
    // defined in /opt/root63206jll/include/TScatter.h:51:14
    t.method("DistancetoPrimitive", static_cast<Int_t (TScatter::*)(Int_t, Int_t) >(&TScatter::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for void TScatter::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /opt/root63206jll/include/TScatter.h:52:14
    t.method("ExecuteEvent", static_cast<void (TScatter::*)(Int_t, Int_t, Int_t) >(&TScatter::ExecuteEvent));

    DEBUG_MSG("Adding wrapper for Double_t * TScatter::GetColor() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TScatter::GetColor()
    // defined in /opt/root63206jll/include/TScatter.h:53:14
    t.method("GetColor", static_cast<Double_t * (TScatter::*)()  const>(&TScatter::GetColor));

    DEBUG_MSG("Adding wrapper for Double_t * TScatter::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TScatter::GetSize()
    // defined in /opt/root63206jll/include/TScatter.h:54:14
    t.method("GetSize", static_cast<Double_t * (TScatter::*)()  const>(&TScatter::GetSize));

    DEBUG_MSG("Adding wrapper for Double_t TScatter::GetMargin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TScatter::GetMargin()
    // defined in /opt/root63206jll/include/TScatter.h:55:14
    t.method("GetMargin", static_cast<Double_t (TScatter::*)()  const>(&TScatter::GetMargin));

    DEBUG_MSG("Adding wrapper for Double_t TScatter::GetMaxMarkerSize() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TScatter::GetMaxMarkerSize()
    // defined in /opt/root63206jll/include/TScatter.h:56:14
    t.method("GetMaxMarkerSize", static_cast<Double_t (TScatter::*)()  const>(&TScatter::GetMaxMarkerSize));

    DEBUG_MSG("Adding wrapper for Double_t TScatter::GetMinMarkerSize() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TScatter::GetMinMarkerSize()
    // defined in /opt/root63206jll/include/TScatter.h:57:14
    t.method("GetMinMarkerSize", static_cast<Double_t (TScatter::*)()  const>(&TScatter::GetMinMarkerSize));

    DEBUG_MSG("Adding wrapper for TGraph * TScatter::GetGraph() (" __HERE__ ")");
    // signature to use in the veto list: TGraph * TScatter::GetGraph()
    // defined in /opt/root63206jll/include/TScatter.h:58:14
    t.method("GetGraph", static_cast<TGraph * (TScatter::*)()  const>(&TScatter::GetGraph));

    DEBUG_MSG("Adding wrapper for TH2F * TScatter::GetHistogram() (" __HERE__ ")");
    // signature to use in the veto list: TH2F * TScatter::GetHistogram()
    // defined in /opt/root63206jll/include/TScatter.h:59:14
    t.method("GetHistogram", static_cast<TH2F * (TScatter::*)()  const>(&TScatter::GetHistogram));

    DEBUG_MSG("Adding wrapper for void TScatter::SetMaxMarkerSize(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::SetMaxMarkerSize(Double_t)
    // defined in /opt/root63206jll/include/TScatter.h:61:14
    t.method("SetMaxMarkerSize", static_cast<void (TScatter::*)(Double_t) >(&TScatter::SetMaxMarkerSize));

    DEBUG_MSG("Adding wrapper for void TScatter::SetMinMarkerSize(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::SetMinMarkerSize(Double_t)
    // defined in /opt/root63206jll/include/TScatter.h:62:14
    t.method("SetMinMarkerSize", static_cast<void (TScatter::*)(Double_t) >(&TScatter::SetMinMarkerSize));

    DEBUG_MSG("Adding wrapper for void TScatter::SetMargin(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::SetMargin(Double_t)
    // defined in /opt/root63206jll/include/TScatter.h:63:14
    t.method("SetMargin", static_cast<void (TScatter::*)(Double_t) >(&TScatter::SetMargin));

    DEBUG_MSG("Adding wrapper for void TScatter::SetHistogram(TH2F *) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::SetHistogram(TH2F *)
    // defined in /opt/root63206jll/include/TScatter.h:64:14
    t.method("SetHistogram", static_cast<void (TScatter::*)(TH2F *) >(&TScatter::SetHistogram));

    DEBUG_MSG("Adding wrapper for void TScatter::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::Print(Option_t *)
    // defined in /opt/root63206jll/include/TScatter.h:65:14
    t.method("Print", static_cast<void (TScatter::*)(Option_t *)  const>(&TScatter::Print));
    t.method("Print", [](TScatter const& a)->void { a.Print(); });
    t.method("Print", [](TScatter const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TScatter::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::Paint(Option_t *)
    // defined in /opt/root63206jll/include/TScatter.h:67:14
    t.method("Paint", static_cast<void (TScatter::*)(Option_t *) >(&TScatter::Paint));
    t.method("Paint", [](TScatter& a)->void { a.Paint(); });
    t.method("Paint", [](TScatter* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for Version_t TScatter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TScatter::Class_Version()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!Class_Version", static_cast<Version_t (*)() >(&TScatter::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TScatter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TScatter::IsA()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    t.method("IsA", static_cast<TClass * (TScatter::*)()  const>(&TScatter::IsA));

    DEBUG_MSG("Adding wrapper for void TScatter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::StreamerNVirtual(TBuffer &)
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    t.method("StreamerNVirtual", static_cast<void (TScatter::*)(TBuffer &) >(&TScatter::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TScatter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TScatter::DeclFileName()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!DeclFileName", []() { return (std::string)TScatter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TScatter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TScatter::ImplFileLine()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!ImplFileLine", static_cast<int (*)() >(&TScatter::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TScatter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TScatter::ImplFileName()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!ImplFileName", []() { return (std::string)TScatter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TScatter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TScatter::Class_Name()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!Class_Name", []() { return (std::string)TScatter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TScatter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TScatter::Dictionary()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!Dictionary", static_cast<TClass * (*)() >(&TScatter::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TScatter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TScatter::Class()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!Class", static_cast<TClass * (*)() >(&TScatter::Class));

    DEBUG_MSG("Adding wrapper for void TScatter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TScatter::Streamer(TBuffer &)
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    t.method("Streamer", static_cast<void (TScatter::*)(TBuffer &) >(&TScatter::Streamer));

    DEBUG_MSG("Adding wrapper for int TScatter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TScatter::DeclFileLine()
    // defined in /opt/root63206jll/include/TScatter.h:70:4
    module_.method("TScatter!DeclFileLine", static_cast<int (*)() >(&TScatter::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TScatter>> type_;
};
std::shared_ptr<Wrapper> newJlTScatter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTScatter(module));
}
