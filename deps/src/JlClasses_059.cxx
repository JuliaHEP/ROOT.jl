// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTessellated> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTessellated> : std::false_type { };
template<> struct SuperType<TGeoTessellated> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoTessellated
// signature to use in the veto file: TGeoTessellated
struct JlTGeoTessellated: public Wrapper {

  JlTGeoTessellated(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTessellated (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:56:7
    jlcxx::TypeWrapper<TGeoTessellated>  t = jlModule.add_type<TGeoTessellated>("TGeoTessellated",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTessellated>>(new jlcxx::TypeWrapper<TGeoTessellated>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTessellated::TGeoTessellated(const char *, int) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:77:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name")    );
    t.constructor<const char *, int>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nfacets")    );


    DEBUG_MSG("Adding wrapper for void TGeoTessellated::TGeoTessellated(const char *, const std::vector<TGeoTessellated::Vertex_t> &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:78:4
    t.constructor<const char *, const std::vector<TGeoTessellated::Vertex_t> &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("vertices")    );

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:82:9
    t.method("ComputeBBox", [](TGeoTessellated& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTessellated* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::CloseShape(bool, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::CloseShape(bool, bool, bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:83:9
    t.method("CloseShape", [](TGeoTessellated& a)->void { a.CloseShape(); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CloseShape", [](TGeoTessellated& a, bool arg0)->void { a.CloseShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("check"));
    t.method("CloseShape", [](TGeoTessellated& a, bool arg0, bool arg1)->void { a.CloseShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"));
    t.method("CloseShape", [](TGeoTessellated& a, bool arg0, bool arg1, bool arg2)->void { a.CloseShape(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CloseShape", [](TGeoTessellated* a)->void { a->CloseShape(); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CloseShape", [](TGeoTessellated* a, bool arg0)->void { a->CloseShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("check"));
    t.method("CloseShape", [](TGeoTessellated* a, bool arg0, bool arg1)->void { a->CloseShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"));
    t.method("CloseShape", [](TGeoTessellated* a, bool arg0, bool arg1, bool arg2)->void { a->CloseShape(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("check"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::AddFacet(const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::AddFacet(const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:85:9
    t.method("AddFacet", [](TGeoTessellated& a, const TGeoTessellated::Vertex_t & arg0, const TGeoTessellated::Vertex_t & arg1, const TGeoTessellated::Vertex_t & arg2)->bool { return a.AddFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt0"), jlcxx::arg("pt1"), jlcxx::arg("pt2"));
    t.method("AddFacet", [](TGeoTessellated* a, const TGeoTessellated::Vertex_t & arg0, const TGeoTessellated::Vertex_t & arg1, const TGeoTessellated::Vertex_t & arg2)->bool { return a->AddFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt0"), jlcxx::arg("pt1"), jlcxx::arg("pt2"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::AddFacet(const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::AddFacet(const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &, const TGeoTessellated::Vertex_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:86:9
    t.method("AddFacet", [](TGeoTessellated& a, const TGeoTessellated::Vertex_t & arg0, const TGeoTessellated::Vertex_t & arg1, const TGeoTessellated::Vertex_t & arg2, const TGeoTessellated::Vertex_t & arg3)->bool { return a.AddFacet(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("pt0"), jlcxx::arg("pt1"), jlcxx::arg("pt2"), jlcxx::arg("pt3"));
    t.method("AddFacet", [](TGeoTessellated* a, const TGeoTessellated::Vertex_t & arg0, const TGeoTessellated::Vertex_t & arg1, const TGeoTessellated::Vertex_t & arg2, const TGeoTessellated::Vertex_t & arg3)->bool { return a->AddFacet(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("pt0"), jlcxx::arg("pt1"), jlcxx::arg("pt2"), jlcxx::arg("pt3"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::AddFacet(int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::AddFacet(int, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:87:9
    t.method("AddFacet", [](TGeoTessellated& a, int arg0, int arg1, int arg2)->bool { return a.AddFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"), jlcxx::arg("i3"));
    t.method("AddFacet", [](TGeoTessellated* a, int arg0, int arg1, int arg2)->bool { return a->AddFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"), jlcxx::arg("i3"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::AddFacet(int, int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::AddFacet(int, int, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:88:9
    t.method("AddFacet", [](TGeoTessellated& a, int arg0, int arg1, int arg2, int arg3)->bool { return a.AddFacet(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"), jlcxx::arg("i3"), jlcxx::arg("i4"));
    t.method("AddFacet", [](TGeoTessellated* a, int arg0, int arg1, int arg2, int arg3)->bool { return a->AddFacet(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"), jlcxx::arg("i3"), jlcxx::arg("i4"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::AddVertex(const TGeoTessellated::Vertex_t &) (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::AddVertex(const TGeoTessellated::Vertex_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:89:8
    t.method("AddVertex", [](TGeoTessellated& a, const TGeoTessellated::Vertex_t & arg0)->int { return a.AddVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vert"));
    t.method("AddVertex", [](TGeoTessellated* a, const TGeoTessellated::Vertex_t & arg0)->int { return a->AddVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vert"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::FacetCheck(int) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::FacetCheck(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:91:9
    t.method("FacetCheck", [](TGeoTessellated const& a, int arg0)->bool { return a.FacetCheck(arg0); }, jlcxx::arg("this"), jlcxx::arg("ifacet"));
    t.method("FacetCheck", [](TGeoTessellated const* a, int arg0)->bool { return a->FacetCheck(arg0); }, jlcxx::arg("this"), jlcxx::arg("ifacet"));

    DEBUG_MSG("Adding wrapper for TGeoTessellated::Vertex_t TGeoTessellated::FacetComputeNormal(int, bool &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTessellated::Vertex_t TGeoTessellated::FacetComputeNormal(int, bool &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:92:13
    t.method("FacetComputeNormal", [](TGeoTessellated const& a, int arg0, bool & arg1)->TGeoTessellated::Vertex_t { return a.FacetComputeNormal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ifacet"), jlcxx::arg("degenerated"));
    t.method("FacetComputeNormal", [](TGeoTessellated const* a, int arg0, bool & arg1)->TGeoTessellated::Vertex_t { return a->FacetComputeNormal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ifacet"), jlcxx::arg("degenerated"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::GetNfacets() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::GetNfacets()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:94:8
    t.method("GetNfacets", [](TGeoTessellated const& a)->int { return a.GetNfacets(); }, jlcxx::arg("this"));
    t.method("GetNfacets", [](TGeoTessellated const* a)->int { return a->GetNfacets(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::GetNsegments() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::GetNsegments()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:95:8
    t.method("GetNsegments", [](TGeoTessellated const& a)->int { return a.GetNsegments(); }, jlcxx::arg("this"));
    t.method("GetNsegments", [](TGeoTessellated const* a)->int { return a->GetNsegments(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::GetNvertices() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::GetNvertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:96:8
    t.method("GetNvertices", [](TGeoTessellated const& a)->int { return a.GetNvertices(); }, jlcxx::arg("this"));
    t.method("GetNvertices", [](TGeoTessellated const* a)->int { return a->GetNvertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::IsClosedBody() (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::IsClosedBody()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:97:9
    t.method("IsClosedBody", [](TGeoTessellated const& a)->bool { return a.IsClosedBody(); }, jlcxx::arg("this"));
    t.method("IsClosedBody", [](TGeoTessellated const* a)->bool { return a->IsClosedBody(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::IsDefined() (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::IsDefined()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:98:9
    t.method("IsDefined", [](TGeoTessellated const& a)->bool { return a.IsDefined(); }, jlcxx::arg("this"));
    t.method("IsDefined", [](TGeoTessellated const* a)->bool { return a->IsDefined(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TGeoFacet & TGeoTessellated::GetFacet(int) (" __HERE__ ")");
    // signature to use in the veto list: const TGeoFacet & TGeoTessellated::GetFacet(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:100:21
    t.method("GetFacet", [](TGeoTessellated const& a, int arg0)->const TGeoFacet & { return a.GetFacet(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetFacet", [](TGeoTessellated const* a, int arg0)->const TGeoFacet & { return a->GetFacet(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for const TGeoTessellated::Vertex_t & TGeoTessellated::GetVertex(int) (" __HERE__ ")");
    // signature to use in the veto list: const TGeoTessellated::Vertex_t & TGeoTessellated::GetVertex(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:101:20
    t.method("GetVertex", [](TGeoTessellated const& a, int arg0)->const TGeoTessellated::Vertex_t & { return a.GetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetVertex", [](TGeoTessellated const* a, int arg0)->const TGeoTessellated::Vertex_t & { return a->GetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::DistancetoPrimitive(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::DistancetoPrimitive(int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:103:8
    t.method("DistancetoPrimitive", [](TGeoTessellated& a, int arg0, int arg1)->int { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("DistancetoPrimitive", [](TGeoTessellated* a, int arg0, int arg1)->int { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::GetMeshNumbers(int &, int &, int &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::GetMeshNumbers(int &, int &, int &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:105:9
    t.method("GetMeshNumbers", [](TGeoTessellated const& a, int & arg0, int & arg1, int & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoTessellated const* a, int & arg0, int & arg1, int & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:106:8
    t.method("GetNmeshVertices", [](TGeoTessellated const& a)->int { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoTessellated const* a)->int { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:107:9
    t.method("InspectShape", [](TGeoTessellated const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTessellated const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:109:9
    t.method("Print", [](TGeoTessellated const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoTessellated const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TGeoTessellated const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoTessellated const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::SetPoints(double *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::SetPoints(double *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:111:9
    t.method("SetPoints", [](TGeoTessellated const& a, double * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTessellated const* a, double * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:112:9
    t.method("SetPoints", [](TGeoTessellated const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTessellated const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:114:9
    t.method("Sizeof3D", [](TGeoTessellated const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTessellated const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::ResizeCenter(double) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::ResizeCenter(double)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:117:9
    t.method("ResizeCenter", [](TGeoTessellated& a, double arg0)->void { a.ResizeCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("maxsize"));
    t.method("ResizeCenter", [](TGeoTessellated* a, double arg0)->void { a->ResizeCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("maxsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::FlipFacets() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::FlipFacets()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:120:9
    t.method("FlipFacets", [](TGeoTessellated& a)->void { a.FlipFacets(); }, jlcxx::arg("this"));
    t.method("FlipFacets", [](TGeoTessellated* a)->void { a->FlipFacets(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool TGeoTessellated::CheckClosure(bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoTessellated::CheckClosure(bool, bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:126:9
    t.method("CheckClosure", [](TGeoTessellated& a)->bool { return a.CheckClosure(); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CheckClosure", [](TGeoTessellated& a, bool arg0)->bool { return a.CheckClosure(arg0); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"));
    t.method("CheckClosure", [](TGeoTessellated& a, bool arg0, bool arg1)->bool { return a.CheckClosure(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CheckClosure", [](TGeoTessellated* a)->bool { return a->CheckClosure(); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));
    t.method("CheckClosure", [](TGeoTessellated* a, bool arg0)->bool { return a->CheckClosure(arg0); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"));
    t.method("CheckClosure", [](TGeoTessellated* a, bool arg0, bool arg1)->bool { return a->CheckClosure(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("fixFlipped"), jlcxx::arg("verbose"));

    DEBUG_MSG("Adding wrapper for TGeoTessellated * TGeoTessellated::ImportFromObjFormat(const char *, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTessellated * TGeoTessellated::ImportFromObjFormat(const char *, bool, bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTessellated.h:129:28
    module_.method("TGeoTessellated!ImportFromObjFormat", [](const char * arg0)->TGeoTessellated * { return TGeoTessellated::ImportFromObjFormat(arg0); }, jlcxx::arg("objfile"));
    module_.method("TGeoTessellated!ImportFromObjFormat", [](const char * arg0, bool arg1)->TGeoTessellated * { return TGeoTessellated::ImportFromObjFormat(arg0, arg1); }, jlcxx::arg("objfile"), jlcxx::arg("check"));
    module_.method("TGeoTessellated!ImportFromObjFormat", [](const char * arg0, bool arg1, bool arg2)->TGeoTessellated * { return TGeoTessellated::ImportFromObjFormat(arg0, arg1, arg2); }, jlcxx::arg("objfile"), jlcxx::arg("check"), jlcxx::arg("verbose"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTessellated::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTessellated::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTessellated!Class_Version", []()->Version_t { return TGeoTessellated::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTessellated::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTessellated::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTessellated const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTessellated const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTessellated& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTessellated* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTessellated::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTessellated::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTessellated!DeclFileName", []() { return (std::string)TGeoTessellated::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTessellated!ImplFileLine", []()->int { return TGeoTessellated::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTessellated::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTessellated::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTessellated!ImplFileName", []() { return (std::string)TGeoTessellated::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTessellated::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTessellated::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTessellated!Class_Name", []() { return (std::string)TGeoTessellated::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTessellated::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTessellated::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTessellated!Dictionary", []()->TClass * { return TGeoTessellated::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTessellated::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTessellated::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTessellated!Class", []()->TClass * { return TGeoTessellated::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTessellated::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTessellated::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTessellated& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTessellated* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTessellated::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTessellated::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTessellated!DeclFileLine", []()->int { return TGeoTessellated::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTessellated>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTessellated(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTessellated(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTorus> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTorus> : std::false_type { };
template<> struct SuperType<TGeoTorus> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoTorus
// signature to use in the veto file: TGeoTorus
struct JlTGeoTorus: public Wrapper {

  JlTGeoTorus(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTorus (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:17:7
    jlcxx::TypeWrapper<TGeoTorus>  t = jlModule.add_type<TGeoTorus>("TGeoTorus",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTorus>>(new jlcxx::TypeWrapper<TGeoTorus>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:30:13
    t.method("Capacity", [](TGeoTorus const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoTorus const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::Daxis(const Double_t *, const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::Daxis(const Double_t *, const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:31:13
    t.method("Daxis", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a.Daxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));
    t.method("Daxis", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a->Daxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::DDaxis(const Double_t *, const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::DDaxis(const Double_t *, const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:32:13
    t.method("DDaxis", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a.DDaxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));
    t.method("DDaxis", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a->DDaxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::DDDaxis(const Double_t *, const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::DDDaxis(const Double_t *, const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:33:13
    t.method("DDDaxis", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a.DDDaxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));
    t.method("DDDaxis", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t arg2)->Double_t { return a->DDDaxis(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("t"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::ToBoundary(const Double_t *, const Double_t *, Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::ToBoundary(const Double_t *, const Double_t *, Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:34:13
    t.method("ToBoundary", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t arg2, Bool_t arg3)->Double_t { return a.ToBoundary(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("r"), jlcxx::arg("in"));
    t.method("ToBoundary", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t arg2, Bool_t arg3)->Double_t { return a->ToBoundary(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("pt"), jlcxx::arg("dir"), jlcxx::arg("r"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTorus::SolveCubic(Double_t, Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTorus::SolveCubic(Double_t, Double_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:35:10
    t.method("SolveCubic", [](TGeoTorus const& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t * arg3)->Int_t { return a.SolveCubic(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("c"), jlcxx::arg("x"));
    t.method("SolveCubic", [](TGeoTorus const* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t * arg3)->Int_t { return a->SolveCubic(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("c"), jlcxx::arg("x"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTorus::SolveQuartic(Double_t, Double_t, Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTorus::SolveQuartic(Double_t, Double_t, Double_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:36:10
    t.method("SolveQuartic", [](TGeoTorus const& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t * arg4)->Int_t { return a.SolveQuartic(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("c"), jlcxx::arg("d"), jlcxx::arg("x"));
    t.method("SolveQuartic", [](TGeoTorus const* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t * arg4)->Int_t { return a->SolveQuartic(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("c"), jlcxx::arg("d"), jlcxx::arg("x"));


    DEBUG_MSG("Adding wrapper for void TGeoTorus::TGeoTorus(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:41:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax")    );
    t.constructor<Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1")    );
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi")    );


    DEBUG_MSG("Adding wrapper for void TGeoTorus::TGeoTorus(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:42:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax")    );
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1")    );
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi")    );


    DEBUG_MSG("Adding wrapper for void TGeoTorus::TGeoTorus(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:43:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for void TGeoTorus::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:48:9
    t.method("ComputeBBox", [](TGeoTorus& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTorus* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:49:9
    t.method("ComputeNormal", [](TGeoTorus& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoTorus* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:50:9
    t.method("ComputeNormal_v", [](TGeoTorus& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoTorus* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTorus::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTorus::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:51:11
    t.method("Contains", [](TGeoTorus const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoTorus const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:52:9
    t.method("Contains_v", [](TGeoTorus const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoTorus const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:53:13
    t.method("DistFromInside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:55:9
    t.method("DistFromInside_v", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:57:13
    t.method("DistFromOutside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:59:9
    t.method("DistFromOutside_v", [](TGeoTorus const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTorus const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTorus::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTorus::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:61:10
    t.method("DistancetoPrimitive", [](TGeoTorus& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoTorus* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTorus::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTorus::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:63:4
    t.method("Divide", [](TGeoTorus& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTorus* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTorus::GetAxisName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTorus::GetAxisName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:64:16
    t.method("GetAxisName", [](TGeoTorus const& a, Int_t arg0) { return (std::string)a.GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));
    t.method("GetAxisName", [](TGeoTorus const* a, Int_t arg0) { return (std::string)a->GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:65:13
    t.method("GetAxisRange", [](TGeoTorus const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoTorus const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:66:9
    t.method("GetBoundingCylinder", [](TGeoTorus const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoTorus const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTorus::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTorus::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:68:10
    t.method("GetByteCount", [](TGeoTorus const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoTorus const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTorus::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTorus::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:69:15
    t.method("GetMakeRuntimeShape", [](TGeoTorus const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTorus const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:70:9
    t.method("GetMeshNumbers", [](TGeoTorus const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoTorus const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTorus::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTorus::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:71:10
    t.method("GetNmeshVertices", [](TGeoTorus const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoTorus const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTorus::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTorus::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:72:11
    t.method("GetPointsOnSegments", [](TGeoTorus const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetPointsOnSegments", [](TGeoTorus const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetR() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetR()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:73:13
    t.method("GetR", [](TGeoTorus const& a)->Double_t { return a.GetR(); }, jlcxx::arg("this"));
    t.method("GetR", [](TGeoTorus const* a)->Double_t { return a->GetR(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetRmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetRmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:74:13
    t.method("GetRmin", [](TGeoTorus const& a)->Double_t { return a.GetRmin(); }, jlcxx::arg("this"));
    t.method("GetRmin", [](TGeoTorus const* a)->Double_t { return a->GetRmin(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetRmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetRmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:75:13
    t.method("GetRmax", [](TGeoTorus const& a)->Double_t { return a.GetRmax(); }, jlcxx::arg("this"));
    t.method("GetRmax", [](TGeoTorus const* a)->Double_t { return a->GetRmax(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetPhi1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetPhi1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:76:13
    t.method("GetPhi1", [](TGeoTorus const& a)->Double_t { return a.GetPhi1(); }, jlcxx::arg("this"));
    t.method("GetPhi1", [](TGeoTorus const* a)->Double_t { return a->GetPhi1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::GetDphi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::GetDphi()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:77:13
    t.method("GetDphi", [](TGeoTorus const& a)->Double_t { return a.GetDphi(); }, jlcxx::arg("this"));
    t.method("GetDphi", [](TGeoTorus const* a)->Double_t { return a->GetDphi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:78:9
    t.method("InspectShape", [](TGeoTorus const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTorus const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTorus::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTorus::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:79:11
    t.method("IsCylType", [](TGeoTorus const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoTorus const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTorus::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTorus::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:81:13
    t.method("Safety", [](TGeoTorus const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTorus const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTorus const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTorus const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:82:9
    t.method("Safety_v", [](TGeoTorus const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTorus const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::SetTorusDimensions(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::SetTorusDimensions(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:84:9
    t.method("SetTorusDimensions", [](TGeoTorus& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.SetTorusDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi"));
    t.method("SetTorusDimensions", [](TGeoTorus* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->SetTorusDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:85:9
    t.method("SetDimensions", [](TGeoTorus& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTorus* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:86:9
    t.method("SetPoints", [](TGeoTorus const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTorus const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:87:9
    t.method("SetPoints", [](TGeoTorus const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTorus const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTorus.h:89:9
    t.method("Sizeof3D", [](TGeoTorus const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTorus const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTorus::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTorus::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTorus!Class_Version", []()->Version_t { return TGeoTorus::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTorus::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTorus::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTorus const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTorus const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTorus::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTorus& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTorus* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTorus::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTorus::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTorus!DeclFileName", []() { return (std::string)TGeoTorus::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTorus::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTorus::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTorus!ImplFileLine", []()->int { return TGeoTorus::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTorus::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTorus::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTorus!ImplFileName", []() { return (std::string)TGeoTorus::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTorus::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTorus::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTorus!Class_Name", []() { return (std::string)TGeoTorus::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTorus::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTorus::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTorus!Dictionary", []()->TClass * { return TGeoTorus::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTorus::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTorus::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTorus!Class", []()->TClass * { return TGeoTorus::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTorus::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTorus::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTorus& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTorus* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTorus::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTorus::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTorus!DeclFileLine", []()->int { return TGeoTorus::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTorus>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTorus(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTorus(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTrd1> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTrd1> : std::false_type { };
template<> struct SuperType<TGeoTrd1> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoTrd1
// signature to use in the veto file: TGeoTrd1
struct JlTGeoTrd1: public Wrapper {

  JlTGeoTrd1(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTrd1 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:17:7
    jlcxx::TypeWrapper<TGeoTrd1>  t = jlModule.add_type<TGeoTrd1>("TGeoTrd1",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTrd1>>(new jlcxx::TypeWrapper<TGeoTrd1>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd1::TGeoTrd1(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:32:4
    t.constructor<Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd1::TGeoTrd1(const char *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:33:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd1::TGeoTrd1(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:34:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:39:13
    t.method("Capacity", [](TGeoTrd1 const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoTrd1 const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:40:9
    t.method("ComputeBBox", [](TGeoTrd1& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTrd1* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:41:9
    t.method("ComputeNormal", [](TGeoTrd1& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoTrd1* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:42:9
    t.method("ComputeNormal_v", [](TGeoTrd1& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoTrd1* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTrd1::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTrd1::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:43:11
    t.method("Contains", [](TGeoTrd1 const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoTrd1 const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:44:9
    t.method("Contains_v", [](TGeoTrd1 const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoTrd1 const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:45:13
    t.method("DistFromInside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:47:9
    t.method("DistFromInside_v", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:49:13
    t.method("DistFromOutside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:51:9
    t.method("DistFromOutside_v", [](TGeoTrd1 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTrd1 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTrd1::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTrd1::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:54:4
    t.method("Divide", [](TGeoTrd1& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTrd1* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:55:13
    t.method("GetAxisRange", [](TGeoTrd1 const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoTrd1 const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:56:9
    t.method("GetBoundingCylinder", [](TGeoTrd1 const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoTrd1 const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTrd1::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTrd1::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:57:10
    t.method("GetByteCount", [](TGeoTrd1 const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoTrd1 const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::GetDx1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::GetDx1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:58:13
    t.method("GetDx1", [](TGeoTrd1 const& a)->Double_t { return a.GetDx1(); }, jlcxx::arg("this"));
    t.method("GetDx1", [](TGeoTrd1 const* a)->Double_t { return a->GetDx1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::GetDx2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::GetDx2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:59:13
    t.method("GetDx2", [](TGeoTrd1 const& a)->Double_t { return a.GetDx2(); }, jlcxx::arg("this"));
    t.method("GetDx2", [](TGeoTrd1 const* a)->Double_t { return a->GetDx2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::GetDy() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::GetDy()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:60:13
    t.method("GetDy", [](TGeoTrd1 const& a)->Double_t { return a.GetDy(); }, jlcxx::arg("this"));
    t.method("GetDy", [](TGeoTrd1 const* a)->Double_t { return a->GetDy(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::GetDz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:61:13
    t.method("GetDz", [](TGeoTrd1 const& a)->Double_t { return a.GetDz(); }, jlcxx::arg("this"));
    t.method("GetDz", [](TGeoTrd1 const* a)->Double_t { return a->GetDz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTrd1::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTrd1::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:63:4
    t.method("GetFittingBox", [](TGeoTrd1 const& a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("GetFittingBox", [](TGeoTrd1 const* a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTrd1::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTrd1::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:64:15
    t.method("GetMakeRuntimeShape", [](TGeoTrd1 const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTrd1 const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::GetVisibleCorner(const Double_t *, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::GetVisibleCorner(const Double_t *, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:65:9
    t.method("GetVisibleCorner", [](TGeoTrd1 const& a, const Double_t * arg0, Double_t * arg1, Double_t * arg2)->void { a.GetVisibleCorner(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vertex"), jlcxx::arg("normals"));
    t.method("GetVisibleCorner", [](TGeoTrd1 const* a, const Double_t * arg0, Double_t * arg1, Double_t * arg2)->void { a->GetVisibleCorner(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vertex"), jlcxx::arg("normals"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::GetOppositeCorner(const Double_t *, Int_t, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::GetOppositeCorner(const Double_t *, Int_t, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:66:9
    t.method("GetOppositeCorner", [](TGeoTrd1 const& a, const Double_t * arg0, Int_t arg1, Double_t * arg2, Double_t * arg3)->void { a.GetOppositeCorner(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inorm"), jlcxx::arg("vertex"), jlcxx::arg("normals"));
    t.method("GetOppositeCorner", [](TGeoTrd1 const* a, const Double_t * arg0, Int_t arg1, Double_t * arg2, Double_t * arg3)->void { a->GetOppositeCorner(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inorm"), jlcxx::arg("vertex"), jlcxx::arg("normals"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:67:9
    t.method("InspectShape", [](TGeoTrd1 const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTrd1 const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTrd1::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTrd1::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:68:11
    t.method("IsCylType", [](TGeoTrd1 const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoTrd1 const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd1::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd1::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:69:13
    t.method("Safety", [](TGeoTrd1 const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrd1 const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTrd1 const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrd1 const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:70:9
    t.method("Safety_v", [](TGeoTrd1 const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTrd1 const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:72:9
    t.method("SetDimensions", [](TGeoTrd1& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTrd1* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:73:9
    t.method("SetPoints", [](TGeoTrd1 const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTrd1 const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:74:9
    t.method("SetPoints", [](TGeoTrd1 const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTrd1 const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::SetVertex(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::SetVertex(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:75:9
    t.method("SetVertex", [](TGeoTrd1 const& a, Double_t * arg0)->void { a.SetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vertex"));
    t.method("SetVertex", [](TGeoTrd1 const* a, Double_t * arg0)->void { a->SetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vertex"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd1.h:76:9
    t.method("Sizeof3D", [](TGeoTrd1 const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTrd1 const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTrd1::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTrd1::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTrd1!Class_Version", []()->Version_t { return TGeoTrd1::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd1::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd1::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTrd1 const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTrd1 const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTrd1& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTrd1* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd1::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd1::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTrd1!DeclFileName", []() { return (std::string)TGeoTrd1::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTrd1::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrd1::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTrd1!ImplFileLine", []()->int { return TGeoTrd1::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd1::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd1::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTrd1!ImplFileName", []() { return (std::string)TGeoTrd1::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd1::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd1::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTrd1!Class_Name", []() { return (std::string)TGeoTrd1::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd1::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd1::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTrd1!Dictionary", []()->TClass * { return TGeoTrd1::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd1::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd1::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTrd1!Class", []()->TClass * { return TGeoTrd1::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTrd1::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd1::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTrd1& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTrd1* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTrd1::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrd1::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTrd1!DeclFileLine", []()->int { return TGeoTrd1::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTrd1>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTrd1(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTrd1(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTrd2> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTrd2> : std::false_type { };
template<> struct SuperType<TGeoTrd2> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoTrd2
// signature to use in the veto file: TGeoTrd2
struct JlTGeoTrd2: public Wrapper {

  JlTGeoTrd2(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTrd2 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:17:7
    jlcxx::TypeWrapper<TGeoTrd2>  t = jlModule.add_type<TGeoTrd2>("TGeoTrd2",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTrd2>>(new jlcxx::TypeWrapper<TGeoTrd2>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd2::TGeoTrd2(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:33:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy1"), jlcxx::arg("dy2"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd2::TGeoTrd2(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:34:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy1"), jlcxx::arg("dy2"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrd2::TGeoTrd2(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:35:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:40:13
    t.method("Capacity", [](TGeoTrd2 const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoTrd2 const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTrd2::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTrd2::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:41:11
    t.method("Contains", [](TGeoTrd2 const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoTrd2 const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:42:9
    t.method("Contains_v", [](TGeoTrd2 const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoTrd2 const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:43:9
    t.method("ComputeBBox", [](TGeoTrd2& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTrd2* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:44:9
    t.method("ComputeNormal", [](TGeoTrd2& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoTrd2* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:45:9
    t.method("ComputeNormal_v", [](TGeoTrd2& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoTrd2* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:46:13
    t.method("DistFromInside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:48:9
    t.method("DistFromInside_v", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:50:13
    t.method("DistFromOutside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:52:9
    t.method("DistFromOutside_v", [](TGeoTrd2 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTrd2 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTrd2::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTrd2::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:55:4
    t.method("Divide", [](TGeoTrd2& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTrd2* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:56:13
    t.method("GetAxisRange", [](TGeoTrd2 const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoTrd2 const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:57:9
    t.method("GetBoundingCylinder", [](TGeoTrd2 const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoTrd2 const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTrd2::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTrd2::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:58:10
    t.method("GetByteCount", [](TGeoTrd2 const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoTrd2 const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetDx1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetDx1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:59:13
    t.method("GetDx1", [](TGeoTrd2 const& a)->Double_t { return a.GetDx1(); }, jlcxx::arg("this"));
    t.method("GetDx1", [](TGeoTrd2 const* a)->Double_t { return a->GetDx1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetDx2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetDx2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:60:13
    t.method("GetDx2", [](TGeoTrd2 const& a)->Double_t { return a.GetDx2(); }, jlcxx::arg("this"));
    t.method("GetDx2", [](TGeoTrd2 const* a)->Double_t { return a->GetDx2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetDy1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetDy1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:61:13
    t.method("GetDy1", [](TGeoTrd2 const& a)->Double_t { return a.GetDy1(); }, jlcxx::arg("this"));
    t.method("GetDy1", [](TGeoTrd2 const* a)->Double_t { return a->GetDy1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetDy2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetDy2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:62:13
    t.method("GetDy2", [](TGeoTrd2 const& a)->Double_t { return a.GetDy2(); }, jlcxx::arg("this"));
    t.method("GetDy2", [](TGeoTrd2 const* a)->Double_t { return a->GetDy2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::GetDz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:63:13
    t.method("GetDz", [](TGeoTrd2 const& a)->Double_t { return a.GetDz(); }, jlcxx::arg("this"));
    t.method("GetDz", [](TGeoTrd2 const* a)->Double_t { return a->GetDz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTrd2::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTrd2::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:65:4
    t.method("GetFittingBox", [](TGeoTrd2 const& a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("GetFittingBox", [](TGeoTrd2 const* a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTrd2::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTrd2::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:66:15
    t.method("GetMakeRuntimeShape", [](TGeoTrd2 const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTrd2 const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::GetVisibleCorner(const Double_t *, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::GetVisibleCorner(const Double_t *, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:67:9
    t.method("GetVisibleCorner", [](TGeoTrd2 const& a, const Double_t * arg0, Double_t * arg1, Double_t * arg2)->void { a.GetVisibleCorner(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vertex"), jlcxx::arg("normals"));
    t.method("GetVisibleCorner", [](TGeoTrd2 const* a, const Double_t * arg0, Double_t * arg1, Double_t * arg2)->void { a->GetVisibleCorner(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vertex"), jlcxx::arg("normals"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::GetOppositeCorner(const Double_t *, Int_t, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::GetOppositeCorner(const Double_t *, Int_t, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:68:9
    t.method("GetOppositeCorner", [](TGeoTrd2 const& a, const Double_t * arg0, Int_t arg1, Double_t * arg2, Double_t * arg3)->void { a.GetOppositeCorner(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inorm"), jlcxx::arg("vertex"), jlcxx::arg("normals"));
    t.method("GetOppositeCorner", [](TGeoTrd2 const* a, const Double_t * arg0, Int_t arg1, Double_t * arg2, Double_t * arg3)->void { a->GetOppositeCorner(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inorm"), jlcxx::arg("vertex"), jlcxx::arg("normals"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:69:9
    t.method("InspectShape", [](TGeoTrd2 const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTrd2 const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTrd2::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTrd2::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:70:11
    t.method("IsCylType", [](TGeoTrd2 const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoTrd2 const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrd2::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrd2::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:71:13
    t.method("Safety", [](TGeoTrd2 const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrd2 const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTrd2 const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrd2 const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:72:9
    t.method("Safety_v", [](TGeoTrd2 const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTrd2 const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:74:9
    t.method("SetDimensions", [](TGeoTrd2& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTrd2* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:75:9
    t.method("SetPoints", [](TGeoTrd2 const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTrd2 const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:76:9
    t.method("SetPoints", [](TGeoTrd2 const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTrd2 const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::SetVertex(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::SetVertex(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:77:9
    t.method("SetVertex", [](TGeoTrd2 const& a, Double_t * arg0)->void { a.SetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vertex"));
    t.method("SetVertex", [](TGeoTrd2 const* a, Double_t * arg0)->void { a->SetVertex(arg0); }, jlcxx::arg("this"), jlcxx::arg("vertex"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTrd2.h:78:9
    t.method("Sizeof3D", [](TGeoTrd2 const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTrd2 const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTrd2::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTrd2::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTrd2!Class_Version", []()->Version_t { return TGeoTrd2::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd2::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd2::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTrd2 const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTrd2 const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTrd2& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTrd2* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd2::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd2::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTrd2!DeclFileName", []() { return (std::string)TGeoTrd2::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTrd2::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrd2::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTrd2!ImplFileLine", []()->int { return TGeoTrd2::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd2::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd2::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTrd2!ImplFileName", []() { return (std::string)TGeoTrd2::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrd2::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrd2::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTrd2!Class_Name", []() { return (std::string)TGeoTrd2::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd2::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd2::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTrd2!Dictionary", []()->TClass * { return TGeoTrd2::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrd2::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrd2::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTrd2!Class", []()->TClass * { return TGeoTrd2::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTrd2::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrd2::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTrd2& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTrd2* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTrd2::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrd2::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTrd2!DeclFileLine", []()->int { return TGeoTrd2::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTrd2>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTrd2(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTrd2(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoXtru> : std::false_type { };
  template<> struct DefaultConstructible<TGeoXtru> : std::false_type { };
template<> struct SuperType<TGeoXtru> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoXtru
// signature to use in the veto file: TGeoXtru
struct JlTGeoXtru: public Wrapper {

  JlTGeoXtru(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoXtru (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:22:7
    jlcxx::TypeWrapper<TGeoXtru>  t = jlModule.add_type<TGeoXtru>("TGeoXtru",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoXtru>>(new jlcxx::TypeWrapper<TGeoXtru>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );

    DEBUG_MSG("Adding wrapper for TGeoXtru::ThreadData_t & TGeoXtru::GetThreadData() (" __HERE__ ")");
    // signature to use in the veto list: TGeoXtru::ThreadData_t & TGeoXtru::GetThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:34:18
    t.method("GetThreadData", [](TGeoXtru const& a)->TGeoXtru::ThreadData_t & { return a.GetThreadData(); }, jlcxx::arg("this"));
    t.method("GetThreadData", [](TGeoXtru const* a)->TGeoXtru::ThreadData_t & { return a->GetThreadData(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:35:9
    t.method("ClearThreadData", [](TGeoXtru const& a)->void { a.ClearThreadData(); }, jlcxx::arg("this"));
    t.method("ClearThreadData", [](TGeoXtru const* a)->void { a->ClearThreadData(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:36:9
    t.method("CreateThreadData", [](TGeoXtru& a, Int_t arg0)->void { a.CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));
    t.method("CreateThreadData", [](TGeoXtru* a, Int_t arg0)->void { a->CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));


    DEBUG_MSG("Adding wrapper for void TGeoXtru::TGeoXtru(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:70:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("nz")    );


    DEBUG_MSG("Adding wrapper for void TGeoXtru::TGeoXtru(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:71:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("param")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:75:13
    t.method("Capacity", [](TGeoXtru const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoXtru const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:76:9
    t.method("ComputeBBox", [](TGeoXtru& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoXtru* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:77:9
    t.method("ComputeNormal", [](TGeoXtru& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoXtru* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:78:9
    t.method("ComputeNormal_v", [](TGeoXtru& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoXtru* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoXtru::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoXtru::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:79:11
    t.method("Contains", [](TGeoXtru const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoXtru const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:80:9
    t.method("Contains_v", [](TGeoXtru const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoXtru const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoXtru::DefinePolygon(Int_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoXtru::DefinePolygon(Int_t, const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:81:11
    t.method("DefinePolygon", [](TGeoXtru& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->Bool_t { return a.DefinePolygon(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("xv"), jlcxx::arg("yv"));
    t.method("DefinePolygon", [](TGeoXtru* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->Bool_t { return a->DefinePolygon(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("xv"), jlcxx::arg("yv"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::DefineSection(Int_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::DefineSection(Int_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:82:17
    t.method("DefineSection", [](TGeoXtru& a, Int_t arg0, Double_t arg1)->void { a.DefineSection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"));
    t.method("DefineSection", [](TGeoXtru& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.DefineSection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"));
    t.method("DefineSection", [](TGeoXtru& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.DefineSection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"), jlcxx::arg("y0"));
    t.method("DefineSection", [](TGeoXtru& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.DefineSection(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("scale"));
    t.method("DefineSection", [](TGeoXtru* a, Int_t arg0, Double_t arg1)->void { a->DefineSection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"));
    t.method("DefineSection", [](TGeoXtru* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->DefineSection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"));
    t.method("DefineSection", [](TGeoXtru* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->DefineSection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"), jlcxx::arg("y0"));
    t.method("DefineSection", [](TGeoXtru* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->DefineSection(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("snum"), jlcxx::arg("z"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("scale"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:83:13
    t.method("DistFromInside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:85:9
    t.method("DistFromInside_v", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:87:13
    t.method("DistFromOutside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:89:9
    t.method("DistFromOutside_v", [](TGeoXtru const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoXtru const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoXtru::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoXtru::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:91:10
    t.method("DistancetoPrimitive", [](TGeoXtru& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoXtru* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::DrawPolygon(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::DrawPolygon(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:92:9
    t.method("DrawPolygon", [](TGeoXtru& a)->void { a.DrawPolygon(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawPolygon", [](TGeoXtru& a, Option_t * arg0)->void { a.DrawPolygon(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawPolygon", [](TGeoXtru* a)->void { a->DrawPolygon(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawPolygon", [](TGeoXtru* a, Option_t * arg0)->void { a->DrawPolygon(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoXtru::GetNz() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoXtru::GetNz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:95:10
    t.method("GetNz", [](TGeoXtru const& a)->Int_t { return a.GetNz(); }, jlcxx::arg("this"));
    t.method("GetNz", [](TGeoXtru const* a)->Int_t { return a->GetNz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoXtru::GetNvert() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoXtru::GetNvert()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:96:10
    t.method("GetNvert", [](TGeoXtru const& a)->Int_t { return a.GetNvert(); }, jlcxx::arg("this"));
    t.method("GetNvert", [](TGeoXtru const* a)->Int_t { return a->GetNvert(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetX(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:97:13
    t.method("GetX", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetX(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetX", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetX(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetY(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:98:13
    t.method("GetY", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetY(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetY", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetY(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetXOffset(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetXOffset(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:99:13
    t.method("GetXOffset", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetXOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetXOffset", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetXOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetYOffset(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetYOffset(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:100:13
    t.method("GetYOffset", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetYOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetYOffset", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetYOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetScale(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetScale(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:101:13
    t.method("GetScale", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetScale(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetScale", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetScale(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoXtru::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoXtru::GetZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:102:14
    t.method("GetZ", [](TGeoXtru const& a)->Double_t * { return a.GetZ(); }, jlcxx::arg("this"));
    t.method("GetZ", [](TGeoXtru const* a)->Double_t * { return a->GetZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::GetZ(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::GetZ(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:103:13
    t.method("GetZ", [](TGeoXtru const& a, Int_t arg0)->Double_t { return a.GetZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipl"));
    t.method("GetZ", [](TGeoXtru const* a, Int_t arg0)->Double_t { return a->GetZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipl"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoXtru::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoXtru::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:104:15
    t.method("GetMakeRuntimeShape", [](TGeoXtru const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetMakeRuntimeShape", [](TGeoXtru const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:105:9
    t.method("GetMeshNumbers", [](TGeoXtru const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoXtru const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoXtru::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoXtru::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:106:10
    t.method("GetNmeshVertices", [](TGeoXtru const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoXtru const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:107:9
    t.method("InspectShape", [](TGeoXtru const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoXtru const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t & TGeoXtru::Z(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t & TGeoXtru::Z(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:109:14
    t.method("Z", [](TGeoXtru& a, Int_t arg0)->Double_t & { return a.Z(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipl"));
    t.method("Z", [](TGeoXtru* a, Int_t arg0)->Double_t & { return a->Z(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipl"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoXtru::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoXtru::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:110:13
    t.method("Safety", [](TGeoXtru const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoXtru const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoXtru const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoXtru const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:111:9
    t.method("Safety_v", [](TGeoXtru const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoXtru const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::SetCurrentZ(Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::SetCurrentZ(Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:113:9
    t.method("SetCurrentZ", [](TGeoXtru& a, Double_t arg0, Int_t arg1)->void { a.SetCurrentZ(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("z"), jlcxx::arg("iz"));
    t.method("SetCurrentZ", [](TGeoXtru* a, Double_t arg0, Int_t arg1)->void { a->SetCurrentZ(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("z"), jlcxx::arg("iz"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::SetCurrentVertices(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::SetCurrentVertices(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:114:9
    t.method("SetCurrentVertices", [](TGeoXtru& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentVertices(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("scale"));
    t.method("SetCurrentVertices", [](TGeoXtru* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentVertices(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("scale"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:115:9
    t.method("SetDimensions", [](TGeoXtru& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoXtru* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:116:9
    t.method("SetPoints", [](TGeoXtru const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoXtru const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:117:9
    t.method("SetPoints", [](TGeoXtru const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoXtru const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoXtru.h:119:9
    t.method("Sizeof3D", [](TGeoXtru const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoXtru const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoXtru::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoXtru::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoXtru!Class_Version", []()->Version_t { return TGeoXtru::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoXtru::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoXtru::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoXtru const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoXtru const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoXtru::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoXtru& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoXtru* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoXtru::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoXtru::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoXtru!DeclFileName", []() { return (std::string)TGeoXtru::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoXtru::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoXtru::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoXtru!ImplFileLine", []()->int { return TGeoXtru::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoXtru::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoXtru::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoXtru!ImplFileName", []() { return (std::string)TGeoXtru::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoXtru::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoXtru::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoXtru!Class_Name", []() { return (std::string)TGeoXtru::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoXtru::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoXtru::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoXtru!Dictionary", []()->TClass * { return TGeoXtru::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoXtru::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoXtru::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoXtru!Class", []()->TClass * { return TGeoXtru::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoXtru::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoXtru::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoXtru& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoXtru* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoXtru::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoXtru::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoXtru!DeclFileLine", []()->int { return TGeoXtru::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoXtru>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoXtru(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoXtru(module));
}
