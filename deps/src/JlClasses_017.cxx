// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Fit::DataRange> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Fit::DataRange> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Fit::DataRange
// signature to use in the veto file: ROOT::Fit::DataRange
struct JlROOT_Fit_DataRange: public Wrapper {

  JlROOT_Fit_DataRange(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Fit::DataRange (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Fit/DataRange.h:35:7
    jlcxx::TypeWrapper<ROOT::Fit::DataRange>  t = jlModule.add_type<ROOT::Fit::DataRange>("ROOT!Fit!DataRange");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::DataRange>>(new jlcxx::TypeWrapper<ROOT::Fit::DataRange>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::DataRange>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Fit_DataRange(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Fit_DataRange(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGraph> : std::false_type { };
  template<> struct DefaultConstructible<TGraph> : std::false_type { };
template<> struct SuperType<TGraph> { typedef TNamed type; };
}

// Class generating the wrapper for type TGraph
// signature to use in the veto file: TGraph
struct JlTGraph: public Wrapper {

  JlTGraph(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGraph (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:41:7
    jlcxx::TypeWrapper<TGraph>  t = jlModule.add_type<TGraph>("TGraph",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGraph>>(new jlcxx::TypeWrapper<TGraph>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:84:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(Int_t, const Int_t *, const Int_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:85:4
    t.constructor<Int_t, const Int_t *, const Int_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(Int_t, const Float_t *, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:86:4
    t.constructor<Int_t, const Float_t *, const Float_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(Int_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:87:4
    t.constructor<Int_t, const Double_t *, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(Int_t, const Double_t *, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:88:4
    t.constructor<Int_t, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<Int_t, const Double_t *, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<Int_t, const Double_t *, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(const TGraph &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:89:4
    t.constructor<const TGraph &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGraph & TGraph::operator=(const TGraph &) (" __HERE__ ")");
    // signature to use in the veto list: TGraph & TGraph::operator=(const TGraph &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:90:12
    t.method("assign", [](TGraph& a, const TGraph & arg0)->TGraph & { return a.operator=(arg0); });
    t.method("assign", [](TGraph* a, const TGraph & arg0)->TGraph & { return a->operator=(arg0); });


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(const TVectorD &, const TVectorD &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:92:4
    t.constructor<const TVectorD &, const TVectorD &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(const TH1 *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:93:4
    t.constructor<const TH1 *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(const TF1 *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:94:4
    t.constructor<const TF1 *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const TF1 *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph::TGraph(const char *, const char *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:95:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGraph::AddPoint(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::AddPoint(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:98:26
    t.method("AddPoint", [](TGraph& a, Double_t arg0, Double_t arg1)->void { a.AddPoint(arg0, arg1); });
    t.method("AddPoint", [](TGraph* a, Double_t arg0, Double_t arg1)->void { a->AddPoint(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::Apply(TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Apply(TF1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:99:26
    t.method("Apply", [](TGraph& a, TF1 * arg0)->void { a.Apply(arg0); });
    t.method("Apply", [](TGraph* a, TF1 * arg0)->void { a->Apply(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:100:26
    t.method("Browse", [](TGraph& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TGraph* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::Chisquare(TF1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::Chisquare(TF1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:101:26
    t.method("Chisquare", [](TGraph const& a, TF1 * arg0)->Double_t { return a.Chisquare(arg0); });
    t.method("Chisquare", [](TGraph const& a, TF1 * arg0, Option_t * arg1)->Double_t { return a.Chisquare(arg0, arg1); });
    t.method("Chisquare", [](TGraph const* a, TF1 * arg0)->Double_t { return a->Chisquare(arg0); });
    t.method("Chisquare", [](TGraph const* a, TF1 * arg0, Option_t * arg1)->Double_t { return a->Chisquare(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::CompareArg(const TGraph *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::CompareArg(const TGraph *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:102:26
    module_.method("TGraph!CompareArg", [](const TGraph * arg0, Int_t arg1, Int_t arg2)->Bool_t { return TGraph::CompareArg(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::CompareX(const TGraph *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::CompareX(const TGraph *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:103:26
    module_.method("TGraph!CompareX", [](const TGraph * arg0, Int_t arg1, Int_t arg2)->Bool_t { return TGraph::CompareX(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::CompareY(const TGraph *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::CompareY(const TGraph *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:104:26
    module_.method("TGraph!CompareY", [](const TGraph * arg0, Int_t arg1, Int_t arg2)->Bool_t { return TGraph::CompareY(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::CompareRadius(const TGraph *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::CompareRadius(const TGraph *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:105:26
    module_.method("TGraph!CompareRadius", [](const TGraph * arg0, Int_t arg1, Int_t arg2)->Bool_t { return TGraph::CompareRadius(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:106:26
    t.method("ComputeRange", [](TGraph const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a.ComputeRange(arg0, arg1, arg2, arg3); });
    t.method("ComputeRange", [](TGraph const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a->ComputeRange(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:107:26
    t.method("DistancetoPrimitive", [](TGraph& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TGraph* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:108:26
    t.method("Draw", [](TGraph& a)->void { a.Draw(); });
    t.method("Draw", [](TGraph& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TGraph* a)->void { a->Draw(); });
    t.method("Draw", [](TGraph* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::DrawGraph(Int_t, const Int_t *, const Int_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::DrawGraph(Int_t, const Int_t *, const Int_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:109:26
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Int_t * arg1, const Int_t * arg2)->void { a.DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Int_t * arg1, const Int_t * arg2, Option_t * arg3)->void { a.DrawGraph(arg0, arg1, arg2, arg3); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Int_t * arg1, const Int_t * arg2)->void { a->DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Int_t * arg1, const Int_t * arg2, Option_t * arg3)->void { a->DrawGraph(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::DrawGraph(Int_t, const Float_t *, const Float_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::DrawGraph(Int_t, const Float_t *, const Float_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:110:26
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Float_t * arg1, const Float_t * arg2)->void { a.DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Float_t * arg1, const Float_t * arg2, Option_t * arg3)->void { a.DrawGraph(arg0, arg1, arg2, arg3); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Float_t * arg1, const Float_t * arg2)->void { a->DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Float_t * arg1, const Float_t * arg2, Option_t * arg3)->void { a->DrawGraph(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::DrawGraph(Int_t, const Double_t *, const Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::DrawGraph(Int_t, const Double_t *, const Double_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:111:26
    t.method("DrawGraph", [](TGraph& a, Int_t arg0)->void { a.DrawGraph(arg0); });
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Double_t * arg1)->void { a.DrawGraph(arg0, arg1); });
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a.DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a.DrawGraph(arg0, arg1, arg2, arg3); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0)->void { a->DrawGraph(arg0); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Double_t * arg1)->void { a->DrawGraph(arg0, arg1); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a->DrawGraph(arg0, arg1, arg2); });
    t.method("DrawGraph", [](TGraph* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a->DrawGraph(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::DrawPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::DrawPanel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:112:26
    t.method("DrawPanel", [](TGraph& a)->void { a.DrawPanel(); });
    t.method("DrawPanel", [](TGraph* a)->void { a->DrawPanel(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::Eval(Double_t, TSpline *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::Eval(Double_t, TSpline *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:113:26
    t.method("Eval", [](TGraph const& a, Double_t arg0)->Double_t { return a.Eval(arg0); });
    t.method("Eval", [](TGraph const& a, Double_t arg0, TSpline * arg1)->Double_t { return a.Eval(arg0, arg1); });
    t.method("Eval", [](TGraph const& a, Double_t arg0, TSpline * arg1, Option_t * arg2)->Double_t { return a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](TGraph const* a, Double_t arg0)->Double_t { return a->Eval(arg0); });
    t.method("Eval", [](TGraph const* a, Double_t arg0, TSpline * arg1)->Double_t { return a->Eval(arg0, arg1); });
    t.method("Eval", [](TGraph const* a, Double_t arg0, TSpline * arg1, Option_t * arg2)->Double_t { return a->Eval(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:114:26
    t.method("ExecuteEvent", [](TGraph& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); });
    t.method("ExecuteEvent", [](TGraph* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph::Expand(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Expand(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:115:26
    t.method("Expand", [](TGraph& a, Int_t arg0)->void { a.Expand(arg0); });
    t.method("Expand", [](TGraph* a, Int_t arg0)->void { a->Expand(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::Expand(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Expand(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:116:26
    t.method("Expand", [](TGraph& a, Int_t arg0, Int_t arg1)->void { a.Expand(arg0, arg1); });
    t.method("Expand", [](TGraph* a, Int_t arg0, Int_t arg1)->void { a->Expand(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TObject * TGraph::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGraph::FindObject(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:117:26
    t.method("FindObject", [](TGraph const& a, const char * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TGraph const* a, const char * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TGraph::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGraph::FindObject(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:118:26
    t.method("FindObject", [](TGraph const& a, const TObject * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TGraph const* a, const TObject * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TGraph::Fit(const char *, Option_t *, Option_t *, Axis_t, Axis_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TGraph::Fit(const char *, Option_t *, Option_t *, Axis_t, Axis_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:119:26
    t.method("Fit", [](TGraph& a, const char * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TGraph& a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TGraph& a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph& a, const char * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TGraph& a, const char * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3, Axis_t arg4)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TGraph* a, const char * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TGraph* a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TGraph* a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph* a, const char * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TGraph* a, const char * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3, Axis_t arg4)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TGraph::Fit(TF1 *, Option_t *, Option_t *, Axis_t, Axis_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TGraph::Fit(TF1 *, Option_t *, Option_t *, Axis_t, Axis_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:120:26
    t.method("Fit", [](TGraph& a, TF1 * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TGraph& a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TGraph& a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph& a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TGraph& a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3, Axis_t arg4)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TGraph* a, TF1 * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TGraph* a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TGraph* a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph* a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TGraph* a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Axis_t arg3, Axis_t arg4)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGraph::FitPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::FitPanel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:121:26
    t.method("FitPanel", [](TGraph& a)->void { a.FitPanel(); });
    t.method("FitPanel", [](TGraph* a)->void { a->FitPanel(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::GetEditable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::GetEditable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:122:26
    t.method("GetEditable", [](TGraph const& a)->Bool_t { return a.GetEditable(); });
    t.method("GetEditable", [](TGraph const* a)->Bool_t { return a->GetEditable(); });

    DEBUG_MSG("Adding wrapper for TF1 * TGraph::GetFunction(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TF1 * TGraph::GetFunction(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:123:26
    t.method("GetFunction", [](TGraph const& a, const char * arg0)->TF1 * { return a.GetFunction(arg0); });
    t.method("GetFunction", [](TGraph const* a, const char * arg0)->TF1 * { return a->GetFunction(arg0); });

    DEBUG_MSG("Adding wrapper for TH1F * TGraph::GetHistogram() (" __HERE__ ")");
    // signature to use in the veto list: TH1F * TGraph::GetHistogram()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:124:26
    t.method("GetHistogram", [](TGraph const& a)->TH1F * { return a.GetHistogram(); });
    t.method("GetHistogram", [](TGraph const* a)->TH1F * { return a->GetHistogram(); });

    DEBUG_MSG("Adding wrapper for TList * TGraph::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TList * TGraph::GetListOfFunctions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:125:26
    t.method("GetListOfFunctions", [](TGraph const& a)->TList * { return a.GetListOfFunctions(); });
    t.method("GetListOfFunctions", [](TGraph const* a)->TList * { return a->GetListOfFunctions(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetCorrelationFactor() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetCorrelationFactor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:126:26
    t.method("GetCorrelationFactor", [](TGraph const& a)->Double_t { return a.GetCorrelationFactor(); });
    t.method("GetCorrelationFactor", [](TGraph const* a)->Double_t { return a->GetCorrelationFactor(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetCovariance() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetCovariance()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:127:26
    t.method("GetCovariance", [](TGraph const& a)->Double_t { return a.GetCovariance(); });
    t.method("GetCovariance", [](TGraph const* a)->Double_t { return a->GetCovariance(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetMean(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetMean(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:128:26
    t.method("GetMean", [](TGraph const& a)->Double_t { return a.GetMean(); });
    t.method("GetMean", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetMean(arg0); });
    t.method("GetMean", [](TGraph const* a)->Double_t { return a->GetMean(); });
    t.method("GetMean", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetMean(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetRMS(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetRMS(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:129:26
    t.method("GetRMS", [](TGraph const& a)->Double_t { return a.GetRMS(); });
    t.method("GetRMS", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetRMS(arg0); });
    t.method("GetRMS", [](TGraph const* a)->Double_t { return a->GetRMS(); });
    t.method("GetRMS", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetRMS(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::GetMaxSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::GetMaxSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:130:26
    t.method("GetMaxSize", [](TGraph const& a)->Int_t { return a.GetMaxSize(); });
    t.method("GetMaxSize", [](TGraph const* a)->Int_t { return a->GetMaxSize(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::GetN() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::GetN()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:131:26
    t.method("GetN", [](TGraph const& a)->Int_t { return a.GetN(); });
    t.method("GetN", [](TGraph const* a)->Int_t { return a->GetN(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorX(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:132:26
    t.method("GetErrorX", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorX(arg0); });
    t.method("GetErrorX", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorX(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorY(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:133:26
    t.method("GetErrorY", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorY(arg0); });
    t.method("GetErrorY", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorY(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorXhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorXhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:134:26
    t.method("GetErrorXhigh", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorXhigh(arg0); });
    t.method("GetErrorXhigh", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorXhigh(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorXlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorXlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:135:26
    t.method("GetErrorXlow", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorXlow(arg0); });
    t.method("GetErrorXlow", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorXlow(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorYhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorYhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:136:26
    t.method("GetErrorYhigh", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorYhigh(arg0); });
    t.method("GetErrorYhigh", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorYhigh(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetErrorYlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetErrorYlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:137:26
    t.method("GetErrorYlow", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetErrorYlow(arg0); });
    t.method("GetErrorYlow", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetErrorYlow(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:138:26
    t.method("GetX", [](TGraph const& a)->Double_t * { return a.GetX(); });
    t.method("GetX", [](TGraph const* a)->Double_t * { return a->GetX(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:139:26
    t.method("GetY", [](TGraph const& a)->Double_t * { return a.GetY(); });
    t.method("GetY", [](TGraph const* a)->Double_t * { return a->GetY(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:140:26
    t.method("GetEX", [](TGraph const& a)->Double_t * { return a.GetEX(); });
    t.method("GetEX", [](TGraph const* a)->Double_t * { return a->GetEX(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:141:26
    t.method("GetEY", [](TGraph const& a)->Double_t * { return a.GetEY(); });
    t.method("GetEY", [](TGraph const* a)->Double_t * { return a->GetEY(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEXhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEXhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:142:26
    t.method("GetEXhigh", [](TGraph const& a)->Double_t * { return a.GetEXhigh(); });
    t.method("GetEXhigh", [](TGraph const* a)->Double_t * { return a->GetEXhigh(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEXlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEXlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:143:26
    t.method("GetEXlow", [](TGraph const& a)->Double_t * { return a.GetEXlow(); });
    t.method("GetEXlow", [](TGraph const* a)->Double_t * { return a->GetEXlow(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEYhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEYhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:144:26
    t.method("GetEYhigh", [](TGraph const& a)->Double_t * { return a.GetEYhigh(); });
    t.method("GetEYhigh", [](TGraph const* a)->Double_t * { return a->GetEYhigh(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEYlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEYlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:145:26
    t.method("GetEYlow", [](TGraph const& a)->Double_t * { return a.GetEYlow(); });
    t.method("GetEYlow", [](TGraph const* a)->Double_t * { return a->GetEYlow(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEXlowd() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEXlowd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:146:26
    t.method("GetEXlowd", [](TGraph const& a)->Double_t * { return a.GetEXlowd(); });
    t.method("GetEXlowd", [](TGraph const* a)->Double_t * { return a->GetEXlowd(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEXhighd() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEXhighd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:147:26
    t.method("GetEXhighd", [](TGraph const& a)->Double_t * { return a.GetEXhighd(); });
    t.method("GetEXhighd", [](TGraph const* a)->Double_t * { return a->GetEXhighd(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEYlowd() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEYlowd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:148:26
    t.method("GetEYlowd", [](TGraph const& a)->Double_t * { return a.GetEYlowd(); });
    t.method("GetEYlowd", [](TGraph const* a)->Double_t * { return a->GetEYlowd(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph::GetEYhighd() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph::GetEYhighd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:149:26
    t.method("GetEYhighd", [](TGraph const& a)->Double_t * { return a.GetEYhighd(); });
    t.method("GetEYhighd", [](TGraph const* a)->Double_t * { return a->GetEYhighd(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetMaximum() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetMaximum()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:150:26
    t.method("GetMaximum", [](TGraph const& a)->Double_t { return a.GetMaximum(); });
    t.method("GetMaximum", [](TGraph const* a)->Double_t { return a->GetMaximum(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetMinimum() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetMinimum()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:151:26
    t.method("GetMinimum", [](TGraph const& a)->Double_t { return a.GetMinimum(); });
    t.method("GetMinimum", [](TGraph const* a)->Double_t { return a->GetMinimum(); });

    DEBUG_MSG("Adding wrapper for TAxis * TGraph::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TGraph::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:152:26
    t.method("GetXaxis", [](TGraph const& a)->TAxis * { return a.GetXaxis(); });
    t.method("GetXaxis", [](TGraph const* a)->TAxis * { return a->GetXaxis(); });

    DEBUG_MSG("Adding wrapper for TAxis * TGraph::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TGraph::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:153:26
    t.method("GetYaxis", [](TGraph const& a)->TAxis * { return a.GetYaxis(); });
    t.method("GetYaxis", [](TGraph const* a)->TAxis * { return a->GetYaxis(); });

    DEBUG_MSG("Adding wrapper for char * TGraph::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TGraph::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:154:26
    t.method("GetObjectInfo", [](TGraph const& a, Int_t arg0, Int_t arg1)->char * { return a.GetObjectInfo(arg0, arg1); });
    t.method("GetObjectInfo", [](TGraph const* a, Int_t arg0, Int_t arg1)->char * { return a->GetObjectInfo(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::GetPoint(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::GetPoint(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:155:26
    t.method("GetPoint", [](TGraph const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Int_t { return a.GetPoint(arg0, arg1, arg2); });
    t.method("GetPoint", [](TGraph const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Int_t { return a->GetPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetPointX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetPointX(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:156:26
    t.method("GetPointX", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetPointX(arg0); });
    t.method("GetPointX", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetPointX(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::GetPointY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::GetPointY(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:157:26
    t.method("GetPointY", [](TGraph const& a, Int_t arg0)->Double_t { return a.GetPointY(arg0); });
    t.method("GetPointY", [](TGraph const* a, Int_t arg0)->Double_t { return a->GetPointY(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::InitExpo(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::InitExpo(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:159:26
    t.method("InitExpo", [](TGraph& a)->void { a.InitExpo(); });
    t.method("InitExpo", [](TGraph& a, Double_t arg0)->void { a.InitExpo(arg0); });
    t.method("InitExpo", [](TGraph& a, Double_t arg0, Double_t arg1)->void { a.InitExpo(arg0, arg1); });
    t.method("InitExpo", [](TGraph* a)->void { a->InitExpo(); });
    t.method("InitExpo", [](TGraph* a, Double_t arg0)->void { a->InitExpo(arg0); });
    t.method("InitExpo", [](TGraph* a, Double_t arg0, Double_t arg1)->void { a->InitExpo(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::InitGaus(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::InitGaus(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:160:26
    t.method("InitGaus", [](TGraph& a)->void { a.InitGaus(); });
    t.method("InitGaus", [](TGraph& a, Double_t arg0)->void { a.InitGaus(arg0); });
    t.method("InitGaus", [](TGraph& a, Double_t arg0, Double_t arg1)->void { a.InitGaus(arg0, arg1); });
    t.method("InitGaus", [](TGraph* a)->void { a->InitGaus(); });
    t.method("InitGaus", [](TGraph* a, Double_t arg0)->void { a->InitGaus(arg0); });
    t.method("InitGaus", [](TGraph* a, Double_t arg0, Double_t arg1)->void { a->InitGaus(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::InitPolynom(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::InitPolynom(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:161:26
    t.method("InitPolynom", [](TGraph& a)->void { a.InitPolynom(); });
    t.method("InitPolynom", [](TGraph& a, Double_t arg0)->void { a.InitPolynom(arg0); });
    t.method("InitPolynom", [](TGraph& a, Double_t arg0, Double_t arg1)->void { a.InitPolynom(arg0, arg1); });
    t.method("InitPolynom", [](TGraph* a)->void { a->InitPolynom(); });
    t.method("InitPolynom", [](TGraph* a, Double_t arg0)->void { a->InitPolynom(arg0); });
    t.method("InitPolynom", [](TGraph* a, Double_t arg0, Double_t arg1)->void { a->InitPolynom(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::InsertPoint() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::InsertPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:162:26
    t.method("InsertPoint", [](TGraph& a)->Int_t { return a.InsertPoint(); });
    t.method("InsertPoint", [](TGraph* a)->Int_t { return a->InsertPoint(); });

    DEBUG_MSG("Adding wrapper for void TGraph::InsertPointBefore(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::InsertPointBefore(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:163:26
    t.method("InsertPointBefore", [](TGraph& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.InsertPointBefore(arg0, arg1, arg2); });
    t.method("InsertPointBefore", [](TGraph* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->InsertPointBefore(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph::Integral(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph::Integral(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:164:26
    t.method("Integral", [](TGraph const& a)->Double_t { return a.Integral(); });
    t.method("Integral", [](TGraph const& a, Int_t arg0)->Double_t { return a.Integral(arg0); });
    t.method("Integral", [](TGraph const& a, Int_t arg0, Int_t arg1)->Double_t { return a.Integral(arg0, arg1); });
    t.method("Integral", [](TGraph const* a)->Double_t { return a->Integral(); });
    t.method("Integral", [](TGraph const* a, Int_t arg0)->Double_t { return a->Integral(arg0); });
    t.method("Integral", [](TGraph const* a, Int_t arg0, Int_t arg1)->Double_t { return a->Integral(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::IsEditable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::IsEditable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:165:26
    t.method("IsEditable", [](TGraph const& a)->Bool_t { return a.IsEditable(); });
    t.method("IsEditable", [](TGraph const* a)->Bool_t { return a->IsEditable(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGraph::IsHighlight() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGraph::IsHighlight()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:166:26
    t.method("IsHighlight", [](TGraph const& a)->Bool_t { return a.IsHighlight(); });
    t.method("IsHighlight", [](TGraph const* a)->Bool_t { return a->IsHighlight(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::IsInside(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::IsInside(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:167:26
    t.method("IsInside", [](TGraph const& a, Double_t arg0, Double_t arg1)->Int_t { return a.IsInside(arg0, arg1); });
    t.method("IsInside", [](TGraph const* a, Double_t arg0, Double_t arg1)->Int_t { return a->IsInside(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::LeastSquareFit(Int_t, Double_t *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::LeastSquareFit(Int_t, Double_t *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:168:26
    t.method("LeastSquareFit", [](TGraph& a, Int_t arg0, Double_t * arg1)->void { a.LeastSquareFit(arg0, arg1); });
    t.method("LeastSquareFit", [](TGraph& a, Int_t arg0, Double_t * arg1, Double_t arg2)->void { a.LeastSquareFit(arg0, arg1, arg2); });
    t.method("LeastSquareFit", [](TGraph& a, Int_t arg0, Double_t * arg1, Double_t arg2, Double_t arg3)->void { a.LeastSquareFit(arg0, arg1, arg2, arg3); });
    t.method("LeastSquareFit", [](TGraph* a, Int_t arg0, Double_t * arg1)->void { a->LeastSquareFit(arg0, arg1); });
    t.method("LeastSquareFit", [](TGraph* a, Int_t arg0, Double_t * arg1, Double_t arg2)->void { a->LeastSquareFit(arg0, arg1, arg2); });
    t.method("LeastSquareFit", [](TGraph* a, Int_t arg0, Double_t * arg1, Double_t arg2, Double_t arg3)->void { a->LeastSquareFit(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::LeastSquareLinearFit(Int_t, Double_t &, Double_t &, Int_t &, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::LeastSquareLinearFit(Int_t, Double_t &, Double_t &, Int_t &, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:169:26
    t.method("LeastSquareLinearFit", [](TGraph& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3)->void { a.LeastSquareLinearFit(arg0, arg1, arg2, arg3); });
    t.method("LeastSquareLinearFit", [](TGraph& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Double_t arg4)->void { a.LeastSquareLinearFit(arg0, arg1, arg2, arg3, arg4); });
    t.method("LeastSquareLinearFit", [](TGraph& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Double_t arg4, Double_t arg5)->void { a.LeastSquareLinearFit(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("LeastSquareLinearFit", [](TGraph* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3)->void { a->LeastSquareLinearFit(arg0, arg1, arg2, arg3); });
    t.method("LeastSquareLinearFit", [](TGraph* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Double_t arg4)->void { a->LeastSquareLinearFit(arg0, arg1, arg2, arg3, arg4); });
    t.method("LeastSquareLinearFit", [](TGraph* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Int_t & arg3, Double_t arg4, Double_t arg5)->void { a->LeastSquareLinearFit(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:170:26
    t.method("Merge", [](TGraph& a, TCollection * arg0)->Int_t { return a.Merge(arg0); });
    t.method("Merge", [](TGraph* a, TCollection * arg0)->Int_t { return a->Merge(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::MovePoints(Double_t, Double_t, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::MovePoints(Double_t, Double_t, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:171:26
    t.method("MovePoints", [](TGraph& a, Double_t arg0, Double_t arg1)->void { a.MovePoints(arg0, arg1); });
    t.method("MovePoints", [](TGraph& a, Double_t arg0, Double_t arg1, Bool_t arg2)->void { a.MovePoints(arg0, arg1, arg2); });
    t.method("MovePoints", [](TGraph& a, Double_t arg0, Double_t arg1, Bool_t arg2, Bool_t arg3)->void { a.MovePoints(arg0, arg1, arg2, arg3); });
    t.method("MovePoints", [](TGraph* a, Double_t arg0, Double_t arg1)->void { a->MovePoints(arg0, arg1); });
    t.method("MovePoints", [](TGraph* a, Double_t arg0, Double_t arg1, Bool_t arg2)->void { a->MovePoints(arg0, arg1, arg2); });
    t.method("MovePoints", [](TGraph* a, Double_t arg0, Double_t arg1, Bool_t arg2, Bool_t arg3)->void { a->MovePoints(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:172:26
    t.method("Paint", [](TGraph& a)->void { a.Paint(); });
    t.method("Paint", [](TGraph& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGraph* a)->void { a->Paint(); });
    t.method("Paint", [](TGraph* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::PaintGraph(Int_t, const Double_t *, const Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::PaintGraph(Int_t, const Double_t *, const Double_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:173:26
    t.method("PaintGraph", [](TGraph& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a.PaintGraph(arg0, arg1, arg2, arg3); });
    t.method("PaintGraph", [](TGraph* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a->PaintGraph(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::PaintGrapHist(Int_t, const Double_t *, const Double_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::PaintGrapHist(Int_t, const Double_t *, const Double_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:174:26
    t.method("PaintGrapHist", [](TGraph& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a.PaintGrapHist(arg0, arg1, arg2, arg3); });
    t.method("PaintGrapHist", [](TGraph* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Option_t * arg3)->void { a->PaintGrapHist(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::PaintStats(TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::PaintStats(TF1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:175:26
    t.method("PaintStats", [](TGraph& a, TF1 * arg0)->void { a.PaintStats(arg0); });
    t.method("PaintStats", [](TGraph* a, TF1 * arg0)->void { a->PaintStats(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:176:26
    t.method("Print", [](TGraph const& a)->void { a.Print(); });
    t.method("Print", [](TGraph const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGraph const* a)->void { a->Print(); });
    t.method("Print", [](TGraph const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:177:26
    t.method("RecursiveRemove", [](TGraph& a, TObject * arg0)->void { a.RecursiveRemove(arg0); });
    t.method("RecursiveRemove", [](TGraph* a, TObject * arg0)->void { a->RecursiveRemove(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::RemovePoint() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::RemovePoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:178:26
    t.method("RemovePoint", [](TGraph& a)->Int_t { return a.RemovePoint(); });
    t.method("RemovePoint", [](TGraph* a)->Int_t { return a->RemovePoint(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph::RemovePoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph::RemovePoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:179:26
    t.method("RemovePoint", [](TGraph& a, Int_t arg0)->Int_t { return a.RemovePoint(arg0); });
    t.method("RemovePoint", [](TGraph* a, Int_t arg0)->Int_t { return a->RemovePoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SaveAs(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SaveAs(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:181:26
    t.method("SaveAs", [](TGraph const& a)->void { a.SaveAs(); });
    t.method("SaveAs", [](TGraph const& a, const char * arg0)->void { a.SaveAs(arg0); });
    t.method("SaveAs", [](TGraph const& a, const char * arg0, Option_t * arg1)->void { a.SaveAs(arg0, arg1); });
    t.method("SaveAs", [](TGraph const* a)->void { a->SaveAs(); });
    t.method("SaveAs", [](TGraph const* a, const char * arg0)->void { a->SaveAs(arg0); });
    t.method("SaveAs", [](TGraph const* a, const char * arg0, Option_t * arg1)->void { a->SaveAs(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:182:26
    t.method("Scale", [](TGraph& a)->void { a.Scale(); });
    t.method("Scale", [](TGraph& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TGraph& a, Double_t arg0, Option_t * arg1)->void { a.Scale(arg0, arg1); });
    t.method("Scale", [](TGraph* a)->void { a->Scale(); });
    t.method("Scale", [](TGraph* a, Double_t arg0)->void { a->Scale(arg0); });
    t.method("Scale", [](TGraph* a, Double_t arg0, Option_t * arg1)->void { a->Scale(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetEditable(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetEditable(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:183:26
    t.method("SetEditable", [](TGraph& a)->void { a.SetEditable(); });
    t.method("SetEditable", [](TGraph& a, Bool_t arg0)->void { a.SetEditable(arg0); });
    t.method("SetEditable", [](TGraph* a)->void { a->SetEditable(); });
    t.method("SetEditable", [](TGraph* a, Bool_t arg0)->void { a->SetEditable(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetHighlight(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetHighlight(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:184:26
    t.method("SetHighlight", [](TGraph& a)->void { a.SetHighlight(); });
    t.method("SetHighlight", [](TGraph& a, Bool_t arg0)->void { a.SetHighlight(arg0); });
    t.method("SetHighlight", [](TGraph* a)->void { a->SetHighlight(); });
    t.method("SetHighlight", [](TGraph* a, Bool_t arg0)->void { a->SetHighlight(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetHistogram(TH1F *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetHistogram(TH1F *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:185:26
    t.method("SetHistogram", [](TGraph& a, TH1F * arg0)->void { a.SetHistogram(arg0); });
    t.method("SetHistogram", [](TGraph* a, TH1F * arg0)->void { a->SetHistogram(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:186:26
    t.method("SetMaximum", [](TGraph& a)->void { a.SetMaximum(); });
    t.method("SetMaximum", [](TGraph& a, Double_t arg0)->void { a.SetMaximum(arg0); });
    t.method("SetMaximum", [](TGraph* a)->void { a->SetMaximum(); });
    t.method("SetMaximum", [](TGraph* a, Double_t arg0)->void { a->SetMaximum(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:187:26
    t.method("SetMinimum", [](TGraph& a)->void { a.SetMinimum(); });
    t.method("SetMinimum", [](TGraph& a, Double_t arg0)->void { a.SetMinimum(arg0); });
    t.method("SetMinimum", [](TGraph* a)->void { a->SetMinimum(); });
    t.method("SetMinimum", [](TGraph* a, Double_t arg0)->void { a->SetMinimum(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::Set(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Set(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:188:26
    t.method("Set", [](TGraph& a, Int_t arg0)->void { a.Set(arg0); });
    t.method("Set", [](TGraph* a, Int_t arg0)->void { a->Set(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:189:17
    t.method("SetOption", [](TGraph& a)->void { a.SetOption(); });
    t.method("SetOption", [](TGraph& a, Option_t * arg0)->void { a.SetOption(arg0); });
    t.method("SetOption", [](TGraph* a)->void { a->SetOption(); });
    t.method("SetOption", [](TGraph* a, Option_t * arg0)->void { a->SetOption(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetPoint(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetPoint(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:190:26
    t.method("SetPoint", [](TGraph& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.SetPoint(arg0, arg1, arg2); });
    t.method("SetPoint", [](TGraph* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->SetPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetPointX(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetPointX(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:191:26
    t.method("SetPointX", [](TGraph& a, Int_t arg0, Double_t arg1)->void { a.SetPointX(arg0, arg1); });
    t.method("SetPointX", [](TGraph* a, Int_t arg0, Double_t arg1)->void { a->SetPointX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetPointY(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetPointY(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:192:26
    t.method("SetPointY", [](TGraph& a, Int_t arg0, Double_t arg1)->void { a.SetPointY(arg0, arg1); });
    t.method("SetPointY", [](TGraph* a, Int_t arg0, Double_t arg1)->void { a->SetPointY(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:193:26
    t.method("SetName", [](TGraph& a)->void { a.SetName(); });
    t.method("SetName", [](TGraph& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TGraph* a)->void { a->SetName(); });
    t.method("SetName", [](TGraph* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetNameTitle(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetNameTitle(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:194:26
    t.method("SetNameTitle", [](TGraph& a)->void { a.SetNameTitle(); });
    t.method("SetNameTitle", [](TGraph& a, const char * arg0)->void { a.SetNameTitle(arg0); });
    t.method("SetNameTitle", [](TGraph& a, const char * arg0, const char * arg1)->void { a.SetNameTitle(arg0, arg1); });
    t.method("SetNameTitle", [](TGraph* a)->void { a->SetNameTitle(); });
    t.method("SetNameTitle", [](TGraph* a, const char * arg0)->void { a->SetNameTitle(arg0); });
    t.method("SetNameTitle", [](TGraph* a, const char * arg0, const char * arg1)->void { a->SetNameTitle(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetStats(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetStats(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:195:26
    t.method("SetStats", [](TGraph& a)->void { a.SetStats(); });
    t.method("SetStats", [](TGraph& a, Bool_t arg0)->void { a.SetStats(arg0); });
    t.method("SetStats", [](TGraph* a)->void { a->SetStats(); });
    t.method("SetStats", [](TGraph* a, Bool_t arg0)->void { a->SetStats(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:196:26
    t.method("SetTitle", [](TGraph& a)->void { a.SetTitle(); });
    t.method("SetTitle", [](TGraph& a, const char * arg0)->void { a.SetTitle(arg0); });
    t.method("SetTitle", [](TGraph* a)->void { a->SetTitle(); });
    t.method("SetTitle", [](TGraph* a, const char * arg0)->void { a->SetTitle(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph::Sort(Bool_t (*)(const TGraph *, Int_t, Int_t), Bool_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Sort(Bool_t (*)(const TGraph *, Int_t, Int_t), Bool_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:197:26
    t.method("Sort", [](TGraph& a)->void { a.Sort(); });
    t.method("Sort", [](TGraph& a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t))->void { a.Sort(arg0); });
    t.method("Sort", [](TGraph& a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1)->void { a.Sort(arg0, arg1); });
    t.method("Sort", [](TGraph& a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1, Int_t arg2)->void { a.Sort(arg0, arg1, arg2); });
    t.method("Sort", [](TGraph& a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1, Int_t arg2, Int_t arg3)->void { a.Sort(arg0, arg1, arg2, arg3); });
    t.method("Sort", [](TGraph* a)->void { a->Sort(); });
    t.method("Sort", [](TGraph* a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t))->void { a->Sort(arg0); });
    t.method("Sort", [](TGraph* a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1)->void { a->Sort(arg0, arg1); });
    t.method("Sort", [](TGraph* a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1, Int_t arg2)->void { a->Sort(arg0, arg1, arg2); });
    t.method("Sort", [](TGraph* a, Bool_t (*arg0)(const TGraph *, Int_t, Int_t), Bool_t arg1, Int_t arg2, Int_t arg3)->void { a->Sort(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::UseCurrentStyle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:199:26
    t.method("UseCurrentStyle", [](TGraph& a)->void { a.UseCurrentStyle(); });
    t.method("UseCurrentStyle", [](TGraph* a)->void { a->UseCurrentStyle(); });

    DEBUG_MSG("Adding wrapper for void TGraph::Zero(Int_t &, Double_t, Double_t, Double_t, Double_t &, Double_t &, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Zero(Int_t &, Double_t, Double_t, Double_t, Double_t &, Double_t &, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph.h:200:26
    t.method("Zero", [](TGraph& a, Int_t & arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t & arg4, Double_t & arg5, Int_t arg6)->void { a.Zero(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Zero", [](TGraph* a, Int_t & arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t & arg4, Double_t & arg5, Int_t arg6)->void { a->Zero(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for Version_t TGraph::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGraph::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGraph!Class_Version", []()->Version_t { return TGraph::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGraph const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGraph const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGraph::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGraph& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGraph* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGraph::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGraph!DeclFileName", []() { return (std::string)TGraph::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGraph::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraph::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGraph!ImplFileLine", []()->int { return TGraph::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGraph::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGraph!ImplFileName", []() { return (std::string)TGraph::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGraph::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGraph!Class_Name", []() { return (std::string)TGraph::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGraph!Dictionary", []()->TClass * { return TGraph::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGraph!Class", []()->TClass * { return TGraph::Class(); });

    DEBUG_MSG("Adding wrapper for void TGraph::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGraph& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGraph* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGraph::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraph::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGraph!DeclFileLine", []()->int { return TGraph::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGraph>> type_;
};
std::shared_ptr<Wrapper> newJlTGraph(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGraph(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGraph2D> : std::false_type { };
  template<> struct DefaultConstructible<TGraph2D> : std::false_type { };
template<> struct SuperType<TGraph2D> { typedef TNamed type; };
}

// Class generating the wrapper for type TGraph2D
// signature to use in the veto file: TGraph2D
struct JlTGraph2D: public Wrapper {

  JlTGraph2D(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGraph2D (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:41:7
    jlcxx::TypeWrapper<TGraph2D>  t = jlModule.add_type<TGraph2D>("TGraph2D",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGraph2D>>(new jlcxx::TypeWrapper<TGraph2D>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:80:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(Int_t, Int_t *, Int_t *, Int_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:81:4
    t.constructor<Int_t, Int_t *, Int_t *, Int_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(Int_t, Float_t *, Float_t *, Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:82:4
    t.constructor<Int_t, Float_t *, Float_t *, Float_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(Int_t, Double_t *, Double_t *, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:83:4
    t.constructor<Int_t, Double_t *, Double_t *, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(TH2 *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:84:4
    t.constructor<TH2 *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(const char *, const char *, Int_t, Double_t *, Double_t *, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:85:4
    t.constructor<const char *, const char *, Int_t, Double_t *, Double_t *, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(const char *, const char *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:86:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGraph2D::TGraph2D(const TGraph2D &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:87:4
    t.constructor<const TGraph2D &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGraph2D & TGraph2D::operator=(const TGraph2D &) (" __HERE__ ")");
    // signature to use in the veto list: TGraph2D & TGraph2D::operator=(const TGraph2D &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:91:14
    t.method("assign", [](TGraph2D& a, const TGraph2D & arg0)->TGraph2D & { return a.operator=(arg0); });
    t.method("assign", [](TGraph2D* a, const TGraph2D & arg0)->TGraph2D & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::AddPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::AddPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:93:26
    t.method("AddPoint", [](TGraph2D& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.AddPoint(arg0, arg1, arg2); });
    t.method("AddPoint", [](TGraph2D* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->AddPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:94:18
    t.method("Browse", [](TGraph2D& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TGraph2D* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:95:18
    t.method("Clear", [](TGraph2D& a)->void { a.Clear(); });
    t.method("Clear", [](TGraph2D& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TGraph2D* a)->void { a->Clear(); });
    t.method("Clear", [](TGraph2D* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:96:26
    t.method("DirectoryAutoAdd", [](TGraph2D& a, TDirectory * arg0)->void { a.DirectoryAutoAdd(arg0); });
    t.method("DirectoryAutoAdd", [](TGraph2D* a, TDirectory * arg0)->void { a->DirectoryAutoAdd(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:97:26
    t.method("DistancetoPrimitive", [](TGraph2D& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TGraph2D* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:98:18
    t.method("Draw", [](TGraph2D& a)->void { a.Draw(); });
    t.method("Draw", [](TGraph2D& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TGraph2D* a)->void { a->Draw(); });
    t.method("Draw", [](TGraph2D* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:99:26
    t.method("ExecuteEvent", [](TGraph2D& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); });
    t.method("ExecuteEvent", [](TGraph2D* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TObject * TGraph2D::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGraph2D::FindObject(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:100:18
    t.method("FindObject", [](TGraph2D const& a, const char * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TGraph2D const* a, const char * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TGraph2D::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGraph2D::FindObject(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:101:18
    t.method("FindObject", [](TGraph2D const& a, const TObject * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TGraph2D const* a, const TObject * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TGraph2D::Fit(const char *, Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TGraph2D::Fit(const char *, Option_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:102:26
    t.method("Fit", [](TGraph2D& a, const char * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TGraph2D& a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TGraph2D& a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph2D* a, const char * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TGraph2D* a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TGraph2D* a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TGraph2D::Fit(TF2 *, Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TGraph2D::Fit(TF2 *, Option_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:103:26
    t.method("Fit", [](TGraph2D& a, TF2 * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TGraph2D& a, TF2 * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TGraph2D& a, TF2 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TGraph2D* a, TF2 * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TGraph2D* a, TF2 * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TGraph2D* a, TF2 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::FitPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::FitPanel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:104:26
    t.method("FitPanel", [](TGraph2D& a)->void { a.FitPanel(); });
    t.method("FitPanel", [](TGraph2D* a)->void { a->FitPanel(); });

    DEBUG_MSG("Adding wrapper for TList * TGraph2D::GetContourList(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TList * TGraph2D::GetContourList(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:105:26
    t.method("GetContourList", [](TGraph2D& a, Double_t arg0)->TList * { return a.GetContourList(arg0); });
    t.method("GetContourList", [](TGraph2D* a, Double_t arg0)->TList * { return a->GetContourList(arg0); });

    DEBUG_MSG("Adding wrapper for TDirectory * TGraph2D::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TGraph2D::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:106:26
    t.method("GetDirectory", [](TGraph2D const& a)->TDirectory * { return a.GetDirectory(); });
    t.method("GetDirectory", [](TGraph2D const* a)->TDirectory * { return a->GetDirectory(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::GetNpx() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::GetNpx()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:107:26
    t.method("GetNpx", [](TGraph2D const& a)->Int_t { return a.GetNpx(); });
    t.method("GetNpx", [](TGraph2D const* a)->Int_t { return a->GetNpx(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::GetNpy() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::GetNpy()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:108:26
    t.method("GetNpy", [](TGraph2D const& a)->Int_t { return a.GetNpy(); });
    t.method("GetNpy", [](TGraph2D const* a)->Int_t { return a->GetNpy(); });

    DEBUG_MSG("Adding wrapper for TH2D * TGraph2D::GetHistogram(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH2D * TGraph2D::GetHistogram(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:109:26
    t.method("GetHistogram", [](TGraph2D& a)->TH2D * { return a.GetHistogram(); });
    t.method("GetHistogram", [](TGraph2D& a, Option_t * arg0)->TH2D * { return a.GetHistogram(arg0); });
    t.method("GetHistogram", [](TGraph2D* a)->TH2D * { return a->GetHistogram(); });
    t.method("GetHistogram", [](TGraph2D* a, Option_t * arg0)->TH2D * { return a->GetHistogram(arg0); });

    DEBUG_MSG("Adding wrapper for TList * TGraph2D::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TList * TGraph2D::GetListOfFunctions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:110:26
    t.method("GetListOfFunctions", [](TGraph2D const& a)->TList * { return a.GetListOfFunctions(); });
    t.method("GetListOfFunctions", [](TGraph2D const* a)->TList * { return a->GetListOfFunctions(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetErrorX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetErrorX(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:111:26
    t.method("GetErrorX", [](TGraph2D const& a, Int_t arg0)->Double_t { return a.GetErrorX(arg0); });
    t.method("GetErrorX", [](TGraph2D const* a, Int_t arg0)->Double_t { return a->GetErrorX(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetErrorY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetErrorY(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:112:26
    t.method("GetErrorY", [](TGraph2D const& a, Int_t arg0)->Double_t { return a.GetErrorY(arg0); });
    t.method("GetErrorY", [](TGraph2D const* a, Int_t arg0)->Double_t { return a->GetErrorY(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetErrorZ(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetErrorZ(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:113:26
    t.method("GetErrorZ", [](TGraph2D const& a, Int_t arg0)->Double_t { return a.GetErrorZ(arg0); });
    t.method("GetErrorZ", [](TGraph2D const* a, Int_t arg0)->Double_t { return a->GetErrorZ(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetMargin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetMargin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:114:26
    t.method("GetMargin", [](TGraph2D const& a)->Double_t { return a.GetMargin(); });
    t.method("GetMargin", [](TGraph2D const* a)->Double_t { return a->GetMargin(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetMaximum() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetMaximum()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:115:26
    t.method("GetMaximum", [](TGraph2D const& a)->Double_t { return a.GetMaximum(); });
    t.method("GetMaximum", [](TGraph2D const* a)->Double_t { return a->GetMaximum(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetMinimum() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetMinimum()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:116:26
    t.method("GetMinimum", [](TGraph2D const& a)->Double_t { return a.GetMinimum(); });
    t.method("GetMinimum", [](TGraph2D const* a)->Double_t { return a->GetMinimum(); });

    DEBUG_MSG("Adding wrapper for TAxis * TGraph2D::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TGraph2D::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:117:26
    t.method("GetXaxis", [](TGraph2D const& a)->TAxis * { return a.GetXaxis(); });
    t.method("GetXaxis", [](TGraph2D const* a)->TAxis * { return a->GetXaxis(); });

    DEBUG_MSG("Adding wrapper for TAxis * TGraph2D::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TGraph2D::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:118:26
    t.method("GetYaxis", [](TGraph2D const& a)->TAxis * { return a.GetYaxis(); });
    t.method("GetYaxis", [](TGraph2D const* a)->TAxis * { return a->GetYaxis(); });

    DEBUG_MSG("Adding wrapper for TAxis * TGraph2D::GetZaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TGraph2D::GetZaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:119:26
    t.method("GetZaxis", [](TGraph2D const& a)->TAxis * { return a.GetZaxis(); });
    t.method("GetZaxis", [](TGraph2D const* a)->TAxis * { return a->GetZaxis(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::GetN() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::GetN()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:120:26
    t.method("GetN", [](TGraph2D const& a)->Int_t { return a.GetN(); });
    t.method("GetN", [](TGraph2D const* a)->Int_t { return a->GetN(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:121:26
    t.method("GetX", [](TGraph2D const& a)->Double_t * { return a.GetX(); });
    t.method("GetX", [](TGraph2D const* a)->Double_t * { return a->GetX(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:122:26
    t.method("GetY", [](TGraph2D const& a)->Double_t * { return a.GetY(); });
    t.method("GetY", [](TGraph2D const* a)->Double_t * { return a->GetY(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:123:26
    t.method("GetZ", [](TGraph2D const& a)->Double_t * { return a.GetZ(); });
    t.method("GetZ", [](TGraph2D const* a)->Double_t * { return a->GetZ(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:124:26
    t.method("GetEX", [](TGraph2D const& a)->Double_t * { return a.GetEX(); });
    t.method("GetEX", [](TGraph2D const* a)->Double_t * { return a->GetEX(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:125:26
    t.method("GetEY", [](TGraph2D const& a)->Double_t * { return a.GetEY(); });
    t.method("GetEY", [](TGraph2D const* a)->Double_t * { return a->GetEY(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:126:26
    t.method("GetEZ", [](TGraph2D const& a)->Double_t * { return a.GetEZ(); });
    t.method("GetEZ", [](TGraph2D const* a)->Double_t * { return a->GetEZ(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEXlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEXlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:127:26
    t.method("GetEXlow", [](TGraph2D const& a)->Double_t * { return a.GetEXlow(); });
    t.method("GetEXlow", [](TGraph2D const* a)->Double_t * { return a->GetEXlow(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEXhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEXhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:128:26
    t.method("GetEXhigh", [](TGraph2D const& a)->Double_t * { return a.GetEXhigh(); });
    t.method("GetEXhigh", [](TGraph2D const* a)->Double_t * { return a->GetEXhigh(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEYlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEYlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:129:26
    t.method("GetEYlow", [](TGraph2D const& a)->Double_t * { return a.GetEYlow(); });
    t.method("GetEYlow", [](TGraph2D const* a)->Double_t * { return a->GetEYlow(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEYhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEYhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:130:26
    t.method("GetEYhigh", [](TGraph2D const& a)->Double_t * { return a.GetEYhigh(); });
    t.method("GetEYhigh", [](TGraph2D const* a)->Double_t * { return a->GetEYhigh(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEZlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEZlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:131:26
    t.method("GetEZlow", [](TGraph2D const& a)->Double_t * { return a.GetEZlow(); });
    t.method("GetEZlow", [](TGraph2D const* a)->Double_t * { return a->GetEZlow(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGraph2D::GetEZhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraph2D::GetEZhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:132:26
    t.method("GetEZhigh", [](TGraph2D const& a)->Double_t * { return a.GetEZhigh(); });
    t.method("GetEZhigh", [](TGraph2D const* a)->Double_t * { return a->GetEZhigh(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetXmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetXmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:133:26
    t.method("GetXmax", [](TGraph2D const& a)->Double_t { return a.GetXmax(); });
    t.method("GetXmax", [](TGraph2D const* a)->Double_t { return a->GetXmax(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetXmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetXmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:134:26
    t.method("GetXmin", [](TGraph2D const& a)->Double_t { return a.GetXmin(); });
    t.method("GetXmin", [](TGraph2D const* a)->Double_t { return a->GetXmin(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetYmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetYmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:135:26
    t.method("GetYmax", [](TGraph2D const& a)->Double_t { return a.GetYmax(); });
    t.method("GetYmax", [](TGraph2D const* a)->Double_t { return a->GetYmax(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetYmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetYmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:136:26
    t.method("GetYmin", [](TGraph2D const& a)->Double_t { return a.GetYmin(); });
    t.method("GetYmin", [](TGraph2D const* a)->Double_t { return a->GetYmin(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetZmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetZmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:137:26
    t.method("GetZmax", [](TGraph2D const& a)->Double_t { return a.GetZmax(); });
    t.method("GetZmax", [](TGraph2D const* a)->Double_t { return a->GetZmax(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetZmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetZmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:138:26
    t.method("GetZmin", [](TGraph2D const& a)->Double_t { return a.GetZmin(); });
    t.method("GetZmin", [](TGraph2D const* a)->Double_t { return a->GetZmin(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetXmaxE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetXmaxE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:139:26
    t.method("GetXmaxE", [](TGraph2D const& a)->Double_t { return a.GetXmaxE(); });
    t.method("GetXmaxE", [](TGraph2D const* a)->Double_t { return a->GetXmaxE(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetXminE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetXminE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:140:26
    t.method("GetXminE", [](TGraph2D const& a)->Double_t { return a.GetXminE(); });
    t.method("GetXminE", [](TGraph2D const* a)->Double_t { return a->GetXminE(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetYmaxE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetYmaxE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:141:26
    t.method("GetYmaxE", [](TGraph2D const& a)->Double_t { return a.GetYmaxE(); });
    t.method("GetYmaxE", [](TGraph2D const* a)->Double_t { return a->GetYmaxE(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetYminE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetYminE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:142:26
    t.method("GetYminE", [](TGraph2D const& a)->Double_t { return a.GetYminE(); });
    t.method("GetYminE", [](TGraph2D const* a)->Double_t { return a->GetYminE(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetZmaxE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetZmaxE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:143:26
    t.method("GetZmaxE", [](TGraph2D const& a)->Double_t { return a.GetZmaxE(); });
    t.method("GetZmaxE", [](TGraph2D const* a)->Double_t { return a->GetZmaxE(); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::GetZminE() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::GetZminE()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:144:26
    t.method("GetZminE", [](TGraph2D const& a)->Double_t { return a.GetZminE(); });
    t.method("GetZminE", [](TGraph2D const* a)->Double_t { return a->GetZminE(); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::GetPoint(Int_t, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::GetPoint(Int_t, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:145:26
    t.method("GetPoint", [](TGraph2D const& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->Int_t { return a.GetPoint(arg0, arg1, arg2, arg3); });
    t.method("GetPoint", [](TGraph2D const* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->Int_t { return a->GetPoint(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TGraph2D::Interpolate(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraph2D::Interpolate(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:146:26
    t.method("Interpolate", [](TGraph2D& a, Double_t arg0, Double_t arg1)->Double_t { return a.Interpolate(arg0, arg1); });
    t.method("Interpolate", [](TGraph2D* a, Double_t arg0, Double_t arg1)->Double_t { return a->Interpolate(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:147:26
    t.method("Paint", [](TGraph2D& a)->void { a.Paint(); });
    t.method("Paint", [](TGraph2D& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGraph2D* a)->void { a->Paint(); });
    t.method("Paint", [](TGraph2D* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:148:18
    t.method("Print", [](TGraph2D const& a)->void { a.Print(); });
    t.method("Print", [](TGraph2D const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGraph2D const* a)->void { a->Print(); });
    t.method("Print", [](TGraph2D const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TGraph2D::Project(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TGraph2D::Project(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:149:26
    t.method("Project", [](TGraph2D const& a)->TH1 * { return a.Project(); });
    t.method("Project", [](TGraph2D const& a, Option_t * arg0)->TH1 * { return a.Project(arg0); });
    t.method("Project", [](TGraph2D const* a)->TH1 * { return a->Project(); });
    t.method("Project", [](TGraph2D const* a, Option_t * arg0)->TH1 * { return a->Project(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGraph2D::RemovePoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraph2D::RemovePoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:150:26
    t.method("RemovePoint", [](TGraph2D& a, Int_t arg0)->Int_t { return a.RemovePoint(arg0); });
    t.method("RemovePoint", [](TGraph2D* a, Int_t arg0)->Int_t { return a->RemovePoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:152:26
    t.method("Scale", [](TGraph2D& a)->void { a.Scale(); });
    t.method("Scale", [](TGraph2D& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TGraph2D& a, Double_t arg0, Option_t * arg1)->void { a.Scale(arg0, arg1); });
    t.method("Scale", [](TGraph2D* a)->void { a->Scale(); });
    t.method("Scale", [](TGraph2D* a, Double_t arg0)->void { a->Scale(arg0); });
    t.method("Scale", [](TGraph2D* a, Double_t arg0, Option_t * arg1)->void { a->Scale(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Set(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Set(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:153:26
    t.method("Set", [](TGraph2D& a, Int_t arg0)->void { a.Set(arg0); });
    t.method("Set", [](TGraph2D* a, Int_t arg0)->void { a->Set(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:154:26
    t.method("SetDirectory", [](TGraph2D& a, TDirectory * arg0)->void { a.SetDirectory(arg0); });
    t.method("SetDirectory", [](TGraph2D* a, TDirectory * arg0)->void { a->SetDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetHistogram(TH2 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetHistogram(TH2 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:155:26
    t.method("SetHistogram", [](TGraph2D& a, TH2 * arg0)->void { a.SetHistogram(arg0); });
    t.method("SetHistogram", [](TGraph2D& a, TH2 * arg0, Option_t * arg1)->void { a.SetHistogram(arg0, arg1); });
    t.method("SetHistogram", [](TGraph2D* a, TH2 * arg0)->void { a->SetHistogram(arg0); });
    t.method("SetHistogram", [](TGraph2D* a, TH2 * arg0, Option_t * arg1)->void { a->SetHistogram(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetMargin(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetMargin(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:156:26
    t.method("SetMargin", [](TGraph2D& a)->void { a.SetMargin(); });
    t.method("SetMargin", [](TGraph2D& a, Double_t arg0)->void { a.SetMargin(arg0); });
    t.method("SetMargin", [](TGraph2D* a)->void { a->SetMargin(); });
    t.method("SetMargin", [](TGraph2D* a, Double_t arg0)->void { a->SetMargin(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetMarginBinsContent(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetMarginBinsContent(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:157:26
    t.method("SetMarginBinsContent", [](TGraph2D& a)->void { a.SetMarginBinsContent(); });
    t.method("SetMarginBinsContent", [](TGraph2D& a, Double_t arg0)->void { a.SetMarginBinsContent(arg0); });
    t.method("SetMarginBinsContent", [](TGraph2D* a)->void { a->SetMarginBinsContent(); });
    t.method("SetMarginBinsContent", [](TGraph2D* a, Double_t arg0)->void { a->SetMarginBinsContent(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:158:26
    t.method("SetMaximum", [](TGraph2D& a)->void { a.SetMaximum(); });
    t.method("SetMaximum", [](TGraph2D& a, Double_t arg0)->void { a.SetMaximum(arg0); });
    t.method("SetMaximum", [](TGraph2D* a)->void { a->SetMaximum(); });
    t.method("SetMaximum", [](TGraph2D* a, Double_t arg0)->void { a->SetMaximum(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:159:26
    t.method("SetMinimum", [](TGraph2D& a)->void { a.SetMinimum(); });
    t.method("SetMinimum", [](TGraph2D& a, Double_t arg0)->void { a.SetMinimum(arg0); });
    t.method("SetMinimum", [](TGraph2D* a)->void { a->SetMinimum(); });
    t.method("SetMinimum", [](TGraph2D* a, Double_t arg0)->void { a->SetMinimum(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetMaxIter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetMaxIter(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:160:26
    t.method("SetMaxIter", [](TGraph2D& a)->void { a.SetMaxIter(); });
    t.method("SetMaxIter", [](TGraph2D& a, Int_t arg0)->void { a.SetMaxIter(arg0); });
    t.method("SetMaxIter", [](TGraph2D* a)->void { a->SetMaxIter(); });
    t.method("SetMaxIter", [](TGraph2D* a, Int_t arg0)->void { a->SetMaxIter(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:161:18
    t.method("SetName", [](TGraph2D& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TGraph2D* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetNameTitle(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetNameTitle(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:162:18
    t.method("SetNameTitle", [](TGraph2D& a, const char * arg0, const char * arg1)->void { a.SetNameTitle(arg0, arg1); });
    t.method("SetNameTitle", [](TGraph2D* a, const char * arg0, const char * arg1)->void { a->SetNameTitle(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetNpx(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetNpx(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:163:26
    t.method("SetNpx", [](TGraph2D& a)->void { a.SetNpx(); });
    t.method("SetNpx", [](TGraph2D& a, Int_t arg0)->void { a.SetNpx(arg0); });
    t.method("SetNpx", [](TGraph2D* a)->void { a->SetNpx(); });
    t.method("SetNpx", [](TGraph2D* a, Int_t arg0)->void { a->SetNpx(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetNpy(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetNpy(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:164:26
    t.method("SetNpy", [](TGraph2D& a)->void { a.SetNpy(); });
    t.method("SetNpy", [](TGraph2D& a, Int_t arg0)->void { a.SetNpy(arg0); });
    t.method("SetNpy", [](TGraph2D* a)->void { a->SetNpy(); });
    t.method("SetNpy", [](TGraph2D* a, Int_t arg0)->void { a->SetNpy(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetPoint(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetPoint(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:165:26
    t.method("SetPoint", [](TGraph2D& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.SetPoint(arg0, arg1, arg2, arg3); });
    t.method("SetPoint", [](TGraph2D* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->SetPoint(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraph2D.h:166:18
    t.method("SetTitle", [](TGraph2D& a)->void { a.SetTitle(); });
    t.method("SetTitle", [](TGraph2D& a, const char * arg0)->void { a.SetTitle(arg0); });
    t.method("SetTitle", [](TGraph2D* a)->void { a->SetTitle(); });
    t.method("SetTitle", [](TGraph2D* a, const char * arg0)->void { a->SetTitle(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGraph2D::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGraph2D::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGraph2D!Class_Version", []()->Version_t { return TGraph2D::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph2D::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph2D::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGraph2D const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGraph2D const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGraph2D& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGraph2D* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGraph2D::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph2D::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGraph2D!DeclFileName", []() { return (std::string)TGraph2D::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGraph2D::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraph2D::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGraph2D!ImplFileLine", []()->int { return TGraph2D::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGraph2D::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph2D::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGraph2D!ImplFileName", []() { return (std::string)TGraph2D::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGraph2D::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraph2D::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGraph2D!Class_Name", []() { return (std::string)TGraph2D::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph2D::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph2D::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGraph2D!Dictionary", []()->TClass * { return TGraph2D::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraph2D::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraph2D::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGraph2D!Class", []()->TClass * { return TGraph2D::Class(); });

    DEBUG_MSG("Adding wrapper for void TGraph2D::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraph2D::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGraph2D& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGraph2D* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGraph2D::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraph2D::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGraph2D!DeclFileLine", []()->int { return TGraph2D::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGraph2D>> type_;
};
std::shared_ptr<Wrapper> newJlTGraph2D(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGraph2D(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<THnBase> : std::false_type { };
  template<> struct DefaultConstructible<THnBase> : std::false_type { };
template<> struct SuperType<THnBase> { typedef TNamed type; };
}

// Class generating the wrapper for type THnBase
// signature to use in the veto file: THnBase
struct JlTHnBase: public Wrapper {

  JlTHnBase(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type THnBase (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:43:7
    jlcxx::TypeWrapper<THnBase>  t = jlModule.add_type<THnBase>("THnBase",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<THnBase>>(new jlcxx::TypeWrapper<THnBase>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for TObjArray * THnBase::GetListOfAxes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * THnBase::GetListOfAxes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:128:15
    t.method("GetListOfAxes", [](THnBase& a)->TObjArray * { return a.GetListOfAxes(); });
    t.method("GetListOfAxes", [](THnBase* a)->TObjArray * { return a->GetListOfAxes(); });

    DEBUG_MSG("Adding wrapper for const TObjArray * THnBase::GetListOfAxes() (" __HERE__ ")");
    // signature to use in the veto list: const TObjArray * THnBase::GetListOfAxes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:129:21
    t.method("GetListOfAxes", [](THnBase const& a)->const TObjArray * { return a.GetListOfAxes(); });
    t.method("GetListOfAxes", [](THnBase const* a)->const TObjArray * { return a->GetListOfAxes(); });

    DEBUG_MSG("Adding wrapper for TAxis * THnBase::GetAxis(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TAxis * THnBase::GetAxis(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:130:11
    t.method("GetAxis", [](THnBase const& a, Int_t arg0)->TAxis * { return a.GetAxis(arg0); });
    t.method("GetAxis", [](THnBase const* a, Int_t arg0)->TAxis * { return a->GetAxis(arg0); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr THnBase::Fit(TF1 *, Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr THnBase::Fit(TF1 *, Option_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:132:18
    t.method("Fit", [](THnBase& a, TF1 * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](THnBase& a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](THnBase& a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](THnBase* a, TF1 * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](THnBase* a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](THnBase* a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TList * THnBase::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TList * THnBase::GetListOfFunctions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:133:11
    t.method("GetListOfFunctions", [](THnBase& a)->TList * { return a.GetListOfFunctions(); });
    t.method("GetListOfFunctions", [](THnBase* a)->TList * { return a->GetListOfFunctions(); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetNbins() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetNbins()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:137:21
    t.method("GetNbins", [](THnBase const& a)->Long64_t { return a.GetNbins(); });
    t.method("GetNbins", [](THnBase const* a)->Long64_t { return a->GetNbins(); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetEntries()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:138:13
    t.method("GetEntries", [](THnBase const& a)->Double_t { return a.GetEntries(); });
    t.method("GetEntries", [](THnBase const* a)->Double_t { return a->GetEntries(); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetWeightSum() (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetWeightSum()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:139:13
    t.method("GetWeightSum", [](THnBase const& a)->Double_t { return a.GetWeightSum(); });
    t.method("GetWeightSum", [](THnBase const* a)->Double_t { return a->GetWeightSum(); });

    DEBUG_MSG("Adding wrapper for Int_t THnBase::GetNdimensions() (" __HERE__ ")");
    // signature to use in the veto list: Int_t THnBase::GetNdimensions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:140:13
    t.method("GetNdimensions", [](THnBase const& a)->Int_t { return a.GetNdimensions(); });
    t.method("GetNdimensions", [](THnBase const* a)->Int_t { return a->GetNdimensions(); });

    DEBUG_MSG("Adding wrapper for Bool_t THnBase::GetCalculateErrors() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t THnBase::GetCalculateErrors()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:141:13
    t.method("GetCalculateErrors", [](THnBase const& a)->Bool_t { return a.GetCalculateErrors(); });
    t.method("GetCalculateErrors", [](THnBase const* a)->Bool_t { return a->GetCalculateErrors(); });

    DEBUG_MSG("Adding wrapper for void THnBase::CalculateErrors(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::CalculateErrors(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:144:13
    t.method("CalculateErrors", [](THnBase& a)->void { a.CalculateErrors(); });
    t.method("CalculateErrors", [](THnBase& a, Bool_t arg0)->void { a.CalculateErrors(arg0); });
    t.method("CalculateErrors", [](THnBase* a)->void { a->CalculateErrors(); });
    t.method("CalculateErrors", [](THnBase* a, Bool_t arg0)->void { a->CalculateErrors(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::Fill(const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::Fill(const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:149:13
    t.method("Fill", [](THnBase& a, const Double_t * arg0)->Long64_t { return a.Fill(arg0); });
    t.method("Fill", [](THnBase& a, const Double_t * arg0, Double_t arg1)->Long64_t { return a.Fill(arg0, arg1); });
    t.method("Fill", [](THnBase* a, const Double_t * arg0)->Long64_t { return a->Fill(arg0); });
    t.method("Fill", [](THnBase* a, const Double_t * arg0, Double_t arg1)->Long64_t { return a->Fill(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::Fill(const char *[], Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::Fill(const char *[], Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:155:13
    t.method("Fill", [](THnBase& a, const char * arg0[])->Long64_t { return a.Fill(arg0); });
    t.method("Fill", [](THnBase& a, const char * arg0[], Double_t arg1)->Long64_t { return a.Fill(arg0, arg1); });
    t.method("Fill", [](THnBase* a, const char * arg0[])->Long64_t { return a->Fill(arg0); });
    t.method("Fill", [](THnBase* a, const char * arg0[], Double_t arg1)->Long64_t { return a->Fill(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::FillBin(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::FillBin(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:183:17
    t.method("FillBin", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.FillBin(arg0, arg1); });
    t.method("FillBin", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->FillBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinEdges(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinEdges(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:185:9
    t.method("SetBinEdges", [](THnBase& a, Int_t arg0, const Double_t * arg1)->void { a.SetBinEdges(arg0, arg1); });
    t.method("SetBinEdges", [](THnBase* a, Int_t arg0, const Double_t * arg1)->void { a->SetBinEdges(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t THnBase::IsInRange(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t THnBase::IsInRange(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:186:11
    t.method("IsInRange", [](THnBase const& a, Int_t * arg0)->Bool_t { return a.IsInRange(arg0); });
    t.method("IsInRange", [](THnBase const* a, Int_t * arg0)->Bool_t { return a->IsInRange(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetBinError(const Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetBinError(const Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:187:13
    t.method("GetBinError", [](THnBase const& a, const Int_t * arg0)->Double_t { return a.GetBinError(arg0); });
    t.method("GetBinError", [](THnBase const* a, const Int_t * arg0)->Double_t { return a->GetBinError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetBinError(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetBinError(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:188:13
    t.method("GetBinError", [](THnBase const& a, Long64_t arg0)->Double_t { return a.GetBinError(arg0); });
    t.method("GetBinError", [](THnBase const* a, Long64_t arg0)->Double_t { return a->GetBinError(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinError(const Int_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinError(const Int_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:189:9
    t.method("SetBinError", [](THnBase& a, const Int_t * arg0, Double_t arg1)->void { a.SetBinError(arg0, arg1); });
    t.method("SetBinError", [](THnBase* a, const Int_t * arg0, Double_t arg1)->void { a->SetBinError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinError(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinError(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:190:9
    t.method("SetBinError", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.SetBinError(arg0, arg1); });
    t.method("SetBinError", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->SetBinError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::AddBinContent(const Int_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::AddBinContent(const Int_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:191:9
    t.method("AddBinContent", [](THnBase& a, const Int_t * arg0)->void { a.AddBinContent(arg0); });
    t.method("AddBinContent", [](THnBase& a, const Int_t * arg0, Double_t arg1)->void { a.AddBinContent(arg0, arg1); });
    t.method("AddBinContent", [](THnBase* a, const Int_t * arg0)->void { a->AddBinContent(arg0); });
    t.method("AddBinContent", [](THnBase* a, const Int_t * arg0, Double_t arg1)->void { a->AddBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetEntries(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetEntries(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:192:9
    t.method("SetEntries", [](THnBase& a, Double_t arg0)->void { a.SetEntries(arg0); });
    t.method("SetEntries", [](THnBase* a, Double_t arg0)->void { a->SetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:193:9
    t.method("SetTitle", [](THnBase& a, const char * arg0)->void { a.SetTitle(arg0); });
    t.method("SetTitle", [](THnBase* a, const char * arg0)->void { a->SetTitle(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetBinContent(const Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetBinContent(const Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:195:13
    t.method("GetBinContent", [](THnBase const& a, const Int_t * arg0)->Double_t { return a.GetBinContent(arg0); });
    t.method("GetBinContent", [](THnBase const* a, const Int_t * arg0)->Double_t { return a->GetBinContent(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetBinContent(Long64_t, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetBinContent(Long64_t, Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:196:21
    t.method("GetBinContent", [](THnBase const& a, Long64_t arg0)->Double_t { return a.GetBinContent(arg0); });
    t.method("GetBinContent", [](THnBase const& a, Long64_t arg0, Int_t * arg1)->Double_t { return a.GetBinContent(arg0, arg1); });
    t.method("GetBinContent", [](THnBase const* a, Long64_t arg0)->Double_t { return a->GetBinContent(arg0); });
    t.method("GetBinContent", [](THnBase const* a, Long64_t arg0, Int_t * arg1)->Double_t { return a->GetBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetBinError2(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetBinError2(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:197:21
    t.method("GetBinError2", [](THnBase const& a, Long64_t arg0)->Double_t { return a.GetBinError2(arg0); });
    t.method("GetBinError2", [](THnBase const* a, Long64_t arg0)->Double_t { return a->GetBinError2(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:198:21
    t.method("GetBin", [](THnBase const& a, const Int_t * arg0)->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase const* a, const Int_t * arg0)->Long64_t { return a->GetBin(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:199:21
    t.method("GetBin", [](THnBase const& a, const Double_t * arg0)->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase const* a, const Double_t * arg0)->Long64_t { return a->GetBin(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const char *[]) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const char *[])
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:200:21
    t.method("GetBin", [](THnBase const& a, const char * arg0[])->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase const* a, const char * arg0[])->Long64_t { return a->GetBin(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const Int_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const Int_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:201:21
    t.method("GetBin", [](THnBase& a, const Int_t * arg0)->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase& a, const Int_t * arg0, Bool_t arg1)->Long64_t { return a.GetBin(arg0, arg1); });
    t.method("GetBin", [](THnBase* a, const Int_t * arg0)->Long64_t { return a->GetBin(arg0); });
    t.method("GetBin", [](THnBase* a, const Int_t * arg0, Bool_t arg1)->Long64_t { return a->GetBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:202:21
    t.method("GetBin", [](THnBase& a, const Double_t * arg0)->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase& a, const Double_t * arg0, Bool_t arg1)->Long64_t { return a.GetBin(arg0, arg1); });
    t.method("GetBin", [](THnBase* a, const Double_t * arg0)->Long64_t { return a->GetBin(arg0); });
    t.method("GetBin", [](THnBase* a, const Double_t * arg0, Bool_t arg1)->Long64_t { return a->GetBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::GetBin(const char *[], Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::GetBin(const char *[], Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:203:21
    t.method("GetBin", [](THnBase& a, const char * arg0[])->Long64_t { return a.GetBin(arg0); });
    t.method("GetBin", [](THnBase& a, const char * arg0[], Bool_t arg1)->Long64_t { return a.GetBin(arg0, arg1); });
    t.method("GetBin", [](THnBase* a, const char * arg0[])->Long64_t { return a->GetBin(arg0); });
    t.method("GetBin", [](THnBase* a, const char * arg0[], Bool_t arg1)->Long64_t { return a->GetBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinContent(const Int_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinContent(const Int_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:205:9
    t.method("SetBinContent", [](THnBase& a, const Int_t * arg0, Double_t arg1)->void { a.SetBinContent(arg0, arg1); });
    t.method("SetBinContent", [](THnBase* a, const Int_t * arg0, Double_t arg1)->void { a->SetBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinContent(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinContent(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:206:17
    t.method("SetBinContent", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.SetBinContent(arg0, arg1); });
    t.method("SetBinContent", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->SetBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::SetBinError2(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::SetBinError2(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:207:17
    t.method("SetBinError2", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.SetBinError2(arg0, arg1); });
    t.method("SetBinError2", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->SetBinError2(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::AddBinError2(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::AddBinError2(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:208:17
    t.method("AddBinError2", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.AddBinError2(arg0, arg1); });
    t.method("AddBinError2", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->AddBinError2(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::AddBinContent(Long64_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::AddBinContent(Long64_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:209:17
    t.method("AddBinContent", [](THnBase& a, Long64_t arg0)->void { a.AddBinContent(arg0); });
    t.method("AddBinContent", [](THnBase& a, Long64_t arg0, Double_t arg1)->void { a.AddBinContent(arg0, arg1); });
    t.method("AddBinContent", [](THnBase* a, Long64_t arg0)->void { a->AddBinContent(arg0); });
    t.method("AddBinContent", [](THnBase* a, Long64_t arg0, Double_t arg1)->void { a->AddBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetSumw() (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetSumw()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:211:13
    t.method("GetSumw", [](THnBase const& a)->Double_t { return a.GetSumw(); });
    t.method("GetSumw", [](THnBase const* a)->Double_t { return a->GetSumw(); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetSumw2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetSumw2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:212:13
    t.method("GetSumw2", [](THnBase const& a)->Double_t { return a.GetSumw2(); });
    t.method("GetSumw2", [](THnBase const* a)->Double_t { return a->GetSumw2(); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetSumwx(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetSumwx(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:213:13
    t.method("GetSumwx", [](THnBase const& a, Int_t arg0)->Double_t { return a.GetSumwx(arg0); });
    t.method("GetSumwx", [](THnBase const* a, Int_t arg0)->Double_t { return a->GetSumwx(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::GetSumwx2(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::GetSumwx2(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:214:13
    t.method("GetSumwx2", [](THnBase const& a, Int_t arg0)->Double_t { return a.GetSumwx2(arg0); });
    t.method("GetSumwx2", [](THnBase const* a, Int_t arg0)->Double_t { return a->GetSumwx2(arg0); });

    DEBUG_MSG("Adding wrapper for TH1D * THnBase::Projection(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1D * THnBase::Projection(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:224:13
    t.method("Projection", [](THnBase const& a, Int_t arg0)->TH1D * { return a.Projection(arg0); });
    t.method("Projection", [](THnBase const& a, Int_t arg0, Option_t * arg1)->TH1D * { return a.Projection(arg0, arg1); });
    t.method("Projection", [](THnBase const* a, Int_t arg0)->TH1D * { return a->Projection(arg0); });
    t.method("Projection", [](THnBase const* a, Int_t arg0, Option_t * arg1)->TH1D * { return a->Projection(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TH2D * THnBase::Projection(Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH2D * THnBase::Projection(Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:237:13
    t.method("Projection", [](THnBase const& a, Int_t arg0, Int_t arg1)->TH2D * { return a.Projection(arg0, arg1); });
    t.method("Projection", [](THnBase const& a, Int_t arg0, Int_t arg1, Option_t * arg2)->TH2D * { return a.Projection(arg0, arg1, arg2); });
    t.method("Projection", [](THnBase const* a, Int_t arg0, Int_t arg1)->TH2D * { return a->Projection(arg0, arg1); });
    t.method("Projection", [](THnBase const* a, Int_t arg0, Int_t arg1, Option_t * arg2)->TH2D * { return a->Projection(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TH3D * THnBase::Projection(Int_t, Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH3D * THnBase::Projection(Int_t, Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:250:13
    t.method("Projection", [](THnBase const& a, Int_t arg0, Int_t arg1, Int_t arg2)->TH3D * { return a.Projection(arg0, arg1, arg2); });
    t.method("Projection", [](THnBase const& a, Int_t arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->TH3D * { return a.Projection(arg0, arg1, arg2, arg3); });
    t.method("Projection", [](THnBase const* a, Int_t arg0, Int_t arg1, Int_t arg2)->TH3D * { return a->Projection(arg0, arg1, arg2); });
    t.method("Projection", [](THnBase const* a, Int_t arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->TH3D * { return a->Projection(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for THnBase * THnBase::ProjectionND(Int_t, const Int_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: THnBase * THnBase::ProjectionND(Int_t, const Int_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:255:13
    t.method("ProjectionND", [](THnBase const& a, Int_t arg0, const Int_t * arg1)->THnBase * { return a.ProjectionND(arg0, arg1); });
    t.method("ProjectionND", [](THnBase const& a, Int_t arg0, const Int_t * arg1, Option_t * arg2)->THnBase * { return a.ProjectionND(arg0, arg1, arg2); });
    t.method("ProjectionND", [](THnBase const* a, Int_t arg0, const Int_t * arg1)->THnBase * { return a->ProjectionND(arg0, arg1); });
    t.method("ProjectionND", [](THnBase const* a, Int_t arg0, const Int_t * arg1, Option_t * arg2)->THnBase * { return a->ProjectionND(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Long64_t THnBase::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t THnBase::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:260:15
    t.method("Merge", [](THnBase& a, TCollection * arg0)->Long64_t { return a.Merge(arg0); });
    t.method("Merge", [](THnBase* a, TCollection * arg0)->Long64_t { return a->Merge(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::Scale(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Scale(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:262:9
    t.method("Scale", [](THnBase& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](THnBase* a, Double_t arg0)->void { a->Scale(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::Add(const THnBase *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Add(const THnBase *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:263:9
    t.method("Add", [](THnBase& a, const THnBase * arg0)->void { a.Add(arg0); });
    t.method("Add", [](THnBase& a, const THnBase * arg0, Double_t arg1)->void { a.Add(arg0, arg1); });
    t.method("Add", [](THnBase* a, const THnBase * arg0)->void { a->Add(arg0); });
    t.method("Add", [](THnBase* a, const THnBase * arg0, Double_t arg1)->void { a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Add(const TH1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Add(const TH1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:264:9
    t.method("Add", [](THnBase& a, const TH1 * arg0)->void { a.Add(arg0); });
    t.method("Add", [](THnBase& a, const TH1 * arg0, Double_t arg1)->void { a.Add(arg0, arg1); });
    t.method("Add", [](THnBase* a, const TH1 * arg0)->void { a->Add(arg0); });
    t.method("Add", [](THnBase* a, const TH1 * arg0, Double_t arg1)->void { a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Multiply(const THnBase *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Multiply(const THnBase *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:265:9
    t.method("Multiply", [](THnBase& a, const THnBase * arg0)->void { a.Multiply(arg0); });
    t.method("Multiply", [](THnBase* a, const THnBase * arg0)->void { a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::Multiply(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Multiply(TF1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:266:9
    t.method("Multiply", [](THnBase& a, TF1 * arg0)->void { a.Multiply(arg0); });
    t.method("Multiply", [](THnBase& a, TF1 * arg0, Double_t arg1)->void { a.Multiply(arg0, arg1); });
    t.method("Multiply", [](THnBase* a, TF1 * arg0)->void { a->Multiply(arg0); });
    t.method("Multiply", [](THnBase* a, TF1 * arg0, Double_t arg1)->void { a->Multiply(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Divide(const THnBase *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Divide(const THnBase *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:267:9
    t.method("Divide", [](THnBase& a, const THnBase * arg0)->void { a.Divide(arg0); });
    t.method("Divide", [](THnBase* a, const THnBase * arg0)->void { a->Divide(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::Divide(const THnBase *, const THnBase *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Divide(const THnBase *, const THnBase *, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:268:9
    t.method("Divide", [](THnBase& a, const THnBase * arg0, const THnBase * arg1)->void { a.Divide(arg0, arg1); });
    t.method("Divide", [](THnBase& a, const THnBase * arg0, const THnBase * arg1, Double_t arg2)->void { a.Divide(arg0, arg1, arg2); });
    t.method("Divide", [](THnBase& a, const THnBase * arg0, const THnBase * arg1, Double_t arg2, Double_t arg3)->void { a.Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](THnBase& a, const THnBase * arg0, const THnBase * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->void { a.Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](THnBase* a, const THnBase * arg0, const THnBase * arg1)->void { a->Divide(arg0, arg1); });
    t.method("Divide", [](THnBase* a, const THnBase * arg0, const THnBase * arg1, Double_t arg2)->void { a->Divide(arg0, arg1, arg2); });
    t.method("Divide", [](THnBase* a, const THnBase * arg0, const THnBase * arg1, Double_t arg2, Double_t arg3)->void { a->Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](THnBase* a, const THnBase * arg0, const THnBase * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->void { a->Divide(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void THnBase::RebinnedAdd(const THnBase *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::RebinnedAdd(const THnBase *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:269:9
    t.method("RebinnedAdd", [](THnBase& a, const THnBase * arg0)->void { a.RebinnedAdd(arg0); });
    t.method("RebinnedAdd", [](THnBase& a, const THnBase * arg0, Double_t arg1)->void { a.RebinnedAdd(arg0, arg1); });
    t.method("RebinnedAdd", [](THnBase* a, const THnBase * arg0)->void { a->RebinnedAdd(arg0); });
    t.method("RebinnedAdd", [](THnBase* a, const THnBase * arg0, Double_t arg1)->void { a->RebinnedAdd(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Reset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:271:17
    t.method("Reset", [](THnBase& a)->void { a.Reset(); });
    t.method("Reset", [](THnBase& a, Option_t * arg0)->void { a.Reset(arg0); });
    t.method("Reset", [](THnBase* a)->void { a->Reset(); });
    t.method("Reset", [](THnBase* a, Option_t * arg0)->void { a->Reset(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::Sumw2() (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Sumw2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:272:17
    t.method("Sumw2", [](THnBase& a)->void { a.Sumw2(); });
    t.method("Sumw2", [](THnBase* a)->void { a->Sumw2(); });

    DEBUG_MSG("Adding wrapper for Double_t THnBase::ComputeIntegral() (" __HERE__ ")");
    // signature to use in the veto list: Double_t THnBase::ComputeIntegral()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:274:13
    t.method("ComputeIntegral", [](THnBase& a)->Double_t { return a.ComputeIntegral(); });
    t.method("ComputeIntegral", [](THnBase* a)->Double_t { return a->ComputeIntegral(); });

    DEBUG_MSG("Adding wrapper for void THnBase::GetRandom(Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::GetRandom(Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:275:9
    t.method("GetRandom", [](THnBase& a, Double_t * arg0)->void { a.GetRandom(arg0); });
    t.method("GetRandom", [](THnBase& a, Double_t * arg0, Bool_t arg1)->void { a.GetRandom(arg0, arg1); });
    t.method("GetRandom", [](THnBase* a, Double_t * arg0)->void { a->GetRandom(arg0); });
    t.method("GetRandom", [](THnBase* a, Double_t * arg0, Bool_t arg1)->void { a->GetRandom(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:277:9
    t.method("Print", [](THnBase const& a)->void { a.Print(); });
    t.method("Print", [](THnBase const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](THnBase const* a)->void { a->Print(); });
    t.method("Print", [](THnBase const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void THnBase::PrintEntries(Long64_t, Long64_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::PrintEntries(Long64_t, Long64_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:278:9
    t.method("PrintEntries", [](THnBase const& a)->void { a.PrintEntries(); });
    t.method("PrintEntries", [](THnBase const& a, Long64_t arg0)->void { a.PrintEntries(arg0); });
    t.method("PrintEntries", [](THnBase const& a, Long64_t arg0, Long64_t arg1)->void { a.PrintEntries(arg0, arg1); });
    t.method("PrintEntries", [](THnBase const& a, Long64_t arg0, Long64_t arg1, Option_t * arg2)->void { a.PrintEntries(arg0, arg1, arg2); });
    t.method("PrintEntries", [](THnBase const* a)->void { a->PrintEntries(); });
    t.method("PrintEntries", [](THnBase const* a, Long64_t arg0)->void { a->PrintEntries(arg0); });
    t.method("PrintEntries", [](THnBase const* a, Long64_t arg0, Long64_t arg1)->void { a->PrintEntries(arg0, arg1); });
    t.method("PrintEntries", [](THnBase const* a, Long64_t arg0, Long64_t arg1, Option_t * arg2)->void { a->PrintEntries(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void THnBase::PrintBin(Int_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::PrintBin(Int_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:279:9
    t.method("PrintBin", [](THnBase const& a, Int_t * arg0, Option_t * arg1)->void { a.PrintBin(arg0, arg1); });
    t.method("PrintBin", [](THnBase const* a, Int_t * arg0, Option_t * arg1)->void { a->PrintBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::PrintBin(Long64_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::PrintBin(Long64_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:282:9
    t.method("PrintBin", [](THnBase const& a, Long64_t arg0, Option_t * arg1)->void { a.PrintBin(arg0, arg1); });
    t.method("PrintBin", [](THnBase const* a, Long64_t arg0, Option_t * arg1)->void { a->PrintBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void THnBase::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:284:9
    t.method("Browse", [](THnBase& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](THnBase* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t THnBase::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t THnBase::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/THnBase.h:285:11
    t.method("IsFolder", [](THnBase const& a)->Bool_t { return a.IsFolder(); });
    t.method("IsFolder", [](THnBase const* a)->Bool_t { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for Version_t THnBase::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t THnBase::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("THnBase!Class_Version", []()->Version_t { return THnBase::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * THnBase::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * THnBase::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](THnBase const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](THnBase const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void THnBase::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](THnBase& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](THnBase* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * THnBase::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * THnBase::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("THnBase!DeclFileName", []() { return (std::string)THnBase::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int THnBase::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int THnBase::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("THnBase!ImplFileLine", []()->int { return THnBase::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * THnBase::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * THnBase::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("THnBase!ImplFileName", []() { return (std::string)THnBase::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * THnBase::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * THnBase::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("THnBase!Class_Name", []() { return (std::string)THnBase::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * THnBase::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * THnBase::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("THnBase!Dictionary", []()->TClass * { return THnBase::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * THnBase::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * THnBase::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("THnBase!Class", []()->TClass * { return THnBase::Class(); });

    DEBUG_MSG("Adding wrapper for void THnBase::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void THnBase::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](THnBase& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](THnBase* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int THnBase::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int THnBase::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("THnBase!DeclFileLine", []()->int { return THnBase::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<THnBase>> type_;
};
std::shared_ptr<Wrapper> newJlTHnBase(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTHnBase(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Fit::FitData> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Fit::FitData> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Fit::FitData
// signature to use in the veto file: ROOT::Fit::FitData
struct JlROOT_Fit_FitData: public Wrapper {

  JlROOT_Fit_FitData(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Fit::FitData (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Fit/FitData.h:56:13
    jlcxx::TypeWrapper<ROOT::Fit::FitData>  t = jlModule.add_type<ROOT::Fit::FitData>("ROOT!Fit!FitData");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::FitData>>(new jlcxx::TypeWrapper<ROOT::Fit::FitData>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::FitData>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Fit_FitData(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Fit_FitData(module));
}
