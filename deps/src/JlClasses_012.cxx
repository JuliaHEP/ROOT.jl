// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TTree::TClusterIterator> : std::false_type { };
  template<> struct DefaultConstructible<TTree::TClusterIterator> : std::false_type { };
}

// Class generating the wrapper for type TTree::TClusterIterator
// signature to use in the veto file: TTree::TClusterIterator
struct JlTTree_TClusterIterator: public Wrapper {

  JlTTree_TClusterIterator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTree::TClusterIterator (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:269:10
    jlcxx::TypeWrapper<TTree::TClusterIterator>  t = jlModule.add_type<TTree::TClusterIterator>("TTree!TClusterIterator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>>(new jlcxx::TypeWrapper<TTree::TClusterIterator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Next() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Next()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:295:16
    t.method("Next", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::Next));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Previous() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Previous()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:299:16
    t.method("Previous", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::Previous));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetStartEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetStartEntry()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:302:16
    t.method("GetStartEntry", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::GetStartEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetNextEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetNextEntry()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:307:16
    t.method("GetNextEntry", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::GetNextEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::operator()() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::operator()()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TTree.h:311:16
    t.method("paren", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::operator()));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>> type_;
};
std::shared_ptr<Wrapper> newJlTTree_TClusterIterator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTree_TClusterIterator(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TStreamerInfo> : std::false_type { };
  template<> struct DefaultConstructible<TStreamerInfo> : std::false_type { };
}

// Class generating the wrapper for type TStreamerInfo
// signature to use in the veto file: TStreamerInfo
struct JlTStreamerInfo: public Wrapper {

  JlTStreamerInfo(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TStreamerInfo (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TStreamerInfo.h:39:7
    jlcxx::TypeWrapper<TStreamerInfo>  t = jlModule.add_type<TStreamerInfo>("TStreamerInfo");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TStreamerInfo>>(new jlcxx::TypeWrapper<TStreamerInfo>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TStreamerInfo>> type_;
};
std::shared_ptr<Wrapper> newJlTStreamerInfo(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTStreamerInfo(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TEntryList> : std::false_type { };
  template<> struct DefaultConstructible<TEntryList> : std::false_type { };
template<> struct SuperType<TEntryList> { typedef TNamed type; };
}

// Class generating the wrapper for type TEntryList
// signature to use in the veto file: TEntryList
struct JlTEntryList: public Wrapper {

  JlTEntryList(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TEntryList (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:25:7
    jlcxx::TypeWrapper<TEntryList>  t = jlModule.add_type<TEntryList>("TEntryList",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TEntryList>>(new jlcxx::TypeWrapper<TEntryList>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:57:4
    t.constructor<const char *, const char *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *, const TTree *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:58:4
    t.constructor<const char *, const char *, const TTree *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *, const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:59:4
    t.constructor<const char *, const char *, const char *, const char *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const TTree *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:60:4
    t.constructor<const TTree *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const TEntryList &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:61:4
    t.constructor<const TEntryList &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TEntryList::Add(const TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Add(const TEntryList *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:64:24
    t.method("Add", static_cast<void (TEntryList::*)(const TEntryList *) >(&TEntryList::Add));

    DEBUG_MSG("Adding wrapper for void TEntryList::AddSubList(TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::AddSubList(TEntryList *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:65:24
    t.method("AddSubList", static_cast<void (TEntryList::*)(TEntryList *) >(&TEntryList::AddSubList));

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Contains(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Contains(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:66:24
    t.method("Contains", static_cast<Int_t (TEntryList::*)(Long64_t, TTree *) >(&TEntryList::Contains));
    t.method("Contains", [](TEntryList& a, Long64_t arg0)->Int_t { return a.Contains(arg0); });
    t.method("Contains", [](TEntryList* a, Long64_t arg0)->Int_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:67:24
    t.method("DirectoryAutoAdd", static_cast<void (TEntryList::*)(TDirectory *) >(&TEntryList::DirectoryAutoAdd));

    DEBUG_MSG("Adding wrapper for bool TEntryList::Enter(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Enter(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:68:24
    t.method("Enter", static_cast<bool (TEntryList::*)(Long64_t, TTree *) >(&TEntryList::Enter));
    t.method("Enter", [](TEntryList& a, Long64_t arg0)->bool { return a.Enter(arg0); });
    t.method("Enter", [](TEntryList* a, Long64_t arg0)->bool { return a->Enter(arg0); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::Enter(Long64_t, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Enter(Long64_t, const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:69:24
    t.method("Enter", static_cast<bool (TEntryList::*)(Long64_t, const char *, const char *) >(&TEntryList::Enter));

    DEBUG_MSG("Adding wrapper for void TEntryList::EnterRange(Long64_t, Long64_t, TTree *, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::EnterRange(Long64_t, Long64_t, TTree *, UInt_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:70:24
    t.method("EnterRange", static_cast<void (TEntryList::*)(Long64_t, Long64_t, TTree *, UInt_t) >(&TEntryList::EnterRange));
    t.method("EnterRange", [](TEntryList& a, Long64_t arg0, Long64_t arg1)->void { a.EnterRange(arg0, arg1); });
    t.method("EnterRange", [](TEntryList& a, Long64_t arg0, Long64_t arg1, TTree * arg2)->void { a.EnterRange(arg0, arg1, arg2); });
    t.method("EnterRange", [](TEntryList* a, Long64_t arg0, Long64_t arg1)->void { a->EnterRange(arg0, arg1); });
    t.method("EnterRange", [](TEntryList* a, Long64_t arg0, Long64_t arg1, TTree * arg2)->void { a->EnterRange(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TEntryList * TEntryList::GetCurrentList() (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TEntryList::GetCurrentList()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:71:24
    t.method("GetCurrentList", static_cast<TEntryList * (TEntryList::*)()  const>(&TEntryList::GetCurrentList));

    DEBUG_MSG("Adding wrapper for TEntryList * TEntryList::GetEntryList(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TEntryList::GetEntryList(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:72:24
    t.method("GetEntryList", static_cast<TEntryList * (TEntryList::*)(const char *, const char *, Option_t *) >(&TEntryList::GetEntryList));
    t.method("GetEntryList", [](TEntryList& a, const char * arg0, const char * arg1)->TEntryList * { return a.GetEntryList(arg0, arg1); });
    t.method("GetEntryList", [](TEntryList* a, const char * arg0, const char * arg1)->TEntryList * { return a->GetEntryList(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntry(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntry(Long64_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:73:24
    t.method("GetEntry", static_cast<Long64_t (TEntryList::*)(Long64_t) >(&TEntryList::GetEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntryAndTree(Long64_t, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntryAndTree(Long64_t, Int_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:74:24
    t.method("GetEntryAndTree", static_cast<Long64_t (TEntryList::*)(Long64_t, Int_t &) >(&TEntryList::GetEntryAndTree));

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntriesToProcess() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntriesToProcess()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:75:24
    t.method("GetEntriesToProcess", static_cast<Long64_t (TEntryList::*)()  const>(&TEntryList::GetEntriesToProcess));

    DEBUG_MSG("Adding wrapper for TList * TEntryList::GetLists() (" __HERE__ ")");
    // signature to use in the veto list: TList * TEntryList::GetLists()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:76:24
    t.method("GetLists", static_cast<TList * (TEntryList::*)()  const>(&TEntryList::GetLists));

    DEBUG_MSG("Adding wrapper for TDirectory * TEntryList::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TEntryList::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:77:24
    t.method("GetDirectory", static_cast<TDirectory * (TEntryList::*)()  const>(&TEntryList::GetDirectory));

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetN() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetN()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:78:24
    t.method("GetN", static_cast<Long64_t (TEntryList::*)()  const>(&TEntryList::GetN));

    DEBUG_MSG("Adding wrapper for const char * TEntryList::GetTreeName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::GetTreeName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:79:24
    t.method("GetTreeName", [](TEntryList const& a) { return (std::string)a.GetTreeName(); });
    t.method("GetTreeName", [](TEntryList const* a) { return (std::string)a->GetTreeName(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::GetFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::GetFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:80:24
    t.method("GetFileName", [](TEntryList const& a) { return (std::string)a.GetFileName(); });
    t.method("GetFileName", [](TEntryList const* a) { return (std::string)a->GetFileName(); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::GetTreeNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::GetTreeNumber()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:81:24
    t.method("GetTreeNumber", static_cast<Int_t (TEntryList::*)()  const>(&TEntryList::GetTreeNumber));

    DEBUG_MSG("Adding wrapper for bool TEntryList::GetReapplyCut() (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::GetReapplyCut()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:82:24
    t.method("GetReapplyCut", static_cast<bool (TEntryList::*)()  const>(&TEntryList::GetReapplyCut));

    DEBUG_MSG("Adding wrapper for bool TEntryList::IsValid() (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::IsValid()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:84:9
    t.method("IsValid", static_cast<bool (TEntryList::*)()  const>(&TEntryList::IsValid));

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:90:24
    t.method("Merge", static_cast<Int_t (TEntryList::*)(TCollection *) >(&TEntryList::Merge));

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::Next() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::Next()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:92:24
    t.method("Next", static_cast<Long64_t (TEntryList::*)() >(&TEntryList::Next));

    DEBUG_MSG("Adding wrapper for void TEntryList::OptimizeStorage() (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::OptimizeStorage()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:93:24
    t.method("OptimizeStorage", static_cast<void (TEntryList::*)() >(&TEntryList::OptimizeStorage));

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::RelocatePaths(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::RelocatePaths(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:94:24
    t.method("RelocatePaths", static_cast<Int_t (TEntryList::*)(const char *, const char *) >(&TEntryList::RelocatePaths));
    t.method("RelocatePaths", [](TEntryList& a, const char * arg0)->Int_t { return a.RelocatePaths(arg0); });
    t.method("RelocatePaths", [](TEntryList* a, const char * arg0)->Int_t { return a->RelocatePaths(arg0); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::Remove(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Remove(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:95:24
    t.method("Remove", static_cast<bool (TEntryList::*)(Long64_t, TTree *) >(&TEntryList::Remove));
    t.method("Remove", [](TEntryList& a, Long64_t arg0)->bool { return a.Remove(arg0); });
    t.method("Remove", [](TEntryList* a, Long64_t arg0)->bool { return a->Remove(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Reset() (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Reset()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:96:24
    t.method("Reset", static_cast<void (TEntryList::*)() >(&TEntryList::Reset));

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::ScanPaths(TList *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::ScanPaths(TList *, bool)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:97:24
    t.method("ScanPaths", static_cast<Int_t (TEntryList::*)(TList *, bool) >(&TEntryList::ScanPaths));
    t.method("ScanPaths", [](TEntryList& a, TList * arg0)->Int_t { return a.ScanPaths(arg0); });
    t.method("ScanPaths", [](TEntryList* a, TList * arg0)->Int_t { return a->ScanPaths(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Print(const Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Print(const Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:99:24
    t.method("Print", static_cast<void (TEntryList::*)(const Option_t *)  const>(&TEntryList::Print));
    t.method("Print", [](TEntryList const& a)->void { a.Print(); });
    t.method("Print", [](TEntryList const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:100:24
    t.method("SetDirectory", static_cast<void (TEntryList::*)(TDirectory *) >(&TEntryList::SetDirectory));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetEntriesToProcess(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetEntriesToProcess(Long64_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:101:24
    t.method("SetEntriesToProcess", static_cast<void (TEntryList::*)(Long64_t) >(&TEntryList::SetEntriesToProcess));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetShift(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetShift(bool)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:102:24
    t.method("SetShift", static_cast<void (TEntryList::*)(bool) >(&TEntryList::SetShift));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTree(const TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTree(const TTree *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:103:24
    t.method("SetTree", static_cast<void (TEntryList::*)(const TTree *) >(&TEntryList::SetTree));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTree(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTree(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:104:24
    t.method("SetTree", static_cast<void (TEntryList::*)(const char *, const char *) >(&TEntryList::SetTree));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTreeName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTreeName(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:105:24
    t.method("SetTreeName", static_cast<void (TEntryList::*)(const char *) >(&TEntryList::SetTreeName));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetFileName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetFileName(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:106:24
    t.method("SetFileName", static_cast<void (TEntryList::*)(const char *) >(&TEntryList::SetFileName));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTreeNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTreeNumber(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:107:24
    t.method("SetTreeNumber", static_cast<void (TEntryList::*)(Int_t) >(&TEntryList::SetTreeNumber));

    DEBUG_MSG("Adding wrapper for void TEntryList::SetReapplyCut(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetReapplyCut(bool)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:108:24
    t.method("SetReapplyCut", static_cast<void (TEntryList::*)(bool) >(&TEntryList::SetReapplyCut));
    t.method("SetReapplyCut", [](TEntryList& a)->void { a.SetReapplyCut(); });
    t.method("SetReapplyCut", [](TEntryList* a)->void { a->SetReapplyCut(); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Subtract(const TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Subtract(const TEntryList *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:109:24
    t.method("Subtract", static_cast<void (TEntryList::*)(const TEntryList *) >(&TEntryList::Subtract));

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Relocate(const char *, const char *, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Relocate(const char *, const char *, const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:111:24
    module_.method("TEntryList!Relocate", static_cast<Int_t (*)(const char *, const char *, const char *, const char *) >(&TEntryList::Relocate));
    module_.method("TEntryList!Relocate", [](const char * arg0, const char * arg1)->Int_t { return TEntryList::Relocate(arg0, arg1); });
    module_.method("TEntryList!Relocate", [](const char * arg0, const char * arg1, const char * arg2)->Int_t { return TEntryList::Relocate(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Scan(const char *, TList *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Scan(const char *, TList *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:113:24
    module_.method("TEntryList!Scan", static_cast<Int_t (*)(const char *, TList *) >(&TEntryList::Scan));

    DEBUG_MSG("Adding wrapper for Version_t TEntryList::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TEntryList::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!Class_Version", static_cast<Version_t (*)() >(&TEntryList::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    t.method("IsA", static_cast<TClass * (TEntryList::*)()  const>(&TEntryList::IsA));

    DEBUG_MSG("Adding wrapper for void TEntryList::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    t.method("StreamerNVirtual", static_cast<void (TEntryList::*)(TBuffer &) >(&TEntryList::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TEntryList::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!DeclFileName", []() { return (std::string)TEntryList::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TEntryList::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TEntryList::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!ImplFileLine", static_cast<int (*)() >(&TEntryList::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TEntryList::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!ImplFileName", []() { return (std::string)TEntryList::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!Class_Name", []() { return (std::string)TEntryList::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!Dictionary", static_cast<TClass * (*)() >(&TEntryList::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!Class", static_cast<TClass * (*)() >(&TEntryList::Class));

    DEBUG_MSG("Adding wrapper for void TEntryList::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    t.method("Streamer", static_cast<void (TEntryList::*)(TBuffer &) >(&TEntryList::Streamer));

    DEBUG_MSG("Adding wrapper for int TEntryList::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TEntryList::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TEntryList.h:125:4
    module_.method("TEntryList!DeclFileLine", static_cast<int (*)() >(&TEntryList::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TEntryList>> type_;
};
std::shared_ptr<Wrapper> newJlTEntryList(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTEntryList(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1> : std::false_type { };
  template<> struct DefaultConstructible<TH1> : std::false_type { };
template<> struct SuperType<TH1> { typedef TNamed type; };
}

// Class generating the wrapper for type TH1
// signature to use in the veto file: TH1
struct JlTH1: public Wrapper {

  JlTH1(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:59:7
    jlcxx::TypeWrapper<TH1>  t = jlModule.add_type<TH1>("TH1",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1>>(new jlcxx::TypeWrapper<TH1>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Int_t TH1::FitOptionsMake(Option_t *, Foption_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FitOptionsMake(Option_t *, Foption_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:121:17
    module_.method("TH1!FitOptionsMake", static_cast<Int_t (*)(Option_t *, Foption_t &) >(&TH1::FitOptionsMake));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(TF1 *, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(TF1 *, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:190:21
    t.method("Add", static_cast<Bool_t (TH1::*)(TF1 *, Double_t, Option_t *) >(&TH1::Add));
    t.method("Add", [](TH1& a, TF1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TH1& a, TF1 * arg0, Double_t arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TH1* a, TF1 * arg0)->Bool_t { return a->Add(arg0); });
    t.method("Add", [](TH1* a, TF1 * arg0, Double_t arg1)->Bool_t { return a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(const TH1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(const TH1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:191:21
    t.method("Add", static_cast<Bool_t (TH1::*)(const TH1 *, Double_t) >(&TH1::Add));
    t.method("Add", [](TH1& a, const TH1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TH1* a, const TH1 * arg0)->Bool_t { return a->Add(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(const TH1 *, const TH1 *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(const TH1 *, const TH1 *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:192:21
    t.method("Add", static_cast<Bool_t (TH1::*)(const TH1 *, const TH1 *, Double_t, Double_t) >(&TH1::Add));
    t.method("Add", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Add(arg0, arg1, arg2); });
    t.method("Add", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Add(arg0, arg1); });
    t.method("Add", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Add(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:193:21
    t.method("AddBinContent", static_cast<void (TH1::*)(Int_t) >(&TH1::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:194:21
    t.method("AddBinContent", static_cast<void (TH1::*)(Int_t, Double_t) >(&TH1::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1::AddDirectory(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddDirectory(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:195:21
    module_.method("TH1!AddDirectory", static_cast<void (*)(Bool_t) >(&TH1::AddDirectory));
    module_.method("TH1!AddDirectory", []()->void { TH1::AddDirectory(); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::AddDirectoryStatus() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::AddDirectoryStatus()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:196:21
    module_.method("TH1!AddDirectoryStatus", static_cast<Bool_t (*)() >(&TH1::AddDirectoryStatus));

    DEBUG_MSG("Adding wrapper for void TH1::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:197:21
    t.method("Browse", static_cast<void (TH1::*)(TBrowser *) >(&TH1::Browse));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::CanExtendAllAxes() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::CanExtendAllAxes()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:198:21
    t.method("CanExtendAllAxes", static_cast<Bool_t (TH1::*)()  const>(&TH1::CanExtendAllAxes));

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chi2Test(const TH1 *, Option_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chi2Test(const TH1 *, Option_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:199:21
    t.method("Chi2Test", static_cast<Double_t (TH1::*)(const TH1 *, Option_t *, Double_t *)  const>(&TH1::Chi2Test));
    t.method("Chi2Test", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.Chi2Test(arg0); });
    t.method("Chi2Test", [](TH1 const& a, const TH1 * arg0, Option_t * arg1)->Double_t { return a.Chi2Test(arg0, arg1); });
    t.method("Chi2Test", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->Chi2Test(arg0); });
    t.method("Chi2Test", [](TH1 const* a, const TH1 * arg0, Option_t * arg1)->Double_t { return a->Chi2Test(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chi2TestX(const TH1 *, Double_t &, Int_t &, Int_t &, Option_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chi2TestX(const TH1 *, Double_t &, Int_t &, Int_t &, Option_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:200:21
    t.method("Chi2TestX", static_cast<Double_t (TH1::*)(const TH1 *, Double_t &, Int_t &, Int_t &, Option_t *, Double_t *)  const>(&TH1::Chi2TestX));
    t.method("Chi2TestX", [](TH1 const& a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3)->Double_t { return a.Chi2TestX(arg0, arg1, arg2, arg3); });
    t.method("Chi2TestX", [](TH1 const& a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4)->Double_t { return a.Chi2TestX(arg0, arg1, arg2, arg3, arg4); });
    t.method("Chi2TestX", [](TH1 const* a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3)->Double_t { return a->Chi2TestX(arg0, arg1, arg2, arg3); });
    t.method("Chi2TestX", [](TH1 const* a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4)->Double_t { return a->Chi2TestX(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chisquare(TF1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chisquare(TF1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:201:21
    t.method("Chisquare", static_cast<Double_t (TH1::*)(TF1 *, Option_t *)  const>(&TH1::Chisquare));
    t.method("Chisquare", [](TH1 const& a, TF1 * arg0)->Double_t { return a.Chisquare(arg0); });
    t.method("Chisquare", [](TH1 const* a, TF1 * arg0)->Double_t { return a->Chisquare(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::ClearUnderflowAndOverflow() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ClearUnderflowAndOverflow()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:202:21
    t.method("ClearUnderflowAndOverflow", static_cast<void (TH1::*)() >(&TH1::ClearUnderflowAndOverflow));

    DEBUG_MSG("Adding wrapper for Double_t TH1::ComputeIntegral(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::ComputeIntegral(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:203:21
    t.method("ComputeIntegral", static_cast<Double_t (TH1::*)(Bool_t) >(&TH1::ComputeIntegral));
    t.method("ComputeIntegral", [](TH1& a)->Double_t { return a.ComputeIntegral(); });
    t.method("ComputeIntegral", [](TH1* a)->Double_t { return a->ComputeIntegral(); });

    DEBUG_MSG("Adding wrapper for TObject * TH1::Clone(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::Clone(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:204:21
    t.method("Clone", static_cast<TObject * (TH1::*)(const char *)  const>(&TH1::Clone));
    t.method("Clone", [](TH1 const& a)->TObject * { return a.Clone(); });
    t.method("Clone", [](TH1 const* a)->TObject * { return a->Clone(); });

    DEBUG_MSG("Adding wrapper for void TH1::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:205:21
    t.method("Copy", static_cast<void (TH1::*)(TObject &)  const>(&TH1::Copy));

    DEBUG_MSG("Adding wrapper for void TH1::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:206:21
    t.method("DirectoryAutoAdd", static_cast<void (TH1::*)(TDirectory *) >(&TH1::DirectoryAutoAdd));

    DEBUG_MSG("Adding wrapper for Int_t TH1::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:207:21
    t.method("DistancetoPrimitive", static_cast<Int_t (TH1::*)(Int_t, Int_t) >(&TH1::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(TF1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:208:21
    t.method("Divide", static_cast<Bool_t (TH1::*)(TF1 *, Double_t) >(&TH1::Divide));
    t.method("Divide", [](TH1& a, TF1 * arg0)->Bool_t { return a.Divide(arg0); });
    t.method("Divide", [](TH1* a, TF1 * arg0)->Bool_t { return a->Divide(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(const TH1 *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:209:21
    t.method("Divide", static_cast<Bool_t (TH1::*)(const TH1 *) >(&TH1::Divide));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:210:21
    t.method("Divide", static_cast<Bool_t (TH1::*)(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) >(&TH1::Divide));
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Divide(arg0, arg1); });
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Divide(arg0, arg1); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Divide(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:211:21
    t.method("Draw", static_cast<void (TH1::*)(Option_t *) >(&TH1::Draw));
    t.method("Draw", [](TH1& a)->void { a.Draw(); });
    t.method("Draw", [](TH1* a)->void { a->Draw(); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::DrawCopy(Option_t *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::DrawCopy(Option_t *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:212:21
    t.method("DrawCopy", static_cast<TH1 * (TH1::*)(Option_t *, const char *)  const>(&TH1::DrawCopy));
    t.method("DrawCopy", [](TH1 const& a)->TH1 * { return a.DrawCopy(); });
    t.method("DrawCopy", [](TH1 const& a, Option_t * arg0)->TH1 * { return a.DrawCopy(arg0); });
    t.method("DrawCopy", [](TH1 const* a)->TH1 * { return a->DrawCopy(); });
    t.method("DrawCopy", [](TH1 const* a, Option_t * arg0)->TH1 * { return a->DrawCopy(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::DrawNormalized(Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::DrawNormalized(Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:213:21
    t.method("DrawNormalized", static_cast<TH1 * (TH1::*)(Option_t *, Double_t)  const>(&TH1::DrawNormalized));
    t.method("DrawNormalized", [](TH1 const& a)->TH1 * { return a.DrawNormalized(); });
    t.method("DrawNormalized", [](TH1 const& a, Option_t * arg0)->TH1 * { return a.DrawNormalized(arg0); });
    t.method("DrawNormalized", [](TH1 const* a)->TH1 * { return a->DrawNormalized(); });
    t.method("DrawNormalized", [](TH1 const* a, Option_t * arg0)->TH1 * { return a->DrawNormalized(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::DrawPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::DrawPanel()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:214:21
    t.method("DrawPanel", static_cast<void (TH1::*)() >(&TH1::DrawPanel));

    DEBUG_MSG("Adding wrapper for Int_t TH1::BufferEmpty(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::BufferEmpty(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:215:21
    t.method("BufferEmpty", static_cast<Int_t (TH1::*)(Int_t) >(&TH1::BufferEmpty));
    t.method("BufferEmpty", [](TH1& a)->Int_t { return a.BufferEmpty(); });
    t.method("BufferEmpty", [](TH1* a)->Int_t { return a->BufferEmpty(); });

    DEBUG_MSG("Adding wrapper for void TH1::Eval(TF1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Eval(TF1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:216:21
    t.method("Eval", static_cast<void (TH1::*)(TF1 *, Option_t *) >(&TH1::Eval));
    t.method("Eval", [](TH1& a, TF1 * arg0)->void { a.Eval(arg0); });
    t.method("Eval", [](TH1* a, TF1 * arg0)->void { a->Eval(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:217:21
    t.method("ExecuteEvent", static_cast<void (TH1::*)(Int_t, Int_t, Int_t) >(&TH1::ExecuteEvent));

    DEBUG_MSG("Adding wrapper for void TH1::ExtendAxis(Double_t, TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ExtendAxis(Double_t, TAxis *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:218:21
    t.method("ExtendAxis", static_cast<void (TH1::*)(Double_t, TAxis *) >(&TH1::ExtendAxis));

    DEBUG_MSG("Adding wrapper for TH1 * TH1::FFT(TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::FFT(TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:219:21
    t.method("FFT", static_cast<TH1 * (TH1::*)(TH1 *, Option_t *) >(&TH1::FFT));

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:220:21
    t.method("Fill", static_cast<Int_t (TH1::*)(Double_t) >(&TH1::Fill));

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:221:21
    t.method("Fill", static_cast<Int_t (TH1::*)(Double_t, Double_t) >(&TH1::Fill));

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(const char *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(const char *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:222:21
    t.method("Fill", static_cast<Int_t (TH1::*)(const char *, Double_t) >(&TH1::Fill));

    DEBUG_MSG("Adding wrapper for void TH1::FillN(Int_t, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillN(Int_t, const Double_t *, const Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:223:21
    t.method("FillN", static_cast<void (TH1::*)(Int_t, const Double_t *, const Double_t *, Int_t) >(&TH1::FillN));
    t.method("FillN", [](TH1& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a.FillN(arg0, arg1, arg2); });
    t.method("FillN", [](TH1* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a->FillN(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::FillN(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillN(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:224:21
    t.method("FillN", static_cast<void (TH1::*)(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t) >(&TH1::FillN));

    DEBUG_MSG("Adding wrapper for void TH1::FillRandom(const char *, Int_t, TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillRandom(const char *, Int_t, TRandom *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:225:21
    t.method("FillRandom", static_cast<void (TH1::*)(const char *, Int_t, TRandom *) >(&TH1::FillRandom));
    t.method("FillRandom", [](TH1& a, const char * arg0)->void { a.FillRandom(arg0); });
    t.method("FillRandom", [](TH1& a, const char * arg0, Int_t arg1)->void { a.FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1* a, const char * arg0)->void { a->FillRandom(arg0); });
    t.method("FillRandom", [](TH1* a, const char * arg0, Int_t arg1)->void { a->FillRandom(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::FillRandom(TH1 *, Int_t, TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillRandom(TH1 *, Int_t, TRandom *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:226:21
    t.method("FillRandom", static_cast<void (TH1::*)(TH1 *, Int_t, TRandom *) >(&TH1::FillRandom));
    t.method("FillRandom", [](TH1& a, TH1 * arg0)->void { a.FillRandom(arg0); });
    t.method("FillRandom", [](TH1& a, TH1 * arg0, Int_t arg1)->void { a.FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1* a, TH1 * arg0)->void { a->FillRandom(arg0); });
    t.method("FillRandom", [](TH1* a, TH1 * arg0, Int_t arg1)->void { a->FillRandom(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindBin(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindBin(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:227:21
    t.method("FindBin", static_cast<Int_t (TH1::*)(Double_t, Double_t, Double_t) >(&TH1::FindBin));
    t.method("FindBin", [](TH1& a, Double_t arg0)->Int_t { return a.FindBin(arg0); });
    t.method("FindBin", [](TH1& a, Double_t arg0, Double_t arg1)->Int_t { return a.FindBin(arg0, arg1); });
    t.method("FindBin", [](TH1* a, Double_t arg0)->Int_t { return a->FindBin(arg0); });
    t.method("FindBin", [](TH1* a, Double_t arg0, Double_t arg1)->Int_t { return a->FindBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindFixBin(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindFixBin(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:228:21
    t.method("FindFixBin", static_cast<Int_t (TH1::*)(Double_t, Double_t, Double_t)  const>(&TH1::FindFixBin));
    t.method("FindFixBin", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindFixBin(arg0); });
    t.method("FindFixBin", [](TH1 const& a, Double_t arg0, Double_t arg1)->Int_t { return a.FindFixBin(arg0, arg1); });
    t.method("FindFixBin", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindFixBin(arg0); });
    t.method("FindFixBin", [](TH1 const* a, Double_t arg0, Double_t arg1)->Int_t { return a->FindFixBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindFirstBinAbove(Double_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindFirstBinAbove(Double_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:229:21
    t.method("FindFirstBinAbove", static_cast<Int_t (TH1::*)(Double_t, Int_t, Int_t, Int_t)  const>(&TH1::FindFirstBinAbove));
    t.method("FindFirstBinAbove", [](TH1 const& a)->Int_t { return a.FindFirstBinAbove(); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindFirstBinAbove(arg0); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1)->Int_t { return a.FindFirstBinAbove(arg0, arg1); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.FindFirstBinAbove(arg0, arg1, arg2); });
    t.method("FindFirstBinAbove", [](TH1 const* a)->Int_t { return a->FindFirstBinAbove(); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindFirstBinAbove(arg0); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1)->Int_t { return a->FindFirstBinAbove(arg0, arg1); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->FindFirstBinAbove(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindLastBinAbove(Double_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindLastBinAbove(Double_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:230:21
    t.method("FindLastBinAbove", static_cast<Int_t (TH1::*)(Double_t, Int_t, Int_t, Int_t)  const>(&TH1::FindLastBinAbove));
    t.method("FindLastBinAbove", [](TH1 const& a)->Int_t { return a.FindLastBinAbove(); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindLastBinAbove(arg0); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1)->Int_t { return a.FindLastBinAbove(arg0, arg1); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.FindLastBinAbove(arg0, arg1, arg2); });
    t.method("FindLastBinAbove", [](TH1 const* a)->Int_t { return a->FindLastBinAbove(); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindLastBinAbove(arg0); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1)->Int_t { return a->FindLastBinAbove(arg0, arg1); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->FindLastBinAbove(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TObject * TH1::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::FindObject(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:231:21
    t.method("FindObject", static_cast<TObject * (TH1::*)(const char *)  const>(&TH1::FindObject));

    DEBUG_MSG("Adding wrapper for TObject * TH1::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::FindObject(const TObject *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:232:21
    t.method("FindObject", static_cast<TObject * (TH1::*)(const TObject *)  const>(&TH1::FindObject));

    DEBUG_MSG("Adding wrapper for TFitResultPtr TH1::Fit(const char *, Option_t *, Option_t *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TH1::Fit(const char *, Option_t *, Option_t *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:233:29
    t.method("Fit", static_cast<TFitResultPtr (TH1::*)(const char *, Option_t *, Option_t *, Double_t, Double_t) >(&TH1::Fit));
    t.method("Fit", [](TH1& a, const char * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1* a, const char * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TH1::Fit(TF1 *, Option_t *, Option_t *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TH1::Fit(TF1 *, Option_t *, Option_t *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:234:29
    t.method("Fit", static_cast<TFitResultPtr (TH1::*)(TF1 *, Option_t *, Option_t *, Double_t, Double_t) >(&TH1::Fit));
    t.method("Fit", [](TH1& a, TF1 * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1* a, TF1 * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::FitPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FitPanel()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:235:21
    t.method("FitPanel", static_cast<void (TH1::*)() >(&TH1::FitPanel));

    DEBUG_MSG("Adding wrapper for TH1 * TH1::GetAsymmetry(TH1 *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::GetAsymmetry(TH1 *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:236:21
    t.method("GetAsymmetry", static_cast<TH1 * (TH1::*)(TH1 *, Double_t, Double_t) >(&TH1::GetAsymmetry));
    t.method("GetAsymmetry", [](TH1& a, TH1 * arg0)->TH1 * { return a.GetAsymmetry(arg0); });
    t.method("GetAsymmetry", [](TH1& a, TH1 * arg0, Double_t arg1)->TH1 * { return a.GetAsymmetry(arg0, arg1); });
    t.method("GetAsymmetry", [](TH1* a, TH1 * arg0)->TH1 * { return a->GetAsymmetry(arg0); });
    t.method("GetAsymmetry", [](TH1* a, TH1 * arg0, Double_t arg1)->TH1 * { return a->GetAsymmetry(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBufferLength() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBufferLength()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:237:21
    t.method("GetBufferLength", static_cast<Int_t (TH1::*)()  const>(&TH1::GetBufferLength));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBufferSize()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:238:21
    t.method("GetBufferSize", static_cast<Int_t (TH1::*)()  const>(&TH1::GetBufferSize));

    DEBUG_MSG("Adding wrapper for const Double_t * TH1::GetBuffer() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TH1::GetBuffer()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:239:22
    t.method("GetBuffer", static_cast<const Double_t * (TH1::*)()  const>(&TH1::GetBuffer));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetDefaultBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetDefaultBufferSize()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:240:21
    module_.method("TH1!GetDefaultBufferSize", static_cast<Int_t (*)() >(&TH1::GetDefaultBufferSize));

    DEBUG_MSG("Adding wrapper for Double_t * TH1::GetIntegral() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TH1::GetIntegral()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:241:22
    t.method("GetIntegral", static_cast<Double_t * (TH1::*)() >(&TH1::GetIntegral));

    DEBUG_MSG("Adding wrapper for TH1 * TH1::GetCumulative(Bool_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::GetCumulative(Bool_t, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:242:21
    t.method("GetCumulative", static_cast<TH1 * (TH1::*)(Bool_t, const char *)  const>(&TH1::GetCumulative));
    t.method("GetCumulative", [](TH1 const& a)->TH1 * { return a.GetCumulative(); });
    t.method("GetCumulative", [](TH1 const& a, Bool_t arg0)->TH1 * { return a.GetCumulative(arg0); });
    t.method("GetCumulative", [](TH1 const* a)->TH1 * { return a->GetCumulative(); });
    t.method("GetCumulative", [](TH1 const* a, Bool_t arg0)->TH1 * { return a->GetCumulative(arg0); });

    DEBUG_MSG("Adding wrapper for TList * TH1::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TList * TH1::GetListOfFunctions()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:244:21
    t.method("GetListOfFunctions", static_cast<TList * (TH1::*)()  const>(&TH1::GetListOfFunctions));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNdivisions(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNdivisions(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:246:21
    t.method("GetNdivisions", static_cast<Int_t (TH1::*)(Option_t *)  const>(&TH1::GetNdivisions));
    t.method("GetNdivisions", [](TH1 const& a)->Int_t { return a.GetNdivisions(); });
    t.method("GetNdivisions", [](TH1 const* a)->Int_t { return a->GetNdivisions(); });

    DEBUG_MSG("Adding wrapper for Color_t TH1::GetAxisColor(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TH1::GetAxisColor(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:247:21
    t.method("GetAxisColor", static_cast<Color_t (TH1::*)(Option_t *)  const>(&TH1::GetAxisColor));
    t.method("GetAxisColor", [](TH1 const& a)->Color_t { return a.GetAxisColor(); });
    t.method("GetAxisColor", [](TH1 const* a)->Color_t { return a->GetAxisColor(); });

    DEBUG_MSG("Adding wrapper for Color_t TH1::GetLabelColor(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TH1::GetLabelColor(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:248:21
    t.method("GetLabelColor", static_cast<Color_t (TH1::*)(Option_t *)  const>(&TH1::GetLabelColor));
    t.method("GetLabelColor", [](TH1 const& a)->Color_t { return a.GetLabelColor(); });
    t.method("GetLabelColor", [](TH1 const* a)->Color_t { return a->GetLabelColor(); });

    DEBUG_MSG("Adding wrapper for Style_t TH1::GetLabelFont(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TH1::GetLabelFont(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:249:21
    t.method("GetLabelFont", static_cast<Style_t (TH1::*)(Option_t *)  const>(&TH1::GetLabelFont));
    t.method("GetLabelFont", [](TH1 const& a)->Style_t { return a.GetLabelFont(); });
    t.method("GetLabelFont", [](TH1 const* a)->Style_t { return a->GetLabelFont(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetLabelOffset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetLabelOffset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:250:21
    t.method("GetLabelOffset", static_cast<Float_t (TH1::*)(Option_t *)  const>(&TH1::GetLabelOffset));
    t.method("GetLabelOffset", [](TH1 const& a)->Float_t { return a.GetLabelOffset(); });
    t.method("GetLabelOffset", [](TH1 const* a)->Float_t { return a->GetLabelOffset(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetLabelSize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetLabelSize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:251:21
    t.method("GetLabelSize", static_cast<Float_t (TH1::*)(Option_t *)  const>(&TH1::GetLabelSize));
    t.method("GetLabelSize", [](TH1 const& a)->Float_t { return a.GetLabelSize(); });
    t.method("GetLabelSize", [](TH1 const* a)->Float_t { return a->GetLabelSize(); });

    DEBUG_MSG("Adding wrapper for Style_t TH1::GetTitleFont(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TH1::GetTitleFont(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:252:21
    t.method("GetTitleFont", static_cast<Style_t (TH1::*)(Option_t *)  const>(&TH1::GetTitleFont));
    t.method("GetTitleFont", [](TH1 const& a)->Style_t { return a.GetTitleFont(); });
    t.method("GetTitleFont", [](TH1 const* a)->Style_t { return a->GetTitleFont(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTitleOffset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTitleOffset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:253:21
    t.method("GetTitleOffset", static_cast<Float_t (TH1::*)(Option_t *)  const>(&TH1::GetTitleOffset));
    t.method("GetTitleOffset", [](TH1 const& a)->Float_t { return a.GetTitleOffset(); });
    t.method("GetTitleOffset", [](TH1 const* a)->Float_t { return a->GetTitleOffset(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTitleSize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTitleSize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:254:21
    t.method("GetTitleSize", static_cast<Float_t (TH1::*)(Option_t *)  const>(&TH1::GetTitleSize));
    t.method("GetTitleSize", [](TH1 const& a)->Float_t { return a.GetTitleSize(); });
    t.method("GetTitleSize", [](TH1 const* a)->Float_t { return a->GetTitleSize(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTickLength(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTickLength(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:255:21
    t.method("GetTickLength", static_cast<Float_t (TH1::*)(Option_t *)  const>(&TH1::GetTickLength));
    t.method("GetTickLength", [](TH1 const& a)->Float_t { return a.GetTickLength(); });
    t.method("GetTickLength", [](TH1 const* a)->Float_t { return a->GetTickLength(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetBarOffset() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetBarOffset()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:256:21
    t.method("GetBarOffset", static_cast<Float_t (TH1::*)()  const>(&TH1::GetBarOffset));

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetBarWidth() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetBarWidth()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:257:21
    t.method("GetBarWidth", static_cast<Float_t (TH1::*)()  const>(&TH1::GetBarWidth));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetContour(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetContour(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:258:21
    t.method("GetContour", static_cast<Int_t (TH1::*)(Double_t *) >(&TH1::GetContour));
    t.method("GetContour", [](TH1& a)->Int_t { return a.GetContour(); });
    t.method("GetContour", [](TH1* a)->Int_t { return a->GetContour(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetContourLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetContourLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:259:21
    t.method("GetContourLevel", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetContourLevel));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetContourLevelPad(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetContourLevelPad(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:260:21
    t.method("GetContourLevelPad", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetContourLevelPad));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBin(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBin(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:262:21
    t.method("GetBin", static_cast<Int_t (TH1::*)(Int_t, Int_t, Int_t)  const>(&TH1::GetBin));
    t.method("GetBin", [](TH1 const& a, Int_t arg0)->Int_t { return a.GetBin(arg0); });
    t.method("GetBin", [](TH1 const& a, Int_t arg0, Int_t arg1)->Int_t { return a.GetBin(arg0, arg1); });
    t.method("GetBin", [](TH1 const* a, Int_t arg0)->Int_t { return a->GetBin(arg0); });
    t.method("GetBin", [](TH1 const* a, Int_t arg0, Int_t arg1)->Int_t { return a->GetBin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::GetBinXYZ(Int_t, Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetBinXYZ(Int_t, Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:263:21
    t.method("GetBinXYZ", static_cast<void (TH1::*)(Int_t, Int_t &, Int_t &, Int_t &)  const>(&TH1::GetBinXYZ));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinCenter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinCenter(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:264:21
    t.method("GetBinCenter", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinCenter));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:265:21
    t.method("GetBinContent", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:266:21
    t.method("GetBinContent", static_cast<Double_t (TH1::*)(Int_t, Int_t)  const>(&TH1::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:267:21
    t.method("GetBinContent", static_cast<Double_t (TH1::*)(Int_t, Int_t, Int_t)  const>(&TH1::GetBinContent));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:268:21
    t.method("GetBinError", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:269:21
    t.method("GetBinError", static_cast<Double_t (TH1::*)(Int_t, Int_t)  const>(&TH1::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:270:21
    t.method("GetBinError", static_cast<Double_t (TH1::*)(Int_t, Int_t, Int_t)  const>(&TH1::GetBinError));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinErrorLow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinErrorLow(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:271:21
    t.method("GetBinErrorLow", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinErrorLow));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinErrorUp(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinErrorUp(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:272:21
    t.method("GetBinErrorUp", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinErrorUp));

    DEBUG_MSG("Adding wrapper for TH1::EBinErrorOpt TH1::GetBinErrorOption() (" __HERE__ ")");
    // signature to use in the veto list: TH1::EBinErrorOpt TH1::GetBinErrorOption()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:273:26
    t.method("GetBinErrorOption", static_cast<TH1::EBinErrorOpt (TH1::*)()  const>(&TH1::GetBinErrorOption));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinLowEdge(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinLowEdge(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:274:21
    t.method("GetBinLowEdge", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinLowEdge));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinWidth(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinWidth(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:275:21
    t.method("GetBinWidth", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetBinWidth));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinWithContent(Double_t, Int_t &, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinWithContent(Double_t, Int_t &, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:276:21
    t.method("GetBinWithContent", static_cast<Double_t (TH1::*)(Double_t, Int_t &, Int_t, Int_t, Double_t)  const>(&TH1::GetBinWithContent));
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1)->Double_t { return a.GetBinWithContent(arg0, arg1); });
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1, Int_t arg2)->Double_t { return a.GetBinWithContent(arg0, arg1, arg2); });
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3)->Double_t { return a.GetBinWithContent(arg0, arg1, arg2, arg3); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1)->Double_t { return a->GetBinWithContent(arg0, arg1); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1, Int_t arg2)->Double_t { return a->GetBinWithContent(arg0, arg1, arg2); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3)->Double_t { return a->GetBinWithContent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::GetCenter(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetCenter(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:277:21
    t.method("GetCenter", static_cast<void (TH1::*)(Double_t *)  const>(&TH1::GetCenter));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::GetDefaultSumw2() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::GetDefaultSumw2()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:278:21
    module_.method("TH1!GetDefaultSumw2", static_cast<Bool_t (*)() >(&TH1::GetDefaultSumw2));

    DEBUG_MSG("Adding wrapper for TDirectory * TH1::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TH1::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:279:21
    t.method("GetDirectory", static_cast<TDirectory * (TH1::*)()  const>(&TH1::GetDirectory));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetEntries()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:280:21
    t.method("GetEntries", static_cast<Double_t (TH1::*)()  const>(&TH1::GetEntries));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetEffectiveEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetEffectiveEntries()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:281:21
    t.method("GetEffectiveEntries", static_cast<Double_t (TH1::*)()  const>(&TH1::GetEffectiveEntries));

    DEBUG_MSG("Adding wrapper for TF1 * TH1::GetFunction(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TF1 * TH1::GetFunction(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:282:21
    t.method("GetFunction", static_cast<TF1 * (TH1::*)(const char *)  const>(&TH1::GetFunction));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetDimension() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetDimension()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:283:21
    t.method("GetDimension", static_cast<Int_t (TH1::*)()  const>(&TH1::GetDimension));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetKurtosis(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetKurtosis(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:284:21
    t.method("GetKurtosis", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetKurtosis));
    t.method("GetKurtosis", [](TH1 const& a)->Double_t { return a.GetKurtosis(); });
    t.method("GetKurtosis", [](TH1 const* a)->Double_t { return a->GetKurtosis(); });

    DEBUG_MSG("Adding wrapper for void TH1::GetLowEdge(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetLowEdge(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:285:21
    t.method("GetLowEdge", static_cast<void (TH1::*)(Double_t *)  const>(&TH1::GetLowEdge));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:286:21
    t.method("GetMaximum", static_cast<Double_t (TH1::*)(Double_t)  const>(&TH1::GetMaximum));
    t.method("GetMaximum", [](TH1 const& a)->Double_t { return a.GetMaximum(); });
    t.method("GetMaximum", [](TH1 const* a)->Double_t { return a->GetMaximum(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMaximumBin() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMaximumBin()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:287:21
    t.method("GetMaximumBin", static_cast<Int_t (TH1::*)()  const>(&TH1::GetMaximumBin));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMaximumBin(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMaximumBin(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:288:21
    t.method("GetMaximumBin", static_cast<Int_t (TH1::*)(Int_t &, Int_t &, Int_t &)  const>(&TH1::GetMaximumBin));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMaximumStored() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMaximumStored()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:289:21
    t.method("GetMaximumStored", static_cast<Double_t (TH1::*)()  const>(&TH1::GetMaximumStored));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:290:21
    t.method("GetMinimum", static_cast<Double_t (TH1::*)(Double_t)  const>(&TH1::GetMinimum));
    t.method("GetMinimum", [](TH1 const& a)->Double_t { return a.GetMinimum(); });
    t.method("GetMinimum", [](TH1 const* a)->Double_t { return a->GetMinimum(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMinimumBin() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMinimumBin()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:291:21
    t.method("GetMinimumBin", static_cast<Int_t (TH1::*)()  const>(&TH1::GetMinimumBin));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMinimumBin(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMinimumBin(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:292:21
    t.method("GetMinimumBin", static_cast<Int_t (TH1::*)(Int_t &, Int_t &, Int_t &)  const>(&TH1::GetMinimumBin));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMinimumStored() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMinimumStored()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:293:21
    t.method("GetMinimumStored", static_cast<Double_t (TH1::*)()  const>(&TH1::GetMinimumStored));

    DEBUG_MSG("Adding wrapper for void TH1::GetMinimumAndMaximum(Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetMinimumAndMaximum(Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:294:21
    t.method("GetMinimumAndMaximum", static_cast<void (TH1::*)(Double_t &, Double_t &)  const>(&TH1::GetMinimumAndMaximum));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMean(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMean(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:295:21
    t.method("GetMean", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetMean));
    t.method("GetMean", [](TH1 const& a)->Double_t { return a.GetMean(); });
    t.method("GetMean", [](TH1 const* a)->Double_t { return a->GetMean(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMeanError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMeanError(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:296:21
    t.method("GetMeanError", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetMeanError));
    t.method("GetMeanError", [](TH1 const& a)->Double_t { return a.GetMeanError(); });
    t.method("GetMeanError", [](TH1 const* a)->Double_t { return a->GetMeanError(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsX()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:297:21
    t.method("GetNbinsX", static_cast<Int_t (TH1::*)()  const>(&TH1::GetNbinsX));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsY()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:298:21
    t.method("GetNbinsY", static_cast<Int_t (TH1::*)()  const>(&TH1::GetNbinsY));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsZ() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsZ()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:299:21
    t.method("GetNbinsZ", static_cast<Int_t (TH1::*)()  const>(&TH1::GetNbinsZ));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNcells() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNcells()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:300:21
    t.method("GetNcells", static_cast<Int_t (TH1::*)()  const>(&TH1::GetNcells));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetNormFactor() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetNormFactor()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:301:21
    t.method("GetNormFactor", static_cast<Double_t (TH1::*)()  const>(&TH1::GetNormFactor));

    DEBUG_MSG("Adding wrapper for char * TH1::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TH1::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:302:21
    t.method("GetObjectInfo", static_cast<char * (TH1::*)(Int_t, Int_t)  const>(&TH1::GetObjectInfo));

    DEBUG_MSG("Adding wrapper for Option_t * TH1::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TH1::GetOption()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:303:21
    t.method("GetOption", static_cast<Option_t * (TH1::*)()  const>(&TH1::GetOption));

    DEBUG_MSG("Adding wrapper for TVirtualHistPainter * TH1::GetPainter(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualHistPainter * TH1::GetPainter(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:305:25
    t.method("GetPainter", static_cast<TVirtualHistPainter * (TH1::*)(Option_t *) >(&TH1::GetPainter));
    t.method("GetPainter", [](TH1& a)->TVirtualHistPainter * { return a.GetPainter(); });
    t.method("GetPainter", [](TH1* a)->TVirtualHistPainter * { return a->GetPainter(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetQuantiles(Int_t, Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetQuantiles(Int_t, Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:307:21
    t.method("GetQuantiles", static_cast<Int_t (TH1::*)(Int_t, Double_t *, const Double_t *) >(&TH1::GetQuantiles));
    t.method("GetQuantiles", [](TH1& a, Int_t arg0, Double_t * arg1)->Int_t { return a.GetQuantiles(arg0, arg1); });
    t.method("GetQuantiles", [](TH1* a, Int_t arg0, Double_t * arg1)->Int_t { return a->GetQuantiles(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRandom(TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRandom(TRandom *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:308:21
    t.method("GetRandom", static_cast<Double_t (TH1::*)(TRandom *)  const>(&TH1::GetRandom));
    t.method("GetRandom", [](TH1 const& a)->Double_t { return a.GetRandom(); });
    t.method("GetRandom", [](TH1 const* a)->Double_t { return a->GetRandom(); });

    DEBUG_MSG("Adding wrapper for void TH1::GetStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetStats(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:309:21
    t.method("GetStats", static_cast<void (TH1::*)(Double_t *)  const>(&TH1::GetStats));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetStdDev(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetStdDev(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:310:21
    t.method("GetStdDev", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetStdDev));
    t.method("GetStdDev", [](TH1 const& a)->Double_t { return a.GetStdDev(); });
    t.method("GetStdDev", [](TH1 const* a)->Double_t { return a->GetStdDev(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetStdDevError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetStdDevError(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:311:21
    t.method("GetStdDevError", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetStdDevError));
    t.method("GetStdDevError", [](TH1 const& a)->Double_t { return a.GetStdDevError(); });
    t.method("GetStdDevError", [](TH1 const* a)->Double_t { return a->GetStdDevError(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetSumOfWeights() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetSumOfWeights()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:312:21
    t.method("GetSumOfWeights", static_cast<Double_t (TH1::*)()  const>(&TH1::GetSumOfWeights));

    DEBUG_MSG("Adding wrapper for TArrayD * TH1::GetSumw2() (" __HERE__ ")");
    // signature to use in the veto list: TArrayD * TH1::GetSumw2()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:313:21
    t.method("GetSumw2", static_cast<TArrayD * (TH1::*)() >(&TH1::GetSumw2));

    DEBUG_MSG("Adding wrapper for const TArrayD * TH1::GetSumw2() (" __HERE__ ")");
    // signature to use in the veto list: const TArrayD * TH1::GetSumw2()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:314:27
    t.method("GetSumw2", static_cast<const TArrayD * (TH1::*)()  const>(&TH1::GetSumw2));

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetSumw2N() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetSumw2N()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:315:21
    t.method("GetSumw2N", static_cast<Int_t (TH1::*)()  const>(&TH1::GetSumw2N));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRMS(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRMS(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:319:21
    t.method("GetRMS", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetRMS));
    t.method("GetRMS", [](TH1 const& a)->Double_t { return a.GetRMS(); });
    t.method("GetRMS", [](TH1 const* a)->Double_t { return a->GetRMS(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRMSError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRMSError(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:320:21
    t.method("GetRMSError", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetRMSError));
    t.method("GetRMSError", [](TH1 const& a)->Double_t { return a.GetRMSError(); });
    t.method("GetRMSError", [](TH1 const* a)->Double_t { return a->GetRMSError(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetSkewness(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetSkewness(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:322:21
    t.method("GetSkewness", static_cast<Double_t (TH1::*)(Int_t)  const>(&TH1::GetSkewness));
    t.method("GetSkewness", [](TH1 const& a)->Double_t { return a.GetSkewness(); });
    t.method("GetSkewness", [](TH1 const* a)->Double_t { return a->GetSkewness(); });

    DEBUG_MSG("Adding wrapper for TH1::EStatOverflows TH1::GetStatOverflows() (" __HERE__ ")");
    // signature to use in the veto list: TH1::EStatOverflows TH1::GetStatOverflows()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:323:27
    t.method("GetStatOverflows", static_cast<TH1::EStatOverflows (TH1::*)()  const>(&TH1::GetStatOverflows));

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:324:21
    t.method("GetXaxis", static_cast<TAxis * (TH1::*)() >(&TH1::GetXaxis));

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:325:21
    t.method("GetYaxis", static_cast<TAxis * (TH1::*)() >(&TH1::GetYaxis));

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetZaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetZaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:326:21
    t.method("GetZaxis", static_cast<TAxis * (TH1::*)() >(&TH1::GetZaxis));

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:327:21
    t.method("GetXaxis", static_cast<const TAxis * (TH1::*)()  const>(&TH1::GetXaxis));

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:328:21
    t.method("GetYaxis", static_cast<const TAxis * (TH1::*)()  const>(&TH1::GetYaxis));

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetZaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetZaxis()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:329:21
    t.method("GetZaxis", static_cast<const TAxis * (TH1::*)()  const>(&TH1::GetZaxis));

    DEBUG_MSG("Adding wrapper for Double_t TH1::Integral(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Integral(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:330:21
    t.method("Integral", static_cast<Double_t (TH1::*)(Option_t *)  const>(&TH1::Integral));
    t.method("Integral", [](TH1 const& a)->Double_t { return a.Integral(); });
    t.method("Integral", [](TH1 const* a)->Double_t { return a->Integral(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Integral(Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Integral(Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:331:21
    t.method("Integral", static_cast<Double_t (TH1::*)(Int_t, Int_t, Option_t *)  const>(&TH1::Integral));
    t.method("Integral", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.Integral(arg0, arg1); });
    t.method("Integral", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->Integral(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::IntegralAndError(Int_t, Int_t, Double_t &, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::IntegralAndError(Int_t, Int_t, Double_t &, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:332:21
    t.method("IntegralAndError", static_cast<Double_t (TH1::*)(Int_t, Int_t, Double_t &, Option_t *)  const>(&TH1::IntegralAndError));
    t.method("IntegralAndError", [](TH1 const& a, Int_t arg0, Int_t arg1, Double_t & arg2)->Double_t { return a.IntegralAndError(arg0, arg1, arg2); });
    t.method("IntegralAndError", [](TH1 const* a, Int_t arg0, Int_t arg1, Double_t & arg2)->Double_t { return a->IntegralAndError(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:333:21
    t.method("Interpolate", static_cast<Double_t (TH1::*)(Double_t)  const>(&TH1::Interpolate));

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:334:21
    t.method("Interpolate", static_cast<Double_t (TH1::*)(Double_t, Double_t)  const>(&TH1::Interpolate));

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:335:21
    t.method("Interpolate", static_cast<Double_t (TH1::*)(Double_t, Double_t, Double_t)  const>(&TH1::Interpolate));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsBinOverflow(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsBinOverflow(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:336:21
    t.method("IsBinOverflow", static_cast<Bool_t (TH1::*)(Int_t, Int_t)  const>(&TH1::IsBinOverflow));
    t.method("IsBinOverflow", [](TH1 const& a, Int_t arg0)->Bool_t { return a.IsBinOverflow(arg0); });
    t.method("IsBinOverflow", [](TH1 const* a, Int_t arg0)->Bool_t { return a->IsBinOverflow(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsBinUnderflow(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsBinUnderflow(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:337:21
    t.method("IsBinUnderflow", static_cast<Bool_t (TH1::*)(Int_t, Int_t)  const>(&TH1::IsBinUnderflow));
    t.method("IsBinUnderflow", [](TH1 const& a, Int_t arg0)->Bool_t { return a.IsBinUnderflow(arg0); });
    t.method("IsBinUnderflow", [](TH1 const* a, Int_t arg0)->Bool_t { return a->IsBinUnderflow(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsHighlight() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsHighlight()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:338:21
    t.method("IsHighlight", static_cast<Bool_t (TH1::*)()  const>(&TH1::IsHighlight));

    DEBUG_MSG("Adding wrapper for Double_t TH1::AndersonDarlingTest(const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::AndersonDarlingTest(const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:339:21
    t.method("AndersonDarlingTest", static_cast<Double_t (TH1::*)(const TH1 *, Option_t *)  const>(&TH1::AndersonDarlingTest));
    t.method("AndersonDarlingTest", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.AndersonDarlingTest(arg0); });
    t.method("AndersonDarlingTest", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->AndersonDarlingTest(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::AndersonDarlingTest(const TH1 *, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::AndersonDarlingTest(const TH1 *, Double_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:340:21
    t.method("AndersonDarlingTest", static_cast<Double_t (TH1::*)(const TH1 *, Double_t &)  const>(&TH1::AndersonDarlingTest));

    DEBUG_MSG("Adding wrapper for Double_t TH1::KolmogorovTest(const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::KolmogorovTest(const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:341:21
    t.method("KolmogorovTest", static_cast<Double_t (TH1::*)(const TH1 *, Option_t *)  const>(&TH1::KolmogorovTest));
    t.method("KolmogorovTest", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.KolmogorovTest(arg0); });
    t.method("KolmogorovTest", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->KolmogorovTest(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsDeflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsDeflate(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:342:21
    t.method("LabelsDeflate", static_cast<void (TH1::*)(Option_t *) >(&TH1::LabelsDeflate));
    t.method("LabelsDeflate", [](TH1& a)->void { a.LabelsDeflate(); });
    t.method("LabelsDeflate", [](TH1* a)->void { a->LabelsDeflate(); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsInflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsInflate(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:343:21
    t.method("LabelsInflate", static_cast<void (TH1::*)(Option_t *) >(&TH1::LabelsInflate));
    t.method("LabelsInflate", [](TH1& a)->void { a.LabelsInflate(); });
    t.method("LabelsInflate", [](TH1* a)->void { a->LabelsInflate(); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsOption(Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsOption(Option_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:344:21
    t.method("LabelsOption", static_cast<void (TH1::*)(Option_t *, Option_t *) >(&TH1::LabelsOption));
    t.method("LabelsOption", [](TH1& a)->void { a.LabelsOption(); });
    t.method("LabelsOption", [](TH1& a, Option_t * arg0)->void { a.LabelsOption(arg0); });
    t.method("LabelsOption", [](TH1* a)->void { a->LabelsOption(); });
    t.method("LabelsOption", [](TH1* a, Option_t * arg0)->void { a->LabelsOption(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TH1::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TH1::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:345:21
    t.method("Merge", static_cast<Long64_t (TH1::*)(TCollection *) >(&TH1::Merge));

    DEBUG_MSG("Adding wrapper for Long64_t TH1::Merge(TCollection *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TH1::Merge(TCollection *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:346:21
    t.method("Merge", static_cast<Long64_t (TH1::*)(TCollection *, Option_t *) >(&TH1::Merge));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(TF1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:347:21
    t.method("Multiply", static_cast<Bool_t (TH1::*)(TF1 *, Double_t) >(&TH1::Multiply));
    t.method("Multiply", [](TH1& a, TF1 * arg0)->Bool_t { return a.Multiply(arg0); });
    t.method("Multiply", [](TH1* a, TF1 * arg0)->Bool_t { return a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(const TH1 *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:348:21
    t.method("Multiply", static_cast<Bool_t (TH1::*)(const TH1 *) >(&TH1::Multiply));

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:349:21
    t.method("Multiply", static_cast<Bool_t (TH1::*)(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) >(&TH1::Multiply));
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Multiply(arg0, arg1); });
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Multiply(arg0, arg1, arg2, arg3); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Multiply(arg0, arg1); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Multiply(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:350:21
    t.method("Paint", static_cast<void (TH1::*)(Option_t *) >(&TH1::Paint));
    t.method("Paint", [](TH1& a)->void { a.Paint(); });
    t.method("Paint", [](TH1* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for void TH1::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:351:21
    t.method("Print", static_cast<void (TH1::*)(Option_t *)  const>(&TH1::Print));
    t.method("Print", [](TH1 const& a)->void { a.Print(); });
    t.method("Print", [](TH1 const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TH1::PutStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::PutStats(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:352:21
    t.method("PutStats", static_cast<void (TH1::*)(Double_t *) >(&TH1::PutStats));

    DEBUG_MSG("Adding wrapper for TH1 * TH1::Rebin(Int_t, const char *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::Rebin(Int_t, const char *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:353:21
    t.method("Rebin", static_cast<TH1 * (TH1::*)(Int_t, const char *, const Double_t *) >(&TH1::Rebin));
    t.method("Rebin", [](TH1& a)->TH1 * { return a.Rebin(); });
    t.method("Rebin", [](TH1& a, Int_t arg0)->TH1 * { return a.Rebin(arg0); });
    t.method("Rebin", [](TH1& a, Int_t arg0, const char * arg1)->TH1 * { return a.Rebin(arg0, arg1); });
    t.method("Rebin", [](TH1* a)->TH1 * { return a->Rebin(); });
    t.method("Rebin", [](TH1* a, Int_t arg0)->TH1 * { return a->Rebin(arg0); });
    t.method("Rebin", [](TH1* a, Int_t arg0, const char * arg1)->TH1 * { return a->Rebin(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::RebinX(Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::RebinX(Int_t, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:354:21
    t.method("RebinX", static_cast<TH1 * (TH1::*)(Int_t, const char *) >(&TH1::RebinX));
    t.method("RebinX", [](TH1& a)->TH1 * { return a.RebinX(); });
    t.method("RebinX", [](TH1& a, Int_t arg0)->TH1 * { return a.RebinX(arg0); });
    t.method("RebinX", [](TH1* a)->TH1 * { return a->RebinX(); });
    t.method("RebinX", [](TH1* a, Int_t arg0)->TH1 * { return a->RebinX(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Rebuild(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Rebuild(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:355:21
    t.method("Rebuild", static_cast<void (TH1::*)(Option_t *) >(&TH1::Rebuild));
    t.method("Rebuild", [](TH1& a)->void { a.Rebuild(); });
    t.method("Rebuild", [](TH1* a)->void { a->Rebuild(); });

    DEBUG_MSG("Adding wrapper for void TH1::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:356:21
    t.method("RecursiveRemove", static_cast<void (TH1::*)(TObject *) >(&TH1::RecursiveRemove));

    DEBUG_MSG("Adding wrapper for void TH1::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Reset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:357:21
    t.method("Reset", static_cast<void (TH1::*)(Option_t *) >(&TH1::Reset));
    t.method("Reset", [](TH1& a)->void { a.Reset(); });
    t.method("Reset", [](TH1* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH1::ResetStats() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ResetStats()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:358:21
    t.method("ResetStats", static_cast<void (TH1::*)() >(&TH1::ResetStats));

    DEBUG_MSG("Adding wrapper for void TH1::SaveAs(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SaveAs(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:359:21
    t.method("SaveAs", static_cast<void (TH1::*)(const char *, Option_t *)  const>(&TH1::SaveAs));
    t.method("SaveAs", [](TH1 const& a)->void { a.SaveAs(); });
    t.method("SaveAs", [](TH1 const& a, const char * arg0)->void { a.SaveAs(arg0); });
    t.method("SaveAs", [](TH1 const* a)->void { a->SaveAs(); });
    t.method("SaveAs", [](TH1 const* a, const char * arg0)->void { a->SaveAs(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:361:21
    t.method("Scale", static_cast<void (TH1::*)(Double_t, Option_t *) >(&TH1::Scale));
    t.method("Scale", [](TH1& a)->void { a.Scale(); });
    t.method("Scale", [](TH1& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TH1* a)->void { a->Scale(); });
    t.method("Scale", [](TH1* a, Double_t arg0)->void { a->Scale(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetAxisColor(Color_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetAxisColor(Color_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:362:21
    t.method("SetAxisColor", static_cast<void (TH1::*)(Color_t, Option_t *) >(&TH1::SetAxisColor));
    t.method("SetAxisColor", [](TH1& a)->void { a.SetAxisColor(); });
    t.method("SetAxisColor", [](TH1& a, Color_t arg0)->void { a.SetAxisColor(arg0); });
    t.method("SetAxisColor", [](TH1* a)->void { a->SetAxisColor(); });
    t.method("SetAxisColor", [](TH1* a, Color_t arg0)->void { a->SetAxisColor(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetAxisRange(Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetAxisRange(Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:363:21
    t.method("SetAxisRange", static_cast<void (TH1::*)(Double_t, Double_t, Option_t *) >(&TH1::SetAxisRange));
    t.method("SetAxisRange", [](TH1& a, Double_t arg0, Double_t arg1)->void { a.SetAxisRange(arg0, arg1); });
    t.method("SetAxisRange", [](TH1* a, Double_t arg0, Double_t arg1)->void { a->SetAxisRange(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBarOffset(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBarOffset(Float_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:364:21
    t.method("SetBarOffset", static_cast<void (TH1::*)(Float_t) >(&TH1::SetBarOffset));
    t.method("SetBarOffset", [](TH1& a)->void { a.SetBarOffset(); });
    t.method("SetBarOffset", [](TH1* a)->void { a->SetBarOffset(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBarWidth(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBarWidth(Float_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:365:21
    t.method("SetBarWidth", static_cast<void (TH1::*)(Float_t) >(&TH1::SetBarWidth));
    t.method("SetBarWidth", [](TH1& a)->void { a.SetBarWidth(); });
    t.method("SetBarWidth", [](TH1* a)->void { a->SetBarWidth(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:366:21
    t.method("SetBinContent", static_cast<void (TH1::*)(Int_t, Double_t) >(&TH1::SetBinContent));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:367:21
    t.method("SetBinContent", static_cast<void (TH1::*)(Int_t, Int_t, Double_t) >(&TH1::SetBinContent));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:368:21
    t.method("SetBinContent", static_cast<void (TH1::*)(Int_t, Int_t, Int_t, Double_t) >(&TH1::SetBinContent));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:369:21
    t.method("SetBinError", static_cast<void (TH1::*)(Int_t, Double_t) >(&TH1::SetBinError));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:370:21
    t.method("SetBinError", static_cast<void (TH1::*)(Int_t, Int_t, Double_t) >(&TH1::SetBinError));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:371:21
    t.method("SetBinError", static_cast<void (TH1::*)(Int_t, Int_t, Int_t, Double_t) >(&TH1::SetBinError));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:372:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, Double_t, Double_t) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:373:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, const Double_t *) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:374:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:375:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, const Double_t *, Int_t, const Double_t *) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:376:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:378:21
    t.method("SetBins", static_cast<void (TH1::*)(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) >(&TH1::SetBins));

    DEBUG_MSG("Adding wrapper for void TH1::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:380:21
    t.method("SetBinsLength", static_cast<void (TH1::*)(Int_t) >(&TH1::SetBinsLength));
    t.method("SetBinsLength", [](TH1& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinErrorOption(TH1::EBinErrorOpt) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinErrorOption(TH1::EBinErrorOpt)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:381:21
    t.method("SetBinErrorOption", static_cast<void (TH1::*)(TH1::EBinErrorOpt) >(&TH1::SetBinErrorOption));

    DEBUG_MSG("Adding wrapper for void TH1::SetBuffer(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBuffer(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:382:21
    t.method("SetBuffer", static_cast<void (TH1::*)(Int_t, Option_t *) >(&TH1::SetBuffer));
    t.method("SetBuffer", [](TH1& a, Int_t arg0)->void { a.SetBuffer(arg0); });
    t.method("SetBuffer", [](TH1* a, Int_t arg0)->void { a->SetBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for UInt_t TH1::SetCanExtend(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TH1::SetCanExtend(UInt_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:383:21
    t.method("SetCanExtend", static_cast<UInt_t (TH1::*)(UInt_t) >(&TH1::SetCanExtend));

    DEBUG_MSG("Adding wrapper for void TH1::SetContent(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContent(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:384:21
    t.method("SetContent", static_cast<void (TH1::*)(const Double_t *) >(&TH1::SetContent));

    DEBUG_MSG("Adding wrapper for void TH1::SetContour(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContour(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:385:21
    t.method("SetContour", static_cast<void (TH1::*)(Int_t, const Double_t *) >(&TH1::SetContour));
    t.method("SetContour", [](TH1& a, Int_t arg0)->void { a.SetContour(arg0); });
    t.method("SetContour", [](TH1* a, Int_t arg0)->void { a->SetContour(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetContourLevel(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContourLevel(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:386:21
    t.method("SetContourLevel", static_cast<void (TH1::*)(Int_t, Double_t) >(&TH1::SetContourLevel));

    DEBUG_MSG("Adding wrapper for void TH1::SetDefaultBufferSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDefaultBufferSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:387:21
    module_.method("TH1!SetDefaultBufferSize", static_cast<void (*)(Int_t) >(&TH1::SetDefaultBufferSize));
    module_.method("TH1!SetDefaultBufferSize", []()->void { TH1::SetDefaultBufferSize(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetDefaultSumw2(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDefaultSumw2(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:388:21
    module_.method("TH1!SetDefaultSumw2", static_cast<void (*)(Bool_t) >(&TH1::SetDefaultSumw2));
    module_.method("TH1!SetDefaultSumw2", []()->void { TH1::SetDefaultSumw2(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:389:21
    t.method("SetDirectory", static_cast<void (TH1::*)(TDirectory *) >(&TH1::SetDirectory));

    DEBUG_MSG("Adding wrapper for void TH1::SetEntries(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetEntries(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:390:21
    t.method("SetEntries", static_cast<void (TH1::*)(Double_t) >(&TH1::SetEntries));

    DEBUG_MSG("Adding wrapper for void TH1::SetError(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetError(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:391:21
    t.method("SetError", static_cast<void (TH1::*)(const Double_t *) >(&TH1::SetError));

    DEBUG_MSG("Adding wrapper for void TH1::SetHighlight(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetHighlight(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:392:21
    t.method("SetHighlight", static_cast<void (TH1::*)(Bool_t) >(&TH1::SetHighlight));
    t.method("SetHighlight", [](TH1& a)->void { a.SetHighlight(); });
    t.method("SetHighlight", [](TH1* a)->void { a->SetHighlight(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelColor(Color_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelColor(Color_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:393:21
    t.method("SetLabelColor", static_cast<void (TH1::*)(Color_t, Option_t *) >(&TH1::SetLabelColor));
    t.method("SetLabelColor", [](TH1& a)->void { a.SetLabelColor(); });
    t.method("SetLabelColor", [](TH1& a, Color_t arg0)->void { a.SetLabelColor(arg0); });
    t.method("SetLabelColor", [](TH1* a)->void { a->SetLabelColor(); });
    t.method("SetLabelColor", [](TH1* a, Color_t arg0)->void { a->SetLabelColor(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelFont(Style_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelFont(Style_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:394:21
    t.method("SetLabelFont", static_cast<void (TH1::*)(Style_t, Option_t *) >(&TH1::SetLabelFont));
    t.method("SetLabelFont", [](TH1& a)->void { a.SetLabelFont(); });
    t.method("SetLabelFont", [](TH1& a, Style_t arg0)->void { a.SetLabelFont(arg0); });
    t.method("SetLabelFont", [](TH1* a)->void { a->SetLabelFont(); });
    t.method("SetLabelFont", [](TH1* a, Style_t arg0)->void { a->SetLabelFont(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelOffset(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelOffset(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:395:21
    t.method("SetLabelOffset", static_cast<void (TH1::*)(Float_t, Option_t *) >(&TH1::SetLabelOffset));
    t.method("SetLabelOffset", [](TH1& a)->void { a.SetLabelOffset(); });
    t.method("SetLabelOffset", [](TH1& a, Float_t arg0)->void { a.SetLabelOffset(arg0); });
    t.method("SetLabelOffset", [](TH1* a)->void { a->SetLabelOffset(); });
    t.method("SetLabelOffset", [](TH1* a, Float_t arg0)->void { a->SetLabelOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelSize(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelSize(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:396:21
    t.method("SetLabelSize", static_cast<void (TH1::*)(Float_t, Option_t *) >(&TH1::SetLabelSize));
    t.method("SetLabelSize", [](TH1& a)->void { a.SetLabelSize(); });
    t.method("SetLabelSize", [](TH1& a, Float_t arg0)->void { a.SetLabelSize(arg0); });
    t.method("SetLabelSize", [](TH1* a)->void { a->SetLabelSize(); });
    t.method("SetLabelSize", [](TH1* a, Float_t arg0)->void { a->SetLabelSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:403:21
    t.method("SetMaximum", static_cast<void (TH1::*)(Double_t) >(&TH1::SetMaximum));
    t.method("SetMaximum", [](TH1& a)->void { a.SetMaximum(); });
    t.method("SetMaximum", [](TH1* a)->void { a->SetMaximum(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:404:21
    t.method("SetMinimum", static_cast<void (TH1::*)(Double_t) >(&TH1::SetMinimum));
    t.method("SetMinimum", [](TH1& a)->void { a.SetMinimum(); });
    t.method("SetMinimum", [](TH1* a)->void { a->SetMinimum(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:406:21
    t.method("SetName", static_cast<void (TH1::*)(const char *) >(&TH1::SetName));

    DEBUG_MSG("Adding wrapper for void TH1::SetNameTitle(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNameTitle(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:407:21
    t.method("SetNameTitle", static_cast<void (TH1::*)(const char *, const char *) >(&TH1::SetNameTitle));

    DEBUG_MSG("Adding wrapper for void TH1::SetNdivisions(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNdivisions(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:408:21
    t.method("SetNdivisions", static_cast<void (TH1::*)(Int_t, Option_t *) >(&TH1::SetNdivisions));
    t.method("SetNdivisions", [](TH1& a)->void { a.SetNdivisions(); });
    t.method("SetNdivisions", [](TH1& a, Int_t arg0)->void { a.SetNdivisions(arg0); });
    t.method("SetNdivisions", [](TH1* a)->void { a->SetNdivisions(); });
    t.method("SetNdivisions", [](TH1* a, Int_t arg0)->void { a->SetNdivisions(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetNormFactor(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNormFactor(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:409:21
    t.method("SetNormFactor", static_cast<void (TH1::*)(Double_t) >(&TH1::SetNormFactor));
    t.method("SetNormFactor", [](TH1& a)->void { a.SetNormFactor(); });
    t.method("SetNormFactor", [](TH1* a)->void { a->SetNormFactor(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetStats(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetStats(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:410:21
    t.method("SetStats", static_cast<void (TH1::*)(Bool_t) >(&TH1::SetStats));
    t.method("SetStats", [](TH1& a)->void { a.SetStats(); });
    t.method("SetStats", [](TH1* a)->void { a->SetStats(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:411:21
    t.method("SetOption", static_cast<void (TH1::*)(Option_t *) >(&TH1::SetOption));
    t.method("SetOption", [](TH1& a)->void { a.SetOption(); });
    t.method("SetOption", [](TH1* a)->void { a->SetOption(); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTickLength(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTickLength(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:412:21
    t.method("SetTickLength", static_cast<void (TH1::*)(Float_t, Option_t *) >(&TH1::SetTickLength));
    t.method("SetTickLength", [](TH1& a)->void { a.SetTickLength(); });
    t.method("SetTickLength", [](TH1& a, Float_t arg0)->void { a.SetTickLength(arg0); });
    t.method("SetTickLength", [](TH1* a)->void { a->SetTickLength(); });
    t.method("SetTickLength", [](TH1* a, Float_t arg0)->void { a->SetTickLength(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleFont(Style_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleFont(Style_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:413:21
    t.method("SetTitleFont", static_cast<void (TH1::*)(Style_t, Option_t *) >(&TH1::SetTitleFont));
    t.method("SetTitleFont", [](TH1& a)->void { a.SetTitleFont(); });
    t.method("SetTitleFont", [](TH1& a, Style_t arg0)->void { a.SetTitleFont(arg0); });
    t.method("SetTitleFont", [](TH1* a)->void { a->SetTitleFont(); });
    t.method("SetTitleFont", [](TH1* a, Style_t arg0)->void { a->SetTitleFont(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleOffset(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleOffset(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:414:21
    t.method("SetTitleOffset", static_cast<void (TH1::*)(Float_t, Option_t *) >(&TH1::SetTitleOffset));
    t.method("SetTitleOffset", [](TH1& a)->void { a.SetTitleOffset(); });
    t.method("SetTitleOffset", [](TH1& a, Float_t arg0)->void { a.SetTitleOffset(arg0); });
    t.method("SetTitleOffset", [](TH1* a)->void { a->SetTitleOffset(); });
    t.method("SetTitleOffset", [](TH1* a, Float_t arg0)->void { a->SetTitleOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleSize(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleSize(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:415:21
    t.method("SetTitleSize", static_cast<void (TH1::*)(Float_t, Option_t *) >(&TH1::SetTitleSize));
    t.method("SetTitleSize", [](TH1& a)->void { a.SetTitleSize(); });
    t.method("SetTitleSize", [](TH1& a, Float_t arg0)->void { a.SetTitleSize(arg0); });
    t.method("SetTitleSize", [](TH1* a)->void { a->SetTitleSize(); });
    t.method("SetTitleSize", [](TH1* a, Float_t arg0)->void { a->SetTitleSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetStatOverflows(TH1::EStatOverflows) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetStatOverflows(TH1::EStatOverflows)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:416:21
    t.method("SetStatOverflows", static_cast<void (TH1::*)(TH1::EStatOverflows) >(&TH1::SetStatOverflows));

    DEBUG_MSG("Adding wrapper for void TH1::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:417:21
    t.method("SetTitle", static_cast<void (TH1::*)(const char *) >(&TH1::SetTitle));

    DEBUG_MSG("Adding wrapper for void TH1::SetXTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetXTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:418:21
    t.method("SetXTitle", static_cast<void (TH1::*)(const char *) >(&TH1::SetXTitle));

    DEBUG_MSG("Adding wrapper for void TH1::SetYTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetYTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:419:21
    t.method("SetYTitle", static_cast<void (TH1::*)(const char *) >(&TH1::SetYTitle));

    DEBUG_MSG("Adding wrapper for void TH1::SetZTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetZTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:420:21
    t.method("SetZTitle", static_cast<void (TH1::*)(const char *) >(&TH1::SetZTitle));

    DEBUG_MSG("Adding wrapper for TH1 * TH1::ShowBackground(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::ShowBackground(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:421:21
    t.method("ShowBackground", static_cast<TH1 * (TH1::*)(Int_t, Option_t *) >(&TH1::ShowBackground));
    t.method("ShowBackground", [](TH1& a)->TH1 * { return a.ShowBackground(); });
    t.method("ShowBackground", [](TH1& a, Int_t arg0)->TH1 * { return a.ShowBackground(arg0); });
    t.method("ShowBackground", [](TH1* a)->TH1 * { return a->ShowBackground(); });
    t.method("ShowBackground", [](TH1* a, Int_t arg0)->TH1 * { return a->ShowBackground(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::ShowPeaks(Double_t, Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::ShowPeaks(Double_t, Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:422:21
    t.method("ShowPeaks", static_cast<Int_t (TH1::*)(Double_t, Option_t *, Double_t) >(&TH1::ShowPeaks));
    t.method("ShowPeaks", [](TH1& a)->Int_t { return a.ShowPeaks(); });
    t.method("ShowPeaks", [](TH1& a, Double_t arg0)->Int_t { return a.ShowPeaks(arg0); });
    t.method("ShowPeaks", [](TH1& a, Double_t arg0, Option_t * arg1)->Int_t { return a.ShowPeaks(arg0, arg1); });
    t.method("ShowPeaks", [](TH1* a)->Int_t { return a->ShowPeaks(); });
    t.method("ShowPeaks", [](TH1* a, Double_t arg0)->Int_t { return a->ShowPeaks(arg0); });
    t.method("ShowPeaks", [](TH1* a, Double_t arg0, Option_t * arg1)->Int_t { return a->ShowPeaks(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::Smooth(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Smooth(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:423:21
    t.method("Smooth", static_cast<void (TH1::*)(Int_t, Option_t *) >(&TH1::Smooth));
    t.method("Smooth", [](TH1& a)->void { a.Smooth(); });
    t.method("Smooth", [](TH1& a, Int_t arg0)->void { a.Smooth(arg0); });
    t.method("Smooth", [](TH1* a)->void { a->Smooth(); });
    t.method("Smooth", [](TH1* a, Int_t arg0)->void { a->Smooth(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SmoothArray(Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SmoothArray(Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:424:21
    module_.method("TH1!SmoothArray", static_cast<void (*)(Int_t, Double_t *, Int_t) >(&TH1::SmoothArray));
    module_.method("TH1!SmoothArray", [](Int_t arg0, Double_t * arg1)->void { TH1::SmoothArray(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::StatOverflows(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::StatOverflows(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:425:21
    module_.method("TH1!StatOverflows", static_cast<void (*)(Bool_t) >(&TH1::StatOverflows));
    module_.method("TH1!StatOverflows", []()->void { TH1::StatOverflows(); });

    DEBUG_MSG("Adding wrapper for void TH1::Sumw2(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Sumw2(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:426:21
    t.method("Sumw2", static_cast<void (TH1::*)(Bool_t) >(&TH1::Sumw2));
    t.method("Sumw2", [](TH1& a)->void { a.Sumw2(); });
    t.method("Sumw2", [](TH1* a)->void { a->Sumw2(); });

    DEBUG_MSG("Adding wrapper for void TH1::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::UseCurrentStyle()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:427:21
    t.method("UseCurrentStyle", static_cast<void (TH1::*)() >(&TH1::UseCurrentStyle));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetCellContent(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetCellContent(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:432:21
    t.method("GetCellContent", static_cast<Double_t (TH1::*)(Int_t, Int_t)  const>(&TH1::GetCellContent));

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetCellError(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetCellError(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:434:21
    t.method("GetCellError", static_cast<Double_t (TH1::*)(Int_t, Int_t)  const>(&TH1::GetCellError));

    DEBUG_MSG("Adding wrapper for void TH1::RebinAxis(Double_t, TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::RebinAxis(Double_t, TAxis *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:436:21
    t.method("RebinAxis", static_cast<void (TH1::*)(Double_t, TAxis *) >(&TH1::RebinAxis));

    DEBUG_MSG("Adding wrapper for void TH1::SetCellContent(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetCellContent(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:438:21
    t.method("SetCellContent", static_cast<void (TH1::*)(Int_t, Int_t, Double_t) >(&TH1::SetCellContent));

    DEBUG_MSG("Adding wrapper for void TH1::SetCellError(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetCellError(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:440:21
    t.method("SetCellError", static_cast<void (TH1::*)(Int_t, Int_t, Double_t) >(&TH1::SetCellError));

    DEBUG_MSG("Adding wrapper for Version_t TH1::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!Class_Version", static_cast<Version_t (*)() >(&TH1::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH1::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    t.method("IsA", static_cast<TClass * (TH1::*)()  const>(&TH1::IsA));

    DEBUG_MSG("Adding wrapper for void TH1::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    t.method("StreamerNVirtual", static_cast<void (TH1::*)(TBuffer &) >(&TH1::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH1::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!DeclFileName", []() { return (std::string)TH1::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!ImplFileLine", static_cast<int (*)() >(&TH1::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH1::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!ImplFileName", []() { return (std::string)TH1::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!Class_Name", []() { return (std::string)TH1::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!Dictionary", static_cast<TClass * (*)() >(&TH1::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH1::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!Class", static_cast<TClass * (*)() >(&TH1::Class));

    DEBUG_MSG("Adding wrapper for void TH1::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    t.method("Streamer", static_cast<void (TH1::*)(TBuffer &) >(&TH1::Streamer));

    DEBUG_MSG("Adding wrapper for int TH1::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TH1.h:443:4
    module_.method("TH1!DeclFileLine", static_cast<int (*)() >(&TH1::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1>> type_;
};
std::shared_ptr<Wrapper> newJlTH1(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualTreePlayer> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualTreePlayer> : std::false_type { };
template<> struct SuperType<TVirtualTreePlayer> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualTreePlayer
// signature to use in the veto file: TVirtualTreePlayer
struct JlTVirtualTreePlayer: public Wrapper {

  JlTVirtualTreePlayer(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualTreePlayer (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TVirtualTreePlayer.h:38:7
    jlcxx::TypeWrapper<TVirtualTreePlayer>  t = jlModule.add_type<TVirtualTreePlayer>("TVirtualTreePlayer",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualTreePlayer>>(new jlcxx::TypeWrapper<TVirtualTreePlayer>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualTreePlayer>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualTreePlayer(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualTreePlayer(module));
}
