// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TTree::TClusterIterator> : std::false_type { };
  template<> struct DefaultConstructible<TTree::TClusterIterator> : std::false_type { };
}

// Class generating the wrapper for type TTree::TClusterIterator
// signature to use in the veto file: TTree::TClusterIterator
struct JlTTree_TClusterIterator: public Wrapper {

  JlTTree_TClusterIterator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTree::TClusterIterator (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:269:10
    jlcxx::TypeWrapper<TTree::TClusterIterator>  t = jlModule.add_type<TTree::TClusterIterator>("TTree!TClusterIterator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>>(new jlcxx::TypeWrapper<TTree::TClusterIterator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Next() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Next()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:295:16
    t.method("Next", [](TTree::TClusterIterator& a)->Long64_t { return a.Next(); });
    t.method("Next", [](TTree::TClusterIterator* a)->Long64_t { return a->Next(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Previous() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Previous()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:299:16
    t.method("Previous", [](TTree::TClusterIterator& a)->Long64_t { return a.Previous(); });
    t.method("Previous", [](TTree::TClusterIterator* a)->Long64_t { return a->Previous(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetStartEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetStartEntry()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:302:16
    t.method("GetStartEntry", [](TTree::TClusterIterator& a)->Long64_t { return a.GetStartEntry(); });
    t.method("GetStartEntry", [](TTree::TClusterIterator* a)->Long64_t { return a->GetStartEntry(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetNextEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetNextEntry()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:307:16
    t.method("GetNextEntry", [](TTree::TClusterIterator& a)->Long64_t { return a.GetNextEntry(); });
    t.method("GetNextEntry", [](TTree::TClusterIterator* a)->Long64_t { return a->GetNextEntry(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::operator()() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::operator()()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TTree.h:311:16
    t.method("paren", [](TTree::TClusterIterator& a)->Long64_t { return a.operator()(); });
    t.method("paren", [](TTree::TClusterIterator* a)->Long64_t { return a->operator()(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>> type_;
};
std::shared_ptr<Wrapper> newJlTTree_TClusterIterator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTree_TClusterIterator(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TStreamerInfo> : std::false_type { };
  template<> struct DefaultConstructible<TStreamerInfo> : std::false_type { };
}

// Class generating the wrapper for type TStreamerInfo
// signature to use in the veto file: TStreamerInfo
struct JlTStreamerInfo: public Wrapper {

  JlTStreamerInfo(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TStreamerInfo (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TStreamerInfo.h:39:7
    jlcxx::TypeWrapper<TStreamerInfo>  t = jlModule.add_type<TStreamerInfo>("TStreamerInfo");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TStreamerInfo>>(new jlcxx::TypeWrapper<TStreamerInfo>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TStreamerInfo>> type_;
};
std::shared_ptr<Wrapper> newJlTStreamerInfo(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTStreamerInfo(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TEntryList> : std::false_type { };
  template<> struct DefaultConstructible<TEntryList> : std::false_type { };
template<> struct SuperType<TEntryList> { typedef TNamed type; };
}

// Class generating the wrapper for type TEntryList
// signature to use in the veto file: TEntryList
struct JlTEntryList: public Wrapper {

  JlTEntryList(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TEntryList (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:25:7
    jlcxx::TypeWrapper<TEntryList>  t = jlModule.add_type<TEntryList>("TEntryList",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TEntryList>>(new jlcxx::TypeWrapper<TEntryList>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:57:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *, const TTree *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:58:4
    t.constructor<const char *, const char *, const TTree *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const char *, const char *, const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:59:4
    t.constructor<const char *, const char *, const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const TTree *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:60:4
    t.constructor<const TTree *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TEntryList::TEntryList(const TEntryList &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:61:4
    t.constructor<const TEntryList &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TEntryList::Add(const TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Add(const TEntryList *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:64:24
    t.method("Add", [](TEntryList& a, const TEntryList * arg0)->void { a.Add(arg0); });
    t.method("Add", [](TEntryList* a, const TEntryList * arg0)->void { a->Add(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::AddSubList(TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::AddSubList(TEntryList *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:65:24
    t.method("AddSubList", [](TEntryList& a, TEntryList * arg0)->void { a.AddSubList(arg0); });
    t.method("AddSubList", [](TEntryList* a, TEntryList * arg0)->void { a->AddSubList(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Contains(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Contains(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:66:24
    t.method("Contains", [](TEntryList& a, Long64_t arg0)->Int_t { return a.Contains(arg0); });
    t.method("Contains", [](TEntryList& a, Long64_t arg0, TTree * arg1)->Int_t { return a.Contains(arg0, arg1); });
    t.method("Contains", [](TEntryList* a, Long64_t arg0)->Int_t { return a->Contains(arg0); });
    t.method("Contains", [](TEntryList* a, Long64_t arg0, TTree * arg1)->Int_t { return a->Contains(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TEntryList::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:67:24
    t.method("DirectoryAutoAdd", [](TEntryList& a, TDirectory * arg0)->void { a.DirectoryAutoAdd(arg0); });
    t.method("DirectoryAutoAdd", [](TEntryList* a, TDirectory * arg0)->void { a->DirectoryAutoAdd(arg0); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::Enter(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Enter(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:68:24
    t.method("Enter", [](TEntryList& a, Long64_t arg0)->bool { return a.Enter(arg0); });
    t.method("Enter", [](TEntryList& a, Long64_t arg0, TTree * arg1)->bool { return a.Enter(arg0, arg1); });
    t.method("Enter", [](TEntryList* a, Long64_t arg0)->bool { return a->Enter(arg0); });
    t.method("Enter", [](TEntryList* a, Long64_t arg0, TTree * arg1)->bool { return a->Enter(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::Enter(Long64_t, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Enter(Long64_t, const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:69:24
    t.method("Enter", [](TEntryList& a, Long64_t arg0, const char * arg1, const char * arg2)->bool { return a.Enter(arg0, arg1, arg2); });
    t.method("Enter", [](TEntryList* a, Long64_t arg0, const char * arg1, const char * arg2)->bool { return a->Enter(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TEntryList::EnterRange(Long64_t, Long64_t, TTree *, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::EnterRange(Long64_t, Long64_t, TTree *, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:70:24
    t.method("EnterRange", [](TEntryList& a, Long64_t arg0, Long64_t arg1)->void { a.EnterRange(arg0, arg1); });
    t.method("EnterRange", [](TEntryList& a, Long64_t arg0, Long64_t arg1, TTree * arg2)->void { a.EnterRange(arg0, arg1, arg2); });
    t.method("EnterRange", [](TEntryList& a, Long64_t arg0, Long64_t arg1, TTree * arg2, UInt_t arg3)->void { a.EnterRange(arg0, arg1, arg2, arg3); });
    t.method("EnterRange", [](TEntryList* a, Long64_t arg0, Long64_t arg1)->void { a->EnterRange(arg0, arg1); });
    t.method("EnterRange", [](TEntryList* a, Long64_t arg0, Long64_t arg1, TTree * arg2)->void { a->EnterRange(arg0, arg1, arg2); });
    t.method("EnterRange", [](TEntryList* a, Long64_t arg0, Long64_t arg1, TTree * arg2, UInt_t arg3)->void { a->EnterRange(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TEntryList * TEntryList::GetCurrentList() (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TEntryList::GetCurrentList()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:71:24
    t.method("GetCurrentList", [](TEntryList const& a)->TEntryList * { return a.GetCurrentList(); });
    t.method("GetCurrentList", [](TEntryList const* a)->TEntryList * { return a->GetCurrentList(); });

    DEBUG_MSG("Adding wrapper for TEntryList * TEntryList::GetEntryList(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TEntryList::GetEntryList(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:72:24
    t.method("GetEntryList", [](TEntryList& a, const char * arg0, const char * arg1)->TEntryList * { return a.GetEntryList(arg0, arg1); });
    t.method("GetEntryList", [](TEntryList& a, const char * arg0, const char * arg1, Option_t * arg2)->TEntryList * { return a.GetEntryList(arg0, arg1, arg2); });
    t.method("GetEntryList", [](TEntryList* a, const char * arg0, const char * arg1)->TEntryList * { return a->GetEntryList(arg0, arg1); });
    t.method("GetEntryList", [](TEntryList* a, const char * arg0, const char * arg1, Option_t * arg2)->TEntryList * { return a->GetEntryList(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntry(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntry(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:73:24
    t.method("GetEntry", [](TEntryList& a, Long64_t arg0)->Long64_t { return a.GetEntry(arg0); });
    t.method("GetEntry", [](TEntryList* a, Long64_t arg0)->Long64_t { return a->GetEntry(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntryAndTree(Long64_t, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntryAndTree(Long64_t, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:74:24
    t.method("GetEntryAndTree", [](TEntryList& a, Long64_t arg0, Int_t & arg1)->Long64_t { return a.GetEntryAndTree(arg0, arg1); });
    t.method("GetEntryAndTree", [](TEntryList* a, Long64_t arg0, Int_t & arg1)->Long64_t { return a->GetEntryAndTree(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetEntriesToProcess() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetEntriesToProcess()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:75:24
    t.method("GetEntriesToProcess", [](TEntryList const& a)->Long64_t { return a.GetEntriesToProcess(); });
    t.method("GetEntriesToProcess", [](TEntryList const* a)->Long64_t { return a->GetEntriesToProcess(); });

    DEBUG_MSG("Adding wrapper for TList * TEntryList::GetLists() (" __HERE__ ")");
    // signature to use in the veto list: TList * TEntryList::GetLists()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:76:24
    t.method("GetLists", [](TEntryList const& a)->TList * { return a.GetLists(); });
    t.method("GetLists", [](TEntryList const* a)->TList * { return a->GetLists(); });

    DEBUG_MSG("Adding wrapper for TDirectory * TEntryList::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TEntryList::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:77:24
    t.method("GetDirectory", [](TEntryList const& a)->TDirectory * { return a.GetDirectory(); });
    t.method("GetDirectory", [](TEntryList const* a)->TDirectory * { return a->GetDirectory(); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::GetN() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::GetN()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:78:24
    t.method("GetN", [](TEntryList const& a)->Long64_t { return a.GetN(); });
    t.method("GetN", [](TEntryList const* a)->Long64_t { return a->GetN(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::GetTreeName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::GetTreeName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:79:24
    t.method("GetTreeName", [](TEntryList const& a) { return (std::string)a.GetTreeName(); });
    t.method("GetTreeName", [](TEntryList const* a) { return (std::string)a->GetTreeName(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::GetFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::GetFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:80:24
    t.method("GetFileName", [](TEntryList const& a) { return (std::string)a.GetFileName(); });
    t.method("GetFileName", [](TEntryList const* a) { return (std::string)a->GetFileName(); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::GetTreeNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::GetTreeNumber()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:81:24
    t.method("GetTreeNumber", [](TEntryList const& a)->Int_t { return a.GetTreeNumber(); });
    t.method("GetTreeNumber", [](TEntryList const* a)->Int_t { return a->GetTreeNumber(); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::GetReapplyCut() (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::GetReapplyCut()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:82:24
    t.method("GetReapplyCut", [](TEntryList const& a)->bool { return a.GetReapplyCut(); });
    t.method("GetReapplyCut", [](TEntryList const* a)->bool { return a->GetReapplyCut(); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::IsValid() (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::IsValid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:84:9
    t.method("IsValid", [](TEntryList const& a)->bool { return a.IsValid(); });
    t.method("IsValid", [](TEntryList const* a)->bool { return a->IsValid(); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:90:24
    t.method("Merge", [](TEntryList& a, TCollection * arg0)->Int_t { return a.Merge(arg0); });
    t.method("Merge", [](TEntryList* a, TCollection * arg0)->Int_t { return a->Merge(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TEntryList::Next() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TEntryList::Next()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:92:24
    t.method("Next", [](TEntryList& a)->Long64_t { return a.Next(); });
    t.method("Next", [](TEntryList* a)->Long64_t { return a->Next(); });

    DEBUG_MSG("Adding wrapper for void TEntryList::OptimizeStorage() (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::OptimizeStorage()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:93:24
    t.method("OptimizeStorage", [](TEntryList& a)->void { a.OptimizeStorage(); });
    t.method("OptimizeStorage", [](TEntryList* a)->void { a->OptimizeStorage(); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::RelocatePaths(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::RelocatePaths(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:94:24
    t.method("RelocatePaths", [](TEntryList& a, const char * arg0)->Int_t { return a.RelocatePaths(arg0); });
    t.method("RelocatePaths", [](TEntryList& a, const char * arg0, const char * arg1)->Int_t { return a.RelocatePaths(arg0, arg1); });
    t.method("RelocatePaths", [](TEntryList* a, const char * arg0)->Int_t { return a->RelocatePaths(arg0); });
    t.method("RelocatePaths", [](TEntryList* a, const char * arg0, const char * arg1)->Int_t { return a->RelocatePaths(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TEntryList::Remove(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: bool TEntryList::Remove(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:95:24
    t.method("Remove", [](TEntryList& a, Long64_t arg0)->bool { return a.Remove(arg0); });
    t.method("Remove", [](TEntryList& a, Long64_t arg0, TTree * arg1)->bool { return a.Remove(arg0, arg1); });
    t.method("Remove", [](TEntryList* a, Long64_t arg0)->bool { return a->Remove(arg0); });
    t.method("Remove", [](TEntryList* a, Long64_t arg0, TTree * arg1)->bool { return a->Remove(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Reset() (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Reset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:96:24
    t.method("Reset", [](TEntryList& a)->void { a.Reset(); });
    t.method("Reset", [](TEntryList* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::ScanPaths(TList *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::ScanPaths(TList *, bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:97:24
    t.method("ScanPaths", [](TEntryList& a, TList * arg0)->Int_t { return a.ScanPaths(arg0); });
    t.method("ScanPaths", [](TEntryList& a, TList * arg0, bool arg1)->Int_t { return a.ScanPaths(arg0, arg1); });
    t.method("ScanPaths", [](TEntryList* a, TList * arg0)->Int_t { return a->ScanPaths(arg0); });
    t.method("ScanPaths", [](TEntryList* a, TList * arg0, bool arg1)->Int_t { return a->ScanPaths(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Print(const Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Print(const Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:99:24
    t.method("Print", [](TEntryList const& a)->void { a.Print(); });
    t.method("Print", [](TEntryList const& a, const Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TEntryList const* a)->void { a->Print(); });
    t.method("Print", [](TEntryList const* a, const Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:100:24
    t.method("SetDirectory", [](TEntryList& a, TDirectory * arg0)->void { a.SetDirectory(arg0); });
    t.method("SetDirectory", [](TEntryList* a, TDirectory * arg0)->void { a->SetDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetEntriesToProcess(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetEntriesToProcess(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:101:24
    t.method("SetEntriesToProcess", [](TEntryList& a, Long64_t arg0)->void { a.SetEntriesToProcess(arg0); });
    t.method("SetEntriesToProcess", [](TEntryList* a, Long64_t arg0)->void { a->SetEntriesToProcess(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetShift(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetShift(bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:102:24
    t.method("SetShift", [](TEntryList& a, bool arg0)->void { a.SetShift(arg0); });
    t.method("SetShift", [](TEntryList* a, bool arg0)->void { a->SetShift(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTree(const TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTree(const TTree *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:103:24
    t.method("SetTree", [](TEntryList& a, const TTree * arg0)->void { a.SetTree(arg0); });
    t.method("SetTree", [](TEntryList* a, const TTree * arg0)->void { a->SetTree(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTree(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTree(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:104:24
    t.method("SetTree", [](TEntryList& a, const char * arg0, const char * arg1)->void { a.SetTree(arg0, arg1); });
    t.method("SetTree", [](TEntryList* a, const char * arg0, const char * arg1)->void { a->SetTree(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTreeName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTreeName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:105:24
    t.method("SetTreeName", [](TEntryList& a, const char * arg0)->void { a.SetTreeName(arg0); });
    t.method("SetTreeName", [](TEntryList* a, const char * arg0)->void { a->SetTreeName(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetFileName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetFileName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:106:24
    t.method("SetFileName", [](TEntryList& a, const char * arg0)->void { a.SetFileName(arg0); });
    t.method("SetFileName", [](TEntryList* a, const char * arg0)->void { a->SetFileName(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetTreeNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetTreeNumber(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:107:24
    t.method("SetTreeNumber", [](TEntryList& a, Int_t arg0)->void { a.SetTreeNumber(arg0); });
    t.method("SetTreeNumber", [](TEntryList* a, Int_t arg0)->void { a->SetTreeNumber(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::SetReapplyCut(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::SetReapplyCut(bool)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:108:24
    t.method("SetReapplyCut", [](TEntryList& a)->void { a.SetReapplyCut(); });
    t.method("SetReapplyCut", [](TEntryList& a, bool arg0)->void { a.SetReapplyCut(arg0); });
    t.method("SetReapplyCut", [](TEntryList* a)->void { a->SetReapplyCut(); });
    t.method("SetReapplyCut", [](TEntryList* a, bool arg0)->void { a->SetReapplyCut(arg0); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Subtract(const TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Subtract(const TEntryList *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:109:24
    t.method("Subtract", [](TEntryList& a, const TEntryList * arg0)->void { a.Subtract(arg0); });
    t.method("Subtract", [](TEntryList* a, const TEntryList * arg0)->void { a->Subtract(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Relocate(const char *, const char *, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Relocate(const char *, const char *, const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:111:24
    module_.method("TEntryList!Relocate", [](const char * arg0, const char * arg1)->Int_t { return TEntryList::Relocate(arg0, arg1); });
    module_.method("TEntryList!Relocate", [](const char * arg0, const char * arg1, const char * arg2)->Int_t { return TEntryList::Relocate(arg0, arg1, arg2); });
    module_.method("TEntryList!Relocate", [](const char * arg0, const char * arg1, const char * arg2, const char * arg3)->Int_t { return TEntryList::Relocate(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TEntryList::Scan(const char *, TList *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TEntryList::Scan(const char *, TList *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TEntryList.h:113:24
    module_.method("TEntryList!Scan", [](const char * arg0, TList * arg1)->Int_t { return TEntryList::Scan(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TEntryList::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TEntryList::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TEntryList!Class_Version", []()->Version_t { return TEntryList::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TEntryList const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TEntryList const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TEntryList::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TEntryList& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TEntryList* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TEntryList!DeclFileName", []() { return (std::string)TEntryList::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TEntryList::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TEntryList::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TEntryList!ImplFileLine", []()->int { return TEntryList::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TEntryList!ImplFileName", []() { return (std::string)TEntryList::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TEntryList::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TEntryList::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TEntryList!Class_Name", []() { return (std::string)TEntryList::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TEntryList!Dictionary", []()->TClass * { return TEntryList::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TEntryList::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TEntryList::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TEntryList!Class", []()->TClass * { return TEntryList::Class(); });

    DEBUG_MSG("Adding wrapper for void TEntryList::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TEntryList::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TEntryList& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TEntryList* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TEntryList::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TEntryList::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TEntryList!DeclFileLine", []()->int { return TEntryList::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TEntryList>> type_;
};
std::shared_ptr<Wrapper> newJlTEntryList(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTEntryList(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1> : std::false_type { };
  template<> struct DefaultConstructible<TH1> : std::false_type { };
template<> struct SuperType<TH1> { typedef TNamed type; };
}

// Class generating the wrapper for type TH1
// signature to use in the veto file: TH1
struct JlTH1: public Wrapper {

  JlTH1(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:59:7
    jlcxx::TypeWrapper<TH1>  t = jlModule.add_type<TH1>("TH1",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1>>(new jlcxx::TypeWrapper<TH1>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Int_t TH1::FitOptionsMake(Option_t *, Foption_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FitOptionsMake(Option_t *, Foption_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:121:17
    module_.method("TH1!FitOptionsMake", [](Option_t * arg0, Foption_t & arg1)->Int_t { return TH1::FitOptionsMake(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(TF1 *, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(TF1 *, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:190:21
    t.method("Add", [](TH1& a, TF1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TH1& a, TF1 * arg0, Double_t arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TH1& a, TF1 * arg0, Double_t arg1, Option_t * arg2)->Bool_t { return a.Add(arg0, arg1, arg2); });
    t.method("Add", [](TH1* a, TF1 * arg0)->Bool_t { return a->Add(arg0); });
    t.method("Add", [](TH1* a, TF1 * arg0, Double_t arg1)->Bool_t { return a->Add(arg0, arg1); });
    t.method("Add", [](TH1* a, TF1 * arg0, Double_t arg1, Option_t * arg2)->Bool_t { return a->Add(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(const TH1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(const TH1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:191:21
    t.method("Add", [](TH1& a, const TH1 * arg0)->Bool_t { return a.Add(arg0); });
    t.method("Add", [](TH1& a, const TH1 * arg0, Double_t arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TH1* a, const TH1 * arg0)->Bool_t { return a->Add(arg0); });
    t.method("Add", [](TH1* a, const TH1 * arg0, Double_t arg1)->Bool_t { return a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Add(const TH1 *, const TH1 *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Add(const TH1 *, const TH1 *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:192:21
    t.method("Add", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Add(arg0, arg1); });
    t.method("Add", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Add(arg0, arg1, arg2); });
    t.method("Add", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Add(arg0, arg1, arg2, arg3); });
    t.method("Add", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Add(arg0, arg1); });
    t.method("Add", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Add(arg0, arg1, arg2); });
    t.method("Add", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Add(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:193:21
    t.method("AddBinContent", [](TH1& a, Int_t arg0)->void { a.AddBinContent(arg0); });
    t.method("AddBinContent", [](TH1* a, Int_t arg0)->void { a->AddBinContent(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:194:21
    t.method("AddBinContent", [](TH1& a, Int_t arg0, Double_t arg1)->void { a.AddBinContent(arg0, arg1); });
    t.method("AddBinContent", [](TH1* a, Int_t arg0, Double_t arg1)->void { a->AddBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::AddDirectory(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::AddDirectory(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:195:21
    module_.method("TH1!AddDirectory", []()->void { TH1::AddDirectory(); });
    module_.method("TH1!AddDirectory", [](Bool_t arg0)->void { TH1::AddDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::AddDirectoryStatus() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::AddDirectoryStatus()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:196:21
    module_.method("TH1!AddDirectoryStatus", []()->Bool_t { return TH1::AddDirectoryStatus(); });

    DEBUG_MSG("Adding wrapper for void TH1::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:197:21
    t.method("Browse", [](TH1& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TH1* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::CanExtendAllAxes() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::CanExtendAllAxes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:198:21
    t.method("CanExtendAllAxes", [](TH1 const& a)->Bool_t { return a.CanExtendAllAxes(); });
    t.method("CanExtendAllAxes", [](TH1 const* a)->Bool_t { return a->CanExtendAllAxes(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chi2Test(const TH1 *, Option_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chi2Test(const TH1 *, Option_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:199:21
    t.method("Chi2Test", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.Chi2Test(arg0); });
    t.method("Chi2Test", [](TH1 const& a, const TH1 * arg0, Option_t * arg1)->Double_t { return a.Chi2Test(arg0, arg1); });
    t.method("Chi2Test", [](TH1 const& a, const TH1 * arg0, Option_t * arg1, Double_t * arg2)->Double_t { return a.Chi2Test(arg0, arg1, arg2); });
    t.method("Chi2Test", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->Chi2Test(arg0); });
    t.method("Chi2Test", [](TH1 const* a, const TH1 * arg0, Option_t * arg1)->Double_t { return a->Chi2Test(arg0, arg1); });
    t.method("Chi2Test", [](TH1 const* a, const TH1 * arg0, Option_t * arg1, Double_t * arg2)->Double_t { return a->Chi2Test(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chi2TestX(const TH1 *, Double_t &, Int_t &, Int_t &, Option_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chi2TestX(const TH1 *, Double_t &, Int_t &, Int_t &, Option_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:200:21
    t.method("Chi2TestX", [](TH1 const& a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3)->Double_t { return a.Chi2TestX(arg0, arg1, arg2, arg3); });
    t.method("Chi2TestX", [](TH1 const& a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4)->Double_t { return a.Chi2TestX(arg0, arg1, arg2, arg3, arg4); });
    t.method("Chi2TestX", [](TH1 const& a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4, Double_t * arg5)->Double_t { return a.Chi2TestX(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Chi2TestX", [](TH1 const* a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3)->Double_t { return a->Chi2TestX(arg0, arg1, arg2, arg3); });
    t.method("Chi2TestX", [](TH1 const* a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4)->Double_t { return a->Chi2TestX(arg0, arg1, arg2, arg3, arg4); });
    t.method("Chi2TestX", [](TH1 const* a, const TH1 * arg0, Double_t & arg1, Int_t & arg2, Int_t & arg3, Option_t * arg4, Double_t * arg5)->Double_t { return a->Chi2TestX(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Chisquare(TF1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Chisquare(TF1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:201:21
    t.method("Chisquare", [](TH1 const& a, TF1 * arg0)->Double_t { return a.Chisquare(arg0); });
    t.method("Chisquare", [](TH1 const& a, TF1 * arg0, Option_t * arg1)->Double_t { return a.Chisquare(arg0, arg1); });
    t.method("Chisquare", [](TH1 const* a, TF1 * arg0)->Double_t { return a->Chisquare(arg0); });
    t.method("Chisquare", [](TH1 const* a, TF1 * arg0, Option_t * arg1)->Double_t { return a->Chisquare(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::ClearUnderflowAndOverflow() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ClearUnderflowAndOverflow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:202:21
    t.method("ClearUnderflowAndOverflow", [](TH1& a)->void { a.ClearUnderflowAndOverflow(); });
    t.method("ClearUnderflowAndOverflow", [](TH1* a)->void { a->ClearUnderflowAndOverflow(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::ComputeIntegral(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::ComputeIntegral(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:203:21
    t.method("ComputeIntegral", [](TH1& a)->Double_t { return a.ComputeIntegral(); });
    t.method("ComputeIntegral", [](TH1& a, Bool_t arg0)->Double_t { return a.ComputeIntegral(arg0); });
    t.method("ComputeIntegral", [](TH1* a)->Double_t { return a->ComputeIntegral(); });
    t.method("ComputeIntegral", [](TH1* a, Bool_t arg0)->Double_t { return a->ComputeIntegral(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TH1::Clone(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::Clone(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:204:21
    t.method("Clone", [](TH1 const& a)->TObject * { return a.Clone(); });
    t.method("Clone", [](TH1 const& a, const char * arg0)->TObject * { return a.Clone(arg0); });
    t.method("Clone", [](TH1 const* a)->TObject * { return a->Clone(); });
    t.method("Clone", [](TH1 const* a, const char * arg0)->TObject * { return a->Clone(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:205:21
    t.method("Copy", [](TH1 const& a, TObject & arg0)->void { a.Copy(arg0); });
    t.method("Copy", [](TH1 const* a, TObject & arg0)->void { a->Copy(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:206:21
    t.method("DirectoryAutoAdd", [](TH1& a, TDirectory * arg0)->void { a.DirectoryAutoAdd(arg0); });
    t.method("DirectoryAutoAdd", [](TH1* a, TDirectory * arg0)->void { a->DirectoryAutoAdd(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:207:21
    t.method("DistancetoPrimitive", [](TH1& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TH1* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(TF1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:208:21
    t.method("Divide", [](TH1& a, TF1 * arg0)->Bool_t { return a.Divide(arg0); });
    t.method("Divide", [](TH1& a, TF1 * arg0, Double_t arg1)->Bool_t { return a.Divide(arg0, arg1); });
    t.method("Divide", [](TH1* a, TF1 * arg0)->Bool_t { return a->Divide(arg0); });
    t.method("Divide", [](TH1* a, TF1 * arg0, Double_t arg1)->Bool_t { return a->Divide(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(const TH1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:209:21
    t.method("Divide", [](TH1& a, const TH1 * arg0)->Bool_t { return a.Divide(arg0); });
    t.method("Divide", [](TH1* a, const TH1 * arg0)->Bool_t { return a->Divide(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Divide(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:210:21
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Divide(arg0, arg1); });
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->Bool_t { return a.Divide(arg0, arg1, arg2, arg3, arg4); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Divide(arg0, arg1); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Divide(arg0, arg1, arg2); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Divide(arg0, arg1, arg2, arg3); });
    t.method("Divide", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->Bool_t { return a->Divide(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TH1::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:211:21
    t.method("Draw", [](TH1& a)->void { a.Draw(); });
    t.method("Draw", [](TH1& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TH1* a)->void { a->Draw(); });
    t.method("Draw", [](TH1* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::DrawCopy(Option_t *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::DrawCopy(Option_t *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:212:21
    t.method("DrawCopy", [](TH1 const& a)->TH1 * { return a.DrawCopy(); });
    t.method("DrawCopy", [](TH1 const& a, Option_t * arg0)->TH1 * { return a.DrawCopy(arg0); });
    t.method("DrawCopy", [](TH1 const& a, Option_t * arg0, const char * arg1)->TH1 * { return a.DrawCopy(arg0, arg1); });
    t.method("DrawCopy", [](TH1 const* a)->TH1 * { return a->DrawCopy(); });
    t.method("DrawCopy", [](TH1 const* a, Option_t * arg0)->TH1 * { return a->DrawCopy(arg0); });
    t.method("DrawCopy", [](TH1 const* a, Option_t * arg0, const char * arg1)->TH1 * { return a->DrawCopy(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::DrawNormalized(Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::DrawNormalized(Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:213:21
    t.method("DrawNormalized", [](TH1 const& a)->TH1 * { return a.DrawNormalized(); });
    t.method("DrawNormalized", [](TH1 const& a, Option_t * arg0)->TH1 * { return a.DrawNormalized(arg0); });
    t.method("DrawNormalized", [](TH1 const& a, Option_t * arg0, Double_t arg1)->TH1 * { return a.DrawNormalized(arg0, arg1); });
    t.method("DrawNormalized", [](TH1 const* a)->TH1 * { return a->DrawNormalized(); });
    t.method("DrawNormalized", [](TH1 const* a, Option_t * arg0)->TH1 * { return a->DrawNormalized(arg0); });
    t.method("DrawNormalized", [](TH1 const* a, Option_t * arg0, Double_t arg1)->TH1 * { return a->DrawNormalized(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::DrawPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::DrawPanel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:214:21
    t.method("DrawPanel", [](TH1& a)->void { a.DrawPanel(); });
    t.method("DrawPanel", [](TH1* a)->void { a->DrawPanel(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::BufferEmpty(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::BufferEmpty(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:215:21
    t.method("BufferEmpty", [](TH1& a)->Int_t { return a.BufferEmpty(); });
    t.method("BufferEmpty", [](TH1& a, Int_t arg0)->Int_t { return a.BufferEmpty(arg0); });
    t.method("BufferEmpty", [](TH1* a)->Int_t { return a->BufferEmpty(); });
    t.method("BufferEmpty", [](TH1* a, Int_t arg0)->Int_t { return a->BufferEmpty(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Eval(TF1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Eval(TF1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:216:21
    t.method("Eval", [](TH1& a, TF1 * arg0)->void { a.Eval(arg0); });
    t.method("Eval", [](TH1& a, TF1 * arg0, Option_t * arg1)->void { a.Eval(arg0, arg1); });
    t.method("Eval", [](TH1* a, TF1 * arg0)->void { a->Eval(arg0); });
    t.method("Eval", [](TH1* a, TF1 * arg0, Option_t * arg1)->void { a->Eval(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:217:21
    t.method("ExecuteEvent", [](TH1& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); });
    t.method("ExecuteEvent", [](TH1* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::ExtendAxis(Double_t, TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ExtendAxis(Double_t, TAxis *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:218:21
    t.method("ExtendAxis", [](TH1& a, Double_t arg0, TAxis * arg1)->void { a.ExtendAxis(arg0, arg1); });
    t.method("ExtendAxis", [](TH1* a, Double_t arg0, TAxis * arg1)->void { a->ExtendAxis(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::FFT(TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::FFT(TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:219:21
    t.method("FFT", [](TH1& a, TH1 * arg0, Option_t * arg1)->TH1 * { return a.FFT(arg0, arg1); });
    t.method("FFT", [](TH1* a, TH1 * arg0, Option_t * arg1)->TH1 * { return a->FFT(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:220:21
    t.method("Fill", [](TH1& a, Double_t arg0)->Int_t { return a.Fill(arg0); });
    t.method("Fill", [](TH1* a, Double_t arg0)->Int_t { return a->Fill(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:221:21
    t.method("Fill", [](TH1& a, Double_t arg0, Double_t arg1)->Int_t { return a.Fill(arg0, arg1); });
    t.method("Fill", [](TH1* a, Double_t arg0, Double_t arg1)->Int_t { return a->Fill(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::Fill(const char *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::Fill(const char *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:222:21
    t.method("Fill", [](TH1& a, const char * arg0, Double_t arg1)->Int_t { return a.Fill(arg0, arg1); });
    t.method("Fill", [](TH1* a, const char * arg0, Double_t arg1)->Int_t { return a->Fill(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::FillN(Int_t, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillN(Int_t, const Double_t *, const Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:223:21
    t.method("FillN", [](TH1& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a.FillN(arg0, arg1, arg2); });
    t.method("FillN", [](TH1& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Int_t arg3)->void { a.FillN(arg0, arg1, arg2, arg3); });
    t.method("FillN", [](TH1* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2)->void { a->FillN(arg0, arg1, arg2); });
    t.method("FillN", [](TH1* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, Int_t arg3)->void { a->FillN(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::FillN(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillN(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:224:21
    t.method("FillN", [](TH1& a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, const Double_t * arg3, Int_t arg4)->void { a.FillN(arg0, arg1, arg2, arg3, arg4); });
    t.method("FillN", [](TH1* a, Int_t arg0, const Double_t * arg1, const Double_t * arg2, const Double_t * arg3, Int_t arg4)->void { a->FillN(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TH1::FillRandom(const char *, Int_t, TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillRandom(const char *, Int_t, TRandom *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:225:21
    t.method("FillRandom", [](TH1& a, const char * arg0)->void { a.FillRandom(arg0); });
    t.method("FillRandom", [](TH1& a, const char * arg0, Int_t arg1)->void { a.FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1& a, const char * arg0, Int_t arg1, TRandom * arg2)->void { a.FillRandom(arg0, arg1, arg2); });
    t.method("FillRandom", [](TH1* a, const char * arg0)->void { a->FillRandom(arg0); });
    t.method("FillRandom", [](TH1* a, const char * arg0, Int_t arg1)->void { a->FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1* a, const char * arg0, Int_t arg1, TRandom * arg2)->void { a->FillRandom(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::FillRandom(TH1 *, Int_t, TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FillRandom(TH1 *, Int_t, TRandom *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:226:21
    t.method("FillRandom", [](TH1& a, TH1 * arg0)->void { a.FillRandom(arg0); });
    t.method("FillRandom", [](TH1& a, TH1 * arg0, Int_t arg1)->void { a.FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1& a, TH1 * arg0, Int_t arg1, TRandom * arg2)->void { a.FillRandom(arg0, arg1, arg2); });
    t.method("FillRandom", [](TH1* a, TH1 * arg0)->void { a->FillRandom(arg0); });
    t.method("FillRandom", [](TH1* a, TH1 * arg0, Int_t arg1)->void { a->FillRandom(arg0, arg1); });
    t.method("FillRandom", [](TH1* a, TH1 * arg0, Int_t arg1, TRandom * arg2)->void { a->FillRandom(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindBin(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindBin(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:227:21
    t.method("FindBin", [](TH1& a, Double_t arg0)->Int_t { return a.FindBin(arg0); });
    t.method("FindBin", [](TH1& a, Double_t arg0, Double_t arg1)->Int_t { return a.FindBin(arg0, arg1); });
    t.method("FindBin", [](TH1& a, Double_t arg0, Double_t arg1, Double_t arg2)->Int_t { return a.FindBin(arg0, arg1, arg2); });
    t.method("FindBin", [](TH1* a, Double_t arg0)->Int_t { return a->FindBin(arg0); });
    t.method("FindBin", [](TH1* a, Double_t arg0, Double_t arg1)->Int_t { return a->FindBin(arg0, arg1); });
    t.method("FindBin", [](TH1* a, Double_t arg0, Double_t arg1, Double_t arg2)->Int_t { return a->FindBin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindFixBin(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindFixBin(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:228:21
    t.method("FindFixBin", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindFixBin(arg0); });
    t.method("FindFixBin", [](TH1 const& a, Double_t arg0, Double_t arg1)->Int_t { return a.FindFixBin(arg0, arg1); });
    t.method("FindFixBin", [](TH1 const& a, Double_t arg0, Double_t arg1, Double_t arg2)->Int_t { return a.FindFixBin(arg0, arg1, arg2); });
    t.method("FindFixBin", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindFixBin(arg0); });
    t.method("FindFixBin", [](TH1 const* a, Double_t arg0, Double_t arg1)->Int_t { return a->FindFixBin(arg0, arg1); });
    t.method("FindFixBin", [](TH1 const* a, Double_t arg0, Double_t arg1, Double_t arg2)->Int_t { return a->FindFixBin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindFirstBinAbove(Double_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindFirstBinAbove(Double_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:229:21
    t.method("FindFirstBinAbove", [](TH1 const& a)->Int_t { return a.FindFirstBinAbove(); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindFirstBinAbove(arg0); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1)->Int_t { return a.FindFirstBinAbove(arg0, arg1); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.FindFirstBinAbove(arg0, arg1, arg2); });
    t.method("FindFirstBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a.FindFirstBinAbove(arg0, arg1, arg2, arg3); });
    t.method("FindFirstBinAbove", [](TH1 const* a)->Int_t { return a->FindFirstBinAbove(); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindFirstBinAbove(arg0); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1)->Int_t { return a->FindFirstBinAbove(arg0, arg1); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->FindFirstBinAbove(arg0, arg1, arg2); });
    t.method("FindFirstBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a->FindFirstBinAbove(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::FindLastBinAbove(Double_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::FindLastBinAbove(Double_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:230:21
    t.method("FindLastBinAbove", [](TH1 const& a)->Int_t { return a.FindLastBinAbove(); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0)->Int_t { return a.FindLastBinAbove(arg0); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1)->Int_t { return a.FindLastBinAbove(arg0, arg1); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.FindLastBinAbove(arg0, arg1, arg2); });
    t.method("FindLastBinAbove", [](TH1 const& a, Double_t arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a.FindLastBinAbove(arg0, arg1, arg2, arg3); });
    t.method("FindLastBinAbove", [](TH1 const* a)->Int_t { return a->FindLastBinAbove(); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0)->Int_t { return a->FindLastBinAbove(arg0); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1)->Int_t { return a->FindLastBinAbove(arg0, arg1); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->FindLastBinAbove(arg0, arg1, arg2); });
    t.method("FindLastBinAbove", [](TH1 const* a, Double_t arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a->FindLastBinAbove(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TObject * TH1::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::FindObject(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:231:21
    t.method("FindObject", [](TH1 const& a, const char * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TH1 const* a, const char * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TH1::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TH1::FindObject(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:232:21
    t.method("FindObject", [](TH1 const& a, const TObject * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TH1 const* a, const TObject * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TH1::Fit(const char *, Option_t *, Option_t *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TH1::Fit(const char *, Option_t *, Option_t *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:233:29
    t.method("Fit", [](TH1& a, const char * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1& a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3, Double_t arg4)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TH1* a, const char * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1* a, const char * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3, Double_t arg4)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TFitResultPtr TH1::Fit(TF1 *, Option_t *, Option_t *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TFitResultPtr TH1::Fit(TF1 *, Option_t *, Option_t *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:234:29
    t.method("Fit", [](TH1& a, TF1 * arg0)->TFitResultPtr { return a.Fit(arg0); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1& a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3, Double_t arg4)->TFitResultPtr { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TH1* a, TF1 * arg0)->TFitResultPtr { return a->Fit(arg0); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1)->TFitResultPtr { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1, Option_t * arg2)->TFitResultPtr { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TH1* a, TF1 * arg0, Option_t * arg1, Option_t * arg2, Double_t arg3, Double_t arg4)->TFitResultPtr { return a->Fit(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TH1::FitPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::FitPanel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:235:21
    t.method("FitPanel", [](TH1& a)->void { a.FitPanel(); });
    t.method("FitPanel", [](TH1* a)->void { a->FitPanel(); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::GetAsymmetry(TH1 *, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::GetAsymmetry(TH1 *, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:236:21
    t.method("GetAsymmetry", [](TH1& a, TH1 * arg0)->TH1 * { return a.GetAsymmetry(arg0); });
    t.method("GetAsymmetry", [](TH1& a, TH1 * arg0, Double_t arg1)->TH1 * { return a.GetAsymmetry(arg0, arg1); });
    t.method("GetAsymmetry", [](TH1& a, TH1 * arg0, Double_t arg1, Double_t arg2)->TH1 * { return a.GetAsymmetry(arg0, arg1, arg2); });
    t.method("GetAsymmetry", [](TH1* a, TH1 * arg0)->TH1 * { return a->GetAsymmetry(arg0); });
    t.method("GetAsymmetry", [](TH1* a, TH1 * arg0, Double_t arg1)->TH1 * { return a->GetAsymmetry(arg0, arg1); });
    t.method("GetAsymmetry", [](TH1* a, TH1 * arg0, Double_t arg1, Double_t arg2)->TH1 * { return a->GetAsymmetry(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBufferLength() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBufferLength()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:237:21
    t.method("GetBufferLength", [](TH1 const& a)->Int_t { return a.GetBufferLength(); });
    t.method("GetBufferLength", [](TH1 const* a)->Int_t { return a->GetBufferLength(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBufferSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:238:21
    t.method("GetBufferSize", [](TH1 const& a)->Int_t { return a.GetBufferSize(); });
    t.method("GetBufferSize", [](TH1 const* a)->Int_t { return a->GetBufferSize(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TH1::GetBuffer() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TH1::GetBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:239:22
    t.method("GetBuffer", [](TH1 const& a)->const Double_t * { return a.GetBuffer(); });
    t.method("GetBuffer", [](TH1 const* a)->const Double_t * { return a->GetBuffer(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetDefaultBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetDefaultBufferSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:240:21
    module_.method("TH1!GetDefaultBufferSize", []()->Int_t { return TH1::GetDefaultBufferSize(); });

    DEBUG_MSG("Adding wrapper for Double_t * TH1::GetIntegral() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TH1::GetIntegral()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:241:22
    t.method("GetIntegral", [](TH1& a)->Double_t * { return a.GetIntegral(); });
    t.method("GetIntegral", [](TH1* a)->Double_t * { return a->GetIntegral(); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::GetCumulative(Bool_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::GetCumulative(Bool_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:242:21
    t.method("GetCumulative", [](TH1 const& a)->TH1 * { return a.GetCumulative(); });
    t.method("GetCumulative", [](TH1 const& a, Bool_t arg0)->TH1 * { return a.GetCumulative(arg0); });
    t.method("GetCumulative", [](TH1 const& a, Bool_t arg0, const char * arg1)->TH1 * { return a.GetCumulative(arg0, arg1); });
    t.method("GetCumulative", [](TH1 const* a)->TH1 * { return a->GetCumulative(); });
    t.method("GetCumulative", [](TH1 const* a, Bool_t arg0)->TH1 * { return a->GetCumulative(arg0); });
    t.method("GetCumulative", [](TH1 const* a, Bool_t arg0, const char * arg1)->TH1 * { return a->GetCumulative(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TList * TH1::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TList * TH1::GetListOfFunctions()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:244:21
    t.method("GetListOfFunctions", [](TH1 const& a)->TList * { return a.GetListOfFunctions(); });
    t.method("GetListOfFunctions", [](TH1 const* a)->TList * { return a->GetListOfFunctions(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNdivisions(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNdivisions(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:246:21
    t.method("GetNdivisions", [](TH1 const& a)->Int_t { return a.GetNdivisions(); });
    t.method("GetNdivisions", [](TH1 const& a, Option_t * arg0)->Int_t { return a.GetNdivisions(arg0); });
    t.method("GetNdivisions", [](TH1 const* a)->Int_t { return a->GetNdivisions(); });
    t.method("GetNdivisions", [](TH1 const* a, Option_t * arg0)->Int_t { return a->GetNdivisions(arg0); });

    DEBUG_MSG("Adding wrapper for Color_t TH1::GetAxisColor(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TH1::GetAxisColor(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:247:21
    t.method("GetAxisColor", [](TH1 const& a)->Color_t { return a.GetAxisColor(); });
    t.method("GetAxisColor", [](TH1 const& a, Option_t * arg0)->Color_t { return a.GetAxisColor(arg0); });
    t.method("GetAxisColor", [](TH1 const* a)->Color_t { return a->GetAxisColor(); });
    t.method("GetAxisColor", [](TH1 const* a, Option_t * arg0)->Color_t { return a->GetAxisColor(arg0); });

    DEBUG_MSG("Adding wrapper for Color_t TH1::GetLabelColor(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TH1::GetLabelColor(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:248:21
    t.method("GetLabelColor", [](TH1 const& a)->Color_t { return a.GetLabelColor(); });
    t.method("GetLabelColor", [](TH1 const& a, Option_t * arg0)->Color_t { return a.GetLabelColor(arg0); });
    t.method("GetLabelColor", [](TH1 const* a)->Color_t { return a->GetLabelColor(); });
    t.method("GetLabelColor", [](TH1 const* a, Option_t * arg0)->Color_t { return a->GetLabelColor(arg0); });

    DEBUG_MSG("Adding wrapper for Style_t TH1::GetLabelFont(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TH1::GetLabelFont(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:249:21
    t.method("GetLabelFont", [](TH1 const& a)->Style_t { return a.GetLabelFont(); });
    t.method("GetLabelFont", [](TH1 const& a, Option_t * arg0)->Style_t { return a.GetLabelFont(arg0); });
    t.method("GetLabelFont", [](TH1 const* a)->Style_t { return a->GetLabelFont(); });
    t.method("GetLabelFont", [](TH1 const* a, Option_t * arg0)->Style_t { return a->GetLabelFont(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetLabelOffset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetLabelOffset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:250:21
    t.method("GetLabelOffset", [](TH1 const& a)->Float_t { return a.GetLabelOffset(); });
    t.method("GetLabelOffset", [](TH1 const& a, Option_t * arg0)->Float_t { return a.GetLabelOffset(arg0); });
    t.method("GetLabelOffset", [](TH1 const* a)->Float_t { return a->GetLabelOffset(); });
    t.method("GetLabelOffset", [](TH1 const* a, Option_t * arg0)->Float_t { return a->GetLabelOffset(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetLabelSize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetLabelSize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:251:21
    t.method("GetLabelSize", [](TH1 const& a)->Float_t { return a.GetLabelSize(); });
    t.method("GetLabelSize", [](TH1 const& a, Option_t * arg0)->Float_t { return a.GetLabelSize(arg0); });
    t.method("GetLabelSize", [](TH1 const* a)->Float_t { return a->GetLabelSize(); });
    t.method("GetLabelSize", [](TH1 const* a, Option_t * arg0)->Float_t { return a->GetLabelSize(arg0); });

    DEBUG_MSG("Adding wrapper for Style_t TH1::GetTitleFont(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TH1::GetTitleFont(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:252:21
    t.method("GetTitleFont", [](TH1 const& a)->Style_t { return a.GetTitleFont(); });
    t.method("GetTitleFont", [](TH1 const& a, Option_t * arg0)->Style_t { return a.GetTitleFont(arg0); });
    t.method("GetTitleFont", [](TH1 const* a)->Style_t { return a->GetTitleFont(); });
    t.method("GetTitleFont", [](TH1 const* a, Option_t * arg0)->Style_t { return a->GetTitleFont(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTitleOffset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTitleOffset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:253:21
    t.method("GetTitleOffset", [](TH1 const& a)->Float_t { return a.GetTitleOffset(); });
    t.method("GetTitleOffset", [](TH1 const& a, Option_t * arg0)->Float_t { return a.GetTitleOffset(arg0); });
    t.method("GetTitleOffset", [](TH1 const* a)->Float_t { return a->GetTitleOffset(); });
    t.method("GetTitleOffset", [](TH1 const* a, Option_t * arg0)->Float_t { return a->GetTitleOffset(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTitleSize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTitleSize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:254:21
    t.method("GetTitleSize", [](TH1 const& a)->Float_t { return a.GetTitleSize(); });
    t.method("GetTitleSize", [](TH1 const& a, Option_t * arg0)->Float_t { return a.GetTitleSize(arg0); });
    t.method("GetTitleSize", [](TH1 const* a)->Float_t { return a->GetTitleSize(); });
    t.method("GetTitleSize", [](TH1 const* a, Option_t * arg0)->Float_t { return a->GetTitleSize(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetTickLength(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetTickLength(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:255:21
    t.method("GetTickLength", [](TH1 const& a)->Float_t { return a.GetTickLength(); });
    t.method("GetTickLength", [](TH1 const& a, Option_t * arg0)->Float_t { return a.GetTickLength(arg0); });
    t.method("GetTickLength", [](TH1 const* a)->Float_t { return a->GetTickLength(); });
    t.method("GetTickLength", [](TH1 const* a, Option_t * arg0)->Float_t { return a->GetTickLength(arg0); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetBarOffset() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetBarOffset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:256:21
    t.method("GetBarOffset", [](TH1 const& a)->Float_t { return a.GetBarOffset(); });
    t.method("GetBarOffset", [](TH1 const* a)->Float_t { return a->GetBarOffset(); });

    DEBUG_MSG("Adding wrapper for Float_t TH1::GetBarWidth() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TH1::GetBarWidth()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:257:21
    t.method("GetBarWidth", [](TH1 const& a)->Float_t { return a.GetBarWidth(); });
    t.method("GetBarWidth", [](TH1 const* a)->Float_t { return a->GetBarWidth(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetContour(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetContour(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:258:21
    t.method("GetContour", [](TH1& a)->Int_t { return a.GetContour(); });
    t.method("GetContour", [](TH1& a, Double_t * arg0)->Int_t { return a.GetContour(arg0); });
    t.method("GetContour", [](TH1* a)->Int_t { return a->GetContour(); });
    t.method("GetContour", [](TH1* a, Double_t * arg0)->Int_t { return a->GetContour(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetContourLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetContourLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:259:21
    t.method("GetContourLevel", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetContourLevel(arg0); });
    t.method("GetContourLevel", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetContourLevel(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetContourLevelPad(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetContourLevelPad(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:260:21
    t.method("GetContourLevelPad", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetContourLevelPad(arg0); });
    t.method("GetContourLevelPad", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetContourLevelPad(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetBin(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetBin(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:262:21
    t.method("GetBin", [](TH1 const& a, Int_t arg0)->Int_t { return a.GetBin(arg0); });
    t.method("GetBin", [](TH1 const& a, Int_t arg0, Int_t arg1)->Int_t { return a.GetBin(arg0, arg1); });
    t.method("GetBin", [](TH1 const& a, Int_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.GetBin(arg0, arg1, arg2); });
    t.method("GetBin", [](TH1 const* a, Int_t arg0)->Int_t { return a->GetBin(arg0); });
    t.method("GetBin", [](TH1 const* a, Int_t arg0, Int_t arg1)->Int_t { return a->GetBin(arg0, arg1); });
    t.method("GetBin", [](TH1 const* a, Int_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->GetBin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::GetBinXYZ(Int_t, Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetBinXYZ(Int_t, Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:263:21
    t.method("GetBinXYZ", [](TH1 const& a, Int_t arg0, Int_t & arg1, Int_t & arg2, Int_t & arg3)->void { a.GetBinXYZ(arg0, arg1, arg2, arg3); });
    t.method("GetBinXYZ", [](TH1 const* a, Int_t arg0, Int_t & arg1, Int_t & arg2, Int_t & arg3)->void { a->GetBinXYZ(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinCenter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinCenter(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:264:21
    t.method("GetBinCenter", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinCenter(arg0); });
    t.method("GetBinCenter", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinCenter(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:265:21
    t.method("GetBinContent", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinContent(arg0); });
    t.method("GetBinContent", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinContent(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:266:21
    t.method("GetBinContent", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetBinContent(arg0, arg1); });
    t.method("GetBinContent", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinContent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinContent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:267:21
    t.method("GetBinContent", [](TH1 const& a, Int_t arg0, Int_t arg1, Int_t arg2)->Double_t { return a.GetBinContent(arg0, arg1, arg2); });
    t.method("GetBinContent", [](TH1 const* a, Int_t arg0, Int_t arg1, Int_t arg2)->Double_t { return a->GetBinContent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:268:21
    t.method("GetBinError", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinError(arg0); });
    t.method("GetBinError", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:269:21
    t.method("GetBinError", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetBinError(arg0, arg1); });
    t.method("GetBinError", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetBinError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinError(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinError(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:270:21
    t.method("GetBinError", [](TH1 const& a, Int_t arg0, Int_t arg1, Int_t arg2)->Double_t { return a.GetBinError(arg0, arg1, arg2); });
    t.method("GetBinError", [](TH1 const* a, Int_t arg0, Int_t arg1, Int_t arg2)->Double_t { return a->GetBinError(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinErrorLow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinErrorLow(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:271:21
    t.method("GetBinErrorLow", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinErrorLow(arg0); });
    t.method("GetBinErrorLow", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinErrorLow(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinErrorUp(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinErrorUp(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:272:21
    t.method("GetBinErrorUp", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinErrorUp(arg0); });
    t.method("GetBinErrorUp", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinErrorUp(arg0); });

    DEBUG_MSG("Adding wrapper for TH1::EBinErrorOpt TH1::GetBinErrorOption() (" __HERE__ ")");
    // signature to use in the veto list: TH1::EBinErrorOpt TH1::GetBinErrorOption()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:273:26
    t.method("GetBinErrorOption", [](TH1 const& a)->TH1::EBinErrorOpt { return a.GetBinErrorOption(); });
    t.method("GetBinErrorOption", [](TH1 const* a)->TH1::EBinErrorOpt { return a->GetBinErrorOption(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinLowEdge(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinLowEdge(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:274:21
    t.method("GetBinLowEdge", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinLowEdge(arg0); });
    t.method("GetBinLowEdge", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinLowEdge(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinWidth(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinWidth(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:275:21
    t.method("GetBinWidth", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetBinWidth(arg0); });
    t.method("GetBinWidth", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetBinWidth(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetBinWithContent(Double_t, Int_t &, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetBinWithContent(Double_t, Int_t &, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:276:21
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1)->Double_t { return a.GetBinWithContent(arg0, arg1); });
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1, Int_t arg2)->Double_t { return a.GetBinWithContent(arg0, arg1, arg2); });
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3)->Double_t { return a.GetBinWithContent(arg0, arg1, arg2, arg3); });
    t.method("GetBinWithContent", [](TH1 const& a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3, Double_t arg4)->Double_t { return a.GetBinWithContent(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1)->Double_t { return a->GetBinWithContent(arg0, arg1); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1, Int_t arg2)->Double_t { return a->GetBinWithContent(arg0, arg1, arg2); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3)->Double_t { return a->GetBinWithContent(arg0, arg1, arg2, arg3); });
    t.method("GetBinWithContent", [](TH1 const* a, Double_t arg0, Int_t & arg1, Int_t arg2, Int_t arg3, Double_t arg4)->Double_t { return a->GetBinWithContent(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TH1::GetCenter(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetCenter(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:277:21
    t.method("GetCenter", [](TH1 const& a, Double_t * arg0)->void { a.GetCenter(arg0); });
    t.method("GetCenter", [](TH1 const* a, Double_t * arg0)->void { a->GetCenter(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::GetDefaultSumw2() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::GetDefaultSumw2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:278:21
    module_.method("TH1!GetDefaultSumw2", []()->Bool_t { return TH1::GetDefaultSumw2(); });

    DEBUG_MSG("Adding wrapper for TDirectory * TH1::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TH1::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:279:21
    t.method("GetDirectory", [](TH1 const& a)->TDirectory * { return a.GetDirectory(); });
    t.method("GetDirectory", [](TH1 const* a)->TDirectory * { return a->GetDirectory(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetEntries()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:280:21
    t.method("GetEntries", [](TH1 const& a)->Double_t { return a.GetEntries(); });
    t.method("GetEntries", [](TH1 const* a)->Double_t { return a->GetEntries(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetEffectiveEntries() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetEffectiveEntries()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:281:21
    t.method("GetEffectiveEntries", [](TH1 const& a)->Double_t { return a.GetEffectiveEntries(); });
    t.method("GetEffectiveEntries", [](TH1 const* a)->Double_t { return a->GetEffectiveEntries(); });

    DEBUG_MSG("Adding wrapper for TF1 * TH1::GetFunction(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TF1 * TH1::GetFunction(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:282:21
    t.method("GetFunction", [](TH1 const& a, const char * arg0)->TF1 * { return a.GetFunction(arg0); });
    t.method("GetFunction", [](TH1 const* a, const char * arg0)->TF1 * { return a->GetFunction(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetDimension() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetDimension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:283:21
    t.method("GetDimension", [](TH1 const& a)->Int_t { return a.GetDimension(); });
    t.method("GetDimension", [](TH1 const* a)->Int_t { return a->GetDimension(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetKurtosis(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetKurtosis(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:284:21
    t.method("GetKurtosis", [](TH1 const& a)->Double_t { return a.GetKurtosis(); });
    t.method("GetKurtosis", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetKurtosis(arg0); });
    t.method("GetKurtosis", [](TH1 const* a)->Double_t { return a->GetKurtosis(); });
    t.method("GetKurtosis", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetKurtosis(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::GetLowEdge(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetLowEdge(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:285:21
    t.method("GetLowEdge", [](TH1 const& a, Double_t * arg0)->void { a.GetLowEdge(arg0); });
    t.method("GetLowEdge", [](TH1 const* a, Double_t * arg0)->void { a->GetLowEdge(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:286:21
    t.method("GetMaximum", [](TH1 const& a)->Double_t { return a.GetMaximum(); });
    t.method("GetMaximum", [](TH1 const& a, Double_t arg0)->Double_t { return a.GetMaximum(arg0); });
    t.method("GetMaximum", [](TH1 const* a)->Double_t { return a->GetMaximum(); });
    t.method("GetMaximum", [](TH1 const* a, Double_t arg0)->Double_t { return a->GetMaximum(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMaximumBin() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMaximumBin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:287:21
    t.method("GetMaximumBin", [](TH1 const& a)->Int_t { return a.GetMaximumBin(); });
    t.method("GetMaximumBin", [](TH1 const* a)->Int_t { return a->GetMaximumBin(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMaximumBin(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMaximumBin(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:288:21
    t.method("GetMaximumBin", [](TH1 const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->Int_t { return a.GetMaximumBin(arg0, arg1, arg2); });
    t.method("GetMaximumBin", [](TH1 const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->Int_t { return a->GetMaximumBin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMaximumStored() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMaximumStored()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:289:21
    t.method("GetMaximumStored", [](TH1 const& a)->Double_t { return a.GetMaximumStored(); });
    t.method("GetMaximumStored", [](TH1 const* a)->Double_t { return a->GetMaximumStored(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:290:21
    t.method("GetMinimum", [](TH1 const& a)->Double_t { return a.GetMinimum(); });
    t.method("GetMinimum", [](TH1 const& a, Double_t arg0)->Double_t { return a.GetMinimum(arg0); });
    t.method("GetMinimum", [](TH1 const* a)->Double_t { return a->GetMinimum(); });
    t.method("GetMinimum", [](TH1 const* a, Double_t arg0)->Double_t { return a->GetMinimum(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMinimumBin() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMinimumBin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:291:21
    t.method("GetMinimumBin", [](TH1 const& a)->Int_t { return a.GetMinimumBin(); });
    t.method("GetMinimumBin", [](TH1 const* a)->Int_t { return a->GetMinimumBin(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetMinimumBin(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetMinimumBin(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:292:21
    t.method("GetMinimumBin", [](TH1 const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->Int_t { return a.GetMinimumBin(arg0, arg1, arg2); });
    t.method("GetMinimumBin", [](TH1 const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->Int_t { return a->GetMinimumBin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMinimumStored() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMinimumStored()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:293:21
    t.method("GetMinimumStored", [](TH1 const& a)->Double_t { return a.GetMinimumStored(); });
    t.method("GetMinimumStored", [](TH1 const* a)->Double_t { return a->GetMinimumStored(); });

    DEBUG_MSG("Adding wrapper for void TH1::GetMinimumAndMaximum(Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetMinimumAndMaximum(Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:294:21
    t.method("GetMinimumAndMaximum", [](TH1 const& a, Double_t & arg0, Double_t & arg1)->void { a.GetMinimumAndMaximum(arg0, arg1); });
    t.method("GetMinimumAndMaximum", [](TH1 const* a, Double_t & arg0, Double_t & arg1)->void { a->GetMinimumAndMaximum(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMean(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMean(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:295:21
    t.method("GetMean", [](TH1 const& a)->Double_t { return a.GetMean(); });
    t.method("GetMean", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetMean(arg0); });
    t.method("GetMean", [](TH1 const* a)->Double_t { return a->GetMean(); });
    t.method("GetMean", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetMean(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetMeanError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetMeanError(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:296:21
    t.method("GetMeanError", [](TH1 const& a)->Double_t { return a.GetMeanError(); });
    t.method("GetMeanError", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetMeanError(arg0); });
    t.method("GetMeanError", [](TH1 const* a)->Double_t { return a->GetMeanError(); });
    t.method("GetMeanError", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetMeanError(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:297:21
    t.method("GetNbinsX", [](TH1 const& a)->Int_t { return a.GetNbinsX(); });
    t.method("GetNbinsX", [](TH1 const* a)->Int_t { return a->GetNbinsX(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:298:21
    t.method("GetNbinsY", [](TH1 const& a)->Int_t { return a.GetNbinsY(); });
    t.method("GetNbinsY", [](TH1 const* a)->Int_t { return a->GetNbinsY(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNbinsZ() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNbinsZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:299:21
    t.method("GetNbinsZ", [](TH1 const& a)->Int_t { return a.GetNbinsZ(); });
    t.method("GetNbinsZ", [](TH1 const* a)->Int_t { return a->GetNbinsZ(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetNcells() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetNcells()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:300:21
    t.method("GetNcells", [](TH1 const& a)->Int_t { return a.GetNcells(); });
    t.method("GetNcells", [](TH1 const* a)->Int_t { return a->GetNcells(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetNormFactor() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetNormFactor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:301:21
    t.method("GetNormFactor", [](TH1 const& a)->Double_t { return a.GetNormFactor(); });
    t.method("GetNormFactor", [](TH1 const* a)->Double_t { return a->GetNormFactor(); });

    DEBUG_MSG("Adding wrapper for char * TH1::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TH1::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:302:21
    t.method("GetObjectInfo", [](TH1 const& a, Int_t arg0, Int_t arg1)->char * { return a.GetObjectInfo(arg0, arg1); });
    t.method("GetObjectInfo", [](TH1 const* a, Int_t arg0, Int_t arg1)->char * { return a->GetObjectInfo(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Option_t * TH1::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TH1::GetOption()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:303:21
    t.method("GetOption", [](TH1 const& a)->Option_t * { return a.GetOption(); });
    t.method("GetOption", [](TH1 const* a)->Option_t * { return a->GetOption(); });

    DEBUG_MSG("Adding wrapper for TVirtualHistPainter * TH1::GetPainter(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualHistPainter * TH1::GetPainter(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:305:25
    t.method("GetPainter", [](TH1& a)->TVirtualHistPainter * { return a.GetPainter(); });
    t.method("GetPainter", [](TH1& a, Option_t * arg0)->TVirtualHistPainter * { return a.GetPainter(arg0); });
    t.method("GetPainter", [](TH1* a)->TVirtualHistPainter * { return a->GetPainter(); });
    t.method("GetPainter", [](TH1* a, Option_t * arg0)->TVirtualHistPainter * { return a->GetPainter(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetQuantiles(Int_t, Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetQuantiles(Int_t, Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:307:21
    t.method("GetQuantiles", [](TH1& a, Int_t arg0, Double_t * arg1)->Int_t { return a.GetQuantiles(arg0, arg1); });
    t.method("GetQuantiles", [](TH1& a, Int_t arg0, Double_t * arg1, const Double_t * arg2)->Int_t { return a.GetQuantiles(arg0, arg1, arg2); });
    t.method("GetQuantiles", [](TH1* a, Int_t arg0, Double_t * arg1)->Int_t { return a->GetQuantiles(arg0, arg1); });
    t.method("GetQuantiles", [](TH1* a, Int_t arg0, Double_t * arg1, const Double_t * arg2)->Int_t { return a->GetQuantiles(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRandom(TRandom *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRandom(TRandom *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:308:21
    t.method("GetRandom", [](TH1 const& a)->Double_t { return a.GetRandom(); });
    t.method("GetRandom", [](TH1 const& a, TRandom * arg0)->Double_t { return a.GetRandom(arg0); });
    t.method("GetRandom", [](TH1 const* a)->Double_t { return a->GetRandom(); });
    t.method("GetRandom", [](TH1 const* a, TRandom * arg0)->Double_t { return a->GetRandom(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::GetStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::GetStats(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:309:21
    t.method("GetStats", [](TH1 const& a, Double_t * arg0)->void { a.GetStats(arg0); });
    t.method("GetStats", [](TH1 const* a, Double_t * arg0)->void { a->GetStats(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetStdDev(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetStdDev(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:310:21
    t.method("GetStdDev", [](TH1 const& a)->Double_t { return a.GetStdDev(); });
    t.method("GetStdDev", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetStdDev(arg0); });
    t.method("GetStdDev", [](TH1 const* a)->Double_t { return a->GetStdDev(); });
    t.method("GetStdDev", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetStdDev(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetStdDevError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetStdDevError(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:311:21
    t.method("GetStdDevError", [](TH1 const& a)->Double_t { return a.GetStdDevError(); });
    t.method("GetStdDevError", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetStdDevError(arg0); });
    t.method("GetStdDevError", [](TH1 const* a)->Double_t { return a->GetStdDevError(); });
    t.method("GetStdDevError", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetStdDevError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetSumOfWeights() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetSumOfWeights()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:312:21
    t.method("GetSumOfWeights", [](TH1 const& a)->Double_t { return a.GetSumOfWeights(); });
    t.method("GetSumOfWeights", [](TH1 const* a)->Double_t { return a->GetSumOfWeights(); });

    DEBUG_MSG("Adding wrapper for TArrayD * TH1::GetSumw2() (" __HERE__ ")");
    // signature to use in the veto list: TArrayD * TH1::GetSumw2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:313:21
    t.method("GetSumw2", [](TH1& a)->TArrayD * { return a.GetSumw2(); });
    t.method("GetSumw2", [](TH1* a)->TArrayD * { return a->GetSumw2(); });

    DEBUG_MSG("Adding wrapper for const TArrayD * TH1::GetSumw2() (" __HERE__ ")");
    // signature to use in the veto list: const TArrayD * TH1::GetSumw2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:314:27
    t.method("GetSumw2", [](TH1 const& a)->const TArrayD * { return a.GetSumw2(); });
    t.method("GetSumw2", [](TH1 const* a)->const TArrayD * { return a->GetSumw2(); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::GetSumw2N() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::GetSumw2N()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:315:21
    t.method("GetSumw2N", [](TH1 const& a)->Int_t { return a.GetSumw2N(); });
    t.method("GetSumw2N", [](TH1 const* a)->Int_t { return a->GetSumw2N(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRMS(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRMS(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:319:21
    t.method("GetRMS", [](TH1 const& a)->Double_t { return a.GetRMS(); });
    t.method("GetRMS", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetRMS(arg0); });
    t.method("GetRMS", [](TH1 const* a)->Double_t { return a->GetRMS(); });
    t.method("GetRMS", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetRMS(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetRMSError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetRMSError(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:320:21
    t.method("GetRMSError", [](TH1 const& a)->Double_t { return a.GetRMSError(); });
    t.method("GetRMSError", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetRMSError(arg0); });
    t.method("GetRMSError", [](TH1 const* a)->Double_t { return a->GetRMSError(); });
    t.method("GetRMSError", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetRMSError(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetSkewness(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetSkewness(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:322:21
    t.method("GetSkewness", [](TH1 const& a)->Double_t { return a.GetSkewness(); });
    t.method("GetSkewness", [](TH1 const& a, Int_t arg0)->Double_t { return a.GetSkewness(arg0); });
    t.method("GetSkewness", [](TH1 const* a)->Double_t { return a->GetSkewness(); });
    t.method("GetSkewness", [](TH1 const* a, Int_t arg0)->Double_t { return a->GetSkewness(arg0); });

    DEBUG_MSG("Adding wrapper for TH1::EStatOverflows TH1::GetStatOverflows() (" __HERE__ ")");
    // signature to use in the veto list: TH1::EStatOverflows TH1::GetStatOverflows()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:323:27
    t.method("GetStatOverflows", [](TH1 const& a)->TH1::EStatOverflows { return a.GetStatOverflows(); });
    t.method("GetStatOverflows", [](TH1 const* a)->TH1::EStatOverflows { return a->GetStatOverflows(); });

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:324:21
    t.method("GetXaxis", [](TH1& a)->TAxis * { return a.GetXaxis(); });
    t.method("GetXaxis", [](TH1* a)->TAxis * { return a->GetXaxis(); });

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:325:21
    t.method("GetYaxis", [](TH1& a)->TAxis * { return a.GetYaxis(); });
    t.method("GetYaxis", [](TH1* a)->TAxis * { return a->GetYaxis(); });

    DEBUG_MSG("Adding wrapper for TAxis * TH1::GetZaxis() (" __HERE__ ")");
    // signature to use in the veto list: TAxis * TH1::GetZaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:326:21
    t.method("GetZaxis", [](TH1& a)->TAxis * { return a.GetZaxis(); });
    t.method("GetZaxis", [](TH1* a)->TAxis * { return a->GetZaxis(); });

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetXaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetXaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:327:21
    t.method("GetXaxis", [](TH1 const& a)->const TAxis * { return a.GetXaxis(); });
    t.method("GetXaxis", [](TH1 const* a)->const TAxis * { return a->GetXaxis(); });

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetYaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetYaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:328:21
    t.method("GetYaxis", [](TH1 const& a)->const TAxis * { return a.GetYaxis(); });
    t.method("GetYaxis", [](TH1 const* a)->const TAxis * { return a->GetYaxis(); });

    DEBUG_MSG("Adding wrapper for const TAxis * TH1::GetZaxis() (" __HERE__ ")");
    // signature to use in the veto list: const TAxis * TH1::GetZaxis()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:329:21
    t.method("GetZaxis", [](TH1 const& a)->const TAxis * { return a.GetZaxis(); });
    t.method("GetZaxis", [](TH1 const* a)->const TAxis * { return a->GetZaxis(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Integral(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Integral(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:330:21
    t.method("Integral", [](TH1 const& a)->Double_t { return a.Integral(); });
    t.method("Integral", [](TH1 const& a, Option_t * arg0)->Double_t { return a.Integral(arg0); });
    t.method("Integral", [](TH1 const* a)->Double_t { return a->Integral(); });
    t.method("Integral", [](TH1 const* a, Option_t * arg0)->Double_t { return a->Integral(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Integral(Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Integral(Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:331:21
    t.method("Integral", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.Integral(arg0, arg1); });
    t.method("Integral", [](TH1 const& a, Int_t arg0, Int_t arg1, Option_t * arg2)->Double_t { return a.Integral(arg0, arg1, arg2); });
    t.method("Integral", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->Integral(arg0, arg1); });
    t.method("Integral", [](TH1 const* a, Int_t arg0, Int_t arg1, Option_t * arg2)->Double_t { return a->Integral(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::IntegralAndError(Int_t, Int_t, Double_t &, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::IntegralAndError(Int_t, Int_t, Double_t &, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:332:21
    t.method("IntegralAndError", [](TH1 const& a, Int_t arg0, Int_t arg1, Double_t & arg2)->Double_t { return a.IntegralAndError(arg0, arg1, arg2); });
    t.method("IntegralAndError", [](TH1 const& a, Int_t arg0, Int_t arg1, Double_t & arg2, Option_t * arg3)->Double_t { return a.IntegralAndError(arg0, arg1, arg2, arg3); });
    t.method("IntegralAndError", [](TH1 const* a, Int_t arg0, Int_t arg1, Double_t & arg2)->Double_t { return a->IntegralAndError(arg0, arg1, arg2); });
    t.method("IntegralAndError", [](TH1 const* a, Int_t arg0, Int_t arg1, Double_t & arg2, Option_t * arg3)->Double_t { return a->IntegralAndError(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:333:21
    t.method("Interpolate", [](TH1 const& a, Double_t arg0)->Double_t { return a.Interpolate(arg0); });
    t.method("Interpolate", [](TH1 const* a, Double_t arg0)->Double_t { return a->Interpolate(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:334:21
    t.method("Interpolate", [](TH1 const& a, Double_t arg0, Double_t arg1)->Double_t { return a.Interpolate(arg0, arg1); });
    t.method("Interpolate", [](TH1 const* a, Double_t arg0, Double_t arg1)->Double_t { return a->Interpolate(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::Interpolate(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::Interpolate(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:335:21
    t.method("Interpolate", [](TH1 const& a, Double_t arg0, Double_t arg1, Double_t arg2)->Double_t { return a.Interpolate(arg0, arg1, arg2); });
    t.method("Interpolate", [](TH1 const* a, Double_t arg0, Double_t arg1, Double_t arg2)->Double_t { return a->Interpolate(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsBinOverflow(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsBinOverflow(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:336:21
    t.method("IsBinOverflow", [](TH1 const& a, Int_t arg0)->Bool_t { return a.IsBinOverflow(arg0); });
    t.method("IsBinOverflow", [](TH1 const& a, Int_t arg0, Int_t arg1)->Bool_t { return a.IsBinOverflow(arg0, arg1); });
    t.method("IsBinOverflow", [](TH1 const* a, Int_t arg0)->Bool_t { return a->IsBinOverflow(arg0); });
    t.method("IsBinOverflow", [](TH1 const* a, Int_t arg0, Int_t arg1)->Bool_t { return a->IsBinOverflow(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsBinUnderflow(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsBinUnderflow(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:337:21
    t.method("IsBinUnderflow", [](TH1 const& a, Int_t arg0)->Bool_t { return a.IsBinUnderflow(arg0); });
    t.method("IsBinUnderflow", [](TH1 const& a, Int_t arg0, Int_t arg1)->Bool_t { return a.IsBinUnderflow(arg0, arg1); });
    t.method("IsBinUnderflow", [](TH1 const* a, Int_t arg0)->Bool_t { return a->IsBinUnderflow(arg0); });
    t.method("IsBinUnderflow", [](TH1 const* a, Int_t arg0, Int_t arg1)->Bool_t { return a->IsBinUnderflow(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::IsHighlight() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::IsHighlight()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:338:21
    t.method("IsHighlight", [](TH1 const& a)->Bool_t { return a.IsHighlight(); });
    t.method("IsHighlight", [](TH1 const* a)->Bool_t { return a->IsHighlight(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::AndersonDarlingTest(const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::AndersonDarlingTest(const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:339:21
    t.method("AndersonDarlingTest", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.AndersonDarlingTest(arg0); });
    t.method("AndersonDarlingTest", [](TH1 const& a, const TH1 * arg0, Option_t * arg1)->Double_t { return a.AndersonDarlingTest(arg0, arg1); });
    t.method("AndersonDarlingTest", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->AndersonDarlingTest(arg0); });
    t.method("AndersonDarlingTest", [](TH1 const* a, const TH1 * arg0, Option_t * arg1)->Double_t { return a->AndersonDarlingTest(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::AndersonDarlingTest(const TH1 *, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::AndersonDarlingTest(const TH1 *, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:340:21
    t.method("AndersonDarlingTest", [](TH1 const& a, const TH1 * arg0, Double_t & arg1)->Double_t { return a.AndersonDarlingTest(arg0, arg1); });
    t.method("AndersonDarlingTest", [](TH1 const* a, const TH1 * arg0, Double_t & arg1)->Double_t { return a->AndersonDarlingTest(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::KolmogorovTest(const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::KolmogorovTest(const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:341:21
    t.method("KolmogorovTest", [](TH1 const& a, const TH1 * arg0)->Double_t { return a.KolmogorovTest(arg0); });
    t.method("KolmogorovTest", [](TH1 const& a, const TH1 * arg0, Option_t * arg1)->Double_t { return a.KolmogorovTest(arg0, arg1); });
    t.method("KolmogorovTest", [](TH1 const* a, const TH1 * arg0)->Double_t { return a->KolmogorovTest(arg0); });
    t.method("KolmogorovTest", [](TH1 const* a, const TH1 * arg0, Option_t * arg1)->Double_t { return a->KolmogorovTest(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsDeflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsDeflate(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:342:21
    t.method("LabelsDeflate", [](TH1& a)->void { a.LabelsDeflate(); });
    t.method("LabelsDeflate", [](TH1& a, Option_t * arg0)->void { a.LabelsDeflate(arg0); });
    t.method("LabelsDeflate", [](TH1* a)->void { a->LabelsDeflate(); });
    t.method("LabelsDeflate", [](TH1* a, Option_t * arg0)->void { a->LabelsDeflate(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsInflate(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsInflate(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:343:21
    t.method("LabelsInflate", [](TH1& a)->void { a.LabelsInflate(); });
    t.method("LabelsInflate", [](TH1& a, Option_t * arg0)->void { a.LabelsInflate(arg0); });
    t.method("LabelsInflate", [](TH1* a)->void { a->LabelsInflate(); });
    t.method("LabelsInflate", [](TH1* a, Option_t * arg0)->void { a->LabelsInflate(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::LabelsOption(Option_t *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::LabelsOption(Option_t *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:344:21
    t.method("LabelsOption", [](TH1& a)->void { a.LabelsOption(); });
    t.method("LabelsOption", [](TH1& a, Option_t * arg0)->void { a.LabelsOption(arg0); });
    t.method("LabelsOption", [](TH1& a, Option_t * arg0, Option_t * arg1)->void { a.LabelsOption(arg0, arg1); });
    t.method("LabelsOption", [](TH1* a)->void { a->LabelsOption(); });
    t.method("LabelsOption", [](TH1* a, Option_t * arg0)->void { a->LabelsOption(arg0); });
    t.method("LabelsOption", [](TH1* a, Option_t * arg0, Option_t * arg1)->void { a->LabelsOption(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TH1::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TH1::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:345:21
    t.method("Merge", [](TH1& a, TCollection * arg0)->Long64_t { return a.Merge(arg0); });
    t.method("Merge", [](TH1* a, TCollection * arg0)->Long64_t { return a->Merge(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TH1::Merge(TCollection *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TH1::Merge(TCollection *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:346:21
    t.method("Merge", [](TH1& a, TCollection * arg0, Option_t * arg1)->Long64_t { return a.Merge(arg0, arg1); });
    t.method("Merge", [](TH1* a, TCollection * arg0, Option_t * arg1)->Long64_t { return a->Merge(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(TF1 *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(TF1 *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:347:21
    t.method("Multiply", [](TH1& a, TF1 * arg0)->Bool_t { return a.Multiply(arg0); });
    t.method("Multiply", [](TH1& a, TF1 * arg0, Double_t arg1)->Bool_t { return a.Multiply(arg0, arg1); });
    t.method("Multiply", [](TH1* a, TF1 * arg0)->Bool_t { return a->Multiply(arg0); });
    t.method("Multiply", [](TH1* a, TF1 * arg0, Double_t arg1)->Bool_t { return a->Multiply(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(const TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(const TH1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:348:21
    t.method("Multiply", [](TH1& a, const TH1 * arg0)->Bool_t { return a.Multiply(arg0); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0)->Bool_t { return a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TH1::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TH1::Multiply(const TH1 *, const TH1 *, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:349:21
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a.Multiply(arg0, arg1); });
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a.Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a.Multiply(arg0, arg1, arg2, arg3); });
    t.method("Multiply", [](TH1& a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->Bool_t { return a.Multiply(arg0, arg1, arg2, arg3, arg4); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1)->Bool_t { return a->Multiply(arg0, arg1); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2)->Bool_t { return a->Multiply(arg0, arg1, arg2); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3)->Bool_t { return a->Multiply(arg0, arg1, arg2, arg3); });
    t.method("Multiply", [](TH1* a, const TH1 * arg0, const TH1 * arg1, Double_t arg2, Double_t arg3, Option_t * arg4)->Bool_t { return a->Multiply(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TH1::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:350:21
    t.method("Paint", [](TH1& a)->void { a.Paint(); });
    t.method("Paint", [](TH1& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TH1* a)->void { a->Paint(); });
    t.method("Paint", [](TH1* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:351:21
    t.method("Print", [](TH1 const& a)->void { a.Print(); });
    t.method("Print", [](TH1 const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TH1 const* a)->void { a->Print(); });
    t.method("Print", [](TH1 const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::PutStats(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::PutStats(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:352:21
    t.method("PutStats", [](TH1& a, Double_t * arg0)->void { a.PutStats(arg0); });
    t.method("PutStats", [](TH1* a, Double_t * arg0)->void { a->PutStats(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::Rebin(Int_t, const char *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::Rebin(Int_t, const char *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:353:21
    t.method("Rebin", [](TH1& a)->TH1 * { return a.Rebin(); });
    t.method("Rebin", [](TH1& a, Int_t arg0)->TH1 * { return a.Rebin(arg0); });
    t.method("Rebin", [](TH1& a, Int_t arg0, const char * arg1)->TH1 * { return a.Rebin(arg0, arg1); });
    t.method("Rebin", [](TH1& a, Int_t arg0, const char * arg1, const Double_t * arg2)->TH1 * { return a.Rebin(arg0, arg1, arg2); });
    t.method("Rebin", [](TH1* a)->TH1 * { return a->Rebin(); });
    t.method("Rebin", [](TH1* a, Int_t arg0)->TH1 * { return a->Rebin(arg0); });
    t.method("Rebin", [](TH1* a, Int_t arg0, const char * arg1)->TH1 * { return a->Rebin(arg0, arg1); });
    t.method("Rebin", [](TH1* a, Int_t arg0, const char * arg1, const Double_t * arg2)->TH1 * { return a->Rebin(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::RebinX(Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::RebinX(Int_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:354:21
    t.method("RebinX", [](TH1& a)->TH1 * { return a.RebinX(); });
    t.method("RebinX", [](TH1& a, Int_t arg0)->TH1 * { return a.RebinX(arg0); });
    t.method("RebinX", [](TH1& a, Int_t arg0, const char * arg1)->TH1 * { return a.RebinX(arg0, arg1); });
    t.method("RebinX", [](TH1* a)->TH1 * { return a->RebinX(); });
    t.method("RebinX", [](TH1* a, Int_t arg0)->TH1 * { return a->RebinX(arg0); });
    t.method("RebinX", [](TH1* a, Int_t arg0, const char * arg1)->TH1 * { return a->RebinX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::Rebuild(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Rebuild(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:355:21
    t.method("Rebuild", [](TH1& a)->void { a.Rebuild(); });
    t.method("Rebuild", [](TH1& a, Option_t * arg0)->void { a.Rebuild(arg0); });
    t.method("Rebuild", [](TH1* a)->void { a->Rebuild(); });
    t.method("Rebuild", [](TH1* a, Option_t * arg0)->void { a->Rebuild(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:356:21
    t.method("RecursiveRemove", [](TH1& a, TObject * arg0)->void { a.RecursiveRemove(arg0); });
    t.method("RecursiveRemove", [](TH1* a, TObject * arg0)->void { a->RecursiveRemove(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Reset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:357:21
    t.method("Reset", [](TH1& a)->void { a.Reset(); });
    t.method("Reset", [](TH1& a, Option_t * arg0)->void { a.Reset(arg0); });
    t.method("Reset", [](TH1* a)->void { a->Reset(); });
    t.method("Reset", [](TH1* a, Option_t * arg0)->void { a->Reset(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::ResetStats() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::ResetStats()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:358:21
    t.method("ResetStats", [](TH1& a)->void { a.ResetStats(); });
    t.method("ResetStats", [](TH1* a)->void { a->ResetStats(); });

    DEBUG_MSG("Adding wrapper for void TH1::SaveAs(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SaveAs(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:359:21
    t.method("SaveAs", [](TH1 const& a)->void { a.SaveAs(); });
    t.method("SaveAs", [](TH1 const& a, const char * arg0)->void { a.SaveAs(arg0); });
    t.method("SaveAs", [](TH1 const& a, const char * arg0, Option_t * arg1)->void { a.SaveAs(arg0, arg1); });
    t.method("SaveAs", [](TH1 const* a)->void { a->SaveAs(); });
    t.method("SaveAs", [](TH1 const* a, const char * arg0)->void { a->SaveAs(arg0); });
    t.method("SaveAs", [](TH1 const* a, const char * arg0, Option_t * arg1)->void { a->SaveAs(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:361:21
    t.method("Scale", [](TH1& a)->void { a.Scale(); });
    t.method("Scale", [](TH1& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TH1& a, Double_t arg0, Option_t * arg1)->void { a.Scale(arg0, arg1); });
    t.method("Scale", [](TH1* a)->void { a->Scale(); });
    t.method("Scale", [](TH1* a, Double_t arg0)->void { a->Scale(arg0); });
    t.method("Scale", [](TH1* a, Double_t arg0, Option_t * arg1)->void { a->Scale(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetAxisColor(Color_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetAxisColor(Color_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:362:21
    t.method("SetAxisColor", [](TH1& a)->void { a.SetAxisColor(); });
    t.method("SetAxisColor", [](TH1& a, Color_t arg0)->void { a.SetAxisColor(arg0); });
    t.method("SetAxisColor", [](TH1& a, Color_t arg0, Option_t * arg1)->void { a.SetAxisColor(arg0, arg1); });
    t.method("SetAxisColor", [](TH1* a)->void { a->SetAxisColor(); });
    t.method("SetAxisColor", [](TH1* a, Color_t arg0)->void { a->SetAxisColor(arg0); });
    t.method("SetAxisColor", [](TH1* a, Color_t arg0, Option_t * arg1)->void { a->SetAxisColor(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetAxisRange(Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetAxisRange(Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:363:21
    t.method("SetAxisRange", [](TH1& a, Double_t arg0, Double_t arg1)->void { a.SetAxisRange(arg0, arg1); });
    t.method("SetAxisRange", [](TH1& a, Double_t arg0, Double_t arg1, Option_t * arg2)->void { a.SetAxisRange(arg0, arg1, arg2); });
    t.method("SetAxisRange", [](TH1* a, Double_t arg0, Double_t arg1)->void { a->SetAxisRange(arg0, arg1); });
    t.method("SetAxisRange", [](TH1* a, Double_t arg0, Double_t arg1, Option_t * arg2)->void { a->SetAxisRange(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBarOffset(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBarOffset(Float_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:364:21
    t.method("SetBarOffset", [](TH1& a)->void { a.SetBarOffset(); });
    t.method("SetBarOffset", [](TH1& a, Float_t arg0)->void { a.SetBarOffset(arg0); });
    t.method("SetBarOffset", [](TH1* a)->void { a->SetBarOffset(); });
    t.method("SetBarOffset", [](TH1* a, Float_t arg0)->void { a->SetBarOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBarWidth(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBarWidth(Float_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:365:21
    t.method("SetBarWidth", [](TH1& a)->void { a.SetBarWidth(); });
    t.method("SetBarWidth", [](TH1& a, Float_t arg0)->void { a.SetBarWidth(arg0); });
    t.method("SetBarWidth", [](TH1* a)->void { a->SetBarWidth(); });
    t.method("SetBarWidth", [](TH1* a, Float_t arg0)->void { a->SetBarWidth(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:366:21
    t.method("SetBinContent", [](TH1& a, Int_t arg0, Double_t arg1)->void { a.SetBinContent(arg0, arg1); });
    t.method("SetBinContent", [](TH1* a, Int_t arg0, Double_t arg1)->void { a->SetBinContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:367:21
    t.method("SetBinContent", [](TH1& a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a.SetBinContent(arg0, arg1, arg2); });
    t.method("SetBinContent", [](TH1* a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a->SetBinContent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinContent(Int_t, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinContent(Int_t, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:368:21
    t.method("SetBinContent", [](TH1& a, Int_t arg0, Int_t arg1, Int_t arg2, Double_t arg3)->void { a.SetBinContent(arg0, arg1, arg2, arg3); });
    t.method("SetBinContent", [](TH1* a, Int_t arg0, Int_t arg1, Int_t arg2, Double_t arg3)->void { a->SetBinContent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:369:21
    t.method("SetBinError", [](TH1& a, Int_t arg0, Double_t arg1)->void { a.SetBinError(arg0, arg1); });
    t.method("SetBinError", [](TH1* a, Int_t arg0, Double_t arg1)->void { a->SetBinError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:370:21
    t.method("SetBinError", [](TH1& a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a.SetBinError(arg0, arg1, arg2); });
    t.method("SetBinError", [](TH1* a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a->SetBinError(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinError(Int_t, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinError(Int_t, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:371:21
    t.method("SetBinError", [](TH1& a, Int_t arg0, Int_t arg1, Int_t arg2, Double_t arg3)->void { a.SetBinError(arg0, arg1, arg2, arg3); });
    t.method("SetBinError", [](TH1* a, Int_t arg0, Int_t arg1, Int_t arg2, Double_t arg3)->void { a->SetBinError(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:372:21
    t.method("SetBins", [](TH1& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.SetBins(arg0, arg1, arg2); });
    t.method("SetBins", [](TH1* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->SetBins(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:373:21
    t.method("SetBins", [](TH1& a, Int_t arg0, const Double_t * arg1)->void { a.SetBins(arg0, arg1); });
    t.method("SetBins", [](TH1* a, Int_t arg0, const Double_t * arg1)->void { a->SetBins(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:374:21
    t.method("SetBins", [](TH1& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->void { a.SetBins(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetBins", [](TH1* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->void { a->SetBins(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:375:21
    t.method("SetBins", [](TH1& a, Int_t arg0, const Double_t * arg1, Int_t arg2, const Double_t * arg3)->void { a.SetBins(arg0, arg1, arg2, arg3); });
    t.method("SetBins", [](TH1* a, Int_t arg0, const Double_t * arg1, Int_t arg2, const Double_t * arg3)->void { a->SetBins(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:376:21
    t.method("SetBins", [](TH1& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Double_t arg7, Double_t arg8)->void { a.SetBins(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("SetBins", [](TH1* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Double_t arg7, Double_t arg8)->void { a->SetBins(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:378:21
    t.method("SetBins", [](TH1& a, Int_t arg0, const Double_t * arg1, Int_t arg2, const Double_t * arg3, Int_t arg4, const Double_t * arg5)->void { a.SetBins(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetBins", [](TH1* a, Int_t arg0, const Double_t * arg1, Int_t arg2, const Double_t * arg3, Int_t arg4, const Double_t * arg5)->void { a->SetBins(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:380:21
    t.method("SetBinsLength", [](TH1& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1& a, Int_t arg0)->void { a.SetBinsLength(arg0); });
    t.method("SetBinsLength", [](TH1* a)->void { a->SetBinsLength(); });
    t.method("SetBinsLength", [](TH1* a, Int_t arg0)->void { a->SetBinsLength(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBinErrorOption(TH1::EBinErrorOpt) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBinErrorOption(TH1::EBinErrorOpt)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:381:21
    t.method("SetBinErrorOption", [](TH1& a, TH1::EBinErrorOpt arg0)->void { a.SetBinErrorOption(arg0); });
    t.method("SetBinErrorOption", [](TH1* a, TH1::EBinErrorOpt arg0)->void { a->SetBinErrorOption(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetBuffer(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetBuffer(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:382:21
    t.method("SetBuffer", [](TH1& a, Int_t arg0)->void { a.SetBuffer(arg0); });
    t.method("SetBuffer", [](TH1& a, Int_t arg0, Option_t * arg1)->void { a.SetBuffer(arg0, arg1); });
    t.method("SetBuffer", [](TH1* a, Int_t arg0)->void { a->SetBuffer(arg0); });
    t.method("SetBuffer", [](TH1* a, Int_t arg0, Option_t * arg1)->void { a->SetBuffer(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for UInt_t TH1::SetCanExtend(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TH1::SetCanExtend(UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:383:21
    t.method("SetCanExtend", [](TH1& a, UInt_t arg0)->UInt_t { return a.SetCanExtend(arg0); });
    t.method("SetCanExtend", [](TH1* a, UInt_t arg0)->UInt_t { return a->SetCanExtend(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetContent(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContent(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:384:21
    t.method("SetContent", [](TH1& a, const Double_t * arg0)->void { a.SetContent(arg0); });
    t.method("SetContent", [](TH1* a, const Double_t * arg0)->void { a->SetContent(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetContour(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContour(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:385:21
    t.method("SetContour", [](TH1& a, Int_t arg0)->void { a.SetContour(arg0); });
    t.method("SetContour", [](TH1& a, Int_t arg0, const Double_t * arg1)->void { a.SetContour(arg0, arg1); });
    t.method("SetContour", [](TH1* a, Int_t arg0)->void { a->SetContour(arg0); });
    t.method("SetContour", [](TH1* a, Int_t arg0, const Double_t * arg1)->void { a->SetContour(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetContourLevel(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetContourLevel(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:386:21
    t.method("SetContourLevel", [](TH1& a, Int_t arg0, Double_t arg1)->void { a.SetContourLevel(arg0, arg1); });
    t.method("SetContourLevel", [](TH1* a, Int_t arg0, Double_t arg1)->void { a->SetContourLevel(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetDefaultBufferSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDefaultBufferSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:387:21
    module_.method("TH1!SetDefaultBufferSize", []()->void { TH1::SetDefaultBufferSize(); });
    module_.method("TH1!SetDefaultBufferSize", [](Int_t arg0)->void { TH1::SetDefaultBufferSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetDefaultSumw2(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDefaultSumw2(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:388:21
    module_.method("TH1!SetDefaultSumw2", []()->void { TH1::SetDefaultSumw2(); });
    module_.method("TH1!SetDefaultSumw2", [](Bool_t arg0)->void { TH1::SetDefaultSumw2(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:389:21
    t.method("SetDirectory", [](TH1& a, TDirectory * arg0)->void { a.SetDirectory(arg0); });
    t.method("SetDirectory", [](TH1* a, TDirectory * arg0)->void { a->SetDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetEntries(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetEntries(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:390:21
    t.method("SetEntries", [](TH1& a, Double_t arg0)->void { a.SetEntries(arg0); });
    t.method("SetEntries", [](TH1* a, Double_t arg0)->void { a->SetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetError(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetError(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:391:21
    t.method("SetError", [](TH1& a, const Double_t * arg0)->void { a.SetError(arg0); });
    t.method("SetError", [](TH1* a, const Double_t * arg0)->void { a->SetError(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetHighlight(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetHighlight(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:392:21
    t.method("SetHighlight", [](TH1& a)->void { a.SetHighlight(); });
    t.method("SetHighlight", [](TH1& a, Bool_t arg0)->void { a.SetHighlight(arg0); });
    t.method("SetHighlight", [](TH1* a)->void { a->SetHighlight(); });
    t.method("SetHighlight", [](TH1* a, Bool_t arg0)->void { a->SetHighlight(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelColor(Color_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelColor(Color_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:393:21
    t.method("SetLabelColor", [](TH1& a)->void { a.SetLabelColor(); });
    t.method("SetLabelColor", [](TH1& a, Color_t arg0)->void { a.SetLabelColor(arg0); });
    t.method("SetLabelColor", [](TH1& a, Color_t arg0, Option_t * arg1)->void { a.SetLabelColor(arg0, arg1); });
    t.method("SetLabelColor", [](TH1* a)->void { a->SetLabelColor(); });
    t.method("SetLabelColor", [](TH1* a, Color_t arg0)->void { a->SetLabelColor(arg0); });
    t.method("SetLabelColor", [](TH1* a, Color_t arg0, Option_t * arg1)->void { a->SetLabelColor(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelFont(Style_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelFont(Style_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:394:21
    t.method("SetLabelFont", [](TH1& a)->void { a.SetLabelFont(); });
    t.method("SetLabelFont", [](TH1& a, Style_t arg0)->void { a.SetLabelFont(arg0); });
    t.method("SetLabelFont", [](TH1& a, Style_t arg0, Option_t * arg1)->void { a.SetLabelFont(arg0, arg1); });
    t.method("SetLabelFont", [](TH1* a)->void { a->SetLabelFont(); });
    t.method("SetLabelFont", [](TH1* a, Style_t arg0)->void { a->SetLabelFont(arg0); });
    t.method("SetLabelFont", [](TH1* a, Style_t arg0, Option_t * arg1)->void { a->SetLabelFont(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelOffset(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelOffset(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:395:21
    t.method("SetLabelOffset", [](TH1& a)->void { a.SetLabelOffset(); });
    t.method("SetLabelOffset", [](TH1& a, Float_t arg0)->void { a.SetLabelOffset(arg0); });
    t.method("SetLabelOffset", [](TH1& a, Float_t arg0, Option_t * arg1)->void { a.SetLabelOffset(arg0, arg1); });
    t.method("SetLabelOffset", [](TH1* a)->void { a->SetLabelOffset(); });
    t.method("SetLabelOffset", [](TH1* a, Float_t arg0)->void { a->SetLabelOffset(arg0); });
    t.method("SetLabelOffset", [](TH1* a, Float_t arg0, Option_t * arg1)->void { a->SetLabelOffset(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetLabelSize(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetLabelSize(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:396:21
    t.method("SetLabelSize", [](TH1& a)->void { a.SetLabelSize(); });
    t.method("SetLabelSize", [](TH1& a, Float_t arg0)->void { a.SetLabelSize(arg0); });
    t.method("SetLabelSize", [](TH1& a, Float_t arg0, Option_t * arg1)->void { a.SetLabelSize(arg0, arg1); });
    t.method("SetLabelSize", [](TH1* a)->void { a->SetLabelSize(); });
    t.method("SetLabelSize", [](TH1* a, Float_t arg0)->void { a->SetLabelSize(arg0); });
    t.method("SetLabelSize", [](TH1* a, Float_t arg0, Option_t * arg1)->void { a->SetLabelSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetMaximum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetMaximum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:403:21
    t.method("SetMaximum", [](TH1& a)->void { a.SetMaximum(); });
    t.method("SetMaximum", [](TH1& a, Double_t arg0)->void { a.SetMaximum(arg0); });
    t.method("SetMaximum", [](TH1* a)->void { a->SetMaximum(); });
    t.method("SetMaximum", [](TH1* a, Double_t arg0)->void { a->SetMaximum(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetMinimum(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetMinimum(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:404:21
    t.method("SetMinimum", [](TH1& a)->void { a.SetMinimum(); });
    t.method("SetMinimum", [](TH1& a, Double_t arg0)->void { a.SetMinimum(arg0); });
    t.method("SetMinimum", [](TH1* a)->void { a->SetMinimum(); });
    t.method("SetMinimum", [](TH1* a, Double_t arg0)->void { a->SetMinimum(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:406:21
    t.method("SetName", [](TH1& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TH1* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetNameTitle(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNameTitle(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:407:21
    t.method("SetNameTitle", [](TH1& a, const char * arg0, const char * arg1)->void { a.SetNameTitle(arg0, arg1); });
    t.method("SetNameTitle", [](TH1* a, const char * arg0, const char * arg1)->void { a->SetNameTitle(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetNdivisions(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNdivisions(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:408:21
    t.method("SetNdivisions", [](TH1& a)->void { a.SetNdivisions(); });
    t.method("SetNdivisions", [](TH1& a, Int_t arg0)->void { a.SetNdivisions(arg0); });
    t.method("SetNdivisions", [](TH1& a, Int_t arg0, Option_t * arg1)->void { a.SetNdivisions(arg0, arg1); });
    t.method("SetNdivisions", [](TH1* a)->void { a->SetNdivisions(); });
    t.method("SetNdivisions", [](TH1* a, Int_t arg0)->void { a->SetNdivisions(arg0); });
    t.method("SetNdivisions", [](TH1* a, Int_t arg0, Option_t * arg1)->void { a->SetNdivisions(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetNormFactor(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetNormFactor(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:409:21
    t.method("SetNormFactor", [](TH1& a)->void { a.SetNormFactor(); });
    t.method("SetNormFactor", [](TH1& a, Double_t arg0)->void { a.SetNormFactor(arg0); });
    t.method("SetNormFactor", [](TH1* a)->void { a->SetNormFactor(); });
    t.method("SetNormFactor", [](TH1* a, Double_t arg0)->void { a->SetNormFactor(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetStats(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetStats(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:410:21
    t.method("SetStats", [](TH1& a)->void { a.SetStats(); });
    t.method("SetStats", [](TH1& a, Bool_t arg0)->void { a.SetStats(arg0); });
    t.method("SetStats", [](TH1* a)->void { a->SetStats(); });
    t.method("SetStats", [](TH1* a, Bool_t arg0)->void { a->SetStats(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:411:21
    t.method("SetOption", [](TH1& a)->void { a.SetOption(); });
    t.method("SetOption", [](TH1& a, Option_t * arg0)->void { a.SetOption(arg0); });
    t.method("SetOption", [](TH1* a)->void { a->SetOption(); });
    t.method("SetOption", [](TH1* a, Option_t * arg0)->void { a->SetOption(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTickLength(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTickLength(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:412:21
    t.method("SetTickLength", [](TH1& a)->void { a.SetTickLength(); });
    t.method("SetTickLength", [](TH1& a, Float_t arg0)->void { a.SetTickLength(arg0); });
    t.method("SetTickLength", [](TH1& a, Float_t arg0, Option_t * arg1)->void { a.SetTickLength(arg0, arg1); });
    t.method("SetTickLength", [](TH1* a)->void { a->SetTickLength(); });
    t.method("SetTickLength", [](TH1* a, Float_t arg0)->void { a->SetTickLength(arg0); });
    t.method("SetTickLength", [](TH1* a, Float_t arg0, Option_t * arg1)->void { a->SetTickLength(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleFont(Style_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleFont(Style_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:413:21
    t.method("SetTitleFont", [](TH1& a)->void { a.SetTitleFont(); });
    t.method("SetTitleFont", [](TH1& a, Style_t arg0)->void { a.SetTitleFont(arg0); });
    t.method("SetTitleFont", [](TH1& a, Style_t arg0, Option_t * arg1)->void { a.SetTitleFont(arg0, arg1); });
    t.method("SetTitleFont", [](TH1* a)->void { a->SetTitleFont(); });
    t.method("SetTitleFont", [](TH1* a, Style_t arg0)->void { a->SetTitleFont(arg0); });
    t.method("SetTitleFont", [](TH1* a, Style_t arg0, Option_t * arg1)->void { a->SetTitleFont(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleOffset(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleOffset(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:414:21
    t.method("SetTitleOffset", [](TH1& a)->void { a.SetTitleOffset(); });
    t.method("SetTitleOffset", [](TH1& a, Float_t arg0)->void { a.SetTitleOffset(arg0); });
    t.method("SetTitleOffset", [](TH1& a, Float_t arg0, Option_t * arg1)->void { a.SetTitleOffset(arg0, arg1); });
    t.method("SetTitleOffset", [](TH1* a)->void { a->SetTitleOffset(); });
    t.method("SetTitleOffset", [](TH1* a, Float_t arg0)->void { a->SetTitleOffset(arg0); });
    t.method("SetTitleOffset", [](TH1* a, Float_t arg0, Option_t * arg1)->void { a->SetTitleOffset(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitleSize(Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitleSize(Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:415:21
    t.method("SetTitleSize", [](TH1& a)->void { a.SetTitleSize(); });
    t.method("SetTitleSize", [](TH1& a, Float_t arg0)->void { a.SetTitleSize(arg0); });
    t.method("SetTitleSize", [](TH1& a, Float_t arg0, Option_t * arg1)->void { a.SetTitleSize(arg0, arg1); });
    t.method("SetTitleSize", [](TH1* a)->void { a->SetTitleSize(); });
    t.method("SetTitleSize", [](TH1* a, Float_t arg0)->void { a->SetTitleSize(arg0); });
    t.method("SetTitleSize", [](TH1* a, Float_t arg0, Option_t * arg1)->void { a->SetTitleSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetStatOverflows(TH1::EStatOverflows) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetStatOverflows(TH1::EStatOverflows)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:416:21
    t.method("SetStatOverflows", [](TH1& a, TH1::EStatOverflows arg0)->void { a.SetStatOverflows(arg0); });
    t.method("SetStatOverflows", [](TH1* a, TH1::EStatOverflows arg0)->void { a->SetStatOverflows(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:417:21
    t.method("SetTitle", [](TH1& a, const char * arg0)->void { a.SetTitle(arg0); });
    t.method("SetTitle", [](TH1* a, const char * arg0)->void { a->SetTitle(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetXTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetXTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:418:21
    t.method("SetXTitle", [](TH1& a, const char * arg0)->void { a.SetXTitle(arg0); });
    t.method("SetXTitle", [](TH1* a, const char * arg0)->void { a->SetXTitle(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetYTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetYTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:419:21
    t.method("SetYTitle", [](TH1& a, const char * arg0)->void { a.SetYTitle(arg0); });
    t.method("SetYTitle", [](TH1* a, const char * arg0)->void { a->SetYTitle(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::SetZTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetZTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:420:21
    t.method("SetZTitle", [](TH1& a, const char * arg0)->void { a.SetZTitle(arg0); });
    t.method("SetZTitle", [](TH1* a, const char * arg0)->void { a->SetZTitle(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TH1::ShowBackground(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TH1::ShowBackground(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:421:21
    t.method("ShowBackground", [](TH1& a)->TH1 * { return a.ShowBackground(); });
    t.method("ShowBackground", [](TH1& a, Int_t arg0)->TH1 * { return a.ShowBackground(arg0); });
    t.method("ShowBackground", [](TH1& a, Int_t arg0, Option_t * arg1)->TH1 * { return a.ShowBackground(arg0, arg1); });
    t.method("ShowBackground", [](TH1* a)->TH1 * { return a->ShowBackground(); });
    t.method("ShowBackground", [](TH1* a, Int_t arg0)->TH1 * { return a->ShowBackground(arg0); });
    t.method("ShowBackground", [](TH1* a, Int_t arg0, Option_t * arg1)->TH1 * { return a->ShowBackground(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TH1::ShowPeaks(Double_t, Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TH1::ShowPeaks(Double_t, Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:422:21
    t.method("ShowPeaks", [](TH1& a)->Int_t { return a.ShowPeaks(); });
    t.method("ShowPeaks", [](TH1& a, Double_t arg0)->Int_t { return a.ShowPeaks(arg0); });
    t.method("ShowPeaks", [](TH1& a, Double_t arg0, Option_t * arg1)->Int_t { return a.ShowPeaks(arg0, arg1); });
    t.method("ShowPeaks", [](TH1& a, Double_t arg0, Option_t * arg1, Double_t arg2)->Int_t { return a.ShowPeaks(arg0, arg1, arg2); });
    t.method("ShowPeaks", [](TH1* a)->Int_t { return a->ShowPeaks(); });
    t.method("ShowPeaks", [](TH1* a, Double_t arg0)->Int_t { return a->ShowPeaks(arg0); });
    t.method("ShowPeaks", [](TH1* a, Double_t arg0, Option_t * arg1)->Int_t { return a->ShowPeaks(arg0, arg1); });
    t.method("ShowPeaks", [](TH1* a, Double_t arg0, Option_t * arg1, Double_t arg2)->Int_t { return a->ShowPeaks(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::Smooth(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Smooth(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:423:21
    t.method("Smooth", [](TH1& a)->void { a.Smooth(); });
    t.method("Smooth", [](TH1& a, Int_t arg0)->void { a.Smooth(arg0); });
    t.method("Smooth", [](TH1& a, Int_t arg0, Option_t * arg1)->void { a.Smooth(arg0, arg1); });
    t.method("Smooth", [](TH1* a)->void { a->Smooth(); });
    t.method("Smooth", [](TH1* a, Int_t arg0)->void { a->Smooth(arg0); });
    t.method("Smooth", [](TH1* a, Int_t arg0, Option_t * arg1)->void { a->Smooth(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SmoothArray(Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SmoothArray(Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:424:21
    module_.method("TH1!SmoothArray", [](Int_t arg0, Double_t * arg1)->void { TH1::SmoothArray(arg0, arg1); });
    module_.method("TH1!SmoothArray", [](Int_t arg0, Double_t * arg1, Int_t arg2)->void { TH1::SmoothArray(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::StatOverflows(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::StatOverflows(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:425:21
    module_.method("TH1!StatOverflows", []()->void { TH1::StatOverflows(); });
    module_.method("TH1!StatOverflows", [](Bool_t arg0)->void { TH1::StatOverflows(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::Sumw2(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Sumw2(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:426:21
    t.method("Sumw2", [](TH1& a)->void { a.Sumw2(); });
    t.method("Sumw2", [](TH1& a, Bool_t arg0)->void { a.Sumw2(arg0); });
    t.method("Sumw2", [](TH1* a)->void { a->Sumw2(); });
    t.method("Sumw2", [](TH1* a, Bool_t arg0)->void { a->Sumw2(arg0); });

    DEBUG_MSG("Adding wrapper for void TH1::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TH1::UseCurrentStyle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:427:21
    t.method("UseCurrentStyle", [](TH1& a)->void { a.UseCurrentStyle(); });
    t.method("UseCurrentStyle", [](TH1* a)->void { a->UseCurrentStyle(); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetCellContent(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetCellContent(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:432:21
    t.method("GetCellContent", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetCellContent(arg0, arg1); });
    t.method("GetCellContent", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetCellContent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TH1::GetCellError(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TH1::GetCellError(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:434:21
    t.method("GetCellError", [](TH1 const& a, Int_t arg0, Int_t arg1)->Double_t { return a.GetCellError(arg0, arg1); });
    t.method("GetCellError", [](TH1 const* a, Int_t arg0, Int_t arg1)->Double_t { return a->GetCellError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::RebinAxis(Double_t, TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::RebinAxis(Double_t, TAxis *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:436:21
    t.method("RebinAxis", [](TH1& a, Double_t arg0, TAxis * arg1)->void { a.RebinAxis(arg0, arg1); });
    t.method("RebinAxis", [](TH1* a, Double_t arg0, TAxis * arg1)->void { a->RebinAxis(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TH1::SetCellContent(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetCellContent(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:438:21
    t.method("SetCellContent", [](TH1& a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a.SetCellContent(arg0, arg1, arg2); });
    t.method("SetCellContent", [](TH1* a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a->SetCellContent(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TH1::SetCellError(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::SetCellError(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TH1.h:440:21
    t.method("SetCellError", [](TH1& a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a.SetCellError(arg0, arg1, arg2); });
    t.method("SetCellError", [](TH1* a, Int_t arg0, Int_t arg1, Double_t arg2)->void { a->SetCellError(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Version_t TH1::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TH1!Class_Version", []()->Version_t { return TH1::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TH1 const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TH1 const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TH1::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TH1& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TH1* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TH1::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TH1!DeclFileName", []() { return (std::string)TH1::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TH1!ImplFileLine", []()->int { return TH1::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TH1::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TH1!ImplFileName", []() { return (std::string)TH1::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TH1!Class_Name", []() { return (std::string)TH1::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TH1!Dictionary", []()->TClass * { return TH1::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TH1!Class", []()->TClass * { return TH1::Class(); });

    DEBUG_MSG("Adding wrapper for void TH1::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TH1& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TH1* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TH1::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TH1!DeclFileLine", []()->int { return TH1::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1>> type_;
};
std::shared_ptr<Wrapper> newJlTH1(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualTreePlayer> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualTreePlayer> : std::false_type { };
template<> struct SuperType<TVirtualTreePlayer> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualTreePlayer
// signature to use in the veto file: TVirtualTreePlayer
struct JlTVirtualTreePlayer: public Wrapper {

  JlTVirtualTreePlayer(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualTreePlayer (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TVirtualTreePlayer.h:38:7
    jlcxx::TypeWrapper<TVirtualTreePlayer>  t = jlModule.add_type<TVirtualTreePlayer>("TVirtualTreePlayer",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualTreePlayer>>(new jlcxx::TypeWrapper<TVirtualTreePlayer>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualTreePlayer>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualTreePlayer(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualTreePlayer(module));
}
