// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGraphMultiErrors> : std::false_type { };
  template<> struct DefaultConstructible<TGraphMultiErrors> : std::false_type { };
template<> struct SuperType<TGraphMultiErrors> { typedef TGraph type; };
}

// Class generating the wrapper for type TGraphMultiErrors
// signature to use in the veto file: TGraphMultiErrors
struct JlTGraphMultiErrors: public Wrapper {

  JlTGraphMultiErrors(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGraphMultiErrors (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:29:7
    jlcxx::TypeWrapper<TGraphMultiErrors>  t = jlModule.add_type<TGraphMultiErrors>("TGraphMultiErrors",
      jlcxx::julia_base_type<TGraph>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGraphMultiErrors>>(new jlcxx::TypeWrapper<TGraphMultiErrors>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:64:4
    t.constructor<const Char_t *, const Char_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:65:4
    t.constructor<Int_t>(/*finalize=*/true);
    t.constructor<Int_t, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:66:4
    t.constructor<const Char_t *, const Char_t *, Int_t>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:68:4
    t.constructor<Int_t, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:71:4
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, const Float_t *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:74:4
    t.constructor<Int_t, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:77:4
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, const Double_t *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:81:4
    t.constructor<Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>>(/*finalize=*/true);
    t.constructor<Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:84:4
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<std::vector<Float_t>>, std::vector<std::vector<Float_t>>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:87:4
    t.constructor<Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>>(/*finalize=*/true);
    t.constructor<Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:90:4
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<std::vector<Double_t>>, std::vector<std::vector<Double_t>>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:94:4
    t.constructor<Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>>(/*finalize=*/true);
    t.constructor<Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:96:4
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *, std::vector<TArrayF>, std::vector<TArrayF>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:99:4
    t.constructor<Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>>(/*finalize=*/true);
    t.constructor<Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:101:4
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>>(/*finalize=*/true);
    t.constructor<const Char_t *, const Char_t *, Int_t, Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *, std::vector<TArrayD>, std::vector<TArrayD>, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:107:4
    t.constructor<const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &>(/*finalize=*/true);
    t.constructor<const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(Int_t, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD *, const TVectorD *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:112:4
    t.constructor<Int_t, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD *, const TVectorD *>(/*finalize=*/true);
    t.constructor<Int_t, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD *, const TVectorD *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const TGraphMultiErrors &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:115:4
    t.constructor<const TGraphMultiErrors &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TGraphMultiErrors & TGraphMultiErrors::operator=(const TGraphMultiErrors &) (" __HERE__ ")");
    // signature to use in the veto list: TGraphMultiErrors & TGraphMultiErrors::operator=(const TGraphMultiErrors &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:116:23
    t.method("assign", static_cast<TGraphMultiErrors & (TGraphMultiErrors::*)(const TGraphMultiErrors &) >(&TGraphMultiErrors::operator=));


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const TH1 *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:118:4
    t.constructor<const TH1 *>(/*finalize=*/true);
    t.constructor<const TH1 *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::TGraphMultiErrors(const TH1 *, const TH1 *, Int_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:119:4
    t.constructor<const TH1 *, const TH1 *>(/*finalize=*/true);
    t.constructor<const TH1 *, const TH1 *, Int_t>(/*finalize=*/true);
    t.constructor<const TH1 *, const TH1 *, Int_t, Option_t *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::AddYError(Int_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::AddYError(Int_t, const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:123:17
    t.method("AddYError", static_cast<void (TGraphMultiErrors::*)(Int_t, const Double_t *, const Double_t *) >(&TGraphMultiErrors::AddYError));
    t.method("AddYError", [](TGraphMultiErrors& a, Int_t arg0)->void { a.AddYError(arg0); });
    t.method("AddYError", [](TGraphMultiErrors& a, Int_t arg0, const Double_t * arg1)->void { a.AddYError(arg0, arg1); });
    t.method("AddYError", [](TGraphMultiErrors* a, Int_t arg0)->void { a->AddYError(arg0); });
    t.method("AddYError", [](TGraphMultiErrors* a, Int_t arg0, const Double_t * arg1)->void { a->AddYError(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::Apply(TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::Apply(TF1 *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:124:9
    t.method("Apply", static_cast<void (TGraphMultiErrors::*)(TF1 *) >(&TGraphMultiErrors::Apply));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::BayesDivide(const TH1 *, const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::BayesDivide(const TH1 *, const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:125:17
    t.method("BayesDivide", static_cast<void (TGraphMultiErrors::*)(const TH1 *, const TH1 *, Option_t *) >(&TGraphMultiErrors::BayesDivide));
    t.method("BayesDivide", [](TGraphMultiErrors& a, const TH1 * arg0, const TH1 * arg1)->void { a.BayesDivide(arg0, arg1); });
    t.method("BayesDivide", [](TGraphMultiErrors* a, const TH1 * arg0, const TH1 * arg1)->void { a->BayesDivide(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::Divide(const TH1 *, const TH1 *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::Divide(const TH1 *, const TH1 *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:126:9
    t.method("Divide", static_cast<void (TGraphMultiErrors::*)(const TH1 *, const TH1 *, Option_t *) >(&TGraphMultiErrors::Divide));
    t.method("Divide", [](TGraphMultiErrors& a, const TH1 * arg0, const TH1 * arg1)->void { a.Divide(arg0, arg1); });
    t.method("Divide", [](TGraphMultiErrors* a, const TH1 * arg0, const TH1 * arg1)->void { a->Divide(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:127:9
    t.method("ComputeRange", static_cast<void (TGraphMultiErrors::*)(Double_t &, Double_t &, Double_t &, Double_t &)  const>(&TGraphMultiErrors::ComputeRange));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::DeleteYError(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::DeleteYError(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:128:17
    t.method("DeleteYError", static_cast<void (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::DeleteYError));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorX(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:130:13
    t.method("GetErrorX", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorX));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorY(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:131:13
    t.method("GetErrorY", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorY));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorY(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorY(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:132:21
    t.method("GetErrorY", static_cast<Double_t (TGraphMultiErrors::*)(Int_t, Int_t)  const>(&TGraphMultiErrors::GetErrorY));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorXlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorXlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:134:13
    t.method("GetErrorXlow", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorXlow));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorXhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorXhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:135:13
    t.method("GetErrorXhigh", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorXhigh));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorYlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorYlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:136:13
    t.method("GetErrorYlow", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorYlow));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorYhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorYhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:137:13
    t.method("GetErrorYhigh", static_cast<Double_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetErrorYhigh));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorYlow(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorYlow(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:138:21
    t.method("GetErrorYlow", static_cast<Double_t (TGraphMultiErrors::*)(Int_t, Int_t)  const>(&TGraphMultiErrors::GetErrorYlow));

    DEBUG_MSG("Adding wrapper for Double_t TGraphMultiErrors::GetErrorYhigh(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphMultiErrors::GetErrorYhigh(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:139:21
    t.method("GetErrorYhigh", static_cast<Double_t (TGraphMultiErrors::*)(Int_t, Int_t)  const>(&TGraphMultiErrors::GetErrorYhigh));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEXlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEXlow()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:141:14
    t.method("GetEXlow", static_cast<Double_t * (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetEXlow));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEXhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEXhigh()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:142:14
    t.method("GetEXhigh", static_cast<Double_t * (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetEXhigh));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEYlow() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEYlow()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:143:14
    t.method("GetEYlow", static_cast<Double_t * (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetEYlow));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEYhigh() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEYhigh()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:144:14
    t.method("GetEYhigh", static_cast<Double_t * (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetEYhigh));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEYlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEYlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:145:22
    t.method("GetEYlow", static_cast<Double_t * (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::GetEYlow));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphMultiErrors::GetEYhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphMultiErrors::GetEYhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:146:22
    t.method("GetEYhigh", static_cast<Double_t * (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::GetEYhigh));

    DEBUG_MSG("Adding wrapper for TAttFill * TGraphMultiErrors::GetAttFill(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TAttFill * TGraphMultiErrors::GetAttFill(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:148:22
    t.method("GetAttFill", static_cast<TAttFill * (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::GetAttFill));

    DEBUG_MSG("Adding wrapper for TAttLine * TGraphMultiErrors::GetAttLine(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TAttLine * TGraphMultiErrors::GetAttLine(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:149:22
    t.method("GetAttLine", static_cast<TAttLine * (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::GetAttLine));

    DEBUG_MSG("Adding wrapper for Color_t TGraphMultiErrors::GetFillColor(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TGraphMultiErrors::GetFillColor(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:154:20
    t.method("GetFillColor", static_cast<Color_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetFillColor));

    DEBUG_MSG("Adding wrapper for Style_t TGraphMultiErrors::GetFillStyle(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TGraphMultiErrors::GetFillStyle(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:155:20
    t.method("GetFillStyle", static_cast<Style_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetFillStyle));

    DEBUG_MSG("Adding wrapper for Color_t TGraphMultiErrors::GetLineColor(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Color_t TGraphMultiErrors::GetLineColor(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:161:20
    t.method("GetLineColor", static_cast<Color_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetLineColor));

    DEBUG_MSG("Adding wrapper for Style_t TGraphMultiErrors::GetLineStyle(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Style_t TGraphMultiErrors::GetLineStyle(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:162:20
    t.method("GetLineStyle", static_cast<Style_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetLineStyle));

    DEBUG_MSG("Adding wrapper for Width_t TGraphMultiErrors::GetLineWidth(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Width_t TGraphMultiErrors::GetLineWidth(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:163:20
    t.method("GetLineWidth", static_cast<Width_t (TGraphMultiErrors::*)(Int_t)  const>(&TGraphMultiErrors::GetLineWidth));

    DEBUG_MSG("Adding wrapper for Int_t TGraphMultiErrors::GetSumErrorsMode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraphMultiErrors::GetSumErrorsMode()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:165:10
    t.method("GetSumErrorsMode", static_cast<Int_t (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetSumErrorsMode));

    DEBUG_MSG("Adding wrapper for Int_t TGraphMultiErrors::GetNYErrors() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraphMultiErrors::GetNYErrors()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:166:10
    t.method("GetNYErrors", static_cast<Int_t (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::GetNYErrors));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:168:9
    t.method("Print", static_cast<void (TGraphMultiErrors::*)(Option_t *)  const>(&TGraphMultiErrors::Print));
    t.method("Print", [](TGraphMultiErrors const& a)->void { a.Print(); });
    t.method("Print", [](TGraphMultiErrors const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:170:9
    t.method("Scale", static_cast<void (TGraphMultiErrors::*)(Double_t, Option_t *) >(&TGraphMultiErrors::Scale));
    t.method("Scale", [](TGraphMultiErrors& a)->void { a.Scale(); });
    t.method("Scale", [](TGraphMultiErrors& a, Double_t arg0)->void { a.Scale(arg0); });
    t.method("Scale", [](TGraphMultiErrors* a)->void { a->Scale(); });
    t.method("Scale", [](TGraphMultiErrors* a, Double_t arg0)->void { a->Scale(arg0); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointError(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointError(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:172:17
    t.method("SetPointError", static_cast<void (TGraphMultiErrors::*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) >(&TGraphMultiErrors::SetPointError));
    t.method("SetPointError", [](TGraphMultiErrors& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.SetPointError(arg0, arg1, arg2, arg3); });
    t.method("SetPointError", [](TGraphMultiErrors& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.SetPointError(arg0, arg1, arg2, arg3, arg4); });
    t.method("SetPointError", [](TGraphMultiErrors& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->void { a.SetPointError(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetPointError", [](TGraphMultiErrors& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a.SetPointError(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("SetPointError", [](TGraphMultiErrors* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->SetPointError(arg0, arg1, arg2, arg3); });
    t.method("SetPointError", [](TGraphMultiErrors* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->SetPointError(arg0, arg1, arg2, arg3, arg4); });
    t.method("SetPointError", [](TGraphMultiErrors* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->void { a->SetPointError(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetPointError", [](TGraphMultiErrors* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a->SetPointError(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointError(Int_t, Int_t, Double_t, Double_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointError(Int_t, Int_t, Double_t, Double_t, const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:174:17
    t.method("SetPointError", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, Double_t, Double_t, const Double_t *, const Double_t *) >(&TGraphMultiErrors::SetPointError));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEX(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEX(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:176:17
    t.method("SetPointEX", static_cast<void (TGraphMultiErrors::*)(Int_t, Double_t, Double_t) >(&TGraphMultiErrors::SetPointEX));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEXlow(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEXlow(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:177:17
    t.method("SetPointEXlow", static_cast<void (TGraphMultiErrors::*)(Int_t, Double_t) >(&TGraphMultiErrors::SetPointEXlow));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEXhigh(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEXhigh(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:178:17
    t.method("SetPointEXhigh", static_cast<void (TGraphMultiErrors::*)(Int_t, Double_t) >(&TGraphMultiErrors::SetPointEXhigh));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEY(Int_t, Int_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEY(Int_t, Int_t, const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:179:17
    t.method("SetPointEY", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *, const Double_t *) >(&TGraphMultiErrors::SetPointEY));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEYlow(Int_t, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEYlow(Int_t, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:180:17
    t.method("SetPointEYlow", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *) >(&TGraphMultiErrors::SetPointEYlow));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEYhigh(Int_t, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEYhigh(Int_t, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:181:17
    t.method("SetPointEYhigh", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *) >(&TGraphMultiErrors::SetPointEYhigh));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEY(Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEY(Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:182:17
    t.method("SetPointEY", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, Double_t, Double_t) >(&TGraphMultiErrors::SetPointEY));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEYlow(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEYlow(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:183:17
    t.method("SetPointEYlow", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, Double_t) >(&TGraphMultiErrors::SetPointEYlow));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetPointEYhigh(Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetPointEYhigh(Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:184:17
    t.method("SetPointEYhigh", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, Double_t) >(&TGraphMultiErrors::SetPointEYhigh));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetEY(Int_t, Int_t, const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetEY(Int_t, Int_t, const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:186:17
    t.method("SetEY", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *, const Double_t *) >(&TGraphMultiErrors::SetEY));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetEYlow(Int_t, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetEYlow(Int_t, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:187:17
    t.method("SetEYlow", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *) >(&TGraphMultiErrors::SetEYlow));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetEYhigh(Int_t, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetEYhigh(Int_t, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:188:17
    t.method("SetEYhigh", static_cast<void (TGraphMultiErrors::*)(Int_t, Int_t, const Double_t *) >(&TGraphMultiErrors::SetEYhigh));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetSumErrorsMode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetSumErrorsMode(Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:190:17
    t.method("SetSumErrorsMode", static_cast<void (TGraphMultiErrors::*)(Int_t) >(&TGraphMultiErrors::SetSumErrorsMode));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetAttFill(Int_t, TAttFill *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetAttFill(Int_t, TAttFill *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:192:17
    t.method("SetAttFill", static_cast<void (TGraphMultiErrors::*)(Int_t, TAttFill *) >(&TGraphMultiErrors::SetAttFill));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetAttLine(Int_t, TAttLine *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetAttLine(Int_t, TAttLine *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:193:17
    t.method("SetAttLine", static_cast<void (TGraphMultiErrors::*)(Int_t, TAttLine *) >(&TGraphMultiErrors::SetAttLine));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetFillColor(Int_t, Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetFillColor(Int_t, Color_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:199:17
    t.method("SetFillColor", static_cast<void (TGraphMultiErrors::*)(Int_t, Color_t) >(&TGraphMultiErrors::SetFillColor));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetFillColorAlpha(Int_t, Color_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetFillColorAlpha(Int_t, Color_t, Float_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:200:17
    t.method("SetFillColorAlpha", static_cast<void (TGraphMultiErrors::*)(Int_t, Color_t, Float_t) >(&TGraphMultiErrors::SetFillColorAlpha));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetFillStyle(Int_t, Style_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetFillStyle(Int_t, Style_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:201:17
    t.method("SetFillStyle", static_cast<void (TGraphMultiErrors::*)(Int_t, Style_t) >(&TGraphMultiErrors::SetFillStyle));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetLineColor(Int_t, Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetLineColor(Int_t, Color_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:208:17
    t.method("SetLineColor", static_cast<void (TGraphMultiErrors::*)(Int_t, Color_t) >(&TGraphMultiErrors::SetLineColor));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetLineColorAlpha(Int_t, Color_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetLineColorAlpha(Int_t, Color_t, Float_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:209:17
    t.method("SetLineColorAlpha", static_cast<void (TGraphMultiErrors::*)(Int_t, Color_t, Float_t) >(&TGraphMultiErrors::SetLineColorAlpha));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetLineStyle(Int_t, Style_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetLineStyle(Int_t, Style_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:210:17
    t.method("SetLineStyle", static_cast<void (TGraphMultiErrors::*)(Int_t, Style_t) >(&TGraphMultiErrors::SetLineStyle));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::SetLineWidth(Int_t, Width_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::SetLineWidth(Int_t, Width_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:211:17
    t.method("SetLineWidth", static_cast<void (TGraphMultiErrors::*)(Int_t, Width_t) >(&TGraphMultiErrors::SetLineWidth));

    DEBUG_MSG("Adding wrapper for Version_t TGraphMultiErrors::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGraphMultiErrors::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!Class_Version", static_cast<Version_t (*)() >(&TGraphMultiErrors::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGraphMultiErrors::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphMultiErrors::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    t.method("IsA", static_cast<TClass * (TGraphMultiErrors::*)()  const>(&TGraphMultiErrors::IsA));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    t.method("StreamerNVirtual", static_cast<void (TGraphMultiErrors::*)(TBuffer &) >(&TGraphMultiErrors::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGraphMultiErrors::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphMultiErrors::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!DeclFileName", []() { return (std::string)TGraphMultiErrors::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGraphMultiErrors::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphMultiErrors::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!ImplFileLine", static_cast<int (*)() >(&TGraphMultiErrors::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGraphMultiErrors::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphMultiErrors::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!ImplFileName", []() { return (std::string)TGraphMultiErrors::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGraphMultiErrors::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphMultiErrors::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!Class_Name", []() { return (std::string)TGraphMultiErrors::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraphMultiErrors::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphMultiErrors::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!Dictionary", static_cast<TClass * (*)() >(&TGraphMultiErrors::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGraphMultiErrors::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphMultiErrors::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!Class", static_cast<TClass * (*)() >(&TGraphMultiErrors::Class));

    DEBUG_MSG("Adding wrapper for void TGraphMultiErrors::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphMultiErrors::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    t.method("Streamer", static_cast<void (TGraphMultiErrors::*)(TBuffer &) >(&TGraphMultiErrors::Streamer));

    DEBUG_MSG("Adding wrapper for int TGraphMultiErrors::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphMultiErrors::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphMultiErrors.h:213:4
    module_.method("TGraphMultiErrors!DeclFileLine", static_cast<int (*)() >(&TGraphMultiErrors::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGraphMultiErrors>> type_;
};
std::shared_ptr<Wrapper> newJlTGraphMultiErrors(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGraphMultiErrors(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TArrayF> : std::false_type { };
  template<> struct DefaultConstructible<TArrayF> : std::false_type { };
template<> struct SuperType<TArrayF> { typedef TArray type; };
}

// Class generating the wrapper for type TArrayF
// signature to use in the veto file: TArrayF
struct JlTArrayF: public Wrapper {

  JlTArrayF(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TArrayF (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TArrayF.h:27:7
    jlcxx::TypeWrapper<TArrayF>  t = jlModule.add_type<TArrayF>("TArrayF",
      jlcxx::julia_base_type<TArray>());
    jlcxx::stl::apply_stl<TArrayF>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TArrayF>>(new jlcxx::TypeWrapper<TArrayF>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TArrayF>> type_;
};
std::shared_ptr<Wrapper> newJlTArrayF(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTArrayF(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TAttFill> : std::false_type { };
  template<> struct DefaultConstructible<TAttFill> : std::false_type { };
}

// Class generating the wrapper for type TAttFill
// signature to use in the veto file: TAttFill
struct JlTAttFill: public Wrapper {

  JlTAttFill(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TAttFill (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TAttFill.h:19:7
    jlcxx::TypeWrapper<TAttFill>  t = jlModule.add_type<TAttFill>("TAttFill");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TAttFill>>(new jlcxx::TypeWrapper<TAttFill>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TAttFill>> type_;
};
std::shared_ptr<Wrapper> newJlTAttFill(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTAttFill(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TAttLine> : std::false_type { };
  template<> struct DefaultConstructible<TAttLine> : std::false_type { };
}

// Class generating the wrapper for type TAttLine
// signature to use in the veto file: TAttLine
struct JlTAttLine: public Wrapper {

  JlTAttLine(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TAttLine (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TAttLine.h:18:7
    jlcxx::TypeWrapper<TAttLine>  t = jlModule.add_type<TAttLine>("TAttLine");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TAttLine>>(new jlcxx::TypeWrapper<TAttLine>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TAttLine>> type_;
};
std::shared_ptr<Wrapper> newJlTAttLine(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTAttLine(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGraphSmooth> : std::false_type { };
  template<> struct DefaultConstructible<TGraphSmooth> : std::false_type { };
template<> struct SuperType<TGraphSmooth> { typedef TNamed type; };
}

// Class generating the wrapper for type TGraphSmooth
// signature to use in the veto file: TGraphSmooth
struct JlTGraphSmooth: public Wrapper {

  JlTGraphSmooth(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGraphSmooth (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:34:7
    jlcxx::TypeWrapper<TGraphSmooth>  t = jlModule.add_type<TGraphSmooth>("TGraphSmooth",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGraphSmooth>>(new jlcxx::TypeWrapper<TGraphSmooth>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGraphSmooth::TGraphSmooth(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:50:4
    t.constructor<const char *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TGraph * TGraphSmooth::Approx(TGraph *, Option_t *, Int_t, Double_t *, Double_t, Double_t, Int_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGraph * TGraphSmooth::Approx(TGraph *, Option_t *, Int_t, Double_t *, Double_t, Double_t, Int_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:54:20
    t.method("Approx", static_cast<TGraph * (TGraphSmooth::*)(TGraph *, Option_t *, Int_t, Double_t *, Double_t, Double_t, Int_t, Double_t, Option_t *) >(&TGraphSmooth::Approx));
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0)->TGraph * { return a.Approx(arg0); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1)->TGraph * { return a.Approx(arg0, arg1); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2)->TGraph * { return a.Approx(arg0, arg1, arg2); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3)->TGraph * { return a.Approx(arg0, arg1, arg2, arg3); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4)->TGraph * { return a.Approx(arg0, arg1, arg2, arg3, arg4); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5)->TGraph * { return a.Approx(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGraph * { return a.Approx(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Approx", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5, Int_t arg6, Double_t arg7)->TGraph * { return a.Approx(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0)->TGraph * { return a->Approx(arg0); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1)->TGraph * { return a->Approx(arg0, arg1); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2)->TGraph * { return a->Approx(arg0, arg1, arg2); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3)->TGraph * { return a->Approx(arg0, arg1, arg2, arg3); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4)->TGraph * { return a->Approx(arg0, arg1, arg2, arg3, arg4); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5)->TGraph * { return a->Approx(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGraph * { return a->Approx(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Approx", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Int_t arg2, Double_t * arg3, Double_t arg4, Double_t arg5, Int_t arg6, Double_t arg7)->TGraph * { return a->Approx(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });

    DEBUG_MSG("Adding wrapper for TGraph * TGraphSmooth::SmoothKern(TGraph *, Option_t *, Double_t, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGraph * TGraphSmooth::SmoothKern(TGraph *, Option_t *, Double_t, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:56:20
    t.method("SmoothKern", static_cast<TGraph * (TGraphSmooth::*)(TGraph *, Option_t *, Double_t, Int_t, Double_t *) >(&TGraphSmooth::SmoothKern));
    t.method("SmoothKern", [](TGraphSmooth& a, TGraph * arg0)->TGraph * { return a.SmoothKern(arg0); });
    t.method("SmoothKern", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1)->TGraph * { return a.SmoothKern(arg0, arg1); });
    t.method("SmoothKern", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a.SmoothKern(arg0, arg1, arg2); });
    t.method("SmoothKern", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2, Int_t arg3)->TGraph * { return a.SmoothKern(arg0, arg1, arg2, arg3); });
    t.method("SmoothKern", [](TGraphSmooth* a, TGraph * arg0)->TGraph * { return a->SmoothKern(arg0); });
    t.method("SmoothKern", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1)->TGraph * { return a->SmoothKern(arg0, arg1); });
    t.method("SmoothKern", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a->SmoothKern(arg0, arg1, arg2); });
    t.method("SmoothKern", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2, Int_t arg3)->TGraph * { return a->SmoothKern(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGraph * TGraphSmooth::SmoothLowess(TGraph *, Option_t *, Double_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGraph * TGraphSmooth::SmoothLowess(TGraph *, Option_t *, Double_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:57:20
    t.method("SmoothLowess", static_cast<TGraph * (TGraphSmooth::*)(TGraph *, Option_t *, Double_t, Int_t, Double_t) >(&TGraphSmooth::SmoothLowess));
    t.method("SmoothLowess", [](TGraphSmooth& a, TGraph * arg0)->TGraph * { return a.SmoothLowess(arg0); });
    t.method("SmoothLowess", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1)->TGraph * { return a.SmoothLowess(arg0, arg1); });
    t.method("SmoothLowess", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a.SmoothLowess(arg0, arg1, arg2); });
    t.method("SmoothLowess", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2, Int_t arg3)->TGraph * { return a.SmoothLowess(arg0, arg1, arg2, arg3); });
    t.method("SmoothLowess", [](TGraphSmooth* a, TGraph * arg0)->TGraph * { return a->SmoothLowess(arg0); });
    t.method("SmoothLowess", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1)->TGraph * { return a->SmoothLowess(arg0, arg1); });
    t.method("SmoothLowess", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a->SmoothLowess(arg0, arg1, arg2); });
    t.method("SmoothLowess", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2, Int_t arg3)->TGraph * { return a->SmoothLowess(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TGraph * TGraphSmooth::SmoothSuper(TGraph *, Option_t *, Double_t, Double_t, Bool_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGraph * TGraphSmooth::SmoothSuper(TGraph *, Option_t *, Double_t, Double_t, Bool_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:58:20
    t.method("SmoothSuper", static_cast<TGraph * (TGraphSmooth::*)(TGraph *, Option_t *, Double_t, Double_t, Bool_t, Double_t *) >(&TGraphSmooth::SmoothSuper));
    t.method("SmoothSuper", [](TGraphSmooth& a, TGraph * arg0)->TGraph * { return a.SmoothSuper(arg0); });
    t.method("SmoothSuper", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1)->TGraph * { return a.SmoothSuper(arg0, arg1); });
    t.method("SmoothSuper", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a.SmoothSuper(arg0, arg1, arg2); });
    t.method("SmoothSuper", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2, Double_t arg3)->TGraph * { return a.SmoothSuper(arg0, arg1, arg2, arg3); });
    t.method("SmoothSuper", [](TGraphSmooth& a, TGraph * arg0, Option_t * arg1, Double_t arg2, Double_t arg3, Bool_t arg4)->TGraph * { return a.SmoothSuper(arg0, arg1, arg2, arg3, arg4); });
    t.method("SmoothSuper", [](TGraphSmooth* a, TGraph * arg0)->TGraph * { return a->SmoothSuper(arg0); });
    t.method("SmoothSuper", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1)->TGraph * { return a->SmoothSuper(arg0, arg1); });
    t.method("SmoothSuper", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2)->TGraph * { return a->SmoothSuper(arg0, arg1, arg2); });
    t.method("SmoothSuper", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2, Double_t arg3)->TGraph * { return a->SmoothSuper(arg0, arg1, arg2, arg3); });
    t.method("SmoothSuper", [](TGraphSmooth* a, TGraph * arg0, Option_t * arg1, Double_t arg2, Double_t arg3, Bool_t arg4)->TGraph * { return a->SmoothSuper(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Approxin(TGraph *, Int_t, Double_t &, Double_t &, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Approxin(TGraph *, Int_t, Double_t &, Double_t &, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:60:20
    t.method("Approxin", static_cast<void (TGraphSmooth::*)(TGraph *, Int_t, Double_t &, Double_t &, Int_t, Int_t) >(&TGraphSmooth::Approxin));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Smoothin(TGraph *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Smoothin(TGraph *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:61:20
    t.method("Smoothin", static_cast<void (TGraphSmooth::*)(TGraph *) >(&TGraphSmooth::Smoothin));

    DEBUG_MSG("Adding wrapper for Double_t TGraphSmooth::Approx1(Double_t, Double_t, Double_t *, Double_t *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphSmooth::Approx1(Double_t, Double_t, Double_t *, Double_t *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:62:20
    module_.method("TGraphSmooth!Approx1", static_cast<Double_t (*)(Double_t, Double_t, Double_t *, Double_t *, Int_t, Int_t, Double_t, Double_t) >(&TGraphSmooth::Approx1));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Lowess(Double_t *, Double_t *, Int_t, Double_t *, Double_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Lowess(Double_t *, Double_t *, Int_t, Double_t *, Double_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:63:20
    t.method("Lowess", static_cast<void (TGraphSmooth::*)(Double_t *, Double_t *, Int_t, Double_t *, Double_t, Int_t, Double_t) >(&TGraphSmooth::Lowess));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Lowest(Double_t *, Double_t *, Int_t, Double_t &, Double_t &, Int_t, Int_t, Double_t *, Bool_t, Double_t *, Bool_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Lowest(Double_t *, Double_t *, Int_t, Double_t &, Double_t &, Int_t, Int_t, Double_t *, Bool_t, Double_t *, Bool_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:64:20
    module_.method("TGraphSmooth!Lowest", static_cast<void (*)(Double_t *, Double_t *, Int_t, Double_t &, Double_t &, Int_t, Int_t, Double_t *, Bool_t, Double_t *, Bool_t &) >(&TGraphSmooth::Lowest));

    DEBUG_MSG("Adding wrapper for Int_t TGraphSmooth::Rcmp(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraphSmooth::Rcmp(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:66:20
    module_.method("TGraphSmooth!Rcmp", static_cast<Int_t (*)(Double_t, Double_t) >(&TGraphSmooth::Rcmp));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Psort(Double_t *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Psort(Double_t *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:67:20
    module_.method("TGraphSmooth!Psort", static_cast<void (*)(Double_t *, Int_t, Int_t) >(&TGraphSmooth::Psort));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Rank(Int_t, Double_t *, Int_t *, Int_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Rank(Int_t, Double_t *, Int_t *, Int_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:68:20
    module_.method("TGraphSmooth!Rank", static_cast<void (*)(Int_t, Double_t *, Int_t *, Int_t *, Bool_t) >(&TGraphSmooth::Rank));
    module_.method("TGraphSmooth!Rank", [](Int_t arg0, Double_t * arg1, Int_t * arg2, Int_t * arg3)->void { TGraphSmooth::Rank(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::BDRksmooth(Double_t *, Double_t *, Int_t, Double_t *, Double_t *, Int_t, Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::BDRksmooth(Double_t *, Double_t *, Int_t, Double_t *, Double_t *, Int_t, Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:69:20
    module_.method("TGraphSmooth!BDRksmooth", static_cast<void (*)(Double_t *, Double_t *, Int_t, Double_t *, Double_t *, Int_t, Int_t, Double_t) >(&TGraphSmooth::BDRksmooth));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::BDRsupsmu(Int_t, Double_t *, Double_t *, Double_t *, Int_t, Double_t, Double_t, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::BDRsupsmu(Int_t, Double_t *, Double_t *, Double_t *, Int_t, Double_t, Double_t, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:71:20
    module_.method("TGraphSmooth!BDRsupsmu", static_cast<void (*)(Int_t, Double_t *, Double_t *, Double_t *, Int_t, Double_t, Double_t, Double_t *, Double_t *) >(&TGraphSmooth::BDRsupsmu));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::BDRsmooth(Int_t, Double_t *, Double_t *, Double_t *, Double_t, Int_t, Double_t, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::BDRsmooth(Int_t, Double_t *, Double_t *, Double_t *, Double_t, Int_t, Double_t, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:73:20
    module_.method("TGraphSmooth!BDRsmooth", static_cast<void (*)(Int_t, Double_t *, Double_t *, Double_t *, Double_t, Int_t, Double_t, Double_t *, Double_t *) >(&TGraphSmooth::BDRsmooth));

    DEBUG_MSG("Adding wrapper for Version_t TGraphSmooth::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGraphSmooth::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!Class_Version", static_cast<Version_t (*)() >(&TGraphSmooth::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGraphSmooth::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphSmooth::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    t.method("IsA", static_cast<TClass * (TGraphSmooth::*)()  const>(&TGraphSmooth::IsA));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    t.method("StreamerNVirtual", static_cast<void (TGraphSmooth::*)(TBuffer &) >(&TGraphSmooth::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGraphSmooth::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphSmooth::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!DeclFileName", []() { return (std::string)TGraphSmooth::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGraphSmooth::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphSmooth::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!ImplFileLine", static_cast<int (*)() >(&TGraphSmooth::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGraphSmooth::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphSmooth::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!ImplFileName", []() { return (std::string)TGraphSmooth::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGraphSmooth::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphSmooth::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!Class_Name", []() { return (std::string)TGraphSmooth::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraphSmooth::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphSmooth::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!Dictionary", static_cast<TClass * (*)() >(&TGraphSmooth::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGraphSmooth::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphSmooth::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!Class", static_cast<TClass * (*)() >(&TGraphSmooth::Class));

    DEBUG_MSG("Adding wrapper for void TGraphSmooth::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphSmooth::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    t.method("Streamer", static_cast<void (TGraphSmooth::*)(TBuffer &) >(&TGraphSmooth::Streamer));

    DEBUG_MSG("Adding wrapper for int TGraphSmooth::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphSmooth::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGraphSmooth.h:76:4
    module_.method("TGraphSmooth!DeclFileLine", static_cast<int (*)() >(&TGraphSmooth::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGraphSmooth>> type_;
};
std::shared_ptr<Wrapper> newJlTGraphSmooth(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGraphSmooth(module));
}
