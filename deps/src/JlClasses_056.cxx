// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoSkinSurface> : std::false_type { };
  template<> struct DefaultConstructible<TGeoSkinSurface> : std::false_type { };
template<> struct SuperType<TGeoSkinSurface> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoSkinSurface
// signature to use in the veto file: TGeoSkinSurface
struct JlTGeoSkinSurface: public Wrapper {

  JlTGeoSkinSurface(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoSkinSurface (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:177:7
    jlcxx::TypeWrapper<TGeoSkinSurface>  t = jlModule.add_type<TGeoSkinSurface>("TGeoSkinSurface",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoSkinSurface>>(new jlcxx::TypeWrapper<TGeoSkinSurface>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoSkinSurface::TGeoSkinSurface(const char *, const char *, const TGeoOpticalSurface *, const TGeoVolume *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:183:4
    t.constructor<const char *, const char *, const TGeoOpticalSurface *, const TGeoVolume *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for const TGeoOpticalSurface * TGeoSkinSurface::GetSurface() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoOpticalSurface * TGeoSkinSurface::GetSurface()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:189:30
    t.method("GetSurface", static_cast<const TGeoOpticalSurface * (TGeoSkinSurface::*)()  const>(&TGeoSkinSurface::GetSurface));

    DEBUG_MSG("Adding wrapper for const TGeoVolume * TGeoSkinSurface::GetVolume() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoVolume * TGeoSkinSurface::GetVolume()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:190:22
    t.method("GetVolume", static_cast<const TGeoVolume * (TGeoSkinSurface::*)()  const>(&TGeoSkinSurface::GetVolume));

    DEBUG_MSG("Adding wrapper for void TGeoSkinSurface::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSkinSurface::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:192:9
    t.method("Print", static_cast<void (TGeoSkinSurface::*)(Option_t *)  const>(&TGeoSkinSurface::Print));
    t.method("Print", [](TGeoSkinSurface const& a)->void { a.Print(); });
    t.method("Print", [](TGeoSkinSurface const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoSkinSurface::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoSkinSurface::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!Class_Version", static_cast<Version_t (*)() >(&TGeoSkinSurface::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoSkinSurface::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSkinSurface::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    t.method("IsA", static_cast<TClass * (TGeoSkinSurface::*)()  const>(&TGeoSkinSurface::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoSkinSurface::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSkinSurface::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    t.method("StreamerNVirtual", static_cast<void (TGeoSkinSurface::*)(TBuffer &) >(&TGeoSkinSurface::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoSkinSurface::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSkinSurface::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!DeclFileName", []() { return (std::string)TGeoSkinSurface::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoSkinSurface::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoSkinSurface::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!ImplFileLine", static_cast<int (*)() >(&TGeoSkinSurface::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoSkinSurface::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSkinSurface::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!ImplFileName", []() { return (std::string)TGeoSkinSurface::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoSkinSurface::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSkinSurface::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!Class_Name", []() { return (std::string)TGeoSkinSurface::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoSkinSurface::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSkinSurface::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!Dictionary", static_cast<TClass * (*)() >(&TGeoSkinSurface::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoSkinSurface::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSkinSurface::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!Class", static_cast<TClass * (*)() >(&TGeoSkinSurface::Class));

    DEBUG_MSG("Adding wrapper for void TGeoSkinSurface::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSkinSurface::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    t.method("Streamer", static_cast<void (TGeoSkinSurface::*)(TBuffer &) >(&TGeoSkinSurface::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoSkinSurface::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoSkinSurface::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:194:4
    module_.method("TGeoSkinSurface!DeclFileLine", static_cast<int (*)() >(&TGeoSkinSurface::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoSkinSurface>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoSkinSurface(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoSkinSurface(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBorderSurface> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBorderSurface> : std::false_type { };
template<> struct SuperType<TGeoBorderSurface> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoBorderSurface
// signature to use in the veto file: TGeoBorderSurface
struct JlTGeoBorderSurface: public Wrapper {

  JlTGeoBorderSurface(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBorderSurface (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:206:7
    jlcxx::TypeWrapper<TGeoBorderSurface>  t = jlModule.add_type<TGeoBorderSurface>("TGeoBorderSurface",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBorderSurface>>(new jlcxx::TypeWrapper<TGeoBorderSurface>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoBorderSurface::TGeoBorderSurface(const char *, const char *, const TGeoOpticalSurface *, const TGeoNode *, const TGeoNode *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:213:4
    t.constructor<const char *, const char *, const TGeoOpticalSurface *, const TGeoNode *, const TGeoNode *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for const TGeoOpticalSurface * TGeoBorderSurface::GetSurface() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoOpticalSurface * TGeoBorderSurface::GetSurface()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:220:30
    t.method("GetSurface", static_cast<const TGeoOpticalSurface * (TGeoBorderSurface::*)()  const>(&TGeoBorderSurface::GetSurface));

    DEBUG_MSG("Adding wrapper for const TGeoNode * TGeoBorderSurface::GetNode1() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoNode * TGeoBorderSurface::GetNode1()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:221:20
    t.method("GetNode1", static_cast<const TGeoNode * (TGeoBorderSurface::*)()  const>(&TGeoBorderSurface::GetNode1));

    DEBUG_MSG("Adding wrapper for const TGeoNode * TGeoBorderSurface::GetNode2() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoNode * TGeoBorderSurface::GetNode2()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:222:20
    t.method("GetNode2", static_cast<const TGeoNode * (TGeoBorderSurface::*)()  const>(&TGeoBorderSurface::GetNode2));

    DEBUG_MSG("Adding wrapper for void TGeoBorderSurface::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBorderSurface::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:224:9
    t.method("Print", static_cast<void (TGeoBorderSurface::*)(Option_t *)  const>(&TGeoBorderSurface::Print));
    t.method("Print", [](TGeoBorderSurface const& a)->void { a.Print(); });
    t.method("Print", [](TGeoBorderSurface const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoBorderSurface::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBorderSurface::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!Class_Version", static_cast<Version_t (*)() >(&TGeoBorderSurface::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoBorderSurface::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBorderSurface::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    t.method("IsA", static_cast<TClass * (TGeoBorderSurface::*)()  const>(&TGeoBorderSurface::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoBorderSurface::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBorderSurface::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    t.method("StreamerNVirtual", static_cast<void (TGeoBorderSurface::*)(TBuffer &) >(&TGeoBorderSurface::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoBorderSurface::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBorderSurface::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!DeclFileName", []() { return (std::string)TGeoBorderSurface::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBorderSurface::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBorderSurface::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!ImplFileLine", static_cast<int (*)() >(&TGeoBorderSurface::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoBorderSurface::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBorderSurface::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!ImplFileName", []() { return (std::string)TGeoBorderSurface::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBorderSurface::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBorderSurface::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!Class_Name", []() { return (std::string)TGeoBorderSurface::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBorderSurface::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBorderSurface::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!Dictionary", static_cast<TClass * (*)() >(&TGeoBorderSurface::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoBorderSurface::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBorderSurface::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!Class", static_cast<TClass * (*)() >(&TGeoBorderSurface::Class));

    DEBUG_MSG("Adding wrapper for void TGeoBorderSurface::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBorderSurface::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    t.method("Streamer", static_cast<void (TGeoBorderSurface::*)(TBuffer &) >(&TGeoBorderSurface::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoBorderSurface::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBorderSurface::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoOpticalSurface.h:226:4
    module_.method("TGeoBorderSurface!DeclFileLine", static_cast<int (*)() >(&TGeoBorderSurface::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBorderSurface>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBorderSurface(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBorderSurface(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoParallelWorld> : std::false_type { };
  template<> struct DefaultConstructible<TGeoParallelWorld> : std::false_type { };
template<> struct SuperType<TGeoParallelWorld> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoParallelWorld
// signature to use in the veto file: TGeoParallelWorld
struct JlTGeoParallelWorld: public Wrapper {

  JlTGeoParallelWorld(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoParallelWorld (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:21:7
    jlcxx::TypeWrapper<TGeoParallelWorld>  t = jlModule.add_type<TGeoParallelWorld>("TGeoParallelWorld",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoParallelWorld>>(new jlcxx::TypeWrapper<TGeoParallelWorld>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::TGeoParallelWorld(const char *, TGeoManager *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:47:4
    t.constructor<const char *, TGeoManager *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::AddNode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::AddNode(const char *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:52:9
    t.method("AddNode", static_cast<void (TGeoParallelWorld::*)(const char *) >(&TGeoParallelWorld::AddNode));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::SetUseOverlaps(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::SetUseOverlaps(Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:54:9
    t.method("SetUseOverlaps", static_cast<void (TGeoParallelWorld::*)(Bool_t) >(&TGeoParallelWorld::SetUseOverlaps));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParallelWorld::IsUsingOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParallelWorld::IsUsingOverlaps()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:55:11
    t.method("IsUsingOverlaps", static_cast<Bool_t (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::IsUsingOverlaps));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::ResetOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::ResetOverlaps()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:56:9
    t.method("ResetOverlaps", static_cast<void (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::ResetOverlaps));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::AddOverlap(TGeoVolume *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::AddOverlap(TGeoVolume *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:58:9
    t.method("AddOverlap", static_cast<void (TGeoParallelWorld::*)(TGeoVolume *, Bool_t) >(&TGeoParallelWorld::AddOverlap));
    t.method("AddOverlap", [](TGeoParallelWorld& a, TGeoVolume * arg0)->void { a.AddOverlap(arg0); });
    t.method("AddOverlap", [](TGeoParallelWorld* a, TGeoVolume * arg0)->void { a->AddOverlap(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::AddOverlap(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::AddOverlap(const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:59:9
    t.method("AddOverlap", static_cast<void (TGeoParallelWorld::*)(const char *, Bool_t) >(&TGeoParallelWorld::AddOverlap));
    t.method("AddOverlap", [](TGeoParallelWorld& a, const char * arg0)->void { a.AddOverlap(arg0); });
    t.method("AddOverlap", [](TGeoParallelWorld* a, const char * arg0)->void { a->AddOverlap(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoParallelWorld::PrintDetectedOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoParallelWorld::PrintDetectedOverlaps()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:61:10
    t.method("PrintDetectedOverlaps", static_cast<Int_t (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::PrintDetectedOverlaps));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParallelWorld::CloseGeometry() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParallelWorld::CloseGeometry()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:64:11
    t.method("CloseGeometry", static_cast<Bool_t (TGeoParallelWorld::*)() >(&TGeoParallelWorld::CloseGeometry));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::RefreshPhysicalNodes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::RefreshPhysicalNodes()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:66:9
    t.method("RefreshPhysicalNodes", static_cast<void (TGeoParallelWorld::*)() >(&TGeoParallelWorld::RefreshPhysicalNodes));

    DEBUG_MSG("Adding wrapper for TGeoManager * TGeoParallelWorld::GetGeometry() (" __HERE__ ")");
    // signature to use in the veto list: TGeoManager * TGeoParallelWorld::GetGeometry()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:74:17
    t.method("GetGeometry", static_cast<TGeoManager * (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::GetGeometry));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParallelWorld::IsClosed() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParallelWorld::IsClosed()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:75:11
    t.method("IsClosed", static_cast<Bool_t (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::IsClosed));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoParallelWorld::GetVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoParallelWorld::GetVolume()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:76:16
    t.method("GetVolume", static_cast<TGeoVolume * (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::GetVolume));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::CheckOverlaps(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::CheckOverlaps(Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:79:9
    t.method("CheckOverlaps", static_cast<void (TGeoParallelWorld::*)(Double_t) >(&TGeoParallelWorld::CheckOverlaps));
    t.method("CheckOverlaps", [](TGeoParallelWorld& a)->void { a.CheckOverlaps(); });
    t.method("CheckOverlaps", [](TGeoParallelWorld* a)->void { a->CheckOverlaps(); });

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:80:9
    t.method("Draw", static_cast<void (TGeoParallelWorld::*)(Option_t *) >(&TGeoParallelWorld::Draw));

    DEBUG_MSG("Adding wrapper for Version_t TGeoParallelWorld::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoParallelWorld::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!Class_Version", static_cast<Version_t (*)() >(&TGeoParallelWorld::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoParallelWorld::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParallelWorld::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    t.method("IsA", static_cast<TClass * (TGeoParallelWorld::*)()  const>(&TGeoParallelWorld::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    t.method("StreamerNVirtual", static_cast<void (TGeoParallelWorld::*)(TBuffer &) >(&TGeoParallelWorld::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoParallelWorld::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParallelWorld::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!DeclFileName", []() { return (std::string)TGeoParallelWorld::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoParallelWorld::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoParallelWorld::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!ImplFileLine", static_cast<int (*)() >(&TGeoParallelWorld::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoParallelWorld::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParallelWorld::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!ImplFileName", []() { return (std::string)TGeoParallelWorld::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoParallelWorld::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParallelWorld::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!Class_Name", []() { return (std::string)TGeoParallelWorld::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoParallelWorld::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParallelWorld::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!Dictionary", static_cast<TClass * (*)() >(&TGeoParallelWorld::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoParallelWorld::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParallelWorld::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!Class", static_cast<TClass * (*)() >(&TGeoParallelWorld::Class));

    DEBUG_MSG("Adding wrapper for void TGeoParallelWorld::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParallelWorld::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    t.method("Streamer", static_cast<void (TGeoParallelWorld::*)(TBuffer &) >(&TGeoParallelWorld::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoParallelWorld::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoParallelWorld::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParallelWorld.h:82:4
    module_.method("TGeoParallelWorld!DeclFileLine", static_cast<int (*)() >(&TGeoParallelWorld::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoParallelWorld>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoParallelWorld(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoParallelWorld(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoParaboloid> : std::false_type { };
  template<> struct DefaultConstructible<TGeoParaboloid> : std::false_type { };
template<> struct SuperType<TGeoParaboloid> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoParaboloid
// signature to use in the veto file: TGeoParaboloid
struct JlTGeoParaboloid: public Wrapper {

  JlTGeoParaboloid(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoParaboloid (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:17:7
    jlcxx::TypeWrapper<TGeoParaboloid>  t = jlModule.add_type<TGeoParaboloid>("TGeoParaboloid",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoParaboloid>>(new jlcxx::TypeWrapper<TGeoParaboloid>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::TGeoParaboloid(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:31:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::TGeoParaboloid(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:32:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::TGeoParaboloid(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:33:4
    t.constructor<Double_t *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::Capacity()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:37:13
    t.method("Capacity", static_cast<Double_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::Capacity));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:38:9
    t.method("ComputeBBox", static_cast<void (TGeoParaboloid::*)() >(&TGeoParaboloid::ComputeBBox));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:39:9
    t.method("ComputeNormal", static_cast<void (TGeoParaboloid::*)(const Double_t *, const Double_t *, Double_t *) >(&TGeoParaboloid::ComputeNormal));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:40:9
    t.method("ComputeNormal_v", static_cast<void (TGeoParaboloid::*)(const Double_t *, const Double_t *, Double_t *, Int_t) >(&TGeoParaboloid::ComputeNormal_v));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParaboloid::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParaboloid::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:41:11
    t.method("Contains", static_cast<Bool_t (TGeoParaboloid::*)(const Double_t *)  const>(&TGeoParaboloid::Contains));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:42:9
    t.method("Contains_v", static_cast<void (TGeoParaboloid::*)(const Double_t *, Bool_t *, Int_t)  const>(&TGeoParaboloid::Contains_v));

    DEBUG_MSG("Adding wrapper for Int_t TGeoParaboloid::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoParaboloid::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:43:10
    t.method("DistancetoPrimitive", static_cast<Int_t (TGeoParaboloid::*)(Int_t, Int_t) >(&TGeoParaboloid::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::DistToParaboloid(const Double_t *, const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::DistToParaboloid(const Double_t *, const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:44:13
    t.method("DistToParaboloid", static_cast<Double_t (TGeoParaboloid::*)(const Double_t *, const Double_t *, Bool_t)  const>(&TGeoParaboloid::DistToParaboloid));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:45:13
    t.method("DistFromInside", static_cast<Double_t (TGeoParaboloid::*)(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)  const>(&TGeoParaboloid::DistFromInside));
    t.method("DistFromInside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:47:9
    t.method("DistFromInside_v", static_cast<void (TGeoParaboloid::*)(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)  const>(&TGeoParaboloid::DistFromInside_v));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:49:13
    t.method("DistFromOutside", static_cast<Double_t (TGeoParaboloid::*)(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)  const>(&TGeoParaboloid::DistFromOutside));
    t.method("DistFromOutside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoParaboloid const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoParaboloid const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:51:9
    t.method("DistFromOutside_v", static_cast<void (TGeoParaboloid::*)(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)  const>(&TGeoParaboloid::DistFromOutside_v));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoParaboloid::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoParaboloid::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:54:4
    t.method("Divide", static_cast<TGeoVolume * (TGeoParaboloid::*)(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) >(&TGeoParaboloid::Divide));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::GetRlo() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::GetRlo()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:56:13
    t.method("GetRlo", static_cast<Double_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::GetRlo));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::GetRhi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::GetRhi()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:57:13
    t.method("GetRhi", static_cast<Double_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::GetRhi));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::GetDz()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:58:13
    t.method("GetDz", static_cast<Double_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::GetDz));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:60:9
    t.method("GetBoundingCylinder", static_cast<void (TGeoParaboloid::*)(Double_t *)  const>(&TGeoParaboloid::GetBoundingCylinder));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoParaboloid::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoParaboloid::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:61:15
    t.method("GetMakeRuntimeShape", static_cast<TGeoShape * (TGeoParaboloid::*)(TGeoShape *, TGeoMatrix *)  const>(&TGeoParaboloid::GetMakeRuntimeShape));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:62:9
    t.method("GetMeshNumbers", static_cast<void (TGeoParaboloid::*)(Int_t &, Int_t &, Int_t &)  const>(&TGeoParaboloid::GetMeshNumbers));

    DEBUG_MSG("Adding wrapper for Int_t TGeoParaboloid::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoParaboloid::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:63:10
    t.method("GetNmeshVertices", static_cast<Int_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::GetNmeshVertices));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParaboloid::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParaboloid::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:64:11
    t.method("GetPointsOnSegments", static_cast<Bool_t (TGeoParaboloid::*)(Int_t, Double_t *)  const>(&TGeoParaboloid::GetPointsOnSegments));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::InspectShape()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:65:9
    t.method("InspectShape", static_cast<void (TGeoParaboloid::*)()  const>(&TGeoParaboloid::InspectShape));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoParaboloid::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoParaboloid::IsCylType()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:66:11
    t.method("IsCylType", static_cast<Bool_t (TGeoParaboloid::*)()  const>(&TGeoParaboloid::IsCylType));

    DEBUG_MSG("Adding wrapper for Double_t TGeoParaboloid::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoParaboloid::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:68:13
    t.method("Safety", static_cast<Double_t (TGeoParaboloid::*)(const Double_t *, Bool_t)  const>(&TGeoParaboloid::Safety));
    t.method("Safety", [](TGeoParaboloid const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoParaboloid const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:69:9
    t.method("Safety_v", static_cast<void (TGeoParaboloid::*)(const Double_t *, const Bool_t *, Double_t *, Int_t)  const>(&TGeoParaboloid::Safety_v));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::SetParaboloidDimensions(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::SetParaboloidDimensions(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:71:9
    t.method("SetParaboloidDimensions", static_cast<void (TGeoParaboloid::*)(Double_t, Double_t, Double_t) >(&TGeoParaboloid::SetParaboloidDimensions));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:72:9
    t.method("SetDimensions", static_cast<void (TGeoParaboloid::*)(Double_t *) >(&TGeoParaboloid::SetDimensions));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:73:9
    t.method("SetPoints", static_cast<void (TGeoParaboloid::*)(Double_t *)  const>(&TGeoParaboloid::SetPoints));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:74:9
    t.method("SetPoints", static_cast<void (TGeoParaboloid::*)(Float_t *)  const>(&TGeoParaboloid::SetPoints));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:76:9
    t.method("Sizeof3D", static_cast<void (TGeoParaboloid::*)()  const>(&TGeoParaboloid::Sizeof3D));

    DEBUG_MSG("Adding wrapper for Version_t TGeoParaboloid::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoParaboloid::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!Class_Version", static_cast<Version_t (*)() >(&TGeoParaboloid::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoParaboloid::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParaboloid::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    t.method("IsA", static_cast<TClass * (TGeoParaboloid::*)()  const>(&TGeoParaboloid::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    t.method("StreamerNVirtual", static_cast<void (TGeoParaboloid::*)(TBuffer &) >(&TGeoParaboloid::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoParaboloid::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParaboloid::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!DeclFileName", []() { return (std::string)TGeoParaboloid::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoParaboloid::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoParaboloid::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!ImplFileLine", static_cast<int (*)() >(&TGeoParaboloid::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoParaboloid::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParaboloid::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!ImplFileName", []() { return (std::string)TGeoParaboloid::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoParaboloid::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoParaboloid::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!Class_Name", []() { return (std::string)TGeoParaboloid::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoParaboloid::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParaboloid::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!Dictionary", static_cast<TClass * (*)() >(&TGeoParaboloid::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoParaboloid::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoParaboloid::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!Class", static_cast<TClass * (*)() >(&TGeoParaboloid::Class));

    DEBUG_MSG("Adding wrapper for void TGeoParaboloid::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoParaboloid::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    t.method("Streamer", static_cast<void (TGeoParaboloid::*)(TBuffer &) >(&TGeoParaboloid::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoParaboloid::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoParaboloid::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoParaboloid.h:78:4
    module_.method("TGeoParaboloid!DeclFileLine", static_cast<int (*)() >(&TGeoParaboloid::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoParaboloid>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoParaboloid(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoParaboloid(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPara> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPara> : std::false_type { };
template<> struct SuperType<TGeoPara> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoPara
// signature to use in the veto file: TGeoPara
struct JlTGeoPara: public Wrapper {

  JlTGeoPara(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPara (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:17:7
    jlcxx::TypeWrapper<TGeoPara>  t = jlModule.add_type<TGeoPara>("TGeoPara",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPara>>(new jlcxx::TypeWrapper<TGeoPara>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoPara::TGeoPara(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:37:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoPara::TGeoPara(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:38:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoPara::TGeoPara(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:39:4
    t.constructor<Double_t *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::Capacity()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:43:13
    t.method("Capacity", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::Capacity));

    DEBUG_MSG("Adding wrapper for void TGeoPara::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:44:9
    t.method("ComputeBBox", static_cast<void (TGeoPara::*)() >(&TGeoPara::ComputeBBox));

    DEBUG_MSG("Adding wrapper for void TGeoPara::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:45:9
    t.method("ComputeNormal", static_cast<void (TGeoPara::*)(const Double_t *, const Double_t *, Double_t *) >(&TGeoPara::ComputeNormal));

    DEBUG_MSG("Adding wrapper for void TGeoPara::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:46:9
    t.method("ComputeNormal_v", static_cast<void (TGeoPara::*)(const Double_t *, const Double_t *, Double_t *, Int_t) >(&TGeoPara::ComputeNormal_v));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPara::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPara::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:47:11
    t.method("Contains", static_cast<Bool_t (TGeoPara::*)(const Double_t *)  const>(&TGeoPara::Contains));

    DEBUG_MSG("Adding wrapper for void TGeoPara::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:48:9
    t.method("Contains_v", static_cast<void (TGeoPara::*)(const Double_t *, Bool_t *, Int_t)  const>(&TGeoPara::Contains_v));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:49:13
    t.method("DistFromInside", static_cast<Double_t (TGeoPara::*)(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)  const>(&TGeoPara::DistFromInside));
    t.method("DistFromInside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoPara::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:51:9
    t.method("DistFromInside_v", static_cast<void (TGeoPara::*)(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)  const>(&TGeoPara::DistFromInside_v));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:53:13
    t.method("DistFromOutside", static_cast<Double_t (TGeoPara::*)(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)  const>(&TGeoPara::DistFromOutside));
    t.method("DistFromOutside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPara const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoPara const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoPara::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:55:9
    t.method("DistFromOutside_v", static_cast<void (TGeoPara::*)(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)  const>(&TGeoPara::DistFromOutside_v));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoPara::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoPara::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:58:4
    t.method("Divide", static_cast<TGeoVolume * (TGeoPara::*)(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) >(&TGeoPara::Divide));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:59:13
    t.method("GetAxisRange", static_cast<Double_t (TGeoPara::*)(Int_t, Double_t &, Double_t &)  const>(&TGeoPara::GetAxisRange));

    DEBUG_MSG("Adding wrapper for void TGeoPara::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:60:9
    t.method("GetBoundingCylinder", static_cast<void (TGeoPara::*)(Double_t *)  const>(&TGeoPara::GetBoundingCylinder));

    DEBUG_MSG("Adding wrapper for Int_t TGeoPara::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPara::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:61:10
    t.method("GetByteCount", static_cast<Int_t (TGeoPara::*)()  const>(&TGeoPara::GetByteCount));

    DEBUG_MSG("Adding wrapper for Int_t TGeoPara::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPara::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:63:4
    t.method("GetFittingBox", static_cast<Int_t (TGeoPara::*)(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)  const>(&TGeoPara::GetFittingBox));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoPara::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoPara::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:64:15
    t.method("GetMakeRuntimeShape", static_cast<TGeoShape * (TGeoPara::*)(TGeoShape *, TGeoMatrix *)  const>(&TGeoPara::GetMakeRuntimeShape));

    DEBUG_MSG("Adding wrapper for Int_t TGeoPara::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPara::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:65:10
    t.method("GetNmeshVertices", static_cast<Int_t (TGeoPara::*)()  const>(&TGeoPara::GetNmeshVertices));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetX()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:66:13
    t.method("GetX", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetX));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetY()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:67:13
    t.method("GetY", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetY));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetZ()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:68:13
    t.method("GetZ", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetZ));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetAlpha() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetAlpha()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:69:13
    t.method("GetAlpha", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetAlpha));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetTheta() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetTheta()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:70:13
    t.method("GetTheta", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetTheta));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetPhi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetPhi()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:71:13
    t.method("GetPhi", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetPhi));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetTxy() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetTxy()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:72:13
    t.method("GetTxy", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetTxy));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetTxz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetTxz()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:73:13
    t.method("GetTxz", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetTxz));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::GetTyz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::GetTyz()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:74:13
    t.method("GetTyz", static_cast<Double_t (TGeoPara::*)()  const>(&TGeoPara::GetTyz));

    DEBUG_MSG("Adding wrapper for void TGeoPara::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::InspectShape()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:75:9
    t.method("InspectShape", static_cast<void (TGeoPara::*)()  const>(&TGeoPara::InspectShape));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPara::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPara::IsCylType()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:76:11
    t.method("IsCylType", static_cast<Bool_t (TGeoPara::*)()  const>(&TGeoPara::IsCylType));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPara::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPara::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:77:13
    t.method("Safety", static_cast<Double_t (TGeoPara::*)(const Double_t *, Bool_t)  const>(&TGeoPara::Safety));
    t.method("Safety", [](TGeoPara const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoPara const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPara::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:78:9
    t.method("Safety_v", static_cast<void (TGeoPara::*)(const Double_t *, const Bool_t *, Double_t *, Int_t)  const>(&TGeoPara::Safety_v));

    DEBUG_MSG("Adding wrapper for void TGeoPara::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:80:9
    t.method("SetDimensions", static_cast<void (TGeoPara::*)(Double_t *) >(&TGeoPara::SetDimensions));

    DEBUG_MSG("Adding wrapper for void TGeoPara::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:81:9
    t.method("SetPoints", static_cast<void (TGeoPara::*)(Double_t *)  const>(&TGeoPara::SetPoints));

    DEBUG_MSG("Adding wrapper for void TGeoPara::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:82:9
    t.method("SetPoints", static_cast<void (TGeoPara::*)(Float_t *)  const>(&TGeoPara::SetPoints));

    DEBUG_MSG("Adding wrapper for void TGeoPara::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:83:9
    t.method("Sizeof3D", static_cast<void (TGeoPara::*)()  const>(&TGeoPara::Sizeof3D));

    DEBUG_MSG("Adding wrapper for Version_t TGeoPara::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPara::Class_Version()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!Class_Version", static_cast<Version_t (*)() >(&TGeoPara::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoPara::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPara::IsA()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    t.method("IsA", static_cast<TClass * (TGeoPara::*)()  const>(&TGeoPara::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoPara::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    t.method("StreamerNVirtual", static_cast<void (TGeoPara::*)(TBuffer &) >(&TGeoPara::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoPara::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPara::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!DeclFileName", []() { return (std::string)TGeoPara::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPara::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPara::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!ImplFileLine", static_cast<int (*)() >(&TGeoPara::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoPara::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPara::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!ImplFileName", []() { return (std::string)TGeoPara::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPara::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPara::Class_Name()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!Class_Name", []() { return (std::string)TGeoPara::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPara::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPara::Dictionary()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!Dictionary", static_cast<TClass * (*)() >(&TGeoPara::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoPara::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPara::Class()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!Class", static_cast<TClass * (*)() >(&TGeoPara::Class));

    DEBUG_MSG("Adding wrapper for void TGeoPara::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPara::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    t.method("Streamer", static_cast<void (TGeoPara::*)(TBuffer &) >(&TGeoPara::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoPara::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPara::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/883dde52995ca9517b0284d7d7f324e945daf399/include/TGeoPara.h:85:4
    module_.method("TGeoPara!DeclFileLine", static_cast<int (*)() >(&TGeoPara::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPara>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPara(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPara(module));
}
