// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TString> : std::false_type { };
  template<> struct DefaultConstructible<TString> : std::false_type { };
}

// Class generating the wrapper for type TString
// signature to use in the veto file: TString
struct JlTString: public Wrapper {

  JlTString(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TString (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TString.h:139:7
    jlcxx::TypeWrapper<TString>  t = jlModule.add_type<TString>("TString");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TString>>(new jlcxx::TypeWrapper<TString>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TString>> type_;
};
std::shared_ptr<Wrapper> newJlTString(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTString(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TIterator> : std::false_type { };
  template<> struct DefaultConstructible<TIterator> : std::false_type { };
}

// Class generating the wrapper for type TIterator
// signature to use in the veto file: TIterator
struct JlTIterator: public Wrapper {

  JlTIterator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TIterator (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TIterator.h:30:7
    jlcxx::TypeWrapper<TIterator>  t = jlModule.add_type<TIterator>("TIterator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TIterator>>(new jlcxx::TypeWrapper<TIterator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TIterator>> type_;
};
std::shared_ptr<Wrapper> newJlTIterator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTIterator(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TObjArrayIter> : std::false_type { };
  template<> struct DefaultConstructible<TObjArrayIter> : std::false_type { };
template<> struct SuperType<TObjArrayIter> { typedef TIterator type; };
}

// Class generating the wrapper for type TObjArrayIter
// signature to use in the veto file: TObjArrayIter
struct JlTObjArrayIter: public Wrapper {

  JlTObjArrayIter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TObjArrayIter (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:117:7
    jlcxx::TypeWrapper<TObjArrayIter>  t = jlModule.add_type<TObjArrayIter>("TObjArrayIter",
      jlcxx::julia_base_type<TIterator>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TObjArrayIter>>(new jlcxx::TypeWrapper<TObjArrayIter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TObjArrayIter::TObjArrayIter(const TObjArray *, Bool_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:135:4
    t.constructor<const TObjArray *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const TObjArray *, Bool_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TObjArrayIter::TObjArrayIter(const TObjArrayIter &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:136:4
    t.constructor<const TObjArrayIter &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TIterator & TObjArrayIter::operator=(const TIterator &) (" __HERE__ ")");
    // signature to use in the veto list: TIterator & TObjArrayIter::operator=(const TIterator &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:138:19
    t.method("assign", [](TObjArrayIter& a, const TIterator & arg0)->TIterator & { return a.operator=(arg0); });
    t.method("assign", [](TObjArrayIter* a, const TIterator & arg0)->TIterator & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TObjArrayIter & TObjArrayIter::operator=(const TObjArrayIter &) (" __HERE__ ")");
    // signature to use in the veto list: TObjArrayIter & TObjArrayIter::operator=(const TObjArrayIter &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:139:19
    t.method("assign", [](TObjArrayIter& a, const TObjArrayIter & arg0)->TObjArrayIter & { return a.operator=(arg0); });
    t.method("assign", [](TObjArrayIter* a, const TObjArrayIter & arg0)->TObjArrayIter & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for const TCollection * TObjArrayIter::GetCollection() (" __HERE__ ")");
    // signature to use in the veto list: const TCollection * TObjArrayIter::GetCollection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:141:23
    t.method("GetCollection", [](TObjArrayIter const& a)->const TCollection * { return a.GetCollection(); });
    t.method("GetCollection", [](TObjArrayIter const* a)->const TCollection * { return a->GetCollection(); });

    DEBUG_MSG("Adding wrapper for TObject * TObjArrayIter::Next() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObjArrayIter::Next()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:142:23
    t.method("Next", [](TObjArrayIter& a)->TObject * { return a.Next(); });
    t.method("Next", [](TObjArrayIter* a)->TObject * { return a->Next(); });

    DEBUG_MSG("Adding wrapper for void TObjArrayIter::Reset() (" __HERE__ ")");
    // signature to use in the veto list: void TObjArrayIter::Reset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:143:23
    t.method("Reset", [](TObjArrayIter& a)->void { a.Reset(); });
    t.method("Reset", [](TObjArrayIter* a)->void { a->Reset(); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Bool_t TObjArrayIter::operator!=(const TIterator &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObjArrayIter::operator!=(const TIterator &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:144:23
    t.method("!=", [](TObjArrayIter const& a, const TIterator & arg0)->Bool_t { return a.operator!=(arg0); });
    t.method("!=", [](TObjArrayIter const* a, const TIterator & arg0)->Bool_t { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TObjArrayIter::operator!=(const TObjArrayIter &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObjArrayIter::operator!=(const TObjArrayIter &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:145:23
    t.method("!=", [](TObjArrayIter const& a, const TObjArrayIter & arg0)->Bool_t { return a.operator!=(arg0); });
    t.method("!=", [](TObjArrayIter const* a, const TObjArrayIter & arg0)->Bool_t { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TObjArrayIter::operator*() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObjArrayIter::operator*()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TObjArray.h:146:23
    t.method("getindex", [](TObjArrayIter const& a)->TObject * { return a.operator*(); });
    t.method("getindex", [](TObjArrayIter const* a)->TObject * { return a->operator*(); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for Version_t TObjArrayIter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TObjArrayIter::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TObjArrayIter!Class_Version", []()->Version_t { return TObjArrayIter::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TObjArrayIter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObjArrayIter::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TObjArrayIter const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TObjArrayIter const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TObjArrayIter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TObjArrayIter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TObjArrayIter& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TObjArrayIter* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TObjArrayIter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObjArrayIter::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TObjArrayIter!DeclFileName", []() { return (std::string)TObjArrayIter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TObjArrayIter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TObjArrayIter::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TObjArrayIter!ImplFileLine", []()->int { return TObjArrayIter::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TObjArrayIter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObjArrayIter::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TObjArrayIter!ImplFileName", []() { return (std::string)TObjArrayIter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TObjArrayIter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObjArrayIter::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TObjArrayIter!Class_Name", []() { return (std::string)TObjArrayIter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TObjArrayIter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObjArrayIter::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TObjArrayIter!Dictionary", []()->TClass * { return TObjArrayIter::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TObjArrayIter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObjArrayIter::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TObjArrayIter!Class", []()->TClass * { return TObjArrayIter::Class(); });

    DEBUG_MSG("Adding wrapper for void TObjArrayIter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TObjArrayIter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TObjArrayIter& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TObjArrayIter* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TObjArrayIter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TObjArrayIter::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TObjArrayIter!DeclFileLine", []()->int { return TObjArrayIter::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TObjArrayIter>> type_;
};
std::shared_ptr<Wrapper> newJlTObjArrayIter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTObjArrayIter(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TDirectory> : std::false_type { };
  template<> struct DefaultConstructible<TDirectory> : std::false_type { };
template<> struct SuperType<TDirectory> { typedef TNamed type; };
}

// Class generating the wrapper for type TDirectory
// signature to use in the veto file: TDirectory
struct JlTDirectory: public Wrapper {

  JlTDirectory(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TDirectory (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:45:7
    jlcxx::TypeWrapper<TDirectory>  t = jlModule.add_type<TDirectory>("TDirectory",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TDirectory>>(new jlcxx::TypeWrapper<TDirectory>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TDirectory::TDirectory(const char *, const char *, Option_t *, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:178:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *, Option_t *, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TDirectory::AddDirectory(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::AddDirectory(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:180:24
    module_.method("TDirectory!AddDirectory", []()->void { TDirectory::AddDirectory(); });
    module_.method("TDirectory!AddDirectory", [](Bool_t arg0)->void { TDirectory::AddDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::AddDirectoryStatus() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::AddDirectoryStatus()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:181:24
    module_.method("TDirectory!AddDirectoryStatus", []()->Bool_t { return TDirectory::AddDirectoryStatus(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Append(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Append(TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:182:24
    t.method("Append", [](TDirectory& a, TObject * arg0)->void { a.Append(arg0); });
    t.method("Append", [](TDirectory& a, TObject * arg0, Bool_t arg1)->void { a.Append(arg0, arg1); });
    t.method("Append", [](TDirectory* a, TObject * arg0)->void { a->Append(arg0); });
    t.method("Append", [](TDirectory* a, TObject * arg0, Bool_t arg1)->void { a->Append(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Add(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Add(TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:183:24
    t.method("Add", [](TDirectory& a, TObject * arg0)->void { a.Add(arg0); });
    t.method("Add", [](TDirectory& a, TObject * arg0, Bool_t arg1)->void { a.Add(arg0, arg1); });
    t.method("Add", [](TDirectory* a, TObject * arg0)->void { a->Add(arg0); });
    t.method("Add", [](TDirectory* a, TObject * arg0, Bool_t arg1)->void { a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::AppendKey(TKey *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::AppendKey(TKey *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:184:24
    t.method("AppendKey", [](TDirectory& a, TKey * arg0)->Int_t { return a.AppendKey(arg0); });
    t.method("AppendKey", [](TDirectory* a, TKey * arg0)->Int_t { return a->AppendKey(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:185:24
    t.method("Browse", [](TDirectory& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TDirectory* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Build(TFile *, TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Build(TFile *, TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:186:24
    t.method("Build", [](TDirectory& a)->void { a.Build(); });
    t.method("Build", [](TDirectory& a, TFile * arg0)->void { a.Build(arg0); });
    t.method("Build", [](TDirectory& a, TFile * arg0, TDirectory * arg1)->void { a.Build(arg0, arg1); });
    t.method("Build", [](TDirectory* a)->void { a->Build(); });
    t.method("Build", [](TDirectory* a, TFile * arg0)->void { a->Build(arg0); });
    t.method("Build", [](TDirectory* a, TFile * arg0, TDirectory * arg1)->void { a->Build(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:187:24
    t.method("Clear", [](TDirectory& a)->void { a.Clear(); });
    t.method("Clear", [](TDirectory& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TDirectory* a)->void { a->Clear(); });
    t.method("Clear", [](TDirectory* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::CloneObject(const TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::CloneObject(const TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:188:24
    t.method("CloneObject", [](TDirectory& a, const TObject * arg0)->TObject * { return a.CloneObject(arg0); });
    t.method("CloneObject", [](TDirectory& a, const TObject * arg0, Bool_t arg1)->TObject * { return a.CloneObject(arg0, arg1); });
    t.method("CloneObject", [](TDirectory* a, const TObject * arg0)->TObject * { return a->CloneObject(arg0); });
    t.method("CloneObject", [](TDirectory* a, const TObject * arg0, Bool_t arg1)->TObject * { return a->CloneObject(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Close(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Close(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:189:24
    t.method("Close", [](TDirectory& a)->void { a.Close(); });
    t.method("Close", [](TDirectory& a, Option_t * arg0)->void { a.Close(arg0); });
    t.method("Close", [](TDirectory* a)->void { a->Close(); });
    t.method("Close", [](TDirectory* a, Option_t * arg0)->void { a->Close(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:191:24
    t.method("Copy", [](TDirectory const& a, TObject & arg0)->void { a.Copy(arg0); });
    t.method("Copy", [](TDirectory const* a, TObject & arg0)->void { a->Copy(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::cd() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::cd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:192:24
    t.method("cd", [](TDirectory& a)->Bool_t { return a.cd(); });
    t.method("cd", [](TDirectory* a)->Bool_t { return a->cd(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:193:24
    t.method("cd", [](TDirectory& a, const char * arg0)->Bool_t { return a.cd(arg0); });
    t.method("cd", [](TDirectory* a, const char * arg0)->Bool_t { return a->cd(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::DeleteAll(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::DeleteAll(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:194:24
    t.method("DeleteAll", [](TDirectory& a)->void { a.DeleteAll(); });
    t.method("DeleteAll", [](TDirectory& a, Option_t * arg0)->void { a.DeleteAll(arg0); });
    t.method("DeleteAll", [](TDirectory* a)->void { a->DeleteAll(); });
    t.method("DeleteAll", [](TDirectory* a, Option_t * arg0)->void { a->DeleteAll(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Delete(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Delete(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:195:24
    t.method("Delete", [](TDirectory& a)->void { a.Delete(); });
    t.method("Delete", [](TDirectory& a, const char * arg0)->void { a.Delete(arg0); });
    t.method("Delete", [](TDirectory* a)->void { a->Delete(); });
    t.method("Delete", [](TDirectory* a, const char * arg0)->void { a->Delete(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:196:24
    t.method("Draw", [](TDirectory& a)->void { a.Draw(); });
    t.method("Draw", [](TDirectory& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TDirectory* a)->void { a->Draw(); });
    t.method("Draw", [](TDirectory* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for TKey * TDirectory::FindKey(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectory::FindKey(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:197:24
    t.method("FindKey", [](TDirectory const& a, const char * arg0)->TKey * { return a.FindKey(arg0); });
    t.method("FindKey", [](TDirectory const* a, const char * arg0)->TKey * { return a->FindKey(arg0); });

    DEBUG_MSG("Adding wrapper for TKey * TDirectory::FindKeyAny(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectory::FindKeyAny(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:198:24
    t.method("FindKeyAny", [](TDirectory const& a, const char * arg0)->TKey * { return a.FindKeyAny(arg0); });
    t.method("FindKeyAny", [](TDirectory const* a, const char * arg0)->TKey * { return a->FindKeyAny(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::FindObject(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:199:24
    t.method("FindObject", [](TDirectory const& a, const char * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TDirectory const* a, const char * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::FindObject(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:200:24
    t.method("FindObject", [](TDirectory const& a, const TObject * arg0)->TObject * { return a.FindObject(arg0); });
    t.method("FindObject", [](TDirectory const* a, const TObject * arg0)->TObject * { return a->FindObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::FindObjectAny(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::FindObjectAny(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:201:24
    t.method("FindObjectAny", [](TDirectory const& a, const char * arg0)->TObject * { return a.FindObjectAny(arg0); });
    t.method("FindObjectAny", [](TDirectory const* a, const char * arg0)->TObject * { return a->FindObjectAny(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::FindObjectAnyFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::FindObjectAnyFile(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:202:24
    t.method("FindObjectAnyFile", [](TDirectory const& a, const char * arg0)->TObject * { return a.FindObjectAnyFile(arg0); });
    t.method("FindObjectAnyFile", [](TDirectory const* a, const char * arg0)->TObject * { return a->FindObjectAnyFile(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::Get(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::Get(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:203:24
    t.method("Get_", [](TDirectory& a, const char * arg0)->TObject * { return a.Get(arg0); });
    t.method("Get_", [](TDirectory* a, const char * arg0)->TObject * { return a->Get(arg0); });

    DEBUG_MSG("Adding wrapper for TDirectory * TDirectory::GetDirectory(const char *, Bool_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TDirectory::GetDirectory(const char *, Bool_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:209:24
    t.method("GetDirectory", [](TDirectory& a, const char * arg0)->TDirectory * { return a.GetDirectory(arg0); });
    t.method("GetDirectory", [](TDirectory& a, const char * arg0, Bool_t arg1)->TDirectory * { return a.GetDirectory(arg0, arg1); });
    t.method("GetDirectory", [](TDirectory& a, const char * arg0, Bool_t arg1, const char * arg2)->TDirectory * { return a.GetDirectory(arg0, arg1, arg2); });
    t.method("GetDirectory", [](TDirectory* a, const char * arg0)->TDirectory * { return a->GetDirectory(arg0); });
    t.method("GetDirectory", [](TDirectory* a, const char * arg0, Bool_t arg1)->TDirectory * { return a->GetDirectory(arg0, arg1); });
    t.method("GetDirectory", [](TDirectory* a, const char * arg0, Bool_t arg1, const char * arg2)->TDirectory * { return a->GetDirectory(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void * TDirectory::GetObjectChecked(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectory::GetObjectChecked(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:216:24
    t.method("GetObjectChecked", [](TDirectory& a, const char * arg0, const char * arg1)->void * { return a.GetObjectChecked(arg0, arg1); });
    t.method("GetObjectChecked", [](TDirectory* a, const char * arg0, const char * arg1)->void * { return a->GetObjectChecked(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void * TDirectory::GetObjectChecked(const char *, const TClass *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectory::GetObjectChecked(const char *, const TClass *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:217:24
    t.method("GetObjectChecked", [](TDirectory& a, const char * arg0, const TClass * arg1)->void * { return a.GetObjectChecked(arg0, arg1); });
    t.method("GetObjectChecked", [](TDirectory* a, const char * arg0, const TClass * arg1)->void * { return a->GetObjectChecked(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void * TDirectory::GetObjectUnchecked(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectory::GetObjectUnchecked(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:218:24
    t.method("GetObjectUnchecked", [](TDirectory& a, const char * arg0)->void * { return a.GetObjectUnchecked(arg0); });
    t.method("GetObjectUnchecked", [](TDirectory* a, const char * arg0)->void * { return a->GetObjectUnchecked(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::GetBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::GetBufferSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:219:24
    t.method("GetBufferSize", [](TDirectory const& a)->Int_t { return a.GetBufferSize(); });
    t.method("GetBufferSize", [](TDirectory const* a)->Int_t { return a->GetBufferSize(); });

    DEBUG_MSG("Adding wrapper for TFile * TDirectory::GetFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TDirectory::GetFile()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:220:24
    t.method("GetFile", [](TDirectory const& a)->TFile * { return a.GetFile(); });
    t.method("GetFile", [](TDirectory const* a)->TFile * { return a->GetFile(); });

    DEBUG_MSG("Adding wrapper for TKey * TDirectory::GetKey(const char *, Short_t) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectory::GetKey(const char *, Short_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:221:24
    t.method("GetKey", [](TDirectory const& a, const char * arg0)->TKey * { return a.GetKey(arg0); });
    t.method("GetKey", [](TDirectory const& a, const char * arg0, Short_t arg1)->TKey * { return a.GetKey(arg0, arg1); });
    t.method("GetKey", [](TDirectory const* a, const char * arg0)->TKey * { return a->GetKey(arg0); });
    t.method("GetKey", [](TDirectory const* a, const char * arg0, Short_t arg1)->TKey * { return a->GetKey(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TList * TDirectory::GetList() (" __HERE__ ")");
    // signature to use in the veto list: TList * TDirectory::GetList()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:222:24
    t.method("GetList", [](TDirectory const& a)->TList * { return a.GetList(); });
    t.method("GetList", [](TDirectory const* a)->TList * { return a->GetList(); });

    DEBUG_MSG("Adding wrapper for TList * TDirectory::GetListOfKeys() (" __HERE__ ")");
    // signature to use in the veto list: TList * TDirectory::GetListOfKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:223:24
    t.method("GetListOfKeys", [](TDirectory const& a)->TList * { return a.GetListOfKeys(); });
    t.method("GetListOfKeys", [](TDirectory const* a)->TList * { return a->GetListOfKeys(); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::GetMother() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::GetMother()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:224:24
    t.method("GetMother", [](TDirectory const& a)->TObject * { return a.GetMother(); });
    t.method("GetMother", [](TDirectory const* a)->TObject * { return a->GetMother(); });

    DEBUG_MSG("Adding wrapper for TDirectory * TDirectory::GetMotherDir() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TDirectory::GetMotherDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:225:24
    t.method("GetMotherDir", [](TDirectory const& a)->TDirectory * { return a.GetMotherDir(); });
    t.method("GetMotherDir", [](TDirectory const* a)->TDirectory * { return a->GetMotherDir(); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::GetNbytesKeys() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::GetNbytesKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:226:24
    t.method("GetNbytesKeys", [](TDirectory const& a)->Int_t { return a.GetNbytesKeys(); });
    t.method("GetNbytesKeys", [](TDirectory const* a)->Int_t { return a->GetNbytesKeys(); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::GetNkeys() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::GetNkeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:227:24
    t.method("GetNkeys", [](TDirectory const& a)->Int_t { return a.GetNkeys(); });
    t.method("GetNkeys", [](TDirectory const* a)->Int_t { return a->GetNkeys(); });

    DEBUG_MSG("Adding wrapper for Long64_t TDirectory::GetSeekDir() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectory::GetSeekDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:228:24
    t.method("GetSeekDir", [](TDirectory const& a)->Long64_t { return a.GetSeekDir(); });
    t.method("GetSeekDir", [](TDirectory const* a)->Long64_t { return a->GetSeekDir(); });

    DEBUG_MSG("Adding wrapper for Long64_t TDirectory::GetSeekParent() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectory::GetSeekParent()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:229:24
    t.method("GetSeekParent", [](TDirectory const& a)->Long64_t { return a.GetSeekParent(); });
    t.method("GetSeekParent", [](TDirectory const* a)->Long64_t { return a->GetSeekParent(); });

    DEBUG_MSG("Adding wrapper for Long64_t TDirectory::GetSeekKeys() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectory::GetSeekKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:230:24
    t.method("GetSeekKeys", [](TDirectory const& a)->Long64_t { return a.GetSeekKeys(); });
    t.method("GetSeekKeys", [](TDirectory const* a)->Long64_t { return a->GetSeekKeys(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectory::GetPathStatic() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectory::GetPathStatic()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:231:24
    t.method("GetPathStatic", [](TDirectory const& a) { return (std::string)a.GetPathStatic(); });
    t.method("GetPathStatic", [](TDirectory const* a) { return (std::string)a->GetPathStatic(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectory::GetPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectory::GetPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:232:24
    t.method("GetPath", [](TDirectory const& a) { return (std::string)a.GetPath(); });
    t.method("GetPath", [](TDirectory const* a) { return (std::string)a->GetPath(); });

    DEBUG_MSG("Adding wrapper for TUUID TDirectory::GetUUID() (" __HERE__ ")");
    // signature to use in the veto list: TUUID TDirectory::GetUUID()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:233:24
    t.method("GetUUID", [](TDirectory const& a)->TUUID { return a.GetUUID(); });
    t.method("GetUUID", [](TDirectory const* a)->TUUID { return a->GetUUID(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::IsBuilt() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::IsBuilt()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:234:24
    t.method("IsBuilt", [](TDirectory const& a)->Bool_t { return a.IsBuilt(); });
    t.method("IsBuilt", [](TDirectory const* a)->Bool_t { return a->IsBuilt(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:235:24
    t.method("IsFolder", [](TDirectory const& a)->Bool_t { return a.IsFolder(); });
    t.method("IsFolder", [](TDirectory const* a)->Bool_t { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::IsModified() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::IsModified()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:236:24
    t.method("IsModified", [](TDirectory const& a)->Bool_t { return a.IsModified(); });
    t.method("IsModified", [](TDirectory const* a)->Bool_t { return a->IsModified(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::IsWritable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::IsWritable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:237:24
    t.method("IsWritable", [](TDirectory const& a)->Bool_t { return a.IsWritable(); });
    t.method("IsWritable", [](TDirectory const* a)->Bool_t { return a->IsWritable(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:238:24
    t.method("ls", [](TDirectory const& a)->void { a.ls(); });
    t.method("ls", [](TDirectory const& a, Option_t * arg0)->void { a.ls(arg0); });
    t.method("ls", [](TDirectory const* a)->void { a->ls(); });
    t.method("ls", [](TDirectory const* a, Option_t * arg0)->void { a->ls(arg0); });

    DEBUG_MSG("Adding wrapper for TDirectory * TDirectory::mkdir(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TDirectory::mkdir(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:239:24
    t.method("mkdir", [](TDirectory& a, const char * arg0)->TDirectory * { return a.mkdir(arg0); });
    t.method("mkdir", [](TDirectory& a, const char * arg0, const char * arg1)->TDirectory * { return a.mkdir(arg0, arg1); });
    t.method("mkdir", [](TDirectory& a, const char * arg0, const char * arg1, Bool_t arg2)->TDirectory * { return a.mkdir(arg0, arg1, arg2); });
    t.method("mkdir", [](TDirectory* a, const char * arg0)->TDirectory * { return a->mkdir(arg0); });
    t.method("mkdir", [](TDirectory* a, const char * arg0, const char * arg1)->TDirectory * { return a->mkdir(arg0, arg1); });
    t.method("mkdir", [](TDirectory* a, const char * arg0, const char * arg1, Bool_t arg2)->TDirectory * { return a->mkdir(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TFile * TDirectory::OpenFile(const char *, Option_t *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TDirectory::OpenFile(const char *, Option_t *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:240:24
    t.method("OpenFile", [](TDirectory& a, const char * arg0)->TFile * { return a.OpenFile(arg0); });
    t.method("OpenFile", [](TDirectory& a, const char * arg0, Option_t * arg1)->TFile * { return a.OpenFile(arg0, arg1); });
    t.method("OpenFile", [](TDirectory& a, const char * arg0, Option_t * arg1, const char * arg2)->TFile * { return a.OpenFile(arg0, arg1, arg2); });
    t.method("OpenFile", [](TDirectory& a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFile * { return a.OpenFile(arg0, arg1, arg2, arg3); });
    t.method("OpenFile", [](TDirectory& a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFile * { return a.OpenFile(arg0, arg1, arg2, arg3, arg4); });
    t.method("OpenFile", [](TDirectory* a, const char * arg0)->TFile * { return a->OpenFile(arg0); });
    t.method("OpenFile", [](TDirectory* a, const char * arg0, Option_t * arg1)->TFile * { return a->OpenFile(arg0, arg1); });
    t.method("OpenFile", [](TDirectory* a, const char * arg0, Option_t * arg1, const char * arg2)->TFile * { return a->OpenFile(arg0, arg1, arg2); });
    t.method("OpenFile", [](TDirectory* a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFile * { return a->OpenFile(arg0, arg1, arg2, arg3); });
    t.method("OpenFile", [](TDirectory* a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFile * { return a->OpenFile(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:243:24
    t.method("Paint", [](TDirectory& a)->void { a.Paint(); });
    t.method("Paint", [](TDirectory& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TDirectory* a)->void { a->Paint(); });
    t.method("Paint", [](TDirectory* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:244:24
    t.method("Print", [](TDirectory const& a)->void { a.Print(); });
    t.method("Print", [](TDirectory const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TDirectory const* a)->void { a->Print(); });
    t.method("Print", [](TDirectory const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Purge(Short_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Purge(Short_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:245:24
    t.method("Purge", [](TDirectory& a)->void { a.Purge(); });
    t.method("Purge", [](TDirectory& a, Short_t arg0)->void { a.Purge(arg0); });
    t.method("Purge", [](TDirectory* a)->void { a->Purge(); });
    t.method("Purge", [](TDirectory* a, Short_t arg0)->void { a->Purge(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::pwd() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::pwd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:246:24
    t.method("pwd", [](TDirectory const& a)->void { a.pwd(); });
    t.method("pwd", [](TDirectory const* a)->void { a->pwd(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::ReadAll(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::ReadAll(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:247:24
    t.method("ReadAll", [](TDirectory& a)->void { a.ReadAll(); });
    t.method("ReadAll", [](TDirectory& a, Option_t * arg0)->void { a.ReadAll(arg0); });
    t.method("ReadAll", [](TDirectory* a)->void { a->ReadAll(); });
    t.method("ReadAll", [](TDirectory* a, Option_t * arg0)->void { a->ReadAll(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::ReadKeys(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::ReadKeys(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:248:24
    t.method("ReadKeys", [](TDirectory& a)->Int_t { return a.ReadKeys(); });
    t.method("ReadKeys", [](TDirectory& a, Bool_t arg0)->Int_t { return a.ReadKeys(arg0); });
    t.method("ReadKeys", [](TDirectory* a)->Int_t { return a->ReadKeys(); });
    t.method("ReadKeys", [](TDirectory* a, Bool_t arg0)->Int_t { return a->ReadKeys(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::ReadTObject(TObject *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::ReadTObject(TObject *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:249:24
    t.method("ReadTObject", [](TDirectory& a, TObject * arg0, const char * arg1)->Int_t { return a.ReadTObject(arg0, arg1); });
    t.method("ReadTObject", [](TDirectory* a, TObject * arg0, const char * arg1)->Int_t { return a->ReadTObject(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TObject * TDirectory::Remove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectory::Remove(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:250:24
    t.method("Remove", [](TDirectory& a, TObject * arg0)->TObject * { return a.Remove(arg0); });
    t.method("Remove", [](TDirectory* a, TObject * arg0)->TObject * { return a->Remove(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:251:24
    t.method("RecursiveRemove", [](TDirectory& a, TObject * arg0)->void { a.RecursiveRemove(arg0); });
    t.method("RecursiveRemove", [](TDirectory* a, TObject * arg0)->void { a->RecursiveRemove(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::rmdir(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::rmdir(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:252:24
    t.method("rmdir", [](TDirectory& a, const char * arg0)->void { a.rmdir(arg0); });
    t.method("rmdir", [](TDirectory* a, const char * arg0)->void { a->rmdir(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Save() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Save()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:253:24
    t.method("Save", [](TDirectory& a)->void { a.Save(); });
    t.method("Save", [](TDirectory* a)->void { a->Save(); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::SaveObjectAs(const TObject *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::SaveObjectAs(const TObject *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:254:24
    t.method("SaveObjectAs", [](TDirectory const& a, const TObject * arg0)->Int_t { return a.SaveObjectAs(arg0); });
    t.method("SaveObjectAs", [](TDirectory const& a, const TObject * arg0, const char * arg1)->Int_t { return a.SaveObjectAs(arg0, arg1); });
    t.method("SaveObjectAs", [](TDirectory const& a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.SaveObjectAs(arg0, arg1, arg2); });
    t.method("SaveObjectAs", [](TDirectory const* a, const TObject * arg0)->Int_t { return a->SaveObjectAs(arg0); });
    t.method("SaveObjectAs", [](TDirectory const* a, const TObject * arg0, const char * arg1)->Int_t { return a->SaveObjectAs(arg0, arg1); });
    t.method("SaveObjectAs", [](TDirectory const* a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->SaveObjectAs(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SaveSelf(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SaveSelf(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:255:24
    t.method("SaveSelf", [](TDirectory& a)->void { a.SaveSelf(); });
    t.method("SaveSelf", [](TDirectory& a, Bool_t arg0)->void { a.SaveSelf(arg0); });
    t.method("SaveSelf", [](TDirectory* a)->void { a->SaveSelf(); });
    t.method("SaveSelf", [](TDirectory* a, Bool_t arg0)->void { a->SaveSelf(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetBufferSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetBufferSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:256:24
    t.method("SetBufferSize", [](TDirectory& a, Int_t arg0)->void { a.SetBufferSize(arg0); });
    t.method("SetBufferSize", [](TDirectory* a, Int_t arg0)->void { a->SetBufferSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetModified() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetModified()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:257:24
    t.method("SetModified", [](TDirectory& a)->void { a.SetModified(); });
    t.method("SetModified", [](TDirectory* a)->void { a->SetModified(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetMother(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetMother(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:258:24
    t.method("SetMother", [](TDirectory& a, TObject * arg0)->void { a.SetMother(arg0); });
    t.method("SetMother", [](TDirectory* a, TObject * arg0)->void { a->SetMother(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:259:24
    t.method("SetName", [](TDirectory& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TDirectory* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetTRefAction(TObject *, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetTRefAction(TObject *, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:260:24
    t.method("SetTRefAction", [](TDirectory& a, TObject * arg0, TObject * arg1)->void { a.SetTRefAction(arg0, arg1); });
    t.method("SetTRefAction", [](TDirectory* a, TObject * arg0, TObject * arg1)->void { a->SetTRefAction(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetSeekDir(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetSeekDir(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:261:24
    t.method("SetSeekDir", [](TDirectory& a, Long64_t arg0)->void { a.SetSeekDir(arg0); });
    t.method("SetSeekDir", [](TDirectory* a, Long64_t arg0)->void { a->SetSeekDir(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::SetWritable(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::SetWritable(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:262:24
    t.method("SetWritable", [](TDirectory& a, Bool_t arg0)->void { a.SetWritable(arg0); });
    t.method("SetWritable", [](TDirectory* a, Bool_t arg0)->void { a->SetWritable(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::Sizeof() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::Sizeof()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:263:24
    t.method("Sizeof", [](TDirectory const& a)->Int_t { return a.Sizeof(); });
    t.method("Sizeof", [](TDirectory const* a)->Int_t { return a->Sizeof(); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:264:24
    t.method("Write", [](TDirectory& a)->Int_t { return a.Write(); });
    t.method("Write", [](TDirectory& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TDirectory& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TDirectory& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); });
    t.method("Write", [](TDirectory* a)->Int_t { return a->Write(); });
    t.method("Write", [](TDirectory* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TDirectory* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });
    t.method("Write", [](TDirectory* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:265:24
    t.method("Write", [](TDirectory const& a)->Int_t { return a.Write(); });
    t.method("Write", [](TDirectory const& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TDirectory const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TDirectory const& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); });
    t.method("Write", [](TDirectory const* a)->Int_t { return a->Write(); });
    t.method("Write", [](TDirectory const* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TDirectory const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });
    t.method("Write", [](TDirectory const* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::WriteTObject(const TObject *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::WriteTObject(const TObject *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:266:24
    t.method("WriteTObject", [](TDirectory& a, const TObject * arg0)->Int_t { return a.WriteTObject(arg0); });
    t.method("WriteTObject", [](TDirectory& a, const TObject * arg0, const char * arg1)->Int_t { return a.WriteTObject(arg0, arg1); });
    t.method("WriteTObject", [](TDirectory& a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.WriteTObject(arg0, arg1, arg2); });
    t.method("WriteTObject", [](TDirectory& a, const TObject * arg0, const char * arg1, Option_t * arg2, Int_t arg3)->Int_t { return a.WriteTObject(arg0, arg1, arg2, arg3); });
    t.method("WriteTObject", [](TDirectory* a, const TObject * arg0)->Int_t { return a->WriteTObject(arg0); });
    t.method("WriteTObject", [](TDirectory* a, const TObject * arg0, const char * arg1)->Int_t { return a->WriteTObject(arg0, arg1); });
    t.method("WriteTObject", [](TDirectory* a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->WriteTObject(arg0, arg1, arg2); });
    t.method("WriteTObject", [](TDirectory* a, const TObject * arg0, const char * arg1, Option_t * arg2, Int_t arg3)->Int_t { return a->WriteTObject(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::WriteObjectAny(const void *, const char *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::WriteObjectAny(const void *, const char *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:300:24
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const char * arg1, const char * arg2)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2); });
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3); });
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3, arg4); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const char * arg1, const char * arg2)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Int_t TDirectory::WriteObjectAny(const void *, const TClass *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectory::WriteObjectAny(const void *, const TClass *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:301:24
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const TClass * arg1, const char * arg2)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2); });
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3); });
    t.method("WriteObjectAny", [](TDirectory& a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3, arg4); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const TClass * arg1, const char * arg2)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3); });
    t.method("WriteObjectAny", [](TDirectory* a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TDirectory::WriteDirHeader() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::WriteDirHeader()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:302:24
    t.method("WriteDirHeader", [](TDirectory& a)->void { a.WriteDirHeader(); });
    t.method("WriteDirHeader", [](TDirectory* a)->void { a->WriteDirHeader(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::WriteKeys() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::WriteKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:303:24
    t.method("WriteKeys", [](TDirectory& a)->void { a.WriteKeys(); });
    t.method("WriteKeys", [](TDirectory* a)->void { a->WriteKeys(); });

    DEBUG_MSG("Adding wrapper for Bool_t TDirectory::Cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectory::Cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:305:24
    module_.method("TDirectory!Cd", [](const char * arg0)->Bool_t { return TDirectory::Cd(arg0); });

    DEBUG_MSG("Adding wrapper for void TDirectory::DecodeNameCycle(const char *, char *, Short_t &, const size_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::DecodeNameCycle(const char *, char *, Short_t &, const size_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:306:24
    module_.method("TDirectory!DecodeNameCycle", [](const char * arg0, char * arg1, Short_t & arg2)->void { TDirectory::DecodeNameCycle(arg0, arg1, arg2); });
    module_.method("TDirectory!DecodeNameCycle", [](const char * arg0, char * arg1, Short_t & arg2, const size_t arg3)->void { TDirectory::DecodeNameCycle(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Version_t TDirectory::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TDirectory::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TDirectory!Class_Version", []()->Version_t { return TDirectory::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectory::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectory::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TDirectory const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TDirectory const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TDirectory& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TDirectory* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TDirectory::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectory::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TDirectory!DeclFileName", []() { return (std::string)TDirectory::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TDirectory::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TDirectory::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TDirectory!ImplFileLine", []()->int { return TDirectory::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectory::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectory::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TDirectory!ImplFileName", []() { return (std::string)TDirectory::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectory::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectory::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TDirectory!Class_Name", []() { return (std::string)TDirectory::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectory::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectory::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TDirectory!Dictionary", []()->TClass * { return TDirectory::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectory::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectory::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TDirectory!Class", []()->TClass * { return TDirectory::Class(); });

    DEBUG_MSG("Adding wrapper for void TDirectory::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectory::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TDirectory& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TDirectory* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TDirectory::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TDirectory::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TDirectory!DeclFileLine", []()->int { return TDirectory::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TDirectory>> type_;
};
std::shared_ptr<Wrapper> newJlTDirectory(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTDirectory(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TDirectory::TContext> : std::false_type { };
  template<> struct DefaultConstructible<TDirectory::TContext> : std::false_type { };
}

// Class generating the wrapper for type TDirectory::TContext
// signature to use in the veto file: TDirectory::TContext
struct JlTDirectory_TContext: public Wrapper {

  JlTDirectory_TContext(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TDirectory::TContext (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:89:10
    jlcxx::TypeWrapper<TDirectory::TContext>  t = jlModule.add_type<TDirectory::TContext>("TDirectory!TContext");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TDirectory::TContext>>(new jlcxx::TypeWrapper<TDirectory::TContext>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TDirectory::TContext::TContext(TDirectory *, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:108:7
    t.constructor<TDirectory *, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TDirectory::TContext::TContext(TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectory.h:126:7
    t.constructor<TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TDirectory::TContext>> type_;
};
std::shared_ptr<Wrapper> newJlTDirectory_TContext(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTDirectory_TContext(module));
}
