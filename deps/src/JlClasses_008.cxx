// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TTree> : std::false_type { };
  template<> struct DefaultConstructible<TTree> : std::false_type { };
template<> struct SuperType<TTree> { typedef TNamed type; };
}

// Class generating the wrapper for type TTree
// signature to use in the veto file: TTree
struct JlTTree: public Wrapper {

  JlTTree(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTree (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:79:7
    jlcxx::TypeWrapper<TTree>  t = jlModule.add_type<TTree>("TTree",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTree>>(new jlcxx::TypeWrapper<TTree>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/false);


    DEBUG_MSG("Adding wrapper for void TTree::TTree(const char *, const char *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:315:4
    t.constructor<const char *, const char *>(/*finalize=*/false);
    t.constructor<const char *, const char *, Int_t>(/*finalize=*/false);
    t.constructor<const char *, const char *, Int_t, TDirectory *>(/*finalize=*/false);

    DEBUG_MSG("Adding wrapper for Int_t TTree::AddBranchToCache(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::AddBranchToCache(const char *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:321:28
    t.method("AddBranchToCache", static_cast<Int_t (TTree::*)(const char *, Bool_t) >(&TTree::AddBranchToCache));
    t.method("AddBranchToCache", [](TTree& a, const char * arg0)->Int_t { return a.AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree* a, const char * arg0)->Int_t { return a->AddBranchToCache(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::AddBranchToCache(TBranch *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::AddBranchToCache(TBranch *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:322:28
    t.method("AddBranchToCache", static_cast<Int_t (TTree::*)(TBranch *, Bool_t) >(&TTree::AddBranchToCache));
    t.method("AddBranchToCache", [](TTree& a, TBranch * arg0)->Int_t { return a.AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree* a, TBranch * arg0)->Int_t { return a->AddBranchToCache(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::DropBranchFromCache(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::DropBranchFromCache(const char *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:323:28
    t.method("DropBranchFromCache", static_cast<Int_t (TTree::*)(const char *, Bool_t) >(&TTree::DropBranchFromCache));
    t.method("DropBranchFromCache", [](TTree& a, const char * arg0)->Int_t { return a.DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree* a, const char * arg0)->Int_t { return a->DropBranchFromCache(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::DropBranchFromCache(TBranch *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::DropBranchFromCache(TBranch *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:324:28
    t.method("DropBranchFromCache", static_cast<Int_t (TTree::*)(TBranch *, Bool_t) >(&TTree::DropBranchFromCache));
    t.method("DropBranchFromCache", [](TTree& a, TBranch * arg0)->Int_t { return a.DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree* a, TBranch * arg0)->Int_t { return a->DropBranchFromCache(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::AddClone(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddClone(TTree *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:325:28
    t.method("AddClone", static_cast<void (TTree::*)(TTree *) >(&TTree::AddClone));

    DEBUG_MSG("Adding wrapper for void TTree::AddTotBytes(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddTotBytes(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:331:28
    t.method("AddTotBytes", static_cast<void (TTree::*)(Int_t) >(&TTree::AddTotBytes));

    DEBUG_MSG("Adding wrapper for void TTree::AddZipBytes(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddZipBytes(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:332:28
    t.method("AddZipBytes", static_cast<void (TTree::*)(Int_t) >(&TTree::AddZipBytes));

    DEBUG_MSG("Adding wrapper for void TTree::AddAllocationCount(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddAllocationCount(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:337:9
    t.method("AddAllocationCount", static_cast<void (TTree::*)(UInt_t) >(&TTree::AddAllocationCount));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::AutoSave(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::AutoSave(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:338:28
    t.method("AutoSave", static_cast<Long64_t (TTree::*)(Option_t *) >(&TTree::AutoSave));
    t.method("AutoSave", [](TTree& a)->Long64_t { return a.AutoSave(); });
    t.method("AutoSave", [](TTree* a)->Long64_t { return a->AutoSave(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(TCollection *, Int_t, Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(TCollection *, Int_t, Int_t, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:375:28
    t.method("Branch", static_cast<Int_t (TTree::*)(TCollection *, Int_t, Int_t, const char *) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, TCollection * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, TCollection * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree& a, TCollection * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, TCollection * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, TCollection * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, TCollection * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Branch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(TList *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(TList *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:376:28
    t.method("Branch", static_cast<Int_t (TTree::*)(TList *, Int_t, Int_t) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, TList * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, TList * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, TList * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, TList * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:377:28
    t.method("Branch", static_cast<Int_t (TTree::*)(const char *, Int_t, Int_t) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, const char * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, const char * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, const char * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, const char * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, void *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, void *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:378:28
    t.method("Branch", static_cast<TBranch * (TTree::*)(const char *, void *, const char *, Int_t) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, const char * arg0, void * arg1, const char * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, void * arg1, const char * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, char *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:379:28
    t.method("Branch", static_cast<TBranch * (TTree::*)(const char *, char *, const char *, Int_t) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, const char * arg0, char * arg1, const char * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, char * arg1, const char * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:394:28
    t.method("Branch", static_cast<TBranch * (TTree::*)(const char *, const char *, void *, Int_t, Int_t) >(&TTree::Branch));
    t.method("Branch", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->Branch(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Bronch(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Bronch(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:416:28
    t.method("Bronch", static_cast<TBranch * (TTree::*)(const char *, const char *, void *, Int_t, Int_t) >(&TTree::Bronch));
    t.method("Bronch", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.Bronch(arg0, arg1, arg2); });
    t.method("Bronch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.Bronch(arg0, arg1, arg2, arg3); });
    t.method("Bronch", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->Bronch(arg0, arg1, arg2); });
    t.method("Bronch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->Bronch(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::BranchOld(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::BranchOld(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:417:28
    t.method("BranchOld", static_cast<TBranch * (TTree::*)(const char *, const char *, void *, Int_t, Int_t) >(&TTree::BranchOld));
    t.method("BranchOld", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.BranchOld(arg0, arg1, arg2); });
    t.method("BranchOld", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.BranchOld(arg0, arg1, arg2, arg3); });
    t.method("BranchOld", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->BranchOld(arg0, arg1, arg2); });
    t.method("BranchOld", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->BranchOld(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::BranchRef() (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::BranchRef()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:418:28
    t.method("BranchRef", static_cast<TBranch * (TTree::*)() >(&TTree::BranchRef));

    DEBUG_MSG("Adding wrapper for void TTree::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Browse(TBrowser *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:419:28
    t.method("Browse", static_cast<void (TTree::*)(TBrowser *) >(&TTree::Browse));

    DEBUG_MSG("Adding wrapper for Int_t TTree::BuildIndex(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::BuildIndex(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:420:28
    t.method("BuildIndex", static_cast<Int_t (TTree::*)(const char *, const char *) >(&TTree::BuildIndex));
    t.method("BuildIndex", [](TTree& a, const char * arg0)->Int_t { return a.BuildIndex(arg0); });
    t.method("BuildIndex", [](TTree* a, const char * arg0)->Int_t { return a->BuildIndex(arg0); });

    DEBUG_MSG("Adding wrapper for TStreamerInfo * TTree::BuildStreamerInfo(TClass *, void *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TStreamerInfo * TTree::BuildStreamerInfo(TClass *, void *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:421:28
    t.method("BuildStreamerInfo", static_cast<TStreamerInfo * (TTree::*)(TClass *, void *, Bool_t) >(&TTree::BuildStreamerInfo));
    t.method("BuildStreamerInfo", [](TTree& a, TClass * arg0)->TStreamerInfo * { return a.BuildStreamerInfo(arg0); });
    t.method("BuildStreamerInfo", [](TTree& a, TClass * arg0, void * arg1)->TStreamerInfo * { return a.BuildStreamerInfo(arg0, arg1); });
    t.method("BuildStreamerInfo", [](TTree* a, TClass * arg0)->TStreamerInfo * { return a->BuildStreamerInfo(arg0); });
    t.method("BuildStreamerInfo", [](TTree* a, TClass * arg0, void * arg1)->TStreamerInfo * { return a->BuildStreamerInfo(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TFile * TTree::ChangeFile(TFile *) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TTree::ChangeFile(TFile *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:422:28
    t.method("ChangeFile", static_cast<TFile * (TTree::*)(TFile *) >(&TTree::ChangeFile));

    DEBUG_MSG("Adding wrapper for TTree * TTree::CloneTree(Long64_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::CloneTree(Long64_t, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:423:28
    t.method("CloneTree", static_cast<TTree * (TTree::*)(Long64_t, Option_t *) >(&TTree::CloneTree));
    t.method("CloneTree", [](TTree& a)->TTree * { return a.CloneTree(); });
    t.method("CloneTree", [](TTree& a, Long64_t arg0)->TTree * { return a.CloneTree(arg0); });
    t.method("CloneTree", [](TTree* a)->TTree * { return a->CloneTree(); });
    t.method("CloneTree", [](TTree* a, Long64_t arg0)->TTree * { return a->CloneTree(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::CopyAddresses(TTree *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::CopyAddresses(TTree *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:424:28
    t.method("CopyAddresses", static_cast<void (TTree::*)(TTree *, Bool_t) >(&TTree::CopyAddresses));
    t.method("CopyAddresses", [](TTree& a, TTree * arg0)->void { a.CopyAddresses(arg0); });
    t.method("CopyAddresses", [](TTree* a, TTree * arg0)->void { a->CopyAddresses(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::CopyEntries(TTree *, Long64_t, Option_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::CopyEntries(TTree *, Long64_t, Option_t *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:425:28
    t.method("CopyEntries", static_cast<Long64_t (TTree::*)(TTree *, Long64_t, Option_t *, Bool_t) >(&TTree::CopyEntries));
    t.method("CopyEntries", [](TTree& a, TTree * arg0)->Long64_t { return a.CopyEntries(arg0); });
    t.method("CopyEntries", [](TTree& a, TTree * arg0, Long64_t arg1)->Long64_t { return a.CopyEntries(arg0, arg1); });
    t.method("CopyEntries", [](TTree& a, TTree * arg0, Long64_t arg1, Option_t * arg2)->Long64_t { return a.CopyEntries(arg0, arg1, arg2); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0)->Long64_t { return a->CopyEntries(arg0); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0, Long64_t arg1)->Long64_t { return a->CopyEntries(arg0, arg1); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0, Long64_t arg1, Option_t * arg2)->Long64_t { return a->CopyEntries(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::CopyTree(const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::CopyTree(const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:426:28
    t.method("CopyTree", static_cast<TTree * (TTree::*)(const char *, Option_t *, Long64_t, Long64_t) >(&TTree::CopyTree));
    t.method("CopyTree", [](TTree& a, const char * arg0)->TTree * { return a.CopyTree(arg0); });
    t.method("CopyTree", [](TTree& a, const char * arg0, Option_t * arg1)->TTree * { return a.CopyTree(arg0, arg1); });
    t.method("CopyTree", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2)->TTree * { return a.CopyTree(arg0, arg1, arg2); });
    t.method("CopyTree", [](TTree* a, const char * arg0)->TTree * { return a->CopyTree(arg0); });
    t.method("CopyTree", [](TTree* a, const char * arg0, Option_t * arg1)->TTree * { return a->CopyTree(arg0, arg1); });
    t.method("CopyTree", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2)->TTree * { return a->CopyTree(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TTree::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:428:28
    t.method("DirectoryAutoAdd", static_cast<void (TTree::*)(TDirectory *) >(&TTree::DirectoryAutoAdd));

    DEBUG_MSG("Adding wrapper for Int_t TTree::Debug() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Debug()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:429:28
    t.method("Debug", static_cast<Int_t (TTree::*)()  const>(&TTree::Debug));

    DEBUG_MSG("Adding wrapper for void TTree::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Delete(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:430:28
    t.method("Delete", static_cast<void (TTree::*)(Option_t *) >(&TTree::Delete));
    t.method("Delete", [](TTree& a)->void { a.Delete(); });
    t.method("Delete", [](TTree* a)->void { a->Delete(); });

    DEBUG_MSG("Adding wrapper for void TTree::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Draw(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:431:28
    t.method("Draw", static_cast<void (TTree::*)(Option_t *) >(&TTree::Draw));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Draw(const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Draw(const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:433:28
    t.method("Draw", static_cast<Long64_t (TTree::*)(const char *, const char *, Option_t *, Long64_t, Long64_t) >(&TTree::Draw));
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Draw(arg0, arg1); });
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a.Draw(arg0, arg1, arg2); });
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a.Draw(arg0, arg1, arg2, arg3); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Draw(arg0, arg1); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a->Draw(arg0, arg1, arg2); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a->Draw(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TTree::DropBaskets() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DropBaskets()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:434:28
    t.method("DropBaskets", static_cast<void (TTree::*)() >(&TTree::DropBaskets));

    DEBUG_MSG("Adding wrapper for void TTree::DropBuffers(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DropBuffers(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:435:28
    t.method("DropBuffers", static_cast<void (TTree::*)(Int_t) >(&TTree::DropBuffers));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::EnableCache() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::EnableCache()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:436:28
    t.method("EnableCache", static_cast<Bool_t (TTree::*)() >(&TTree::EnableCache));

    DEBUG_MSG("Adding wrapper for Int_t TTree::Fill() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Fill()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:437:28
    t.method("Fill", static_cast<Int_t (TTree::*)() >(&TTree::Fill));

    DEBUG_MSG("Adding wrapper for TBranch * TTree::FindBranch(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::FindBranch(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:438:28
    t.method("FindBranch", static_cast<TBranch * (TTree::*)(const char *) >(&TTree::FindBranch));

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::FindLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::FindLeaf(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:439:28
    t.method("FindLeaf", static_cast<TLeaf * (TTree::*)(const char *) >(&TTree::FindLeaf));

    DEBUG_MSG("Adding wrapper for Int_t TTree::Fit(const char *, const char *, const char *, Option_t *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Fit(const char *, const char *, const char *, Option_t *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:440:28
    t.method("Fit", static_cast<Int_t (TTree::*)(const char *, const char *, const char *, Option_t *, Option_t *, Long64_t, Long64_t) >(&TTree::Fit));
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4)->Int_t { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5)->Int_t { return a.Fit(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4)->Int_t { return a->Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5)->Int_t { return a->Fit(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::FlushBaskets(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::FlushBaskets(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:441:28
    t.method("FlushBaskets", static_cast<Int_t (TTree::*)(Bool_t)  const>(&TTree::FlushBaskets));
    t.method("FlushBaskets", [](TTree const& a)->Int_t { return a.FlushBaskets(); });
    t.method("FlushBaskets", [](TTree const* a)->Int_t { return a->FlushBaskets(); });

    DEBUG_MSG("Adding wrapper for const char * TTree::GetAlias(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::GetAlias(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:442:28
    t.method("GetAlias", [](TTree const& a, const char * arg0) { return (std::string)a.GetAlias(arg0); });
    t.method("GetAlias", [](TTree const* a, const char * arg0) { return (std::string)a->GetAlias(arg0); });

    DEBUG_MSG("Adding wrapper for UInt_t TTree::GetAllocationCount() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TTree::GetAllocationCount()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:443:28
    t.method("GetAllocationCount", static_cast<UInt_t (TTree::*)()  const>(&TTree::GetAllocationCount));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetAutoFlush() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetAutoFlush()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:447:28
    t.method("GetAutoFlush", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetAutoFlush));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetAutoSave() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetAutoSave()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:448:28
    t.method("GetAutoSave", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetAutoSave));

    DEBUG_MSG("Adding wrapper for TBranch * TTree::GetBranch(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::GetBranch(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:449:28
    t.method("GetBranch", static_cast<TBranch * (TTree::*)(const char *) >(&TTree::GetBranch));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::GetBranchStatus(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::GetBranchStatus(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:451:28
    t.method("GetBranchStatus", static_cast<Bool_t (TTree::*)(const char *)  const>(&TTree::GetBranchStatus));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetBranchStyle() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetBranchStyle()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:452:28
    module_.method("TTree!GetBranchStyle", static_cast<Int_t (*)() >(&TTree::GetBranchStyle));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetCacheSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetCacheSize()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:453:28
    t.method("GetCacheSize", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetCacheSize));

    DEBUG_MSG("Adding wrapper for TTree::TClusterIterator TTree::GetClusterIterator(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTree::TClusterIterator TTree::GetClusterIterator(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:454:29
    t.method("GetClusterIterator", static_cast<TTree::TClusterIterator (TTree::*)(Long64_t) >(&TTree::GetClusterIterator));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetChainEntryNumber(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetChainEntryNumber(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:455:28
    t.method("GetChainEntryNumber", static_cast<Long64_t (TTree::*)(Long64_t)  const>(&TTree::GetChainEntryNumber));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetChainOffset() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetChainOffset()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:456:28
    t.method("GetChainOffset", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetChainOffset));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::GetClusterPrefetch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::GetClusterPrefetch()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:457:28
    t.method("GetClusterPrefetch", static_cast<Bool_t (TTree::*)()  const>(&TTree::GetClusterPrefetch));

    DEBUG_MSG("Adding wrapper for TFile * TTree::GetCurrentFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TTree::GetCurrentFile()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:458:28
    t.method("GetCurrentFile", static_cast<TFile * (TTree::*)()  const>(&TTree::GetCurrentFile));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetDefaultEntryOffsetLen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetDefaultEntryOffsetLen()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:459:28
    t.method("GetDefaultEntryOffsetLen", static_cast<Int_t (TTree::*)()  const>(&TTree::GetDefaultEntryOffsetLen));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetDebugMax() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetDebugMax()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:460:28
    t.method("GetDebugMax", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetDebugMax));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetDebugMin() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetDebugMin()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:461:28
    t.method("GetDebugMin", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetDebugMin));

    DEBUG_MSG("Adding wrapper for TDirectory * TTree::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TTree::GetDirectory()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:462:28
    t.method("GetDirectory", static_cast<TDirectory * (TTree::*)()  const>(&TTree::GetDirectory));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntries()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:463:28
    t.method("GetEntries", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetEntries));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntries(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntries(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:464:28
    t.method("GetEntries", static_cast<Long64_t (TTree::*)(const char *) >(&TTree::GetEntries));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntriesFast() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntriesFast()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:465:28
    t.method("GetEntriesFast", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetEntriesFast));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntriesFriend() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntriesFriend()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:466:28
    t.method("GetEntriesFriend", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetEntriesFriend));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEstimate() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEstimate()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:467:28
    t.method("GetEstimate", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetEstimate));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEntry(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEntry(Long64_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:468:28
    t.method("GetEntry", static_cast<Int_t (TTree::*)(Long64_t, Int_t) >(&TTree::GetEntry));
    t.method("GetEntry", [](TTree& a, Long64_t arg0)->Int_t { return a.GetEntry(arg0); });
    t.method("GetEntry", [](TTree* a, Long64_t arg0)->Int_t { return a->GetEntry(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEvent(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEvent(Long64_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:469:28
    t.method("GetEvent", static_cast<Int_t (TTree::*)(Long64_t, Int_t) >(&TTree::GetEvent));
    t.method("GetEvent", [](TTree& a, Long64_t arg0)->Int_t { return a.GetEvent(arg0); });
    t.method("GetEvent", [](TTree* a, Long64_t arg0)->Int_t { return a->GetEvent(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEntryWithIndex(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEntryWithIndex(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:470:28
    t.method("GetEntryWithIndex", static_cast<Int_t (TTree::*)(Int_t, Int_t) >(&TTree::GetEntryWithIndex));
    t.method("GetEntryWithIndex", [](TTree& a, Int_t arg0)->Int_t { return a.GetEntryWithIndex(arg0); });
    t.method("GetEntryWithIndex", [](TTree* a, Int_t arg0)->Int_t { return a->GetEntryWithIndex(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumberWithBestIndex(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumberWithBestIndex(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:471:28
    t.method("GetEntryNumberWithBestIndex", static_cast<Long64_t (TTree::*)(Long64_t, Long64_t)  const>(&TTree::GetEntryNumberWithBestIndex));
    t.method("GetEntryNumberWithBestIndex", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetEntryNumberWithBestIndex(arg0); });
    t.method("GetEntryNumberWithBestIndex", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetEntryNumberWithBestIndex(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumberWithIndex(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumberWithIndex(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:472:28
    t.method("GetEntryNumberWithIndex", static_cast<Long64_t (TTree::*)(Long64_t, Long64_t)  const>(&TTree::GetEntryNumberWithIndex));
    t.method("GetEntryNumberWithIndex", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetEntryNumberWithIndex(arg0); });
    t.method("GetEntryNumberWithIndex", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetEntryNumberWithIndex(arg0); });

    DEBUG_MSG("Adding wrapper for TEntryList * TTree::GetEntryList() (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TTree::GetEntryList()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:474:28
    t.method("GetEntryList", static_cast<TEntryList * (TTree::*)() >(&TTree::GetEntryList));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumber(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumber(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:475:28
    t.method("GetEntryNumber", static_cast<Long64_t (TTree::*)(Long64_t)  const>(&TTree::GetEntryNumber));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetFileNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetFileNumber()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:476:28
    t.method("GetFileNumber", static_cast<Int_t (TTree::*)()  const>(&TTree::GetFileNumber));

    DEBUG_MSG("Adding wrapper for TTree * TTree::GetFriend(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::GetFriend(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:477:28
    t.method("GetFriend", static_cast<TTree * (TTree::*)(const char *)  const>(&TTree::GetFriend));

    DEBUG_MSG("Adding wrapper for const char * TTree::GetFriendAlias(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::GetFriendAlias(TTree *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:478:28
    t.method("GetFriendAlias", [](TTree const& a, TTree * arg0) { return (std::string)a.GetFriendAlias(arg0); });
    t.method("GetFriendAlias", [](TTree const* a, TTree * arg0) { return (std::string)a->GetFriendAlias(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TTree::GetHistogram() (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TTree::GetHistogram()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:479:28
    t.method("GetHistogram", static_cast<TH1 * (TTree::*)() >(&TTree::GetHistogram));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::GetImplicitMT() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::GetImplicitMT()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:480:28
    t.method("GetImplicitMT", static_cast<Bool_t (TTree::*)() >(&TTree::GetImplicitMT));

    DEBUG_MSG("Adding wrapper for Int_t * TTree::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TTree::GetIndex()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:481:28
    t.method("GetIndex", static_cast<Int_t * (TTree::*)() >(&TTree::GetIndex));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetIndexValues() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetIndexValues()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:482:28
    t.method("GetIndexValues", static_cast<Double_t * (TTree::*)() >(&TTree::GetIndexValues));

    DEBUG_MSG("Adding wrapper for ROOT::TIOFeatures TTree::GetIOFeatures() (" __HERE__ ")");
    // signature to use in the veto list: ROOT::TIOFeatures TTree::GetIOFeatures()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:483:30
    t.method("GetIOFeatures", static_cast<ROOT::TIOFeatures (TTree::*)()  const>(&TTree::GetIOFeatures));

    DEBUG_MSG("Adding wrapper for TIterator * TTree::GetIteratorOnAllLeaves(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TIterator * TTree::GetIteratorOnAllLeaves(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:484:28
    t.method("GetIteratorOnAllLeaves", static_cast<TIterator * (TTree::*)(Bool_t) >(&TTree::GetIteratorOnAllLeaves));
    t.method("GetIteratorOnAllLeaves", [](TTree& a)->TIterator * { return a.GetIteratorOnAllLeaves(); });
    t.method("GetIteratorOnAllLeaves", [](TTree* a)->TIterator * { return a->GetIteratorOnAllLeaves(); });

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::GetLeaf(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::GetLeaf(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:485:28
    t.method("GetLeaf", static_cast<TLeaf * (TTree::*)(const char *, const char *) >(&TTree::GetLeaf));

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::GetLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::GetLeaf(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:486:28
    t.method("GetLeaf", static_cast<TLeaf * (TTree::*)(const char *) >(&TTree::GetLeaf));

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfClones() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfClones()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:487:28
    t.method("GetListOfClones", static_cast<TList * (TTree::*)() >(&TTree::GetListOfClones));

    DEBUG_MSG("Adding wrapper for TObjArray * TTree::GetListOfBranches() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TTree::GetListOfBranches()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:488:28
    t.method("GetListOfBranches", static_cast<TObjArray * (TTree::*)() >(&TTree::GetListOfBranches));

    DEBUG_MSG("Adding wrapper for TObjArray * TTree::GetListOfLeaves() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TTree::GetListOfLeaves()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:489:28
    t.method("GetListOfLeaves", static_cast<TObjArray * (TTree::*)() >(&TTree::GetListOfLeaves));

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfFriends() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfFriends()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:490:28
    t.method("GetListOfFriends", static_cast<TList * (TTree::*)()  const>(&TTree::GetListOfFriends));

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfAliases() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfAliases()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:491:28
    t.method("GetListOfAliases", static_cast<TList * (TTree::*)()  const>(&TTree::GetListOfAliases));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetMakeClass() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetMakeClass()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:495:28
    t.method("GetMakeClass", static_cast<Int_t (TTree::*)()  const>(&TTree::GetMakeClass));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxEntryLoop() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxEntryLoop()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:497:28
    t.method("GetMaxEntryLoop", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetMaxEntryLoop));

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetMaximum(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetMaximum(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:498:28
    t.method("GetMaximum", static_cast<Double_t (TTree::*)(const char *) >(&TTree::GetMaximum));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxTreeSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxTreeSize()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:499:28
    module_.method("TTree!GetMaxTreeSize", static_cast<Long64_t (*)() >(&TTree::GetMaxTreeSize));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxVirtualSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxVirtualSize()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:500:28
    t.method("GetMaxVirtualSize", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetMaxVirtualSize));

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetMinimum(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetMinimum(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:501:28
    t.method("GetMinimum", static_cast<Double_t (TTree::*)(const char *) >(&TTree::GetMinimum));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetNbranches() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetNbranches()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:502:28
    t.method("GetNbranches", static_cast<Int_t (TTree::*)() >(&TTree::GetNbranches));

    DEBUG_MSG("Adding wrapper for TObject * TTree::GetNotify() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TTree::GetNotify()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:503:28
    t.method("GetNotify", static_cast<TObject * (TTree::*)()  const>(&TTree::GetNotify));

    DEBUG_MSG("Adding wrapper for TVirtualTreePlayer * TTree::GetPlayer() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualTreePlayer * TTree::GetPlayer()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:504:28
    t.method("GetPlayer", static_cast<TVirtualTreePlayer * (TTree::*)() >(&TTree::GetPlayer));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetPacketSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetPacketSize()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:505:28
    t.method("GetPacketSize", static_cast<Int_t (TTree::*)()  const>(&TTree::GetPacketSize));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetReadEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetReadEntry()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:509:28
    t.method("GetReadEntry", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetReadEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetReadEvent() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetReadEvent()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:510:28
    t.method("GetReadEvent", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetReadEvent));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetScanField() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetScanField()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:511:28
    t.method("GetScanField", static_cast<Int_t (TTree::*)()  const>(&TTree::GetScanField));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetSelectedRows() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetSelectedRows()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:513:28
    t.method("GetSelectedRows", static_cast<Long64_t (TTree::*)() >(&TTree::GetSelectedRows));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetTimerInterval() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetTimerInterval()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:514:28
    t.method("GetTimerInterval", static_cast<Int_t (TTree::*)()  const>(&TTree::GetTimerInterval));

    DEBUG_MSG("Adding wrapper for TBuffer * TTree::GetTransientBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBuffer * TTree::GetTransientBuffer(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:515:28
    t.method("GetTransientBuffer", static_cast<TBuffer * (TTree::*)(Int_t) >(&TTree::GetTransientBuffer));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetTotBytes() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetTotBytes()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:516:28
    t.method("GetTotBytes", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetTotBytes));

    DEBUG_MSG("Adding wrapper for TTree * TTree::GetTree() (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::GetTree()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:517:28
    t.method("GetTree", static_cast<TTree * (TTree::*)()  const>(&TTree::GetTree));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetTreeNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetTreeNumber()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:519:28
    t.method("GetTreeNumber", static_cast<Int_t (TTree::*)()  const>(&TTree::GetTreeNumber));

    DEBUG_MSG("Adding wrapper for Float_t TTree::GetTargetMemoryRatio() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TTree::GetTargetMemoryRatio()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:520:12
    t.method("GetTargetMemoryRatio", static_cast<Float_t (TTree::*)()  const>(&TTree::GetTargetMemoryRatio));

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetUpdate() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetUpdate()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:521:28
    t.method("GetUpdate", static_cast<Int_t (TTree::*)()  const>(&TTree::GetUpdate));

    DEBUG_MSG("Adding wrapper for TList * TTree::GetUserInfo() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetUserInfo()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:522:28
    t.method("GetUserInfo", static_cast<TList * (TTree::*)() >(&TTree::GetUserInfo));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetVal(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetVal(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:534:28
    t.method("GetVal", static_cast<Double_t * (TTree::*)(Int_t) >(&TTree::GetVal));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV1()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:536:28
    t.method("GetV1", static_cast<Double_t * (TTree::*)() >(&TTree::GetV1));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV2()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:538:28
    t.method("GetV2", static_cast<Double_t * (TTree::*)() >(&TTree::GetV2));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV3() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV3()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:540:28
    t.method("GetV3", static_cast<Double_t * (TTree::*)() >(&TTree::GetV3));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV4() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV4()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:542:28
    t.method("GetV4", static_cast<Double_t * (TTree::*)() >(&TTree::GetV4));

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetW() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetW()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:543:28
    t.method("GetW", static_cast<Double_t * (TTree::*)() >(&TTree::GetW));

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetWeight() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetWeight()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:544:28
    t.method("GetWeight", static_cast<Double_t (TTree::*)()  const>(&TTree::GetWeight));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetZipBytes() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetZipBytes()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:545:28
    t.method("GetZipBytes", static_cast<Long64_t (TTree::*)()  const>(&TTree::GetZipBytes));

    DEBUG_MSG("Adding wrapper for void TTree::IncrementTotalBuffers(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::IncrementTotalBuffers(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:546:28
    t.method("IncrementTotalBuffers", static_cast<void (TTree::*)(Int_t) >(&TTree::IncrementTotalBuffers));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::IsFolder()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:547:28
    t.method("IsFolder", static_cast<Bool_t (TTree::*)()  const>(&TTree::IsFolder));

    DEBUG_MSG("Adding wrapper for Bool_t TTree::InPlaceClone(TDirectory *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::InPlaceClone(TDirectory *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:548:28
    t.method("InPlaceClone", static_cast<Bool_t (TTree::*)(TDirectory *, const char *) >(&TTree::InPlaceClone));
    t.method("InPlaceClone", [](TTree& a, TDirectory * arg0)->Bool_t { return a.InPlaceClone(arg0); });
    t.method("InPlaceClone", [](TTree* a, TDirectory * arg0)->Bool_t { return a->InPlaceClone(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::LoadBaskets(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::LoadBaskets(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:549:28
    t.method("LoadBaskets", static_cast<Int_t (TTree::*)(Long64_t) >(&TTree::LoadBaskets));
    t.method("LoadBaskets", [](TTree& a)->Int_t { return a.LoadBaskets(); });
    t.method("LoadBaskets", [](TTree* a)->Int_t { return a->LoadBaskets(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::LoadTree(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::LoadTree(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:550:28
    t.method("LoadTree", static_cast<Long64_t (TTree::*)(Long64_t) >(&TTree::LoadTree));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::LoadTreeFriend(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::LoadTreeFriend(Long64_t, TTree *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:551:28
    t.method("LoadTreeFriend", static_cast<Long64_t (TTree::*)(Long64_t, TTree *) >(&TTree::LoadTreeFriend));

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeClass(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeClass(const char *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:552:28
    t.method("MakeClass", static_cast<Int_t (TTree::*)(const char *, Option_t *) >(&TTree::MakeClass));
    t.method("MakeClass", [](TTree& a)->Int_t { return a.MakeClass(); });
    t.method("MakeClass", [](TTree& a, const char * arg0)->Int_t { return a.MakeClass(arg0); });
    t.method("MakeClass", [](TTree* a)->Int_t { return a->MakeClass(); });
    t.method("MakeClass", [](TTree* a, const char * arg0)->Int_t { return a->MakeClass(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeCode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeCode(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:553:28
    t.method("MakeCode", static_cast<Int_t (TTree::*)(const char *) >(&TTree::MakeCode));
    t.method("MakeCode", [](TTree& a)->Int_t { return a.MakeCode(); });
    t.method("MakeCode", [](TTree* a)->Int_t { return a->MakeCode(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeProxy(const char *, const char *, const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeProxy(const char *, const char *, const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:554:28
    t.method("MakeProxy", static_cast<Int_t (TTree::*)(const char *, const char *, const char *, const char *, Int_t) >(&TTree::MakeProxy));
    t.method("MakeProxy", [](TTree& a, const char * arg0)->Int_t { return a.MakeProxy(arg0); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.MakeProxy(arg0, arg1); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.MakeProxy(arg0, arg1, arg2); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, const char * arg3)->Int_t { return a.MakeProxy(arg0, arg1, arg2, arg3); });
    t.method("MakeProxy", [](TTree* a, const char * arg0)->Int_t { return a->MakeProxy(arg0); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->MakeProxy(arg0, arg1); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->MakeProxy(arg0, arg1, arg2); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, const char * arg3)->Int_t { return a->MakeProxy(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeSelector(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeSelector(const char *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:555:28
    t.method("MakeSelector", static_cast<Int_t (TTree::*)(const char *, Option_t *) >(&TTree::MakeSelector));
    t.method("MakeSelector", [](TTree& a)->Int_t { return a.MakeSelector(); });
    t.method("MakeSelector", [](TTree& a, const char * arg0)->Int_t { return a.MakeSelector(arg0); });
    t.method("MakeSelector", [](TTree* a)->Int_t { return a->MakeSelector(); });
    t.method("MakeSelector", [](TTree* a, const char * arg0)->Int_t { return a->MakeSelector(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TTree::MemoryFull(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::MemoryFull(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:556:28
    t.method("MemoryFull", static_cast<Bool_t (TTree::*)(Int_t) >(&TTree::MemoryFull));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Merge(TCollection *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Merge(TCollection *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:557:28
    t.method("Merge", static_cast<Long64_t (TTree::*)(TCollection *, Option_t *) >(&TTree::Merge));
    t.method("Merge", [](TTree& a, TCollection * arg0)->Long64_t { return a.Merge(arg0); });
    t.method("Merge", [](TTree* a, TCollection * arg0)->Long64_t { return a->Merge(arg0); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::MergeTrees(TList *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::MergeTrees(TList *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:559:28
    module_.method("TTree!MergeTrees", static_cast<TTree * (*)(TList *, Option_t *) >(&TTree::MergeTrees));
    module_.method("TTree!MergeTrees", [](TList * arg0)->TTree * { return TTree::MergeTrees(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TTree::Notify() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::Notify()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:560:28
    t.method("Notify", static_cast<Bool_t (TTree::*)() >(&TTree::Notify));

    DEBUG_MSG("Adding wrapper for void TTree::OptimizeBaskets(ULong64_t, Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::OptimizeBaskets(ULong64_t, Float_t, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:561:28
    t.method("OptimizeBaskets", static_cast<void (TTree::*)(ULong64_t, Float_t, Option_t *) >(&TTree::OptimizeBaskets));
    t.method("OptimizeBaskets", [](TTree& a)->void { a.OptimizeBaskets(); });
    t.method("OptimizeBaskets", [](TTree& a, ULong64_t arg0)->void { a.OptimizeBaskets(arg0); });
    t.method("OptimizeBaskets", [](TTree& a, ULong64_t arg0, Float_t arg1)->void { a.OptimizeBaskets(arg0, arg1); });
    t.method("OptimizeBaskets", [](TTree* a)->void { a->OptimizeBaskets(); });
    t.method("OptimizeBaskets", [](TTree* a, ULong64_t arg0)->void { a->OptimizeBaskets(arg0); });
    t.method("OptimizeBaskets", [](TTree* a, ULong64_t arg0, Float_t arg1)->void { a->OptimizeBaskets(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:563:28
    t.method("Print", static_cast<void (TTree::*)(Option_t *)  const>(&TTree::Print));
    t.method("Print", [](TTree const& a)->void { a.Print(); });
    t.method("Print", [](TTree const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TTree::PrintCacheStats(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::PrintCacheStats(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:564:28
    t.method("PrintCacheStats", static_cast<void (TTree::*)(Option_t *)  const>(&TTree::PrintCacheStats));
    t.method("PrintCacheStats", [](TTree const& a)->void { a.PrintCacheStats(); });
    t.method("PrintCacheStats", [](TTree const* a)->void { a->PrintCacheStats(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Process(const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Process(const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:565:28
    t.method("Process", static_cast<Long64_t (TTree::*)(const char *, Option_t *, Long64_t, Long64_t) >(&TTree::Process));
    t.method("Process", [](TTree& a, const char * arg0)->Long64_t { return a.Process(arg0); });
    t.method("Process", [](TTree& a, const char * arg0, Option_t * arg1)->Long64_t { return a.Process(arg0, arg1); });
    t.method("Process", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2)->Long64_t { return a.Process(arg0, arg1, arg2); });
    t.method("Process", [](TTree* a, const char * arg0)->Long64_t { return a->Process(arg0); });
    t.method("Process", [](TTree* a, const char * arg0, Option_t * arg1)->Long64_t { return a->Process(arg0, arg1); });
    t.method("Process", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2)->Long64_t { return a->Process(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Project(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Project(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:567:28
    t.method("Project", static_cast<Long64_t (TTree::*)(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) >(&TTree::Project));
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Project(arg0, arg1); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Long64_t { return a.Project(arg0, arg1, arg2); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Long64_t { return a.Project(arg0, arg1, arg2, arg3); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Long64_t { return a.Project(arg0, arg1, arg2, arg3, arg4); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Project(arg0, arg1); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Long64_t { return a->Project(arg0, arg1, arg2); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Long64_t { return a->Project(arg0, arg1, arg2, arg3); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Long64_t { return a->Project(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::ReadFile(const char *, const char *, char) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::ReadFile(const char *, const char *, char)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:569:28
    t.method("ReadFile", static_cast<Long64_t (TTree::*)(const char *, const char *, char) >(&TTree::ReadFile));
    t.method("ReadFile", [](TTree& a, const char * arg0)->Long64_t { return a.ReadFile(arg0); });
    t.method("ReadFile", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.ReadFile(arg0, arg1); });
    t.method("ReadFile", [](TTree* a, const char * arg0)->Long64_t { return a->ReadFile(arg0); });
    t.method("ReadFile", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->ReadFile(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::Refresh() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Refresh()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:571:28
    t.method("Refresh", static_cast<void (TTree::*)() >(&TTree::Refresh));

    DEBUG_MSG("Adding wrapper for void TTree::RemoveFriend(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::RemoveFriend(TTree *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:574:28
    t.method("RemoveFriend", static_cast<void (TTree::*)(TTree *) >(&TTree::RemoveFriend));

    DEBUG_MSG("Adding wrapper for void TTree::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:575:28
    t.method("RecursiveRemove", static_cast<void (TTree::*)(TObject *) >(&TTree::RecursiveRemove));

    DEBUG_MSG("Adding wrapper for void TTree::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:576:28
    t.method("Reset", static_cast<void (TTree::*)(Option_t *) >(&TTree::Reset));
    t.method("Reset", [](TTree& a)->void { a.Reset(); });
    t.method("Reset", [](TTree* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TTree::ResetBranchAddress(TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::ResetBranchAddress(TBranch *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:578:28
    t.method("ResetBranchAddress", static_cast<void (TTree::*)(TBranch *) >(&TTree::ResetBranchAddress));

    DEBUG_MSG("Adding wrapper for void TTree::ResetBranchAddresses() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::ResetBranchAddresses()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:579:28
    t.method("ResetBranchAddresses", static_cast<void (TTree::*)() >(&TTree::ResetBranchAddresses));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Scan(const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Scan(const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:580:28
    t.method("Scan", static_cast<Long64_t (TTree::*)(const char *, const char *, Option_t *, Long64_t, Long64_t) >(&TTree::Scan));
    t.method("Scan", [](TTree& a)->Long64_t { return a.Scan(); });
    t.method("Scan", [](TTree& a, const char * arg0)->Long64_t { return a.Scan(arg0); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Scan(arg0, arg1); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a.Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a.Scan(arg0, arg1, arg2, arg3); });
    t.method("Scan", [](TTree* a)->Long64_t { return a->Scan(); });
    t.method("Scan", [](TTree* a, const char * arg0)->Long64_t { return a->Scan(arg0); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Scan(arg0, arg1); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a->Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a->Scan(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Bool_t TTree::SetAlias(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TTree::SetAlias(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:581:28
    t.method("SetAlias", static_cast<Bool_t (TTree::*)(const char *, const char *) >(&TTree::SetAlias));

    DEBUG_MSG("Adding wrapper for void TTree::SetAutoSave(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetAutoSave(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:582:28
    t.method("SetAutoSave", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetAutoSave));
    t.method("SetAutoSave", [](TTree& a)->void { a.SetAutoSave(); });
    t.method("SetAutoSave", [](TTree* a)->void { a->SetAutoSave(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetAutoFlush(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetAutoFlush(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:583:28
    t.method("SetAutoFlush", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetAutoFlush));
    t.method("SetAutoFlush", [](TTree& a)->void { a.SetAutoFlush(); });
    t.method("SetAutoFlush", [](TTree* a)->void { a->SetAutoFlush(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetBasketSize(const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBasketSize(const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:584:28
    t.method("SetBasketSize", static_cast<void (TTree::*)(const char *, Int_t) >(&TTree::SetBasketSize));
    t.method("SetBasketSize", [](TTree& a, const char * arg0)->void { a.SetBasketSize(arg0); });
    t.method("SetBasketSize", [](TTree* a, const char * arg0)->void { a->SetBasketSize(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TBranch **) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TBranch **)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:585:28
    t.method("SetBranchAddress", static_cast<Int_t (TTree::*)(const char *, void *, TBranch **) >(&TTree::SetBranchAddress));
    t.method("SetBranchAddress", [](TTree& a, const char * arg0, void * arg1)->Int_t { return a.SetBranchAddress(arg0, arg1); });
    t.method("SetBranchAddress", [](TTree* a, const char * arg0, void * arg1)->Int_t { return a->SetBranchAddress(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TClass *, EDataType, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TClass *, EDataType, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:586:28
    t.method("SetBranchAddress", static_cast<Int_t (TTree::*)(const char *, void *, TClass *, EDataType, Bool_t) >(&TTree::SetBranchAddress));

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TBranch **, TClass *, EDataType, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TBranch **, TClass *, EDataType, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:587:28
    t.method("SetBranchAddress", static_cast<Int_t (TTree::*)(const char *, void *, TBranch **, TClass *, EDataType, Bool_t) >(&TTree::SetBranchAddress));

    DEBUG_MSG("Adding wrapper for void TTree::SetBranchStatus(const char *, Bool_t, UInt_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBranchStatus(const char *, Bool_t, UInt_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:604:28
    t.method("SetBranchStatus", static_cast<void (TTree::*)(const char *, Bool_t, UInt_t *) >(&TTree::SetBranchStatus));
    t.method("SetBranchStatus", [](TTree& a, const char * arg0)->void { a.SetBranchStatus(arg0); });
    t.method("SetBranchStatus", [](TTree& a, const char * arg0, Bool_t arg1)->void { a.SetBranchStatus(arg0, arg1); });
    t.method("SetBranchStatus", [](TTree* a, const char * arg0)->void { a->SetBranchStatus(arg0); });
    t.method("SetBranchStatus", [](TTree* a, const char * arg0, Bool_t arg1)->void { a->SetBranchStatus(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetBranchStyle(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBranchStyle(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:605:28
    module_.method("TTree!SetBranchStyle", static_cast<void (*)(Int_t) >(&TTree::SetBranchStyle));
    module_.method("TTree!SetBranchStyle", []()->void { TTree::SetBranchStyle(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetCacheSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetCacheSize(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:606:28
    t.method("SetCacheSize", static_cast<Int_t (TTree::*)(Long64_t) >(&TTree::SetCacheSize));
    t.method("SetCacheSize", [](TTree& a)->Int_t { return a.SetCacheSize(); });
    t.method("SetCacheSize", [](TTree* a)->Int_t { return a->SetCacheSize(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetCacheEntryRange(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetCacheEntryRange(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:607:28
    t.method("SetCacheEntryRange", static_cast<Int_t (TTree::*)(Long64_t, Long64_t) >(&TTree::SetCacheEntryRange));

    DEBUG_MSG("Adding wrapper for void TTree::SetCacheLearnEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetCacheLearnEntries(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:608:28
    t.method("SetCacheLearnEntries", static_cast<void (TTree::*)(Int_t) >(&TTree::SetCacheLearnEntries));
    t.method("SetCacheLearnEntries", [](TTree& a)->void { a.SetCacheLearnEntries(); });
    t.method("SetCacheLearnEntries", [](TTree* a)->void { a->SetCacheLearnEntries(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetChainOffset(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetChainOffset(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:609:28
    t.method("SetChainOffset", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetChainOffset));
    t.method("SetChainOffset", [](TTree& a)->void { a.SetChainOffset(); });
    t.method("SetChainOffset", [](TTree* a)->void { a->SetChainOffset(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetCircular(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetCircular(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:610:28
    t.method("SetCircular", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetCircular));

    DEBUG_MSG("Adding wrapper for void TTree::SetClusterPrefetch(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetClusterPrefetch(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:611:28
    t.method("SetClusterPrefetch", static_cast<void (TTree::*)(Bool_t) >(&TTree::SetClusterPrefetch));

    DEBUG_MSG("Adding wrapper for void TTree::SetDebug(Int_t, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDebug(Int_t, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:612:28
    t.method("SetDebug", static_cast<void (TTree::*)(Int_t, Long64_t, Long64_t) >(&TTree::SetDebug));
    t.method("SetDebug", [](TTree& a)->void { a.SetDebug(); });
    t.method("SetDebug", [](TTree& a, Int_t arg0)->void { a.SetDebug(arg0); });
    t.method("SetDebug", [](TTree& a, Int_t arg0, Long64_t arg1)->void { a.SetDebug(arg0, arg1); });
    t.method("SetDebug", [](TTree* a)->void { a->SetDebug(); });
    t.method("SetDebug", [](TTree* a, Int_t arg0)->void { a->SetDebug(arg0); });
    t.method("SetDebug", [](TTree* a, Int_t arg0, Long64_t arg1)->void { a->SetDebug(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetDefaultEntryOffsetLen(Int_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDefaultEntryOffsetLen(Int_t, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:613:28
    t.method("SetDefaultEntryOffsetLen", static_cast<void (TTree::*)(Int_t, Bool_t) >(&TTree::SetDefaultEntryOffsetLen));
    t.method("SetDefaultEntryOffsetLen", [](TTree& a, Int_t arg0)->void { a.SetDefaultEntryOffsetLen(arg0); });
    t.method("SetDefaultEntryOffsetLen", [](TTree* a, Int_t arg0)->void { a->SetDefaultEntryOffsetLen(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:614:28
    t.method("SetDirectory", static_cast<void (TTree::*)(TDirectory *) >(&TTree::SetDirectory));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::SetEntries(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::SetEntries(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:615:28
    t.method("SetEntries", static_cast<Long64_t (TTree::*)(Long64_t) >(&TTree::SetEntries));
    t.method("SetEntries", [](TTree& a)->Long64_t { return a.SetEntries(); });
    t.method("SetEntries", [](TTree* a)->Long64_t { return a->SetEntries(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetEstimate(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetEstimate(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:616:28
    t.method("SetEstimate", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetEstimate));
    t.method("SetEstimate", [](TTree& a)->void { a.SetEstimate(); });
    t.method("SetEstimate", [](TTree* a)->void { a->SetEstimate(); });

    DEBUG_MSG("Adding wrapper for ROOT::TIOFeatures TTree::SetIOFeatures(const ROOT::TIOFeatures &) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::TIOFeatures TTree::SetIOFeatures(const ROOT::TIOFeatures &)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:617:30
    t.method("SetIOFeatures", static_cast<ROOT::TIOFeatures (TTree::*)(const ROOT::TIOFeatures &) >(&TTree::SetIOFeatures));

    DEBUG_MSG("Adding wrapper for void TTree::SetFileNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetFileNumber(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:618:28
    t.method("SetFileNumber", static_cast<void (TTree::*)(Int_t) >(&TTree::SetFileNumber));
    t.method("SetFileNumber", [](TTree& a)->void { a.SetFileNumber(); });
    t.method("SetFileNumber", [](TTree* a)->void { a->SetFileNumber(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetEntryList(TEntryList *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetEntryList(TEntryList *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:620:28
    t.method("SetEntryList", static_cast<void (TTree::*)(TEntryList *, Option_t *) >(&TTree::SetEntryList));
    t.method("SetEntryList", [](TTree& a, TEntryList * arg0)->void { a.SetEntryList(arg0); });
    t.method("SetEntryList", [](TTree* a, TEntryList * arg0)->void { a->SetEntryList(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetImplicitMT(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetImplicitMT(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:621:28
    t.method("SetImplicitMT", static_cast<void (TTree::*)(Bool_t) >(&TTree::SetImplicitMT));

    DEBUG_MSG("Adding wrapper for void TTree::SetMakeClass(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMakeClass(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:622:28
    t.method("SetMakeClass", static_cast<void (TTree::*)(Int_t) >(&TTree::SetMakeClass));

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxEntryLoop(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxEntryLoop(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:623:28
    t.method("SetMaxEntryLoop", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetMaxEntryLoop));
    t.method("SetMaxEntryLoop", [](TTree& a)->void { a.SetMaxEntryLoop(); });
    t.method("SetMaxEntryLoop", [](TTree* a)->void { a->SetMaxEntryLoop(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxTreeSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxTreeSize(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:624:28
    module_.method("TTree!SetMaxTreeSize", static_cast<void (*)(Long64_t) >(&TTree::SetMaxTreeSize));
    module_.method("TTree!SetMaxTreeSize", []()->void { TTree::SetMaxTreeSize(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxVirtualSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxVirtualSize(Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:625:28
    t.method("SetMaxVirtualSize", static_cast<void (TTree::*)(Long64_t) >(&TTree::SetMaxVirtualSize));
    t.method("SetMaxVirtualSize", [](TTree& a)->void { a.SetMaxVirtualSize(); });
    t.method("SetMaxVirtualSize", [](TTree* a)->void { a->SetMaxVirtualSize(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:626:28
    t.method("SetName", static_cast<void (TTree::*)(const char *) >(&TTree::SetName));

    DEBUG_MSG("Adding wrapper for void TTree::SetNotify(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetNotify(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:640:28
    t.method("SetNotify", static_cast<void (TTree::*)(TObject *) >(&TTree::SetNotify));

    DEBUG_MSG("Adding wrapper for void TTree::SetObject(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetObject(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:642:28
    t.method("SetObject", static_cast<void (TTree::*)(const char *, const char *) >(&TTree::SetObject));

    DEBUG_MSG("Adding wrapper for void TTree::SetParallelUnzip(Bool_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetParallelUnzip(Bool_t, Float_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:643:28
    t.method("SetParallelUnzip", static_cast<void (TTree::*)(Bool_t, Float_t) >(&TTree::SetParallelUnzip));
    t.method("SetParallelUnzip", [](TTree& a)->void { a.SetParallelUnzip(); });
    t.method("SetParallelUnzip", [](TTree& a, Bool_t arg0)->void { a.SetParallelUnzip(arg0); });
    t.method("SetParallelUnzip", [](TTree* a)->void { a->SetParallelUnzip(); });
    t.method("SetParallelUnzip", [](TTree* a, Bool_t arg0)->void { a->SetParallelUnzip(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetScanField(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetScanField(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:645:28
    t.method("SetScanField", static_cast<void (TTree::*)(Int_t) >(&TTree::SetScanField));
    t.method("SetScanField", [](TTree& a)->void { a.SetScanField(); });
    t.method("SetScanField", [](TTree* a)->void { a->SetScanField(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetTargetMemoryRatio(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetTargetMemoryRatio(Float_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:646:9
    t.method("SetTargetMemoryRatio", static_cast<void (TTree::*)(Float_t) >(&TTree::SetTargetMemoryRatio));

    DEBUG_MSG("Adding wrapper for void TTree::SetTimerInterval(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetTimerInterval(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:647:28
    t.method("SetTimerInterval", static_cast<void (TTree::*)(Int_t) >(&TTree::SetTimerInterval));
    t.method("SetTimerInterval", [](TTree& a)->void { a.SetTimerInterval(); });
    t.method("SetTimerInterval", [](TTree* a)->void { a->SetTimerInterval(); });

    DEBUG_MSG("Adding wrapper for void TTree::SetWeight(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetWeight(Double_t, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:649:28
    t.method("SetWeight", static_cast<void (TTree::*)(Double_t, Option_t *) >(&TTree::SetWeight));
    t.method("SetWeight", [](TTree& a)->void { a.SetWeight(); });
    t.method("SetWeight", [](TTree& a, Double_t arg0)->void { a.SetWeight(arg0); });
    t.method("SetWeight", [](TTree* a)->void { a->SetWeight(); });
    t.method("SetWeight", [](TTree* a, Double_t arg0)->void { a->SetWeight(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetUpdate(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetUpdate(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:650:28
    t.method("SetUpdate", static_cast<void (TTree::*)(Int_t) >(&TTree::SetUpdate));
    t.method("SetUpdate", [](TTree& a)->void { a.SetUpdate(); });
    t.method("SetUpdate", [](TTree* a)->void { a->SetUpdate(); });

    DEBUG_MSG("Adding wrapper for void TTree::Show(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Show(Long64_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:651:28
    t.method("Show", static_cast<void (TTree::*)(Long64_t, Int_t) >(&TTree::Show));
    t.method("Show", [](TTree& a)->void { a.Show(); });
    t.method("Show", [](TTree& a, Long64_t arg0)->void { a.Show(arg0); });
    t.method("Show", [](TTree* a)->void { a->Show(); });
    t.method("Show", [](TTree* a, Long64_t arg0)->void { a->Show(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::StartViewer() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::StartViewer()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:652:28
    t.method("StartViewer", static_cast<void (TTree::*)() >(&TTree::StartViewer));

    DEBUG_MSG("Adding wrapper for Int_t TTree::StopCacheLearningPhase() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::StopCacheLearningPhase()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:653:28
    t.method("StopCacheLearningPhase", static_cast<Int_t (TTree::*)() >(&TTree::StopCacheLearningPhase));

    DEBUG_MSG("Adding wrapper for Int_t TTree::UnbinnedFit(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::UnbinnedFit(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:654:28
    t.method("UnbinnedFit", static_cast<Int_t (TTree::*)(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) >(&TTree::UnbinnedFit));
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.UnbinnedFit(arg0, arg1); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2, arg3); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2, arg3, arg4); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->UnbinnedFit(arg0, arg1); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2, arg3); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TTree::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::UseCurrentStyle()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:655:28
    t.method("UseCurrentStyle", static_cast<void (TTree::*)() >(&TTree::UseCurrentStyle));

    DEBUG_MSG("Adding wrapper for Int_t TTree::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:656:28
    t.method("Write", static_cast<Int_t (TTree::*)(const char *, Int_t, Int_t) >(&TTree::Write));
    t.method("Write", [](TTree& a)->Int_t { return a.Write(); });
    t.method("Write", [](TTree& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TTree& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TTree* a)->Int_t { return a->Write(); });
    t.method("Write", [](TTree* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TTree* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:657:28
    t.method("Write", static_cast<Int_t (TTree::*)(const char *, Int_t, Int_t)  const>(&TTree::Write));
    t.method("Write", [](TTree const& a)->Int_t { return a.Write(); });
    t.method("Write", [](TTree const& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TTree const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TTree const* a)->Int_t { return a->Write(); });
    t.method("Write", [](TTree const* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TTree const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TTree::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TTree::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!Class_Version", static_cast<Version_t (*)() >(&TTree::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TTree::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    t.method("IsA", static_cast<TClass * (TTree::*)()  const>(&TTree::IsA));

    DEBUG_MSG("Adding wrapper for void TTree::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    t.method("StreamerNVirtual", static_cast<void (TTree::*)(TBuffer &) >(&TTree::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TTree::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!DeclFileName", []() { return (std::string)TTree::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TTree::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTree::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!ImplFileLine", static_cast<int (*)() >(&TTree::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TTree::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!ImplFileName", []() { return (std::string)TTree::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TTree::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!Class_Name", []() { return (std::string)TTree::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TTree::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!Dictionary", static_cast<TClass * (*)() >(&TTree::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TTree::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::Class()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!Class", static_cast<TClass * (*)() >(&TTree::Class));

    DEBUG_MSG("Adding wrapper for void TTree::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    t.method("Streamer", static_cast<void (TTree::*)(TBuffer &) >(&TTree::Streamer));

    DEBUG_MSG("Adding wrapper for int TTree::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTree::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:659:4
    module_.method("TTree!DeclFileLine", static_cast<int (*)() >(&TTree::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTree>> type_;
};
std::shared_ptr<Wrapper> newJlTTree(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTree(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TLeaf> : std::false_type { };
  template<> struct DefaultConstructible<TLeaf> : std::false_type { };
template<> struct SuperType<TLeaf> { typedef TNamed type; };
}

// Class generating the wrapper for type TLeaf
// signature to use in the veto file: TLeaf
struct JlTLeaf: public Wrapper {

  JlTLeaf(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TLeaf (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:57:7
    jlcxx::TypeWrapper<TLeaf>  t = jlModule.add_type<TLeaf>("TLeaf",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TLeaf>>(new jlcxx::TypeWrapper<TLeaf>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TLeaf::TLeaf(TBranch *, const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:108:4
    t.constructor<TBranch *, const char *, const char *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TLeaf::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Browse(TBrowser *)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:111:21
    t.method("Browse", static_cast<void (TLeaf::*)(TBrowser *) >(&TLeaf::Browse));

    DEBUG_MSG("Adding wrapper for Bool_t TLeaf::CanGenerateOffsetArray() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TLeaf::CanGenerateOffsetArray()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:112:21
    t.method("CanGenerateOffsetArray", static_cast<Bool_t (TLeaf::*)() >(&TLeaf::CanGenerateOffsetArray));

    DEBUG_MSG("Adding wrapper for void TLeaf::Export(TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Export(TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:113:21
    t.method("Export", static_cast<void (TLeaf::*)(TClonesArray *, Int_t) >(&TLeaf::Export));

    DEBUG_MSG("Adding wrapper for void TLeaf::FillBasket(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::FillBasket(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:114:21
    t.method("FillBasket", static_cast<void (TLeaf::*)(TBuffer &) >(&TLeaf::FillBasket));

    DEBUG_MSG("Adding wrapper for Int_t * TLeaf::GenerateOffsetArray(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TLeaf::GenerateOffsetArray(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:115:21
    t.method("GenerateOffsetArray", static_cast<Int_t * (TLeaf::*)(Int_t, Int_t) >(&TLeaf::GenerateOffsetArray));

    DEBUG_MSG("Adding wrapper for TBranch * TLeaf::GetBranch() (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TLeaf::GetBranch()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:116:21
    t.method("GetBranch", static_cast<TBranch * (TLeaf::*)()  const>(&TLeaf::GetBranch));

    DEBUG_MSG("Adding wrapper for TLeaf::DeserializeType TLeaf::GetDeserializeType() (" __HERE__ ")");
    // signature to use in the veto list: TLeaf::DeserializeType TLeaf::GetDeserializeType()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:117:28
    t.method("GetDeserializeType", static_cast<TLeaf::DeserializeType (TLeaf::*)()  const>(&TLeaf::GetDeserializeType));

    DEBUG_MSG("Adding wrapper for TString TLeaf::GetFullName() (" __HERE__ ")");
    // signature to use in the veto list: TString TLeaf::GetFullName()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:118:21
    t.method("GetFullName", static_cast<TString (TLeaf::*)()  const>(&TLeaf::GetFullName));

    DEBUG_MSG("Adding wrapper for TLeaf * TLeaf::GetLeafCount() (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TLeaf::GetLeafCount()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:121:21
    t.method("GetLeafCount", static_cast<TLeaf * (TLeaf::*)()  const>(&TLeaf::GetLeafCount));

    DEBUG_MSG("Adding wrapper for TLeaf * TLeaf::GetLeafCounter(Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TLeaf::GetLeafCounter(Int_t &)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:122:21
    t.method("GetLeafCounter", static_cast<TLeaf * (TLeaf::*)(Int_t &)  const>(&TLeaf::GetLeafCounter));


    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLen()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:126:21
    t.method("GetLen", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetLen));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLenStatic() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLenStatic()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:132:21
    t.method("GetLenStatic", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetLenStatic));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLenType() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLenType()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:133:21
    t.method("GetLenType", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetLenType));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetMaximum() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetMaximum()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:134:21
    t.method("GetMaximum", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetMaximum));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetMinimum() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetMinimum()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:135:21
    t.method("GetMinimum", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetMinimum));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetNdata() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetNdata()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:136:21
    t.method("GetNdata", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetNdata));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetOffset() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetOffset()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:137:21
    t.method("GetOffset", static_cast<Int_t (TLeaf::*)()  const>(&TLeaf::GetOffset));

    DEBUG_MSG("Adding wrapper for void * TLeaf::GetValuePointer() (" __HERE__ ")");
    // signature to use in the veto list: void * TLeaf::GetValuePointer()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:138:21
    t.method("GetValuePointer", static_cast<void * (TLeaf::*)()  const>(&TLeaf::GetValuePointer));

    DEBUG_MSG("Adding wrapper for const char * TLeaf::GetTypeName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::GetTypeName()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:139:24
    t.method("GetTypeName", [](TLeaf const& a) { return (std::string)a.GetTypeName(); });
    t.method("GetTypeName", [](TLeaf const* a) { return (std::string)a->GetTypeName(); });

    DEBUG_MSG("Adding wrapper for Double_t TLeaf::GetValue(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TLeaf::GetValue(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:141:21
    t.method("GetValue", static_cast<Double_t (TLeaf::*)(Int_t)  const>(&TLeaf::GetValue));
    t.method("GetValue", [](TLeaf const& a)->Double_t { return a.GetValue(); });
    t.method("GetValue", [](TLeaf const* a)->Double_t { return a->GetValue(); });

    DEBUG_MSG("Adding wrapper for Long64_t TLeaf::GetValueLong64(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TLeaf::GetValueLong64(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:142:21
    t.method("GetValueLong64", static_cast<Long64_t (TLeaf::*)(Int_t)  const>(&TLeaf::GetValueLong64));
    t.method("GetValueLong64", [](TLeaf const& a)->Long64_t { return a.GetValueLong64(); });
    t.method("GetValueLong64", [](TLeaf const* a)->Long64_t { return a->GetValueLong64(); });

    DEBUG_MSG("Adding wrapper for Bool_t TLeaf::IncludeRange(TLeaf *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TLeaf::IncludeRange(TLeaf *)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:146:21
    t.method("IncludeRange", static_cast<Bool_t (TLeaf::*)(TLeaf *) >(&TLeaf::IncludeRange));

    DEBUG_MSG("Adding wrapper for void TLeaf::Import(TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Import(TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:147:21
    t.method("Import", static_cast<void (TLeaf::*)(TClonesArray *, Int_t) >(&TLeaf::Import));

    DEBUG_MSG("Adding wrapper for Bool_t TLeaf::IsOnTerminalBranch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TLeaf::IsOnTerminalBranch()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:148:21
    t.method("IsOnTerminalBranch", static_cast<Bool_t (TLeaf::*)()  const>(&TLeaf::IsOnTerminalBranch));

    DEBUG_MSG("Adding wrapper for Bool_t TLeaf::IsRange() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TLeaf::IsRange()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:149:21
    t.method("IsRange", static_cast<Bool_t (TLeaf::*)()  const>(&TLeaf::IsRange));

    DEBUG_MSG("Adding wrapper for Bool_t TLeaf::IsUnsigned() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TLeaf::IsUnsigned()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:150:21
    t.method("IsUnsigned", static_cast<Bool_t (TLeaf::*)()  const>(&TLeaf::IsUnsigned));

    DEBUG_MSG("Adding wrapper for void TLeaf::PrintValue(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::PrintValue(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:151:21
    t.method("PrintValue", static_cast<void (TLeaf::*)(Int_t)  const>(&TLeaf::PrintValue));
    t.method("PrintValue", [](TLeaf const& a)->void { a.PrintValue(); });
    t.method("PrintValue", [](TLeaf const* a)->void { a->PrintValue(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::ReadBasket(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::ReadBasket(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:152:21
    t.method("ReadBasket", static_cast<void (TLeaf::*)(TBuffer &) >(&TLeaf::ReadBasket));

    DEBUG_MSG("Adding wrapper for void TLeaf::ReadBasketExport(TBuffer &, TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::ReadBasketExport(TBuffer &, TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:153:21
    t.method("ReadBasketExport", static_cast<void (TLeaf::*)(TBuffer &, TClonesArray *, Int_t) >(&TLeaf::ReadBasketExport));

    DEBUG_MSG("Adding wrapper for bool TLeaf::ReadBasketFast(TBuffer &, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::ReadBasketFast(TBuffer &, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:154:21
    t.method("ReadBasketFast", static_cast<bool (TLeaf::*)(TBuffer &, Long64_t) >(&TLeaf::ReadBasketFast));

    DEBUG_MSG("Adding wrapper for bool TLeaf::ReadBasketSerialized(TBuffer &, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::ReadBasketSerialized(TBuffer &, Long64_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:155:21
    t.method("ReadBasketSerialized", static_cast<bool (TLeaf::*)(TBuffer &, Long64_t) >(&TLeaf::ReadBasketSerialized));

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::ResetAddress(void *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::ResetAddress(void *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:159:21
    t.method("ResetAddress", static_cast<Int_t (TLeaf::*)(void *, Bool_t) >(&TLeaf::ResetAddress));
    t.method("ResetAddress", [](TLeaf& a, void * arg0)->Int_t { return a.ResetAddress(arg0); });
    t.method("ResetAddress", [](TLeaf* a, void * arg0)->Int_t { return a->ResetAddress(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetAddress(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetAddress(void *)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:160:21
    t.method("SetAddress", static_cast<void (TLeaf::*)(void *) >(&TLeaf::SetAddress));
    t.method("SetAddress", [](TLeaf& a)->void { a.SetAddress(); });
    t.method("SetAddress", [](TLeaf* a)->void { a->SetAddress(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetBranch(TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetBranch(TBranch *)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:161:21
    t.method("SetBranch", static_cast<void (TLeaf::*)(TBranch *) >(&TLeaf::SetBranch));

    DEBUG_MSG("Adding wrapper for void TLeaf::SetLeafCount(TLeaf *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetLeafCount(TLeaf *)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:162:21
    t.method("SetLeafCount", static_cast<void (TLeaf::*)(TLeaf *) >(&TLeaf::SetLeafCount));

    DEBUG_MSG("Adding wrapper for void TLeaf::SetLen(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetLen(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:163:21
    t.method("SetLen", static_cast<void (TLeaf::*)(Int_t) >(&TLeaf::SetLen));
    t.method("SetLen", [](TLeaf& a)->void { a.SetLen(); });
    t.method("SetLen", [](TLeaf* a)->void { a->SetLen(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetOffset(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetOffset(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:164:21
    t.method("SetOffset", static_cast<void (TLeaf::*)(Int_t) >(&TLeaf::SetOffset));
    t.method("SetOffset", [](TLeaf& a)->void { a.SetOffset(); });
    t.method("SetOffset", [](TLeaf* a)->void { a->SetOffset(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetRange(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetRange(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:165:21
    t.method("SetRange", static_cast<void (TLeaf::*)(Bool_t) >(&TLeaf::SetRange));
    t.method("SetRange", [](TLeaf& a)->void { a.SetRange(); });
    t.method("SetRange", [](TLeaf* a)->void { a->SetRange(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetUnsigned() (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetUnsigned()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:166:21
    t.method("SetUnsigned", static_cast<void (TLeaf::*)() >(&TLeaf::SetUnsigned));

    DEBUG_MSG("Adding wrapper for Version_t TLeaf::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TLeaf::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!Class_Version", static_cast<Version_t (*)() >(&TLeaf::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    t.method("IsA", static_cast<TClass * (TLeaf::*)()  const>(&TLeaf::IsA));

    DEBUG_MSG("Adding wrapper for void TLeaf::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    t.method("StreamerNVirtual", static_cast<void (TLeaf::*)(TBuffer &) >(&TLeaf::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TLeaf::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!DeclFileName", []() { return (std::string)TLeaf::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TLeaf::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TLeaf::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!ImplFileLine", static_cast<int (*)() >(&TLeaf::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TLeaf::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!ImplFileName", []() { return (std::string)TLeaf::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TLeaf::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!Class_Name", []() { return (std::string)TLeaf::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!Dictionary", static_cast<TClass * (*)() >(&TLeaf::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::Class()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!Class", static_cast<TClass * (*)() >(&TLeaf::Class));

    DEBUG_MSG("Adding wrapper for void TLeaf::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    t.method("Streamer", static_cast<void (TLeaf::*)(TBuffer &) >(&TLeaf::Streamer));

    DEBUG_MSG("Adding wrapper for int TLeaf::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TLeaf::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TLeaf.h:168:4
    module_.method("TLeaf!DeclFileLine", static_cast<int (*)() >(&TLeaf::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TLeaf>> type_;
};
std::shared_ptr<Wrapper> newJlTLeaf(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTLeaf(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TClonesArray> : std::false_type { };
  template<> struct DefaultConstructible<TClonesArray> : std::false_type { };
template<> struct SuperType<TClonesArray> { typedef TObjArray type; };
}

// Class generating the wrapper for type TClonesArray
// signature to use in the veto file: TClonesArray
struct JlTClonesArray: public Wrapper {

  JlTClonesArray(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TClonesArray (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TClonesArray.h:29:7
    jlcxx::TypeWrapper<TClonesArray>  t = jlModule.add_type<TClonesArray>("TClonesArray",
      jlcxx::julia_base_type<TObjArray>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TClonesArray>>(new jlcxx::TypeWrapper<TClonesArray>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TClonesArray>> type_;
};
std::shared_ptr<Wrapper> newJlTClonesArray(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTClonesArray(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::TIOFeatures> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::TIOFeatures> : std::false_type { };
}

// Class generating the wrapper for type ROOT::TIOFeatures
// signature to use in the veto file: ROOT::TIOFeatures
struct JlROOT_TIOFeatures: public Wrapper {

  JlROOT_TIOFeatures(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::TIOFeatures (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/ROOT/TIOFeatures.hxx:69:7
    jlcxx::TypeWrapper<ROOT::TIOFeatures>  t = jlModule.add_type<ROOT::TIOFeatures>("ROOT!TIOFeatures");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::TIOFeatures>>(new jlcxx::TypeWrapper<ROOT::TIOFeatures>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::TIOFeatures>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_TIOFeatures(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_TIOFeatures(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TTree::TClusterIterator> : std::false_type { };
  template<> struct DefaultConstructible<TTree::TClusterIterator> : std::false_type { };
}

// Class generating the wrapper for type TTree::TClusterIterator
// signature to use in the veto file: TTree::TClusterIterator
struct JlTTree_TClusterIterator: public Wrapper {

  JlTTree_TClusterIterator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTree::TClusterIterator (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:269:10
    jlcxx::TypeWrapper<TTree::TClusterIterator>  t = jlModule.add_type<TTree::TClusterIterator>("TTree!TClusterIterator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>>(new jlcxx::TypeWrapper<TTree::TClusterIterator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Next() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Next()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:295:16
    t.method("Next", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::Next));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::Previous() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::Previous()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:299:16
    t.method("Previous", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::Previous));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetStartEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetStartEntry()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:302:16
    t.method("GetStartEntry", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::GetStartEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::GetNextEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::GetNextEntry()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:307:16
    t.method("GetNextEntry", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::GetNextEntry));

    DEBUG_MSG("Adding wrapper for Long64_t TTree::TClusterIterator::operator()() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::TClusterIterator::operator()()
    // defined in /home/pgras/.julia/conda/3/include/TTree.h:311:16
    t.method("paren", static_cast<Long64_t (TTree::TClusterIterator::*)() >(&TTree::TClusterIterator::operator()));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTree::TClusterIterator>> type_;
};
std::shared_ptr<Wrapper> newJlTTree_TClusterIterator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTree_TClusterIterator(module));
}
