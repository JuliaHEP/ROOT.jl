// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoIntersection> : std::false_type { };
  template<> struct DefaultConstructible<TGeoIntersection> : std::false_type { };
template<> struct SuperType<TGeoIntersection> { typedef TGeoBoolNode type; };
}

// Class generating the wrapper for type TGeoIntersection
// signature to use in the veto file: TGeoIntersection
struct JlTGeoIntersection: public Wrapper {

  JlTGeoIntersection(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoIntersection (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:138:7
    jlcxx::TypeWrapper<TGeoIntersection>  t = jlModule.add_type<TGeoIntersection>("TGeoIntersection",
      jlcxx::julia_base_type<TGeoBoolNode>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoIntersection>>(new jlcxx::TypeWrapper<TGeoIntersection>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoIntersection::TGeoIntersection(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:142:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoIntersection::TGeoIntersection(TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:143:4
    t.constructor<TGeoShape *, TGeoShape *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:148:9
    t.method("ComputeBBox", [](TGeoIntersection& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a.ComputeBBox(arg0, arg1, arg2, arg3); });
    t.method("ComputeBBox", [](TGeoIntersection* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a->ComputeBBox(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:149:9
    t.method("ComputeNormal", [](TGeoIntersection& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoIntersection* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoIntersection::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoIntersection::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:150:11
    t.method("Contains", [](TGeoIntersection const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoIntersection const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoIntersection::DistanceToPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoIntersection::DistanceToPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:151:10
    t.method("DistanceToPrimitive", [](TGeoIntersection& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistanceToPrimitive(arg0, arg1); });
    t.method("DistanceToPrimitive", [](TGeoIntersection* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistanceToPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoIntersection::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoIntersection::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:152:13
    t.method("DistFromInside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoIntersection::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoIntersection::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:154:13
    t.method("DistFromOutside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoIntersection const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoIntersection const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode::EGeoBoolType TGeoIntersection::GetBooleanOperator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode::EGeoBoolType TGeoIntersection::GetBooleanOperator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:156:17
    t.method("GetBooleanOperator", [](TGeoIntersection const& a)->TGeoBoolNode::EGeoBoolType { return a.GetBooleanOperator(); });
    t.method("GetBooleanOperator", [](TGeoIntersection const* a)->TGeoBoolNode::EGeoBoolType { return a->GetBooleanOperator(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoIntersection::GetNpoints() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoIntersection::GetNpoints()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:157:10
    t.method("GetNpoints", [](TGeoIntersection& a)->Int_t { return a.GetNpoints(); });
    t.method("GetNpoints", [](TGeoIntersection* a)->Int_t { return a->GetNpoints(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoIntersection::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoIntersection::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:158:13
    t.method("Safety", [](TGeoIntersection const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoIntersection const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoIntersection const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoIntersection const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:160:9
    t.method("Sizeof3D", [](TGeoIntersection const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoIntersection const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode * TGeoIntersection::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode * TGeoIntersection::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:163:18
    t.method("MakeClone", [](TGeoIntersection const& a)->TGeoBoolNode * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoIntersection const* a)->TGeoBoolNode * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:164:9
    t.method("Paint", [](TGeoIntersection& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGeoIntersection* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoIntersection::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoIntersection::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoIntersection!Class_Version", []()->Version_t { return TGeoIntersection::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIntersection::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIntersection::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoIntersection const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoIntersection const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoIntersection& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoIntersection* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIntersection::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIntersection::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoIntersection!DeclFileName", []() { return (std::string)TGeoIntersection::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoIntersection::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoIntersection::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoIntersection!ImplFileLine", []()->int { return TGeoIntersection::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIntersection::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIntersection::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoIntersection!ImplFileName", []() { return (std::string)TGeoIntersection::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIntersection::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIntersection::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoIntersection!Class_Name", []() { return (std::string)TGeoIntersection::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIntersection::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIntersection::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoIntersection!Dictionary", []()->TClass * { return TGeoIntersection::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIntersection::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIntersection::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoIntersection!Class", []()->TClass * { return TGeoIntersection::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoIntersection::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIntersection::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoIntersection& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoIntersection* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoIntersection::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoIntersection::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoIntersection!DeclFileLine", []()->int { return TGeoIntersection::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoIntersection>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoIntersection(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoIntersection(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoSubtraction> : std::false_type { };
  template<> struct DefaultConstructible<TGeoSubtraction> : std::false_type { };
template<> struct SuperType<TGeoSubtraction> { typedef TGeoBoolNode type; };
}

// Class generating the wrapper for type TGeoSubtraction
// signature to use in the veto file: TGeoSubtraction
struct JlTGeoSubtraction: public Wrapper {

  JlTGeoSubtraction(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoSubtraction (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:175:7
    jlcxx::TypeWrapper<TGeoSubtraction>  t = jlModule.add_type<TGeoSubtraction>("TGeoSubtraction",
      jlcxx::julia_base_type<TGeoBoolNode>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoSubtraction>>(new jlcxx::TypeWrapper<TGeoSubtraction>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::TGeoSubtraction(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:179:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::TGeoSubtraction(TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:180:4
    t.constructor<TGeoShape *, TGeoShape *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TGeoShape *, TGeoShape *, TGeoMatrix *, TGeoMatrix *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::ComputeBBox(Double_t &, Double_t &, Double_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:185:9
    t.method("ComputeBBox", [](TGeoSubtraction& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a.ComputeBBox(arg0, arg1, arg2, arg3); });
    t.method("ComputeBBox", [](TGeoSubtraction* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t * arg3)->void { a->ComputeBBox(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:186:9
    t.method("ComputeNormal", [](TGeoSubtraction& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoSubtraction* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoSubtraction::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoSubtraction::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:187:11
    t.method("Contains", [](TGeoSubtraction const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoSubtraction const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoSubtraction::DistanceToPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoSubtraction::DistanceToPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:188:10
    t.method("DistanceToPrimitive", [](TGeoSubtraction& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistanceToPrimitive(arg0, arg1); });
    t.method("DistanceToPrimitive", [](TGeoSubtraction* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistanceToPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoSubtraction::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoSubtraction::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:189:13
    t.method("DistFromInside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoSubtraction::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoSubtraction::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:191:13
    t.method("DistFromOutside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoSubtraction const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoSubtraction const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode::EGeoBoolType TGeoSubtraction::GetBooleanOperator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode::EGeoBoolType TGeoSubtraction::GetBooleanOperator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:193:17
    t.method("GetBooleanOperator", [](TGeoSubtraction const& a)->TGeoBoolNode::EGeoBoolType { return a.GetBooleanOperator(); });
    t.method("GetBooleanOperator", [](TGeoSubtraction const* a)->TGeoBoolNode::EGeoBoolType { return a->GetBooleanOperator(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoSubtraction::GetNpoints() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoSubtraction::GetNpoints()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:194:10
    t.method("GetNpoints", [](TGeoSubtraction& a)->Int_t { return a.GetNpoints(); });
    t.method("GetNpoints", [](TGeoSubtraction* a)->Int_t { return a->GetNpoints(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoSubtraction::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoSubtraction::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:195:13
    t.method("Safety", [](TGeoSubtraction const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoSubtraction const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoSubtraction const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoSubtraction const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:197:9
    t.method("Sizeof3D", [](TGeoSubtraction const& a)->void { a.Sizeof3D(); });
    t.method("Sizeof3D", [](TGeoSubtraction const* a)->void { a->Sizeof3D(); });

    DEBUG_MSG("Adding wrapper for TGeoBoolNode * TGeoSubtraction::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode * TGeoSubtraction::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:200:18
    t.method("MakeClone", [](TGeoSubtraction const& a)->TGeoBoolNode * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoSubtraction const* a)->TGeoBoolNode * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBoolNode.h:201:9
    t.method("Paint", [](TGeoSubtraction& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGeoSubtraction* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoSubtraction::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoSubtraction::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoSubtraction!Class_Version", []()->Version_t { return TGeoSubtraction::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoSubtraction::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSubtraction::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoSubtraction const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoSubtraction const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoSubtraction& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoSubtraction* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoSubtraction::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSubtraction::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoSubtraction!DeclFileName", []() { return (std::string)TGeoSubtraction::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoSubtraction::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoSubtraction::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoSubtraction!ImplFileLine", []()->int { return TGeoSubtraction::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoSubtraction::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSubtraction::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoSubtraction!ImplFileName", []() { return (std::string)TGeoSubtraction::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoSubtraction::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoSubtraction::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoSubtraction!Class_Name", []() { return (std::string)TGeoSubtraction::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoSubtraction::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSubtraction::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoSubtraction!Dictionary", []()->TClass * { return TGeoSubtraction::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoSubtraction::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoSubtraction::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoSubtraction!Class", []()->TClass * { return TGeoSubtraction::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoSubtraction::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoSubtraction::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoSubtraction& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoSubtraction* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoSubtraction::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoSubtraction::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoSubtraction!DeclFileLine", []()->int { return TGeoSubtraction::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoSubtraction>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoSubtraction(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoSubtraction(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoHMatrix> : std::false_type { };
  template<> struct DefaultConstructible<TGeoHMatrix> : std::false_type { };
template<> struct SuperType<TGeoHMatrix> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoHMatrix
// signature to use in the veto file: TGeoHMatrix
struct JlTGeoHMatrix: public Wrapper {

  JlTGeoHMatrix(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoHMatrix (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:458:7
    jlcxx::TypeWrapper<TGeoHMatrix>  t = jlModule.add_type<TGeoHMatrix>("TGeoHMatrix",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoHMatrix>>(new jlcxx::TypeWrapper<TGeoHMatrix>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::TGeoHMatrix(const TGeoHMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:466:4
    t.constructor<const TGeoHMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::TGeoHMatrix(const TGeoMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:467:4
    t.constructor<const TGeoMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::TGeoHMatrix(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:468:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoHMatrix & TGeoHMatrix::operator=(const TGeoHMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix & TGeoHMatrix::operator=(const TGeoHMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:471:17
    t.method("assign", [](TGeoHMatrix& a, const TGeoHMatrix & arg0)->TGeoHMatrix & { return a.operator=(arg0); });
    t.method("assign", [](TGeoHMatrix* a, const TGeoHMatrix & arg0)->TGeoHMatrix & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix & TGeoHMatrix::operator=(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix & TGeoHMatrix::operator=(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:472:17
    t.method("assign", [](TGeoHMatrix& a, const TGeoMatrix * arg0)->TGeoHMatrix & { return a.operator=(arg0); });
    t.method("assign", [](TGeoHMatrix* a, const TGeoMatrix * arg0)->TGeoHMatrix & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix & TGeoHMatrix::operator=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix & TGeoHMatrix::operator=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:473:17
    t.method("assign", [](TGeoHMatrix& a, const TGeoMatrix & arg0)->TGeoHMatrix & { return a.operator=(arg0); });
    t.method("assign", [](TGeoHMatrix* a, const TGeoMatrix & arg0)->TGeoHMatrix & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix & TGeoHMatrix::operator*=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix & TGeoHMatrix::operator*=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:474:17
    t.method("mult!", [](TGeoHMatrix& a, const TGeoMatrix & arg0)->TGeoHMatrix & { return a.operator*=(arg0); });
    t.method("mult!", [](TGeoHMatrix* a, const TGeoMatrix & arg0)->TGeoHMatrix & { return a->operator*=(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoHMatrix::operator*(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoHMatrix::operator*(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:475:16
    t.method("*", [](TGeoHMatrix const& a, const TGeoMatrix & arg0)->TGeoHMatrix { return a.operator*(arg0); });
    t.method("*", [](TGeoHMatrix const* a, const TGeoMatrix & arg0)->TGeoHMatrix { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHMatrix::operator==(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHMatrix::operator==(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:476:11
    t.method("==", [](TGeoHMatrix const& a, const TGeoMatrix & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoHMatrix const* a, const TGeoMatrix & arg0)->Bool_t { return a->operator==(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:478:9
    t.method("Clear", [](TGeoHMatrix& a)->void { a.Clear(); });
    t.method("Clear", [](TGeoHMatrix& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TGeoHMatrix* a)->void { a->Clear(); });
    t.method("Clear", [](TGeoHMatrix* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::CopyFrom(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::CopyFrom(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:479:9
    t.method("CopyFrom", [](TGeoHMatrix& a, const TGeoMatrix * arg0)->void { a.CopyFrom(arg0); });
    t.method("CopyFrom", [](TGeoHMatrix* a, const TGeoMatrix * arg0)->void { a->CopyFrom(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoHMatrix::Determinant() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHMatrix::Determinant()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:480:13
    t.method("Determinant", [](TGeoHMatrix const& a)->Double_t { return a.Determinant(); });
    t.method("Determinant", [](TGeoHMatrix const* a)->Double_t { return a->Determinant(); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::FastRotZ(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::FastRotZ(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:481:9
    t.method("FastRotZ", [](TGeoHMatrix& a, const Double_t * arg0)->void { a.FastRotZ(arg0); });
    t.method("FastRotZ", [](TGeoHMatrix* a, const Double_t * arg0)->void { a->FastRotZ(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoHMatrix::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoHMatrix::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:482:16
    t.method("Inverse", [](TGeoHMatrix const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoHMatrix const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoHMatrix::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoHMatrix::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:483:16
    t.method("MakeClone", [](TGeoHMatrix const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoHMatrix const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::Multiply(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::Multiply(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:484:9
    t.method("Multiply", [](TGeoHMatrix& a, const TGeoMatrix * arg0)->void { a.Multiply(arg0); });
    t.method("Multiply", [](TGeoHMatrix* a, const TGeoMatrix * arg0)->void { a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::Multiply(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::Multiply(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:485:9
    t.method("Multiply", [](TGeoHMatrix& a, const TGeoMatrix & arg0)->void { a.Multiply(arg0); });
    t.method("Multiply", [](TGeoHMatrix* a, const TGeoMatrix & arg0)->void { a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::MultiplyLeft(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::MultiplyLeft(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:486:9
    t.method("MultiplyLeft", [](TGeoHMatrix& a, const TGeoMatrix * arg0)->void { a.MultiplyLeft(arg0); });
    t.method("MultiplyLeft", [](TGeoHMatrix* a, const TGeoMatrix * arg0)->void { a->MultiplyLeft(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::MultiplyLeft(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::MultiplyLeft(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:487:9
    t.method("MultiplyLeft", [](TGeoHMatrix& a, const TGeoMatrix & arg0)->void { a.MultiplyLeft(arg0); });
    t.method("MultiplyLeft", [](TGeoHMatrix* a, const TGeoMatrix & arg0)->void { a->MultiplyLeft(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::RotateX(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::RotateX(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:489:9
    t.method("RotateX", [](TGeoHMatrix& a, Double_t arg0)->void { a.RotateX(arg0); });
    t.method("RotateX", [](TGeoHMatrix* a, Double_t arg0)->void { a->RotateX(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::RotateY(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::RotateY(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:490:9
    t.method("RotateY", [](TGeoHMatrix& a, Double_t arg0)->void { a.RotateY(arg0); });
    t.method("RotateY", [](TGeoHMatrix* a, Double_t arg0)->void { a->RotateY(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::RotateZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::RotateZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:491:9
    t.method("RotateZ", [](TGeoHMatrix& a, Double_t arg0)->void { a.RotateZ(arg0); });
    t.method("RotateZ", [](TGeoHMatrix* a, Double_t arg0)->void { a->RotateZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::ReflectX(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::ReflectX(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:492:9
    t.method("ReflectX", [](TGeoHMatrix& a, Bool_t arg0)->void { a.ReflectX(arg0); });
    t.method("ReflectX", [](TGeoHMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectX(arg0, arg1); });
    t.method("ReflectX", [](TGeoHMatrix* a, Bool_t arg0)->void { a->ReflectX(arg0); });
    t.method("ReflectX", [](TGeoHMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::ReflectY(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::ReflectY(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:493:9
    t.method("ReflectY", [](TGeoHMatrix& a, Bool_t arg0)->void { a.ReflectY(arg0); });
    t.method("ReflectY", [](TGeoHMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectY(arg0, arg1); });
    t.method("ReflectY", [](TGeoHMatrix* a, Bool_t arg0)->void { a->ReflectY(arg0); });
    t.method("ReflectY", [](TGeoHMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectY(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::ReflectZ(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::ReflectZ(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:494:9
    t.method("ReflectZ", [](TGeoHMatrix& a, Bool_t arg0)->void { a.ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoHMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectZ(arg0, arg1); });
    t.method("ReflectZ", [](TGeoHMatrix* a, Bool_t arg0)->void { a->ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoHMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectZ(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetDx(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetDx(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:496:9
    t.method("SetDx", [](TGeoHMatrix& a, Double_t arg0)->void { a.SetDx(arg0); });
    t.method("SetDx", [](TGeoHMatrix* a, Double_t arg0)->void { a->SetDx(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetDy(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetDy(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:501:9
    t.method("SetDy", [](TGeoHMatrix& a, Double_t arg0)->void { a.SetDy(arg0); });
    t.method("SetDy", [](TGeoHMatrix* a, Double_t arg0)->void { a->SetDy(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetDz(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetDz(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:506:9
    t.method("SetDz", [](TGeoHMatrix& a, Double_t arg0)->void { a.SetDz(arg0); });
    t.method("SetDz", [](TGeoHMatrix* a, Double_t arg0)->void { a->SetDz(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetTranslation(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetTranslation(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:511:9
    t.method("SetTranslation", [](TGeoHMatrix& a, const Double_t * arg0)->void { a.SetTranslation(arg0); });
    t.method("SetTranslation", [](TGeoHMatrix* a, const Double_t * arg0)->void { a->SetTranslation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetRotation(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetRotation(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:516:9
    t.method("SetRotation", [](TGeoHMatrix& a, const Double_t * arg0)->void { a.SetRotation(arg0); });
    t.method("SetRotation", [](TGeoHMatrix* a, const Double_t * arg0)->void { a->SetRotation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::SetScale(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::SetScale(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:521:9
    t.method("SetScale", [](TGeoHMatrix& a, const Double_t * arg0)->void { a.SetScale(arg0); });
    t.method("SetScale", [](TGeoHMatrix* a, const Double_t * arg0)->void { a->SetScale(arg0); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoHMatrix::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoHMatrix::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:527:20
    t.method("GetTranslation", [](TGeoHMatrix const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoHMatrix const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoHMatrix::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoHMatrix::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:528:20
    t.method("GetRotationMatrix", [](TGeoHMatrix const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoHMatrix const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoHMatrix::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoHMatrix::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:529:20
    t.method("GetScale", [](TGeoHMatrix const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoHMatrix const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoHMatrix::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoHMatrix::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:531:22
    t.method("GetTranslation", [](TGeoHMatrix& a)->Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoHMatrix* a)->Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoHMatrix::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoHMatrix::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:532:22
    t.method("GetRotationMatrix", [](TGeoHMatrix& a)->Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoHMatrix* a)->Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for Double_t * TGeoHMatrix::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoHMatrix::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:533:22
    t.method("GetScale", [](TGeoHMatrix& a)->Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoHMatrix* a)->Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoHMatrix::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoHMatrix::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoHMatrix!Class_Version", []()->Version_t { return TGeoHMatrix::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHMatrix::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHMatrix::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoHMatrix const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoHMatrix const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoHMatrix& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoHMatrix* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHMatrix::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHMatrix::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoHMatrix!DeclFileName", []() { return (std::string)TGeoHMatrix::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoHMatrix::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHMatrix::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoHMatrix!ImplFileLine", []()->int { return TGeoHMatrix::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHMatrix::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHMatrix::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoHMatrix!ImplFileName", []() { return (std::string)TGeoHMatrix::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHMatrix::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHMatrix::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoHMatrix!Class_Name", []() { return (std::string)TGeoHMatrix::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHMatrix::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHMatrix::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoHMatrix!Dictionary", []()->TClass * { return TGeoHMatrix::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHMatrix::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHMatrix::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoHMatrix!Class", []()->TClass * { return TGeoHMatrix::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoHMatrix::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHMatrix::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoHMatrix& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoHMatrix* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoHMatrix::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHMatrix::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoHMatrix!DeclFileLine", []()->int { return TGeoHMatrix::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoHMatrix>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoHMatrix(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoHMatrix(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTranslation> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTranslation> : std::false_type { };
template<> struct SuperType<TGeoTranslation> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoTranslation
// signature to use in the veto file: TGeoTranslation
struct JlTGeoTranslation: public Wrapper {

  JlTGeoTranslation(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTranslation (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:116:7
    jlcxx::TypeWrapper<TGeoTranslation>  t = jlModule.add_type<TGeoTranslation>("TGeoTranslation",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTranslation>>(new jlcxx::TypeWrapper<TGeoTranslation>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoTranslation::TGeoTranslation(const TGeoTranslation &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:121:4
    t.constructor<const TGeoTranslation &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoTranslation::TGeoTranslation(const TGeoMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:122:4
    t.constructor<const TGeoMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoTranslation::TGeoTranslation(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:123:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoTranslation::TGeoTranslation(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:124:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoTranslation & TGeoTranslation::operator=(const TGeoTranslation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTranslation & TGeoTranslation::operator=(const TGeoTranslation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:127:21
    t.method("assign", [](TGeoTranslation& a, const TGeoTranslation & arg0)->TGeoTranslation & { return a.operator=(arg0); });
    t.method("assign", [](TGeoTranslation* a, const TGeoTranslation & arg0)->TGeoTranslation & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoTranslation & TGeoTranslation::operator=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTranslation & TGeoTranslation::operator=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:128:21
    t.method("assign", [](TGeoTranslation& a, const TGeoMatrix & arg0)->TGeoTranslation & { return a.operator=(arg0); });
    t.method("assign", [](TGeoTranslation* a, const TGeoMatrix & arg0)->TGeoTranslation & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoTranslation & TGeoTranslation::operator*=(const TGeoTranslation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTranslation & TGeoTranslation::operator*=(const TGeoTranslation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:129:21
    t.method("mult!", [](TGeoTranslation& a, const TGeoTranslation & arg0)->TGeoTranslation & { return a.operator*=(arg0); });
    t.method("mult!", [](TGeoTranslation* a, const TGeoTranslation & arg0)->TGeoTranslation & { return a->operator*=(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for TGeoTranslation TGeoTranslation::operator*(const TGeoTranslation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoTranslation TGeoTranslation::operator*(const TGeoTranslation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:130:20
    t.method("*", [](TGeoTranslation const& a, const TGeoTranslation & arg0)->TGeoTranslation { return a.operator*(arg0); });
    t.method("*", [](TGeoTranslation const* a, const TGeoTranslation & arg0)->TGeoTranslation { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoTranslation::operator*(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoTranslation::operator*(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:131:16
    t.method("*", [](TGeoTranslation const& a, const TGeoMatrix & arg0)->TGeoHMatrix { return a.operator*(arg0); });
    t.method("*", [](TGeoTranslation const* a, const TGeoMatrix & arg0)->TGeoHMatrix { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTranslation::operator==(const TGeoTranslation &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTranslation::operator==(const TGeoTranslation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:132:11
    t.method("==", [](TGeoTranslation const& a, const TGeoTranslation & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoTranslation const* a, const TGeoTranslation & arg0)->Bool_t { return a->operator==(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::Add(const TGeoTranslation *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::Add(const TGeoTranslation *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:134:9
    t.method("Add", [](TGeoTranslation& a, const TGeoTranslation * arg0)->void { a.Add(arg0); });
    t.method("Add", [](TGeoTranslation* a, const TGeoTranslation * arg0)->void { a->Add(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoTranslation::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoTranslation::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:135:16
    t.method("Inverse", [](TGeoTranslation const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoTranslation const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:136:9
    t.method("LocalToMaster", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:137:9
    t.method("LocalToMasterVect", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); });
    t.method("LocalToMasterVect", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:138:9
    t.method("LocalToMasterBomb", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); });
    t.method("LocalToMasterBomb", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoTranslation::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoTranslation::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:139:16
    t.method("MakeClone", [](TGeoTranslation const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoTranslation const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:140:9
    t.method("MasterToLocal", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:141:9
    t.method("MasterToLocalVect", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); });
    t.method("MasterToLocalVect", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:142:9
    t.method("MasterToLocalBomb", [](TGeoTranslation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); });
    t.method("MasterToLocalBomb", [](TGeoTranslation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::RotateX(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::RotateX(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:143:9
    t.method("RotateX", [](TGeoTranslation& a, Double_t arg0)->void { a.RotateX(arg0); });
    t.method("RotateX", [](TGeoTranslation* a, Double_t arg0)->void { a->RotateX(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::RotateY(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::RotateY(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:144:9
    t.method("RotateY", [](TGeoTranslation& a, Double_t arg0)->void { a.RotateY(arg0); });
    t.method("RotateY", [](TGeoTranslation* a, Double_t arg0)->void { a->RotateY(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::RotateZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::RotateZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:145:9
    t.method("RotateZ", [](TGeoTranslation& a, Double_t arg0)->void { a.RotateZ(arg0); });
    t.method("RotateZ", [](TGeoTranslation* a, Double_t arg0)->void { a->RotateZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::Subtract(const TGeoTranslation *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::Subtract(const TGeoTranslation *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:147:9
    t.method("Subtract", [](TGeoTranslation& a, const TGeoTranslation * arg0)->void { a.Subtract(arg0); });
    t.method("Subtract", [](TGeoTranslation* a, const TGeoTranslation * arg0)->void { a->Subtract(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::SetTranslation(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::SetTranslation(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:148:9
    t.method("SetTranslation", [](TGeoTranslation& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetTranslation(arg0, arg1, arg2); });
    t.method("SetTranslation", [](TGeoTranslation* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetTranslation(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::SetTranslation(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::SetTranslation(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:149:9
    t.method("SetTranslation", [](TGeoTranslation& a, const TGeoMatrix & arg0)->void { a.SetTranslation(arg0); });
    t.method("SetTranslation", [](TGeoTranslation* a, const TGeoMatrix & arg0)->void { a->SetTranslation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::SetDx(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::SetDx(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:150:9
    t.method("SetDx", [](TGeoTranslation& a, Double_t arg0)->void { a.SetDx(arg0); });
    t.method("SetDx", [](TGeoTranslation* a, Double_t arg0)->void { a->SetDx(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::SetDy(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::SetDy(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:151:9
    t.method("SetDy", [](TGeoTranslation& a, Double_t arg0)->void { a.SetDy(arg0); });
    t.method("SetDy", [](TGeoTranslation* a, Double_t arg0)->void { a->SetDy(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::SetDz(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::SetDz(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:152:9
    t.method("SetDz", [](TGeoTranslation& a, Double_t arg0)->void { a.SetDz(arg0); });
    t.method("SetDz", [](TGeoTranslation* a, Double_t arg0)->void { a->SetDz(arg0); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoTranslation::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoTranslation::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:154:20
    t.method("GetTranslation", [](TGeoTranslation const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoTranslation const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoTranslation::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoTranslation::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:155:20
    t.method("GetRotationMatrix", [](TGeoTranslation const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoTranslation const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoTranslation::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoTranslation::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:156:20
    t.method("GetScale", [](TGeoTranslation const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoTranslation const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoTranslation::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTranslation::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTranslation!Class_Version", []()->Version_t { return TGeoTranslation::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTranslation::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTranslation::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTranslation const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoTranslation const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTranslation& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoTranslation* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTranslation::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTranslation::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTranslation!DeclFileName", []() { return (std::string)TGeoTranslation::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTranslation::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTranslation::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTranslation!ImplFileLine", []()->int { return TGeoTranslation::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTranslation::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTranslation::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTranslation!ImplFileName", []() { return (std::string)TGeoTranslation::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTranslation::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTranslation::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTranslation!Class_Name", []() { return (std::string)TGeoTranslation::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTranslation::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTranslation::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTranslation!Dictionary", []()->TClass * { return TGeoTranslation::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTranslation::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTranslation::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTranslation!Class", []()->TClass * { return TGeoTranslation::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTranslation::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTranslation::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTranslation& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoTranslation* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoTranslation::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTranslation::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTranslation!DeclFileLine", []()->int { return TGeoTranslation::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTranslation>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTranslation(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTranslation(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoRotation> : std::false_type { };
  template<> struct DefaultConstructible<TGeoRotation> : std::false_type { };
template<> struct SuperType<TGeoRotation> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoRotation
// signature to use in the veto file: TGeoRotation
struct JlTGeoRotation: public Wrapper {

  JlTGeoRotation(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoRotation (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:168:7
    jlcxx::TypeWrapper<TGeoRotation>  t = jlModule.add_type<TGeoRotation>("TGeoRotation",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoRotation>>(new jlcxx::TypeWrapper<TGeoRotation>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRotation::TGeoRotation(const TGeoRotation &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:176:4
    t.constructor<const TGeoRotation &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRotation::TGeoRotation(const TGeoMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:177:4
    t.constructor<const TGeoMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRotation::TGeoRotation(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:178:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRotation::TGeoRotation(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:180:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoRotation::TGeoRotation(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:181:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoRotation & TGeoRotation::operator=(const TGeoRotation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRotation & TGeoRotation::operator=(const TGeoRotation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:185:18
    t.method("assign", [](TGeoRotation& a, const TGeoRotation & arg0)->TGeoRotation & { return a.operator=(arg0); });
    t.method("assign", [](TGeoRotation* a, const TGeoRotation & arg0)->TGeoRotation & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoRotation & TGeoRotation::operator=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRotation & TGeoRotation::operator=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:186:18
    t.method("assign", [](TGeoRotation& a, const TGeoMatrix & arg0)->TGeoRotation & { return a.operator=(arg0); });
    t.method("assign", [](TGeoRotation* a, const TGeoMatrix & arg0)->TGeoRotation & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoRotation & TGeoRotation::operator*=(const TGeoRotation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRotation & TGeoRotation::operator*=(const TGeoRotation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:187:18
    t.method("mult!", [](TGeoRotation& a, const TGeoRotation & arg0)->TGeoRotation & { return a.operator*=(arg0); });
    t.method("mult!", [](TGeoRotation* a, const TGeoRotation & arg0)->TGeoRotation & { return a->operator*=(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for TGeoRotation TGeoRotation::operator*(const TGeoRotation &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRotation TGeoRotation::operator*(const TGeoRotation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:188:17
    t.method("*", [](TGeoRotation const& a, const TGeoRotation & arg0)->TGeoRotation { return a.operator*(arg0); });
    t.method("*", [](TGeoRotation const* a, const TGeoRotation & arg0)->TGeoRotation { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoRotation::operator*(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoRotation::operator*(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:189:16
    t.method("*", [](TGeoRotation const& a, const TGeoMatrix & arg0)->TGeoHMatrix { return a.operator*(arg0); });
    t.method("*", [](TGeoRotation const* a, const TGeoMatrix & arg0)->TGeoHMatrix { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoRotation::operator==(const TGeoRotation &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoRotation::operator==(const TGeoRotation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:190:11
    t.method("==", [](TGeoRotation const& a, const TGeoRotation & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoRotation const* a, const TGeoRotation & arg0)->Bool_t { return a->operator==(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for Bool_t TGeoRotation::IsValid() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoRotation::IsValid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:192:11
    t.method("IsValid", [](TGeoRotation const& a)->Bool_t { return a.IsValid(); });
    t.method("IsValid", [](TGeoRotation const* a)->Bool_t { return a->IsValid(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoRotation::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoRotation::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:193:16
    t.method("Inverse", [](TGeoRotation const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoRotation const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:194:9
    t.method("Clear", [](TGeoRotation& a)->void { a.Clear(); });
    t.method("Clear", [](TGeoRotation& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TGeoRotation* a)->void { a->Clear(); });
    t.method("Clear", [](TGeoRotation* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoRotation::Determinant() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoRotation::Determinant()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:195:13
    t.method("Determinant", [](TGeoRotation const& a)->Double_t { return a.Determinant(); });
    t.method("Determinant", [](TGeoRotation const* a)->Double_t { return a->Determinant(); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::FastRotZ(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::FastRotZ(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:196:9
    t.method("FastRotZ", [](TGeoRotation& a, const Double_t * arg0)->void { a.FastRotZ(arg0); });
    t.method("FastRotZ", [](TGeoRotation* a, const Double_t * arg0)->void { a->FastRotZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::GetAngles(Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::GetAngles(Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:197:9
    t.method("GetAngles", [](TGeoRotation const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->void { a.GetAngles(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("GetAngles", [](TGeoRotation const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4, Double_t & arg5)->void { a->GetAngles(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::GetAngles(Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::GetAngles(Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:199:9
    t.method("GetAngles", [](TGeoRotation const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a.GetAngles(arg0, arg1, arg2); });
    t.method("GetAngles", [](TGeoRotation const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a->GetAngles(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoRotation::GetPhiRotation(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoRotation::GetPhiRotation(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:200:13
    t.method("GetPhiRotation", [](TGeoRotation const& a)->Double_t { return a.GetPhiRotation(); });
    t.method("GetPhiRotation", [](TGeoRotation const& a, Bool_t arg0)->Double_t { return a.GetPhiRotation(arg0); });
    t.method("GetPhiRotation", [](TGeoRotation const* a)->Double_t { return a->GetPhiRotation(); });
    t.method("GetPhiRotation", [](TGeoRotation const* a, Bool_t arg0)->Double_t { return a->GetPhiRotation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:201:9
    t.method("LocalToMaster", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:202:9
    t.method("LocalToMasterVect", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); });
    t.method("LocalToMasterVect", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:206:9
    t.method("LocalToMasterBomb", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); });
    t.method("LocalToMasterBomb", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoRotation::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoRotation::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:210:16
    t.method("MakeClone", [](TGeoRotation const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoRotation const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:211:9
    t.method("MasterToLocal", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:212:9
    t.method("MasterToLocalVect", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); });
    t.method("MasterToLocalVect", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:216:9
    t.method("MasterToLocalBomb", [](TGeoRotation const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); });
    t.method("MasterToLocalBomb", [](TGeoRotation const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::MultiplyBy(const TGeoRotation *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::MultiplyBy(const TGeoRotation *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:220:9
    t.method("MultiplyBy", [](TGeoRotation& a, const TGeoRotation * arg0)->void { a.MultiplyBy(arg0); });
    t.method("MultiplyBy", [](TGeoRotation& a, const TGeoRotation * arg0, Bool_t arg1)->void { a.MultiplyBy(arg0, arg1); });
    t.method("MultiplyBy", [](TGeoRotation* a, const TGeoRotation * arg0)->void { a->MultiplyBy(arg0); });
    t.method("MultiplyBy", [](TGeoRotation* a, const TGeoRotation * arg0, Bool_t arg1)->void { a->MultiplyBy(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::RotateX(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::RotateX(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:221:9
    t.method("RotateX", [](TGeoRotation& a, Double_t arg0)->void { a.RotateX(arg0); });
    t.method("RotateX", [](TGeoRotation* a, Double_t arg0)->void { a->RotateX(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::RotateY(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::RotateY(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:222:9
    t.method("RotateY", [](TGeoRotation& a, Double_t arg0)->void { a.RotateY(arg0); });
    t.method("RotateY", [](TGeoRotation* a, Double_t arg0)->void { a->RotateY(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::RotateZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::RotateZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:223:9
    t.method("RotateZ", [](TGeoRotation& a, Double_t arg0)->void { a.RotateZ(arg0); });
    t.method("RotateZ", [](TGeoRotation* a, Double_t arg0)->void { a->RotateZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::ReflectX(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::ReflectX(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:225:9
    t.method("ReflectX", [](TGeoRotation& a, Bool_t arg0)->void { a.ReflectX(arg0); });
    t.method("ReflectX", [](TGeoRotation& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectX(arg0, arg1); });
    t.method("ReflectX", [](TGeoRotation* a, Bool_t arg0)->void { a->ReflectX(arg0); });
    t.method("ReflectX", [](TGeoRotation* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::ReflectY(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::ReflectY(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:226:9
    t.method("ReflectY", [](TGeoRotation& a, Bool_t arg0)->void { a.ReflectY(arg0); });
    t.method("ReflectY", [](TGeoRotation& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectY(arg0, arg1); });
    t.method("ReflectY", [](TGeoRotation* a, Bool_t arg0)->void { a->ReflectY(arg0); });
    t.method("ReflectY", [](TGeoRotation* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectY(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::ReflectZ(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::ReflectZ(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:227:9
    t.method("ReflectZ", [](TGeoRotation& a, Bool_t arg0)->void { a.ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoRotation& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectZ(arg0, arg1); });
    t.method("ReflectZ", [](TGeoRotation* a, Bool_t arg0)->void { a->ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoRotation* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectZ(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::SetAngles(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::SetAngles(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:228:9
    t.method("SetAngles", [](TGeoRotation& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetAngles(arg0, arg1, arg2); });
    t.method("SetAngles", [](TGeoRotation* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetAngles(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::SetAngles(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::SetAngles(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:229:9
    t.method("SetAngles", [](TGeoRotation& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->void { a.SetAngles(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetAngles", [](TGeoRotation* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->void { a->SetAngles(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::SetMatrix(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::SetMatrix(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:230:9
    t.method("SetMatrix", [](TGeoRotation& a, const Double_t * arg0)->void { a.SetMatrix(arg0); });
    t.method("SetMatrix", [](TGeoRotation* a, const Double_t * arg0)->void { a->SetMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::SetRotation(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::SetRotation(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:235:9
    t.method("SetRotation", [](TGeoRotation& a, const TGeoMatrix & arg0)->void { a.SetRotation(arg0); });
    t.method("SetRotation", [](TGeoRotation* a, const TGeoMatrix & arg0)->void { a->SetRotation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::GetInverse(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::GetInverse(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:236:9
    t.method("GetInverse", [](TGeoRotation const& a, Double_t * arg0)->void { a.GetInverse(arg0); });
    t.method("GetInverse", [](TGeoRotation const* a, Double_t * arg0)->void { a->GetInverse(arg0); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoRotation::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoRotation::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:238:20
    t.method("GetTranslation", [](TGeoRotation const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoRotation const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoRotation::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoRotation::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:239:20
    t.method("GetRotationMatrix", [](TGeoRotation const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoRotation const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoRotation::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoRotation::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:240:20
    t.method("GetScale", [](TGeoRotation const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoRotation const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoRotation::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoRotation::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoRotation!Class_Version", []()->Version_t { return TGeoRotation::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRotation::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRotation::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoRotation const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoRotation const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoRotation& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoRotation* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRotation::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRotation::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoRotation!DeclFileName", []() { return (std::string)TGeoRotation::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoRotation::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRotation::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoRotation!ImplFileLine", []()->int { return TGeoRotation::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRotation::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRotation::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoRotation!ImplFileName", []() { return (std::string)TGeoRotation::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRotation::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRotation::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoRotation!Class_Name", []() { return (std::string)TGeoRotation::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRotation::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRotation::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoRotation!Dictionary", []()->TClass * { return TGeoRotation::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRotation::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRotation::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoRotation!Class", []()->TClass * { return TGeoRotation::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoRotation::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRotation::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoRotation& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoRotation* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoRotation::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRotation::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoRotation!DeclFileLine", []()->int { return TGeoRotation::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoRotation>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoRotation(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoRotation(module));
}
