// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoCone> : std::false_type { };
  template<> struct DefaultConstructible<TGeoCone> : std::false_type { };
template<> struct SuperType<TGeoCone> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoCone
// signature to use in the veto file: TGeoCone
struct JlTGeoCone: public Wrapper {

  JlTGeoCone(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoCone (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:17:7
    jlcxx::TypeWrapper<TGeoCone>  t = jlModule.add_type<TGeoCone>("TGeoCone",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoCone>>(new jlcxx::TypeWrapper<TGeoCone>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoCone::TGeoCone(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:32:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2")    );


    DEBUG_MSG("Adding wrapper for void TGeoCone::TGeoCone(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:33:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2")    );


    DEBUG_MSG("Adding wrapper for void TGeoCone::TGeoCone(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:34:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:39:13
    t.method("Capacity", [](TGeoCone const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoCone const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:40:20
    module_.method("TGeoCone!Capacity", [](Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->Double_t { return TGeoCone::Capacity(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:41:9
    t.method("ComputeBBox", [](TGeoCone& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoCone* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:42:9
    t.method("ComputeNormal", [](TGeoCone& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoCone* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:43:9
    t.method("ComputeNormal_v", [](TGeoCone& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoCone* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:44:16
    module_.method("TGeoCone!ComputeNormalS", [](const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->void { TGeoCone::ComputeNormalS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCone::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCone::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:46:11
    t.method("Contains", [](TGeoCone const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoCone const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:47:9
    t.method("Contains_v", [](TGeoCone const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoCone const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCone::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCone::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:48:10
    t.method("DistancetoPrimitive", [](TGeoCone& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoCone* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::DistToCone(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::DistToCone(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:49:16
    module_.method("TGeoCone!DistToCone", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t & arg5, Double_t & arg6)->void { TGeoCone::DistToCone(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dz"), jlcxx::arg("r1"), jlcxx::arg("r2"), jlcxx::arg("b"), jlcxx::arg("delta"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:51:20
    module_.method("TGeoCone!DistFromInsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->Double_t { return TGeoCone::DistFromInsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:53:13
    t.method("DistFromInside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:55:9
    t.method("DistFromInside_v", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:57:20
    module_.method("TGeoCone!DistFromOutsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->Double_t { return TGeoCone::DistFromOutsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:59:13
    t.method("DistFromOutside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:61:9
    t.method("DistFromOutside_v", [](TGeoCone const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoCone const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoCone::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoCone::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:64:4
    t.method("Divide", [](TGeoCone& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoCone* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for const char * TGeoCone::GetAxisName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCone::GetAxisName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:66:16
    t.method("GetAxisName", [](TGeoCone const& a, Int_t arg0) { return (std::string)a.GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));
    t.method("GetAxisName", [](TGeoCone const* a, Int_t arg0) { return (std::string)a->GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:67:13
    t.method("GetAxisRange", [](TGeoCone const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoCone const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:68:9
    t.method("GetBoundingCylinder", [](TGeoCone const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoCone const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCone::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCone::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:69:10
    t.method("GetByteCount", [](TGeoCone const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoCone const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetDz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:71:21
    t.method("GetDz", [](TGeoCone const& a)->Double_t { return a.GetDz(); }, jlcxx::arg("this"));
    t.method("GetDz", [](TGeoCone const* a)->Double_t { return a->GetDz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoCone::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoCone::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:72:15
    t.method("GetMakeRuntimeShape", [](TGeoCone const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoCone const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:73:9
    t.method("GetMeshNumbers", [](TGeoCone const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoCone const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCone::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCone::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:74:10
    t.method("GetNmeshVertices", [](TGeoCone const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoCone const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCone::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCone::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:75:11
    t.method("GetPointsOnSegments", [](TGeoCone const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoCone const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetRmin1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetRmin1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:76:21
    t.method("GetRmin1", [](TGeoCone const& a)->Double_t { return a.GetRmin1(); }, jlcxx::arg("this"));
    t.method("GetRmin1", [](TGeoCone const* a)->Double_t { return a->GetRmin1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetRmax1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetRmax1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:77:21
    t.method("GetRmax1", [](TGeoCone const& a)->Double_t { return a.GetRmax1(); }, jlcxx::arg("this"));
    t.method("GetRmax1", [](TGeoCone const* a)->Double_t { return a->GetRmax1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetRmin2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetRmin2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:78:21
    t.method("GetRmin2", [](TGeoCone const& a)->Double_t { return a.GetRmin2(); }, jlcxx::arg("this"));
    t.method("GetRmin2", [](TGeoCone const* a)->Double_t { return a->GetRmin2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::GetRmax2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::GetRmax2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:79:21
    t.method("GetRmax2", [](TGeoCone const& a)->Double_t { return a.GetRmax2(); }, jlcxx::arg("this"));
    t.method("GetRmax2", [](TGeoCone const* a)->Double_t { return a->GetRmax2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:81:9
    t.method("InspectShape", [](TGeoCone const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoCone const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCone::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCone::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:82:11
    t.method("IsCylType", [](TGeoCone const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoCone const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:84:13
    t.method("Safety", [](TGeoCone const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCone const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoCone const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCone const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:85:9
    t.method("Safety_v", [](TGeoCone const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoCone const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCone::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCone::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:86:20
    module_.method("TGeoCone!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->Double_t { return TGeoCone::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));
    module_.method("TGeoCone!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Int_t arg7)->Double_t { return TGeoCone::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("skipz"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::SetConeDimensions(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::SetConeDimensions(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:89:9
    t.method("SetConeDimensions", [](TGeoCone& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.SetConeDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));
    t.method("SetConeDimensions", [](TGeoCone* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->SetConeDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:90:9
    t.method("SetDimensions", [](TGeoCone& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoCone* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:91:9
    t.method("SetPoints", [](TGeoCone const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCone const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:92:9
    t.method("SetPoints", [](TGeoCone const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCone const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:94:9
    t.method("Sizeof3D", [](TGeoCone const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoCone const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoCone::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoCone::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoCone!Class_Version", []()->Version_t { return TGeoCone::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCone::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCone::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoCone const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoCone const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCone::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoCone& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoCone* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoCone::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCone::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoCone!DeclFileName", []() { return (std::string)TGeoCone::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoCone::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCone::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoCone!ImplFileLine", []()->int { return TGeoCone::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCone::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCone::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoCone!ImplFileName", []() { return (std::string)TGeoCone::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCone::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCone::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoCone!Class_Name", []() { return (std::string)TGeoCone::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCone::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCone::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoCone!Dictionary", []()->TClass * { return TGeoCone::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCone::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCone::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoCone!Class", []()->TClass * { return TGeoCone::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoCone::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCone::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoCone& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoCone* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoCone::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCone::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoCone!DeclFileLine", []()->int { return TGeoCone::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoCone>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoCone(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoCone(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoConeSeg> : std::false_type { };
  template<> struct DefaultConstructible<TGeoConeSeg> : std::false_type { };
template<> struct SuperType<TGeoConeSeg> { typedef TGeoCone type; };
}

// Class generating the wrapper for type TGeoConeSeg
// signature to use in the veto file: TGeoConeSeg
struct JlTGeoConeSeg: public Wrapper {

  JlTGeoConeSeg(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoConeSeg (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:99:7
    jlcxx::TypeWrapper<TGeoConeSeg>  t = jlModule.add_type<TGeoConeSeg>("TGeoConeSeg",
      jlcxx::julia_base_type<TGeoCone>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoConeSeg>>(new jlcxx::TypeWrapper<TGeoConeSeg>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::TGeoConeSeg(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:118:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2")    );


    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::TGeoConeSeg(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:120:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2")    );


    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::TGeoConeSeg(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:122:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::AfterStreamer() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::AfterStreamer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:126:9
    t.method("AfterStreamer", [](TGeoConeSeg& a)->void { a.AfterStreamer(); }, jlcxx::arg("this"));
    t.method("AfterStreamer", [](TGeoConeSeg* a)->void { a->AfterStreamer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:127:13
    t.method("Capacity", [](TGeoConeSeg const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoConeSeg const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:129:4
    module_.method("TGeoConeSeg!Capacity", [](Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->Double_t { return TGeoConeSeg::Capacity(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:130:9
    t.method("ComputeBBox", [](TGeoConeSeg& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoConeSeg* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:131:9
    t.method("ComputeNormal", [](TGeoConeSeg& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoConeSeg* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:132:9
    t.method("ComputeNormal_v", [](TGeoConeSeg& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoConeSeg* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:133:16
    module_.method("TGeoConeSeg!ComputeNormalS", [](const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11)->void { TGeoConeSeg::ComputeNormalS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoConeSeg::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoConeSeg::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:136:11
    t.method("Contains", [](TGeoConeSeg const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoConeSeg const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:137:9
    t.method("Contains_v", [](TGeoConeSeg const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoConeSeg const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoConeSeg::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoConeSeg::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:139:10
    t.method("DistancetoPrimitive", [](TGeoConeSeg& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoConeSeg* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::DistToCons(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::DistToCons(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:140:20
    module_.method("TGeoConeSeg!DistToCons", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->Double_t { return TGeoConeSeg::DistToCons(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("r1"), jlcxx::arg("z1"), jlcxx::arg("r2"), jlcxx::arg("z2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:142:20
    module_.method("TGeoConeSeg!DistFromInsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->Double_t { return TGeoConeSeg::DistFromInsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"), jlcxx::arg("cm"), jlcxx::arg("sm"), jlcxx::arg("cdfi"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:145:13
    t.method("DistFromInside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:147:9
    t.method("DistFromInside_v", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:149:20
    module_.method("TGeoConeSeg!DistFromOutsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->Double_t { return TGeoConeSeg::DistFromOutsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"), jlcxx::arg("cm"), jlcxx::arg("sm"), jlcxx::arg("cdfi"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:152:13
    t.method("DistFromOutside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:154:9
    t.method("DistFromOutside_v", [](TGeoConeSeg const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoConeSeg const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoConeSeg::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoConeSeg::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:157:4
    t.method("Divide", [](TGeoConeSeg& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoConeSeg* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:158:13
    t.method("GetAxisRange", [](TGeoConeSeg const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoConeSeg const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:159:9
    t.method("GetBoundingCylinder", [](TGeoConeSeg const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoConeSeg const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoConeSeg::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoConeSeg::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:161:10
    t.method("GetByteCount", [](TGeoConeSeg const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoConeSeg const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoConeSeg::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoConeSeg::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:162:15
    t.method("GetMakeRuntimeShape", [](TGeoConeSeg const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoConeSeg const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:163:9
    t.method("GetMeshNumbers", [](TGeoConeSeg const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoConeSeg const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoConeSeg::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoConeSeg::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:164:10
    t.method("GetNmeshVertices", [](TGeoConeSeg const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoConeSeg const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoConeSeg::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoConeSeg::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:165:11
    t.method("GetPointsOnSegments", [](TGeoConeSeg const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoConeSeg const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::GetPhi1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::GetPhi1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:166:13
    t.method("GetPhi1", [](TGeoConeSeg const& a)->Double_t { return a.GetPhi1(); }, jlcxx::arg("this"));
    t.method("GetPhi1", [](TGeoConeSeg const* a)->Double_t { return a->GetPhi1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::GetPhi2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::GetPhi2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:167:13
    t.method("GetPhi2", [](TGeoConeSeg const& a)->Double_t { return a.GetPhi2(); }, jlcxx::arg("this"));
    t.method("GetPhi2", [](TGeoConeSeg const* a)->Double_t { return a->GetPhi2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:168:9
    t.method("InspectShape", [](TGeoConeSeg const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoConeSeg const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:170:13
    t.method("Safety", [](TGeoConeSeg const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoConeSeg const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoConeSeg const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoConeSeg const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:171:9
    t.method("Safety_v", [](TGeoConeSeg const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoConeSeg const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoConeSeg::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoConeSeg::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:172:20
    module_.method("TGeoConeSeg!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8)->Double_t { return TGeoConeSeg::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    module_.method("TGeoConeSeg!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Int_t arg9)->Double_t { return TGeoConeSeg::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("skipz"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::SetConsDimensions(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::SetConsDimensions(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:175:9
    t.method("SetConsDimensions", [](TGeoConeSeg& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a.SetConsDimensions(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    t.method("SetConsDimensions", [](TGeoConeSeg* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a->SetConsDimensions(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:177:9
    t.method("SetDimensions", [](TGeoConeSeg& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoConeSeg* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:178:9
    t.method("SetPoints", [](TGeoConeSeg const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoConeSeg const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:179:9
    t.method("SetPoints", [](TGeoConeSeg const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoConeSeg const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCone.h:181:9
    t.method("Sizeof3D", [](TGeoConeSeg const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoConeSeg const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoConeSeg::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoConeSeg::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoConeSeg!Class_Version", []()->Version_t { return TGeoConeSeg::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoConeSeg::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoConeSeg::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoConeSeg const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoConeSeg const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoConeSeg& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoConeSeg* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoConeSeg::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoConeSeg::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoConeSeg!DeclFileName", []() { return (std::string)TGeoConeSeg::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoConeSeg::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoConeSeg::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoConeSeg!ImplFileLine", []()->int { return TGeoConeSeg::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoConeSeg::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoConeSeg::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoConeSeg!ImplFileName", []() { return (std::string)TGeoConeSeg::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoConeSeg::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoConeSeg::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoConeSeg!Class_Name", []() { return (std::string)TGeoConeSeg::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoConeSeg::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoConeSeg::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoConeSeg!Dictionary", []()->TClass * { return TGeoConeSeg::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoConeSeg::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoConeSeg::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoConeSeg!Class", []()->TClass * { return TGeoConeSeg::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoConeSeg::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoConeSeg::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoConeSeg& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoConeSeg* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoConeSeg::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoConeSeg::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoConeSeg!DeclFileLine", []()->int { return TGeoConeSeg::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoConeSeg>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoConeSeg(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoConeSeg(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTube> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTube> : std::false_type { };
template<> struct SuperType<TGeoTube> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoTube
// signature to use in the veto file: TGeoTube
struct JlTGeoTube: public Wrapper {

  JlTGeoTube(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTube (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:17:7
    jlcxx::TypeWrapper<TGeoTube>  t = jlModule.add_type<TGeoTube>("TGeoTube",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTube>>(new jlcxx::TypeWrapper<TGeoTube>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTube::TGeoTube(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:31:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTube::TGeoTube(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:32:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoTube::TGeoTube(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:33:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:38:13
    t.method("Capacity", [](TGeoTube const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoTube const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::Capacity(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::Capacity(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:39:20
    module_.method("TGeoTube!Capacity", [](Double_t arg0, Double_t arg1, Double_t arg2)->Double_t { return TGeoTube::Capacity(arg0, arg1, arg2); }, jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:40:9
    t.method("ComputeBBox", [](TGeoTube& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTube* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:41:9
    t.method("ComputeNormal", [](TGeoTube& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoTube* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:42:9
    t.method("ComputeNormal_v", [](TGeoTube& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoTube* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:43:16
    module_.method("TGeoTube!ComputeNormalS", [](const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Double_t arg3, Double_t arg4, Double_t arg5)->void { TGeoTube::ComputeNormalS(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTube::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTube::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:45:11
    t.method("Contains", [](TGeoTube const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoTube const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:46:9
    t.method("Contains_v", [](TGeoTube const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoTube const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:48:4
    module_.method("TGeoTube!DistFromInsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->Double_t { return TGeoTube::DistFromInsideS(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:49:13
    t.method("DistFromInside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:51:9
    t.method("DistFromInside_v", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:54:4
    module_.method("TGeoTube!DistFromOutsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->Double_t { return TGeoTube::DistFromOutsideS(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:55:13
    t.method("DistFromOutside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:57:9
    t.method("DistFromOutside_v", [](TGeoTube const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTube const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::DistToTube(Double_t, Double_t, Double_t, Double_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::DistToTube(Double_t, Double_t, Double_t, Double_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:59:16
    module_.method("TGeoTube!DistToTube", [](Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t & arg4, Double_t & arg5)->void { TGeoTube::DistToTube(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("rsq"), jlcxx::arg("nsq"), jlcxx::arg("rdotn"), jlcxx::arg("radius"), jlcxx::arg("b"), jlcxx::arg("delta"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTube::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTube::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:60:10
    t.method("DistancetoPrimitive", [](TGeoTube& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoTube* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTube::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTube::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:62:4
    t.method("Divide", [](TGeoTube& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTube* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTube::GetAxisName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTube::GetAxisName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:63:16
    t.method("GetAxisName", [](TGeoTube const& a, Int_t arg0) { return (std::string)a.GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));
    t.method("GetAxisName", [](TGeoTube const* a, Int_t arg0) { return (std::string)a->GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:64:13
    t.method("GetAxisRange", [](TGeoTube const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoTube const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:65:9
    t.method("GetBoundingCylinder", [](TGeoTube const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoTube const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTube::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTube::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:67:10
    t.method("GetByteCount", [](TGeoTube const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoTube const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTube::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTube::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:68:11
    t.method("GetPointsOnSegments", [](TGeoTube const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoTube const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTube::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTube::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:69:15
    t.method("GetMakeRuntimeShape", [](TGeoTube const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTube const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:70:9
    t.method("GetMeshNumbers", [](TGeoTube const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoTube const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTube::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTube::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:71:10
    t.method("GetNmeshVertices", [](TGeoTube const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoTube const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::GetRmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::GetRmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:72:21
    t.method("GetRmin", [](TGeoTube const& a)->Double_t { return a.GetRmin(); }, jlcxx::arg("this"));
    t.method("GetRmin", [](TGeoTube const* a)->Double_t { return a->GetRmin(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::GetRmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::GetRmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:73:21
    t.method("GetRmax", [](TGeoTube const& a)->Double_t { return a.GetRmax(); }, jlcxx::arg("this"));
    t.method("GetRmax", [](TGeoTube const* a)->Double_t { return a->GetRmax(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::GetDz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:74:21
    t.method("GetDz", [](TGeoTube const& a)->Double_t { return a.GetDz(); }, jlcxx::arg("this"));
    t.method("GetDz", [](TGeoTube const* a)->Double_t { return a->GetDz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTube::HasRmin() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTube::HasRmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:75:11
    t.method("HasRmin", [](TGeoTube const& a)->Bool_t { return a.HasRmin(); }, jlcxx::arg("this"));
    t.method("HasRmin", [](TGeoTube const* a)->Bool_t { return a->HasRmin(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:76:9
    t.method("InspectShape", [](TGeoTube const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTube const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTube::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTube::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:77:11
    t.method("IsCylType", [](TGeoTube const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoTube const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:79:13
    t.method("Safety", [](TGeoTube const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTube const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTube const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTube const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:80:9
    t.method("Safety_v", [](TGeoTube const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTube const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTube::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTube::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:82:4
    module_.method("TGeoTube!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->Double_t { return TGeoTube::SafetyS(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));
    module_.method("TGeoTube!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->Double_t { return TGeoTube::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("skipz"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::SetTubeDimensions(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::SetTubeDimensions(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:84:9
    t.method("SetTubeDimensions", [](TGeoTube& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetTubeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));
    t.method("SetTubeDimensions", [](TGeoTube* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetTubeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:85:9
    t.method("SetDimensions", [](TGeoTube& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTube* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:86:9
    t.method("SetPoints", [](TGeoTube const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTube const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:87:9
    t.method("SetPoints", [](TGeoTube const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTube const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:89:9
    t.method("Sizeof3D", [](TGeoTube const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTube const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTube::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTube::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTube!Class_Version", []()->Version_t { return TGeoTube::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTube::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTube::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTube const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTube const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTube::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTube& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTube* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTube::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTube::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTube!DeclFileName", []() { return (std::string)TGeoTube::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTube::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTube::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTube!ImplFileLine", []()->int { return TGeoTube::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTube::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTube::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTube!ImplFileName", []() { return (std::string)TGeoTube::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTube::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTube::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTube!Class_Name", []() { return (std::string)TGeoTube::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTube::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTube::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTube!Dictionary", []()->TClass * { return TGeoTube::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTube::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTube::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTube!Class", []()->TClass * { return TGeoTube::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTube::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTube::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTube& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTube* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTube::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTube::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTube!DeclFileLine", []()->int { return TGeoTube::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTube>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTube(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTube(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTubeSeg> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTubeSeg> : std::false_type { };
template<> struct SuperType<TGeoTubeSeg> { typedef TGeoTube type; };
}

// Class generating the wrapper for type TGeoTubeSeg
// signature to use in the veto file: TGeoTubeSeg
struct JlTGeoTubeSeg: public Wrapper {

  JlTGeoTubeSeg(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTubeSeg (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:94:7
    jlcxx::TypeWrapper<TGeoTubeSeg>  t = jlModule.add_type<TGeoTubeSeg>("TGeoTubeSeg",
      jlcxx::julia_base_type<TGeoTube>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTubeSeg>>(new jlcxx::TypeWrapper<TGeoTubeSeg>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::TGeoTubeSeg(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:113:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2")    );


    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::TGeoTubeSeg(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:114:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2")    );


    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::TGeoTubeSeg(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:115:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::AfterStreamer() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::AfterStreamer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:119:9
    t.method("AfterStreamer", [](TGeoTubeSeg& a)->void { a.AfterStreamer(); }, jlcxx::arg("this"));
    t.method("AfterStreamer", [](TGeoTubeSeg* a)->void { a->AfterStreamer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:120:13
    t.method("Capacity", [](TGeoTubeSeg const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoTubeSeg const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::Capacity(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:121:20
    module_.method("TGeoTubeSeg!Capacity", [](Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->Double_t { return TGeoTubeSeg::Capacity(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:122:9
    t.method("ComputeBBox", [](TGeoTubeSeg& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoTubeSeg* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:123:9
    t.method("ComputeNormal", [](TGeoTubeSeg& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoTubeSeg* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:124:9
    t.method("ComputeNormal_v", [](TGeoTubeSeg& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoTubeSeg* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::ComputeNormalS(const Double_t *, const Double_t *, Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:125:16
    module_.method("TGeoTubeSeg!ComputeNormalS", [](const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9)->void { TGeoTubeSeg::ComputeNormalS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTubeSeg::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTubeSeg::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:127:11
    t.method("Contains", [](TGeoTubeSeg const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoTubeSeg const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:128:9
    t.method("Contains_v", [](TGeoTubeSeg const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoTubeSeg const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTubeSeg::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTubeSeg::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:129:10
    t.method("DistancetoPrimitive", [](TGeoTubeSeg& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoTubeSeg* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::DistFromInsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:130:20
    module_.method("TGeoTubeSeg!DistFromInsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11)->Double_t { return TGeoTubeSeg::DistFromInsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"), jlcxx::arg("cm"), jlcxx::arg("sm"), jlcxx::arg("cdfi"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:133:13
    t.method("DistFromInside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:135:9
    t.method("DistFromInside_v", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::DistFromOutsideS(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:137:20
    module_.method("TGeoTubeSeg!DistFromOutsideS", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11)->Double_t { return TGeoTubeSeg::DistFromOutsideS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("c1"), jlcxx::arg("s1"), jlcxx::arg("c2"), jlcxx::arg("s2"), jlcxx::arg("cm"), jlcxx::arg("sm"), jlcxx::arg("cdfi"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:140:13
    t.method("DistFromOutside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:142:9
    t.method("DistFromOutside_v", [](TGeoTubeSeg const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTubeSeg const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTubeSeg::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTubeSeg::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:145:4
    t.method("Divide", [](TGeoTubeSeg& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTubeSeg* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:146:13
    t.method("GetAxisRange", [](TGeoTubeSeg const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoTubeSeg const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:147:9
    t.method("GetBoundingCylinder", [](TGeoTubeSeg const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoTubeSeg const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTubeSeg::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTubeSeg::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:149:10
    t.method("GetByteCount", [](TGeoTubeSeg const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoTubeSeg const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoTubeSeg::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoTubeSeg::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:150:11
    t.method("GetPointsOnSegments", [](TGeoTubeSeg const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoTubeSeg const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTubeSeg::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTubeSeg::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:151:15
    t.method("GetMakeRuntimeShape", [](TGeoTubeSeg const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTubeSeg const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoTubeSeg::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoTubeSeg::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:152:10
    t.method("GetNmeshVertices", [](TGeoTubeSeg const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoTubeSeg const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:153:9
    t.method("GetMeshNumbers", [](TGeoTubeSeg const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoTubeSeg const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::GetPhi1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::GetPhi1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:154:13
    t.method("GetPhi1", [](TGeoTubeSeg const& a)->Double_t { return a.GetPhi1(); }, jlcxx::arg("this"));
    t.method("GetPhi1", [](TGeoTubeSeg const* a)->Double_t { return a->GetPhi1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::GetPhi2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::GetPhi2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:155:13
    t.method("GetPhi2", [](TGeoTubeSeg const& a)->Double_t { return a.GetPhi2(); }, jlcxx::arg("this"));
    t.method("GetPhi2", [](TGeoTubeSeg const* a)->Double_t { return a->GetPhi2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:156:9
    t.method("InspectShape", [](TGeoTubeSeg const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoTubeSeg const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:158:13
    t.method("Safety", [](TGeoTubeSeg const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTubeSeg const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTubeSeg const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTubeSeg const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:159:9
    t.method("Safety_v", [](TGeoTubeSeg const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTubeSeg const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTubeSeg::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTubeSeg::SafetyS(const Double_t *, Bool_t, Double_t, Double_t, Double_t, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:160:20
    module_.method("TGeoTubeSeg!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->Double_t { return TGeoTubeSeg::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    module_.method("TGeoTubeSeg!SafetyS", [](const Double_t * arg0, Bool_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Int_t arg7)->Double_t { return TGeoTubeSeg::SafetyS(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("point"), jlcxx::arg("in"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("skipz"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::SetTubsDimensions(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::SetTubsDimensions(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:163:9
    t.method("SetTubsDimensions", [](TGeoTubeSeg& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.SetTubsDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    t.method("SetTubsDimensions", [](TGeoTubeSeg* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->SetTubsDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:164:9
    t.method("SetDimensions", [](TGeoTubeSeg& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTubeSeg* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:165:9
    t.method("SetPoints", [](TGeoTubeSeg const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTubeSeg const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:166:9
    t.method("SetPoints", [](TGeoTubeSeg const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoTubeSeg const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:168:9
    t.method("Sizeof3D", [](TGeoTubeSeg const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoTubeSeg const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTubeSeg::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTubeSeg::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTubeSeg!Class_Version", []()->Version_t { return TGeoTubeSeg::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTubeSeg::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTubeSeg::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTubeSeg const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTubeSeg const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTubeSeg& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTubeSeg* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTubeSeg::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTubeSeg::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTubeSeg!DeclFileName", []() { return (std::string)TGeoTubeSeg::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTubeSeg::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTubeSeg::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTubeSeg!ImplFileLine", []()->int { return TGeoTubeSeg::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTubeSeg::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTubeSeg::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTubeSeg!ImplFileName", []() { return (std::string)TGeoTubeSeg::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTubeSeg::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTubeSeg::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTubeSeg!Class_Name", []() { return (std::string)TGeoTubeSeg::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTubeSeg::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTubeSeg::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTubeSeg!Dictionary", []()->TClass * { return TGeoTubeSeg::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTubeSeg::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTubeSeg::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTubeSeg!Class", []()->TClass * { return TGeoTubeSeg::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTubeSeg::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTubeSeg::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTubeSeg& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTubeSeg* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTubeSeg::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTubeSeg::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTubeSeg!DeclFileLine", []()->int { return TGeoTubeSeg::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTubeSeg>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTubeSeg(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTubeSeg(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoCtub> : std::false_type { };
  template<> struct DefaultConstructible<TGeoCtub> : std::false_type { };
template<> struct SuperType<TGeoCtub> { typedef TGeoTubeSeg type; };
}

// Class generating the wrapper for type TGeoCtub
// signature to use in the veto file: TGeoCtub
struct JlTGeoCtub: public Wrapper {

  JlTGeoCtub(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoCtub (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:173:7
    jlcxx::TypeWrapper<TGeoCtub>  t = jlModule.add_type<TGeoCtub>("TGeoCtub",
      jlcxx::julia_base_type<TGeoTubeSeg>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoCtub>>(new jlcxx::TypeWrapper<TGeoCtub>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoCtub::TGeoCtub(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:182:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz")    );


    DEBUG_MSG("Adding wrapper for void TGeoCtub::TGeoCtub(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:184:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz")    );


    DEBUG_MSG("Adding wrapper for void TGeoCtub::TGeoCtub(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:186:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:190:13
    t.method("Capacity", [](TGeoCtub const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoCtub const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:191:9
    t.method("ComputeBBox", [](TGeoCtub& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoCtub* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:192:9
    t.method("ComputeNormal", [](TGeoCtub& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoCtub* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:193:9
    t.method("ComputeNormal_v", [](TGeoCtub& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoCtub* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCtub::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCtub::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:194:11
    t.method("Contains", [](TGeoCtub const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoCtub const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:195:9
    t.method("Contains_v", [](TGeoCtub const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoCtub const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:196:13
    t.method("DistFromInside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:198:9
    t.method("DistFromInside_v", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:200:13
    t.method("DistFromOutside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:202:9
    t.method("DistFromOutside_v", [](TGeoCtub const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoCtub const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoCtub::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoCtub::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:205:4
    t.method("Divide", [](TGeoCtub& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoCtub* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:206:13
    t.method("GetAxisRange", [](TGeoCtub const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoCtub const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCtub::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCtub::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:208:10
    t.method("GetByteCount", [](TGeoCtub const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoCtub const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCtub::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCtub::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:209:11
    t.method("GetPointsOnSegments", [](TGeoCtub const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoCtub const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoCtub::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoCtub::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:210:15
    t.method("GetMakeRuntimeShape", [](TGeoCtub const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoCtub const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:211:9
    t.method("GetMeshNumbers", [](TGeoCtub const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoCtub const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCtub::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCtub::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:212:10
    t.method("GetNmeshVertices", [](TGeoCtub const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoCtub const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoCtub::GetNlow() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoCtub::GetNlow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:213:20
    t.method("GetNlow", [](TGeoCtub const& a)->const Double_t * { return a.GetNlow(); }, jlcxx::arg("this"));
    t.method("GetNlow", [](TGeoCtub const* a)->const Double_t * { return a->GetNlow(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoCtub::GetNhigh() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoCtub::GetNhigh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:214:20
    t.method("GetNhigh", [](TGeoCtub const& a)->const Double_t * { return a.GetNhigh(); }, jlcxx::arg("this"));
    t.method("GetNhigh", [](TGeoCtub const* a)->const Double_t * { return a->GetNhigh(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::GetZcoord(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::GetZcoord(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:215:13
    t.method("GetZcoord", [](TGeoCtub const& a, Double_t arg0, Double_t arg1, Double_t arg2)->Double_t { return a.GetZcoord(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("xc"), jlcxx::arg("yc"), jlcxx::arg("zc"));
    t.method("GetZcoord", [](TGeoCtub const* a, Double_t arg0, Double_t arg1, Double_t arg2)->Double_t { return a->GetZcoord(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("xc"), jlcxx::arg("yc"), jlcxx::arg("zc"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:216:9
    t.method("InspectShape", [](TGeoCtub const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoCtub const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCtub::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCtub::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:217:13
    t.method("Safety", [](TGeoCtub const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCtub const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoCtub const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCtub const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:218:9
    t.method("Safety_v", [](TGeoCtub const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoCtub const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::SetCtubDimensions(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::SetCtubDimensions(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:220:9
    t.method("SetCtubDimensions", [](TGeoCtub& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->void { a.SetCtubDimensions(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz"));
    t.method("SetCtubDimensions", [](TGeoCtub* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->void { a->SetCtubDimensions(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); }, jlcxx::arg("this"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:222:9
    t.method("SetDimensions", [](TGeoCtub& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoCtub* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:223:9
    t.method("SetPoints", [](TGeoCtub const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCtub const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoTube.h:224:9
    t.method("SetPoints", [](TGeoCtub const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCtub const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoCtub::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoCtub::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoCtub!Class_Version", []()->Version_t { return TGeoCtub::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCtub::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCtub::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoCtub const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoCtub const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCtub::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoCtub& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoCtub* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoCtub::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCtub::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoCtub!DeclFileName", []() { return (std::string)TGeoCtub::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoCtub::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCtub::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoCtub!ImplFileLine", []()->int { return TGeoCtub::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCtub::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCtub::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoCtub!ImplFileName", []() { return (std::string)TGeoCtub::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCtub::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCtub::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoCtub!Class_Name", []() { return (std::string)TGeoCtub::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCtub::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCtub::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoCtub!Dictionary", []()->TClass * { return TGeoCtub::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCtub::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCtub::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoCtub!Class", []()->TClass * { return TGeoCtub::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoCtub::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCtub::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoCtub& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoCtub* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoCtub::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCtub::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoCtub!DeclFileLine", []()->int { return TGeoCtub::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoCtub>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoCtub(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoCtub(module));
}
