// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<RedirectHandle_t> : std::false_type { };
  template<> struct DefaultConstructible<RedirectHandle_t> : std::false_type { };
}

// Class generating the wrapper for type RedirectHandle_t
// signature to use in the veto file: RedirectHandle_t
struct JlRedirectHandle_t: public Wrapper {

  JlRedirectHandle_t(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type RedirectHandle_t (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:201:8
    jlcxx::TypeWrapper<RedirectHandle_t>  t = jlModule.add_type<RedirectHandle_t>("RedirectHandle_t");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<RedirectHandle_t>>(new jlcxx::TypeWrapper<RedirectHandle_t>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void RedirectHandle_t::RedirectHandle_t(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:208:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n")    );

    DEBUG_MSG("Adding wrapper for void RedirectHandle_t::Reset() (" __HERE__ ")");
    // signature to use in the veto list: void RedirectHandle_t::Reset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:209:9
    t.method("Reset", [](RedirectHandle_t& a)->void { a.Reset(); }, jlcxx::arg("this"));
    t.method("Reset", [](RedirectHandle_t* a)->void { a->Reset(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding fFile methods  to provide read access to the field fFile (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:202:14
    // signature to use in the veto list: RedirectHandle_t::fFile
    t.method("fFile", [](const RedirectHandle_t& a) -> const TString& { return a.fFile; }, jlcxx::arg("this"));
    t.method("fFile", [](RedirectHandle_t& a) -> TString& { return a.fFile; }, jlcxx::arg("this"));
    t.method("fFile", [](const RedirectHandle_t* a) -> const TString& { return a->fFile; }, jlcxx::arg("this"));
    t.method("fFile", [](RedirectHandle_t* a) -> TString& { return a->fFile; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:202:14
    // signature to use in the veto list: RedirectHandle_t::fFile
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fFile! methods to provide write access to the field fFile (" __HERE__ ")");
    t.method("fFile!", [](RedirectHandle_t& a, const TString& val) -> TString& { return a.fFile = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fFile! methods to provide write access to the field fFile (" __HERE__ ")");
    t.method("fFile!", [](RedirectHandle_t* a, const TString& val) -> TString& { return a->fFile = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdOutTty methods  to provide read access to the field fStdOutTty (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:203:14
    // signature to use in the veto list: RedirectHandle_t::fStdOutTty
    t.method("fStdOutTty", [](const RedirectHandle_t& a) -> const TString& { return a.fStdOutTty; }, jlcxx::arg("this"));
    t.method("fStdOutTty", [](RedirectHandle_t& a) -> TString& { return a.fStdOutTty; }, jlcxx::arg("this"));
    t.method("fStdOutTty", [](const RedirectHandle_t* a) -> const TString& { return a->fStdOutTty; }, jlcxx::arg("this"));
    t.method("fStdOutTty", [](RedirectHandle_t* a) -> TString& { return a->fStdOutTty; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:203:14
    // signature to use in the veto list: RedirectHandle_t::fStdOutTty
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fStdOutTty! methods to provide write access to the field fStdOutTty (" __HERE__ ")");
    t.method("fStdOutTty!", [](RedirectHandle_t& a, const TString& val) -> TString& { return a.fStdOutTty = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdOutTty! methods to provide write access to the field fStdOutTty (" __HERE__ ")");
    t.method("fStdOutTty!", [](RedirectHandle_t* a, const TString& val) -> TString& { return a->fStdOutTty = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdErrTty methods  to provide read access to the field fStdErrTty (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:204:14
    // signature to use in the veto list: RedirectHandle_t::fStdErrTty
    t.method("fStdErrTty", [](const RedirectHandle_t& a) -> const TString& { return a.fStdErrTty; }, jlcxx::arg("this"));
    t.method("fStdErrTty", [](RedirectHandle_t& a) -> TString& { return a.fStdErrTty; }, jlcxx::arg("this"));
    t.method("fStdErrTty", [](const RedirectHandle_t* a) -> const TString& { return a->fStdErrTty; }, jlcxx::arg("this"));
    t.method("fStdErrTty", [](RedirectHandle_t* a) -> TString& { return a->fStdErrTty; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:204:14
    // signature to use in the veto list: RedirectHandle_t::fStdErrTty
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fStdErrTty! methods to provide write access to the field fStdErrTty (" __HERE__ ")");
    t.method("fStdErrTty!", [](RedirectHandle_t& a, const TString& val) -> TString& { return a.fStdErrTty = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdErrTty! methods to provide write access to the field fStdErrTty (" __HERE__ ")");
    t.method("fStdErrTty!", [](RedirectHandle_t* a, const TString& val) -> TString& { return a->fStdErrTty = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdOutDup methods  to provide read access to the field fStdOutDup (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:205:14
    // signature to use in the veto list: RedirectHandle_t::fStdOutDup
    t.method("fStdOutDup", [](const RedirectHandle_t& a) -> Int_t { return a.fStdOutDup; }, jlcxx::arg("this"));
    t.method("fStdOutDup", [](RedirectHandle_t& a) -> Int_t { return a.fStdOutDup; }, jlcxx::arg("this"));
    t.method("fStdOutDup", [](const RedirectHandle_t* a) -> Int_t { return a->fStdOutDup; }, jlcxx::arg("this"));
    t.method("fStdOutDup", [](RedirectHandle_t* a) -> Int_t { return a->fStdOutDup; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:205:14
    // signature to use in the veto list: RedirectHandle_t::fStdOutDup
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fStdOutDup! methods to provide write access to the field fStdOutDup (" __HERE__ ")");
    t.method("fStdOutDup!", [](RedirectHandle_t& a, Int_t val) -> Int_t { return a.fStdOutDup = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdOutDup! methods to provide write access to the field fStdOutDup (" __HERE__ ")");
    t.method("fStdOutDup!", [](RedirectHandle_t* a, Int_t val) -> Int_t { return a->fStdOutDup = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdErrDup methods  to provide read access to the field fStdErrDup (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:206:14
    // signature to use in the veto list: RedirectHandle_t::fStdErrDup
    t.method("fStdErrDup", [](const RedirectHandle_t& a) -> Int_t { return a.fStdErrDup; }, jlcxx::arg("this"));
    t.method("fStdErrDup", [](RedirectHandle_t& a) -> Int_t { return a.fStdErrDup; }, jlcxx::arg("this"));
    t.method("fStdErrDup", [](const RedirectHandle_t* a) -> Int_t { return a->fStdErrDup; }, jlcxx::arg("this"));
    t.method("fStdErrDup", [](RedirectHandle_t* a) -> Int_t { return a->fStdErrDup; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:206:14
    // signature to use in the veto list: RedirectHandle_t::fStdErrDup
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fStdErrDup! methods to provide write access to the field fStdErrDup (" __HERE__ ")");
    t.method("fStdErrDup!", [](RedirectHandle_t& a, Int_t val) -> Int_t { return a.fStdErrDup = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fStdErrDup! methods to provide write access to the field fStdErrDup (" __HERE__ ")");
    t.method("fStdErrDup!", [](RedirectHandle_t* a, Int_t val) -> Int_t { return a->fStdErrDup = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fReadOffSet methods  to provide read access to the field fReadOffSet (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:207:14
    // signature to use in the veto list: RedirectHandle_t::fReadOffSet
    t.method("fReadOffSet", [](const RedirectHandle_t& a) -> Int_t { return a.fReadOffSet; }, jlcxx::arg("this"));
    t.method("fReadOffSet", [](RedirectHandle_t& a) -> Int_t { return a.fReadOffSet; }, jlcxx::arg("this"));
    t.method("fReadOffSet", [](const RedirectHandle_t* a) -> Int_t { return a->fReadOffSet; }, jlcxx::arg("this"));
    t.method("fReadOffSet", [](RedirectHandle_t* a) -> Int_t { return a->fReadOffSet; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:207:14
    // signature to use in the veto list: RedirectHandle_t::fReadOffSet
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fReadOffSet! methods to provide write access to the field fReadOffSet (" __HERE__ ")");
    t.method("fReadOffSet!", [](RedirectHandle_t& a, Int_t val) -> Int_t { return a.fReadOffSet = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fReadOffSet! methods to provide write access to the field fReadOffSet (" __HERE__ ")");
    t.method("fReadOffSet!", [](RedirectHandle_t* a, Int_t val) -> Int_t { return a->fReadOffSet = val; }, jlcxx::arg("this"), jlcxx::arg("value"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<RedirectHandle_t>> type_;
};
std::shared_ptr<Wrapper> newJlRedirectHandle_t(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlRedirectHandle_t(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TProcessEventTimer> : std::false_type { };
  template<> struct DefaultConstructible<TProcessEventTimer> : std::false_type { };
template<> struct SuperType<TProcessEventTimer> { typedef TTimer type; };
}

// Class generating the wrapper for type TProcessEventTimer
// signature to use in the veto file: TProcessEventTimer
struct JlTProcessEventTimer: public Wrapper {

  JlTProcessEventTimer(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TProcessEventTimer (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:251:7
    jlcxx::TypeWrapper<TProcessEventTimer>  t = jlModule.add_type<TProcessEventTimer>("TProcessEventTimer",
      jlcxx::julia_base_type<TTimer>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TProcessEventTimer>>(new jlcxx::TypeWrapper<TProcessEventTimer>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TProcessEventTimer::TProcessEventTimer(Long_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:253:4
    t.constructor<Long_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("delay")    );

    DEBUG_MSG("Adding wrapper for Bool_t TProcessEventTimer::Notify() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProcessEventTimer::Notify()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:254:11
    t.method("Notify", [](TProcessEventTimer& a)->Bool_t { return a.Notify(); }, jlcxx::arg("this"));
    t.method("Notify", [](TProcessEventTimer* a)->Bool_t { return a->Notify(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TProcessEventTimer::ProcessEvents() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TProcessEventTimer::ProcessEvents()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:255:11
    t.method("ProcessEvents", [](TProcessEventTimer& a)->Bool_t { return a.ProcessEvents(); }, jlcxx::arg("this"));
    t.method("ProcessEvents", [](TProcessEventTimer* a)->Bool_t { return a->ProcessEvents(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TProcessEventTimer::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TProcessEventTimer::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TProcessEventTimer!Class_Version", []()->Version_t { return TProcessEventTimer::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TProcessEventTimer::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProcessEventTimer::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TProcessEventTimer const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TProcessEventTimer const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TProcessEventTimer::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProcessEventTimer::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TProcessEventTimer& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TProcessEventTimer* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TProcessEventTimer::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProcessEventTimer::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TProcessEventTimer!DeclFileName", []() { return (std::string)TProcessEventTimer::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TProcessEventTimer::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProcessEventTimer::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TProcessEventTimer!ImplFileLine", []()->int { return TProcessEventTimer::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TProcessEventTimer::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProcessEventTimer::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TProcessEventTimer!ImplFileName", []() { return (std::string)TProcessEventTimer::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TProcessEventTimer::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TProcessEventTimer::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TProcessEventTimer!Class_Name", []() { return (std::string)TProcessEventTimer::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TProcessEventTimer::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProcessEventTimer::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TProcessEventTimer!Dictionary", []()->TClass * { return TProcessEventTimer::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TProcessEventTimer::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TProcessEventTimer::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TProcessEventTimer!Class", []()->TClass * { return TProcessEventTimer::Class(); });

    DEBUG_MSG("Adding wrapper for void TProcessEventTimer::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TProcessEventTimer::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TProcessEventTimer& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TProcessEventTimer* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TProcessEventTimer::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TProcessEventTimer::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TProcessEventTimer!DeclFileLine", []()->int { return TProcessEventTimer::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TProcessEventTimer>> type_;
};
std::shared_ptr<Wrapper> newJlTProcessEventTimer(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTProcessEventTimer(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TSystem> : std::false_type { };
  template<> struct DefaultConstructible<TSystem> : std::false_type { };
template<> struct SuperType<TSystem> { typedef TNamed type; };
}

// Class generating the wrapper for type TSystem
// signature to use in the veto file: TSystem
struct JlTSystem: public Wrapper {

  JlTSystem(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TSystem (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:260:7
    jlcxx::TypeWrapper<TSystem>  t = jlModule.add_type<TSystem>("TSystem",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TSystem>>(new jlcxx::TypeWrapper<TSystem>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TSystem::TSystem(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:336:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name")    );
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title")    );

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::Init() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::Init()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:340:28
    t.method("Init", [](TSystem& a)->Bool_t { return a.Init(); }, jlcxx::arg("this"));
    t.method("Init", [](TSystem* a)->Bool_t { return a->Init(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetProgname(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetProgname(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:341:28
    t.method("SetProgname", [](TSystem& a, const char * arg0)->void { a.SetProgname(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("SetProgname", [](TSystem* a, const char * arg0)->void { a->SetProgname(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetDisplay() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetDisplay()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:342:28
    t.method("SetDisplay", [](TSystem& a)->void { a.SetDisplay(); }, jlcxx::arg("this"));
    t.method("SetDisplay", [](TSystem* a)->void { a->SetDisplay(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetErrorStr(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetErrorStr(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:343:28
    t.method("SetErrorStr", [](TSystem& a, const char * arg0)->void { a.SetErrorStr(arg0); }, jlcxx::arg("this"), jlcxx::arg("errstr"));
    t.method("SetErrorStr", [](TSystem* a, const char * arg0)->void { a->SetErrorStr(arg0); }, jlcxx::arg("this"), jlcxx::arg("errstr"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetErrorStr() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetErrorStr()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:344:28
    t.method("GetErrorStr", [](TSystem const& a) { return (std::string)a.GetErrorStr(); }, jlcxx::arg("this"));
    t.method("GetErrorStr", [](TSystem const* a) { return (std::string)a->GetErrorStr(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetError() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetError()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:345:28
    t.method("GetError", [](TSystem& a) { return (std::string)a.GetError(); }, jlcxx::arg("this"));
    t.method("GetError", [](TSystem* a) { return (std::string)a->GetError(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetCryptoRandom(void *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetCryptoRandom(void *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:346:28
    t.method("GetCryptoRandom", [](TSystem& a, void * arg0, Int_t arg1)->Int_t { return a.GetCryptoRandom(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));
    t.method("GetCryptoRandom", [](TSystem* a, void * arg0, Int_t arg1)->Int_t { return a->GetCryptoRandom(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));

    DEBUG_MSG("Adding wrapper for void TSystem::RemoveOnExit(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::RemoveOnExit(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:347:28
    t.method("RemoveOnExit", [](TSystem& a, TObject * arg0)->void { a.RemoveOnExit(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("RemoveOnExit", [](TSystem* a, TObject * arg0)->void { a->RemoveOnExit(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::HostName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::HostName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:348:28
    t.method("HostName", [](TSystem& a) { return (std::string)a.HostName(); }, jlcxx::arg("this"));
    t.method("HostName", [](TSystem* a) { return (std::string)a->HostName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::NotifyApplicationCreated() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::NotifyApplicationCreated()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:349:28
    t.method("NotifyApplicationCreated", [](TSystem& a)->void { a.NotifyApplicationCreated(); }, jlcxx::arg("this"));
    t.method("NotifyApplicationCreated", [](TSystem* a)->void { a->NotifyApplicationCreated(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetErrno() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetErrno()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:351:28
    module_.method("TSystem!GetErrno", []()->Int_t { return TSystem::GetErrno(); });

    DEBUG_MSG("Adding wrapper for void TSystem::ResetErrno() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ResetErrno()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:352:28
    module_.method("TSystem!ResetErrno", []()->void { TSystem::ResetErrno(); });

    DEBUG_MSG("Adding wrapper for void TSystem::Beep(Int_t, Int_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Beep(Int_t, Int_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:353:28
    t.method("Beep", [](TSystem& a)->void { a.Beep(); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"), jlcxx::arg("setDefault"));
    t.method("Beep", [](TSystem& a, Int_t arg0)->void { a.Beep(arg0); }, jlcxx::arg("this"), jlcxx::arg("freq"));
    t.method("Beep", [](TSystem& a, Int_t arg0, Int_t arg1)->void { a.Beep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"));
    t.method("Beep", [](TSystem& a, Int_t arg0, Int_t arg1, Bool_t arg2)->void { a.Beep(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"), jlcxx::arg("setDefault"));
    t.method("Beep", [](TSystem* a)->void { a->Beep(); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"), jlcxx::arg("setDefault"));
    t.method("Beep", [](TSystem* a, Int_t arg0)->void { a->Beep(arg0); }, jlcxx::arg("this"), jlcxx::arg("freq"));
    t.method("Beep", [](TSystem* a, Int_t arg0, Int_t arg1)->void { a->Beep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"));
    t.method("Beep", [](TSystem* a, Int_t arg0, Int_t arg1, Bool_t arg2)->void { a->Beep(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"), jlcxx::arg("setDefault"));

    DEBUG_MSG("Adding wrapper for void TSystem::GetBeepDefaults(Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::GetBeepDefaults(Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:354:28
    t.method("GetBeepDefaults", [](TSystem const& a, Int_t & arg0, Int_t & arg1)->void { a.GetBeepDefaults(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"));
    t.method("GetBeepDefaults", [](TSystem const* a, Int_t & arg0, Int_t & arg1)->void { a->GetBeepDefaults(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("freq"), jlcxx::arg("duration"));

    DEBUG_MSG("Adding wrapper for void TSystem::Run() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Run()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:357:28
    t.method("Run", [](TSystem& a)->void { a.Run(); }, jlcxx::arg("this"));
    t.method("Run", [](TSystem* a)->void { a->Run(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::ProcessEvents() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::ProcessEvents()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:358:28
    t.method("ProcessEvents", [](TSystem& a)->Bool_t { return a.ProcessEvents(); }, jlcxx::arg("this"));
    t.method("ProcessEvents", [](TSystem* a)->Bool_t { return a->ProcessEvents(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::DispatchOneEvent(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::DispatchOneEvent(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:359:28
    t.method("DispatchOneEvent", [](TSystem& a)->void { a.DispatchOneEvent(); }, jlcxx::arg("this"), jlcxx::arg("pendingOnly"));
    t.method("DispatchOneEvent", [](TSystem& a, Bool_t arg0)->void { a.DispatchOneEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("pendingOnly"));
    t.method("DispatchOneEvent", [](TSystem* a)->void { a->DispatchOneEvent(); }, jlcxx::arg("this"), jlcxx::arg("pendingOnly"));
    t.method("DispatchOneEvent", [](TSystem* a, Bool_t arg0)->void { a->DispatchOneEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("pendingOnly"));

    DEBUG_MSG("Adding wrapper for void TSystem::ExitLoop() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ExitLoop()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:360:28
    t.method("ExitLoop", [](TSystem& a)->void { a.ExitLoop(); }, jlcxx::arg("this"));
    t.method("ExitLoop", [](TSystem* a)->void { a->ExitLoop(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::InControl() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::InControl()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:361:28
    t.method("InControl", [](TSystem const& a)->Bool_t { return a.InControl(); }, jlcxx::arg("this"));
    t.method("InControl", [](TSystem const* a)->Bool_t { return a->InControl(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::InnerLoop() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::InnerLoop()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:362:28
    t.method("InnerLoop", [](TSystem& a)->void { a.InnerLoop(); }, jlcxx::arg("this"));
    t.method("InnerLoop", [](TSystem* a)->void { a->InnerLoop(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::Select(TList *, Long_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::Select(TList *, Long_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:363:28
    t.method("Select", [](TSystem& a, TList * arg0, Long_t arg1)->Int_t { return a.Select(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("active"), jlcxx::arg("timeout"));
    t.method("Select", [](TSystem* a, TList * arg0, Long_t arg1)->Int_t { return a->Select(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("active"), jlcxx::arg("timeout"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::Select(TFileHandler *, Long_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::Select(TFileHandler *, Long_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:364:28
    t.method("Select", [](TSystem& a, TFileHandler * arg0, Long_t arg1)->Int_t { return a.Select(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("fh"), jlcxx::arg("timeout"));
    t.method("Select", [](TSystem* a, TFileHandler * arg0, Long_t arg1)->Int_t { return a->Select(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("fh"), jlcxx::arg("timeout"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddSignalHandler(TSignalHandler *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddSignalHandler(TSignalHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:367:28
    t.method("AddSignalHandler", [](TSystem& a, TSignalHandler * arg0)->void { a.AddSignalHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("sh"));
    t.method("AddSignalHandler", [](TSystem* a, TSignalHandler * arg0)->void { a->AddSignalHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("sh"));

    DEBUG_MSG("Adding wrapper for TSignalHandler * TSystem::RemoveSignalHandler(TSignalHandler *) (" __HERE__ ")");
    // signature to use in the veto list: TSignalHandler * TSystem::RemoveSignalHandler(TSignalHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:368:28
    t.method("RemoveSignalHandler", [](TSystem& a, TSignalHandler * arg0)->TSignalHandler * { return a.RemoveSignalHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("sh"));
    t.method("RemoveSignalHandler", [](TSystem* a, TSignalHandler * arg0)->TSignalHandler * { return a->RemoveSignalHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("sh"));

    DEBUG_MSG("Adding wrapper for void TSystem::ResetSignal(ESignals, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ResetSignal(ESignals, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:369:28
    t.method("ResetSignal", [](TSystem& a, ESignals arg0)->void { a.ResetSignal(arg0); }, jlcxx::arg("this"), jlcxx::arg("sig"));
    t.method("ResetSignal", [](TSystem& a, ESignals arg0, Bool_t arg1)->void { a.ResetSignal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sig"), jlcxx::arg("reset"));
    t.method("ResetSignal", [](TSystem* a, ESignals arg0)->void { a->ResetSignal(arg0); }, jlcxx::arg("this"), jlcxx::arg("sig"));
    t.method("ResetSignal", [](TSystem* a, ESignals arg0, Bool_t arg1)->void { a->ResetSignal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sig"), jlcxx::arg("reset"));

    DEBUG_MSG("Adding wrapper for void TSystem::ResetSignals() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ResetSignals()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:370:28
    t.method("ResetSignals", [](TSystem& a)->void { a.ResetSignals(); }, jlcxx::arg("this"));
    t.method("ResetSignals", [](TSystem* a)->void { a->ResetSignals(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::IgnoreSignal(ESignals, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::IgnoreSignal(ESignals, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:371:28
    t.method("IgnoreSignal", [](TSystem& a, ESignals arg0)->void { a.IgnoreSignal(arg0); }, jlcxx::arg("this"), jlcxx::arg("sig"));
    t.method("IgnoreSignal", [](TSystem& a, ESignals arg0, Bool_t arg1)->void { a.IgnoreSignal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sig"), jlcxx::arg("ignore"));
    t.method("IgnoreSignal", [](TSystem* a, ESignals arg0)->void { a->IgnoreSignal(arg0); }, jlcxx::arg("this"), jlcxx::arg("sig"));
    t.method("IgnoreSignal", [](TSystem* a, ESignals arg0, Bool_t arg1)->void { a->IgnoreSignal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sig"), jlcxx::arg("ignore"));

    DEBUG_MSG("Adding wrapper for void TSystem::IgnoreInterrupt(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::IgnoreInterrupt(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:372:28
    t.method("IgnoreInterrupt", [](TSystem& a)->void { a.IgnoreInterrupt(); }, jlcxx::arg("this"), jlcxx::arg("ignore"));
    t.method("IgnoreInterrupt", [](TSystem& a, Bool_t arg0)->void { a.IgnoreInterrupt(arg0); }, jlcxx::arg("this"), jlcxx::arg("ignore"));
    t.method("IgnoreInterrupt", [](TSystem* a)->void { a->IgnoreInterrupt(); }, jlcxx::arg("this"), jlcxx::arg("ignore"));
    t.method("IgnoreInterrupt", [](TSystem* a, Bool_t arg0)->void { a->IgnoreInterrupt(arg0); }, jlcxx::arg("this"), jlcxx::arg("ignore"));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TSystem::GetListOfSignalHandlers() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TSystem::GetListOfSignalHandlers()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:373:28
    t.method("GetListOfSignalHandlers", [](TSystem const& a)->TSeqCollection * { return a.GetListOfSignalHandlers(); }, jlcxx::arg("this"));
    t.method("GetListOfSignalHandlers", [](TSystem const* a)->TSeqCollection * { return a->GetListOfSignalHandlers(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddFileHandler(TFileHandler *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddFileHandler(TFileHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:374:28
    t.method("AddFileHandler", [](TSystem& a, TFileHandler * arg0)->void { a.AddFileHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("fh"));
    t.method("AddFileHandler", [](TSystem* a, TFileHandler * arg0)->void { a->AddFileHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("fh"));

    DEBUG_MSG("Adding wrapper for TFileHandler * TSystem::RemoveFileHandler(TFileHandler *) (" __HERE__ ")");
    // signature to use in the veto list: TFileHandler * TSystem::RemoveFileHandler(TFileHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:375:28
    t.method("RemoveFileHandler", [](TSystem& a, TFileHandler * arg0)->TFileHandler * { return a.RemoveFileHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("fh"));
    t.method("RemoveFileHandler", [](TSystem* a, TFileHandler * arg0)->TFileHandler * { return a->RemoveFileHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("fh"));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TSystem::GetListOfFileHandlers() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TSystem::GetListOfFileHandlers()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:376:28
    t.method("GetListOfFileHandlers", [](TSystem const& a)->TSeqCollection * { return a.GetListOfFileHandlers(); }, jlcxx::arg("this"));
    t.method("GetListOfFileHandlers", [](TSystem const* a)->TSeqCollection * { return a->GetListOfFileHandlers(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddStdExceptionHandler(TStdExceptionHandler *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddStdExceptionHandler(TStdExceptionHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:377:28
    t.method("AddStdExceptionHandler", [](TSystem& a, TStdExceptionHandler * arg0)->void { a.AddStdExceptionHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("eh"));
    t.method("AddStdExceptionHandler", [](TSystem* a, TStdExceptionHandler * arg0)->void { a->AddStdExceptionHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("eh"));

    DEBUG_MSG("Adding wrapper for TStdExceptionHandler * TSystem::RemoveStdExceptionHandler(TStdExceptionHandler *) (" __HERE__ ")");
    // signature to use in the veto list: TStdExceptionHandler * TSystem::RemoveStdExceptionHandler(TStdExceptionHandler *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:378:34
    t.method("RemoveStdExceptionHandler", [](TSystem& a, TStdExceptionHandler * arg0)->TStdExceptionHandler * { return a.RemoveStdExceptionHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("eh"));
    t.method("RemoveStdExceptionHandler", [](TSystem* a, TStdExceptionHandler * arg0)->TStdExceptionHandler * { return a->RemoveStdExceptionHandler(arg0); }, jlcxx::arg("this"), jlcxx::arg("eh"));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TSystem::GetListOfStdExceptionHandlers() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TSystem::GetListOfStdExceptionHandlers()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:379:28
    t.method("GetListOfStdExceptionHandlers", [](TSystem const& a)->TSeqCollection * { return a.GetListOfStdExceptionHandlers(); }, jlcxx::arg("this"));
    t.method("GetListOfStdExceptionHandlers", [](TSystem const* a)->TSeqCollection * { return a->GetListOfStdExceptionHandlers(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetFPEMask() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetFPEMask()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:382:28
    t.method("GetFPEMask", [](TSystem& a)->Int_t { return a.GetFPEMask(); }, jlcxx::arg("this"));
    t.method("GetFPEMask", [](TSystem* a)->Int_t { return a->GetFPEMask(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::SetFPEMask(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::SetFPEMask(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:383:28
    t.method("SetFPEMask", [](TSystem& a)->Int_t { return a.SetFPEMask(); }, jlcxx::arg("this"));
    t.method("SetFPEMask", [](TSystem& a, Int_t arg0)->Int_t { return a.SetFPEMask(arg0); }, jlcxx::arg("this"), jlcxx::arg("mask"));
    t.method("SetFPEMask", [](TSystem* a)->Int_t { return a->SetFPEMask(); }, jlcxx::arg("this"));
    t.method("SetFPEMask", [](TSystem* a, Int_t arg0)->Int_t { return a->SetFPEMask(arg0); }, jlcxx::arg("this"), jlcxx::arg("mask"));

    DEBUG_MSG("Adding wrapper for TTime TSystem::Now() (" __HERE__ ")");
    // signature to use in the veto list: TTime TSystem::Now()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:386:28
    t.method("Now", [](TSystem& a)->TTime { return a.Now(); }, jlcxx::arg("this"));
    t.method("Now", [](TSystem* a)->TTime { return a->Now(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TList * TSystem::GetListOfTimers() (" __HERE__ ")");
    // signature to use in the veto list: TList * TSystem::GetListOfTimers()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:387:28
    t.method("GetListOfTimers", [](TSystem const& a)->TList * { return a.GetListOfTimers(); }, jlcxx::arg("this"));
    t.method("GetListOfTimers", [](TSystem const* a)->TList * { return a->GetListOfTimers(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddTimer(TTimer *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddTimer(TTimer *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:388:28
    t.method("AddTimer", [](TSystem& a, TTimer * arg0)->void { a.AddTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("t"));
    t.method("AddTimer", [](TSystem* a, TTimer * arg0)->void { a->AddTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("t"));

    DEBUG_MSG("Adding wrapper for TTimer * TSystem::RemoveTimer(TTimer *) (" __HERE__ ")");
    // signature to use in the veto list: TTimer * TSystem::RemoveTimer(TTimer *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:389:28
    t.method("RemoveTimer", [](TSystem& a, TTimer * arg0)->TTimer * { return a.RemoveTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("t"));
    t.method("RemoveTimer", [](TSystem* a, TTimer * arg0)->TTimer * { return a->RemoveTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("t"));

    DEBUG_MSG("Adding wrapper for void TSystem::ResetTimer(TTimer *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ResetTimer(TTimer *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:390:28
    t.method("ResetTimer", [](TSystem& a, TTimer * arg0)->void { a.ResetTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("ResetTimer", [](TSystem* a, TTimer * arg0)->void { a->ResetTimer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Long_t TSystem::NextTimeOut(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Long_t TSystem::NextTimeOut(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:391:28
    t.method("NextTimeOut", [](TSystem& a, Bool_t arg0)->Long_t { return a.NextTimeOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));
    t.method("NextTimeOut", [](TSystem* a, Bool_t arg0)->Long_t { return a->NextTimeOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for void TSystem::Sleep(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Sleep(UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:392:28
    t.method("Sleep", [](TSystem& a, UInt_t arg0)->void { a.Sleep(arg0); }, jlcxx::arg("this"), jlcxx::arg("milliSec"));
    t.method("Sleep", [](TSystem* a, UInt_t arg0)->void { a->Sleep(arg0); }, jlcxx::arg("this"), jlcxx::arg("milliSec"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::Exec(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::Exec(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:395:28
    t.method("Exec", [](TSystem& a, const char * arg0)->Int_t { return a.Exec(arg0); }, jlcxx::arg("this"), jlcxx::arg("shellcmd"));
    t.method("Exec", [](TSystem* a, const char * arg0)->Int_t { return a->Exec(arg0); }, jlcxx::arg("this"), jlcxx::arg("shellcmd"));

    DEBUG_MSG("Adding wrapper for FILE * TSystem::OpenPipe(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: FILE * TSystem::OpenPipe(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:396:28
    t.method("OpenPipe", [](TSystem& a, const char * arg0, const char * arg1)->FILE * { return a.OpenPipe(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("command"), jlcxx::arg("mode"));
    t.method("OpenPipe", [](TSystem* a, const char * arg0, const char * arg1)->FILE * { return a->OpenPipe(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("command"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for int TSystem::ClosePipe(FILE *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::ClosePipe(FILE *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:397:28
    t.method("ClosePipe", [](TSystem& a, FILE * arg0)->int { return a.ClosePipe(arg0); }, jlcxx::arg("this"), jlcxx::arg("pipe"));
    t.method("ClosePipe", [](TSystem* a, FILE * arg0)->int { return a->ClosePipe(arg0); }, jlcxx::arg("this"), jlcxx::arg("pipe"));

    DEBUG_MSG("Adding wrapper for TString TSystem::GetFromPipe(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TString TSystem::GetFromPipe(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:398:28
    t.method("GetFromPipe", [](TSystem& a, const char * arg0)->TString { return a.GetFromPipe(arg0); }, jlcxx::arg("this"), jlcxx::arg("command"));
    t.method("GetFromPipe", [](TSystem* a, const char * arg0)->TString { return a->GetFromPipe(arg0); }, jlcxx::arg("this"), jlcxx::arg("command"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetPid() (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetPid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:399:28
    t.method("GetPid", [](TSystem& a)->int { return a.GetPid(); }, jlcxx::arg("this"));
    t.method("GetPid", [](TSystem* a)->int { return a->GetPid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::StackTrace() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::StackTrace()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:400:28
    t.method("StackTrace", [](TSystem& a)->void { a.StackTrace(); }, jlcxx::arg("this"));
    t.method("StackTrace", [](TSystem* a)->void { a->StackTrace(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::Exit(int, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Exit(int, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:402:32
    t.method("Exit", [](TSystem& a, int arg0)->void { a.Exit(arg0); }, jlcxx::arg("this"), jlcxx::arg("code"));
    t.method("Exit", [](TSystem& a, int arg0, Bool_t arg1)->void { a.Exit(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("code"), jlcxx::arg("mode"));
    t.method("Exit", [](TSystem* a, int arg0)->void { a->Exit(arg0); }, jlcxx::arg("this"), jlcxx::arg("code"));
    t.method("Exit", [](TSystem* a, int arg0, Bool_t arg1)->void { a->Exit(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("code"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for void TSystem::Abort(int) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Abort(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:403:32
    t.method("Abort", [](TSystem& a)->void { a.Abort(); }, jlcxx::arg("this"));
    t.method("Abort", [](TSystem& a, int arg0)->void { a.Abort(arg0); }, jlcxx::arg("this"), jlcxx::arg("code"));
    t.method("Abort", [](TSystem* a)->void { a->Abort(); }, jlcxx::arg("this"));
    t.method("Abort", [](TSystem* a, int arg0)->void { a->Abort(arg0); }, jlcxx::arg("this"), jlcxx::arg("code"));

    DEBUG_MSG("Adding wrapper for int TSystem::MakeDirectory(const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::MakeDirectory(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:406:28
    t.method("MakeDirectory", [](TSystem& a, const char * arg0)->int { return a.MakeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("MakeDirectory", [](TSystem* a, const char * arg0)->int { return a->MakeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void * TSystem::OpenDirectory(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void * TSystem::OpenDirectory(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:407:28
    t.method("OpenDirectory", [](TSystem& a, const char * arg0)->void * { return a.OpenDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("OpenDirectory", [](TSystem* a, const char * arg0)->void * { return a->OpenDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void TSystem::FreeDirectory(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::FreeDirectory(void *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:408:28
    t.method("FreeDirectory", [](TSystem& a, void * arg0)->void { a.FreeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirp"));
    t.method("FreeDirectory", [](TSystem* a, void * arg0)->void { a->FreeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirp"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetDirEntry(void *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetDirEntry(void *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:409:28
    t.method("GetDirEntry", [](TSystem& a, void * arg0) { return (std::string)a.GetDirEntry(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirp"));
    t.method("GetDirEntry", [](TSystem* a, void * arg0) { return (std::string)a->GetDirEntry(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirp"));

    DEBUG_MSG("Adding wrapper for void * TSystem::GetDirPtr() (" __HERE__ ")");
    // signature to use in the veto list: void * TSystem::GetDirPtr()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:410:28
    t.method("GetDirPtr", [](TSystem const& a)->void * { return a.GetDirPtr(); }, jlcxx::arg("this"));
    t.method("GetDirPtr", [](TSystem const* a)->void * { return a->GetDirPtr(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::ChangeDirectory(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::ChangeDirectory(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:411:28
    t.method("ChangeDirectory", [](TSystem& a, const char * arg0)->Bool_t { return a.ChangeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("ChangeDirectory", [](TSystem* a, const char * arg0)->Bool_t { return a->ChangeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::WorkingDirectory() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::WorkingDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:412:28
    t.method("WorkingDirectory", [](TSystem& a) { return (std::string)a.WorkingDirectory(); }, jlcxx::arg("this"));
    t.method("WorkingDirectory", [](TSystem* a) { return (std::string)a->WorkingDirectory(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for std::string TSystem::GetWorkingDirectory() (" __HERE__ ")");
    // signature to use in the veto list: std::string TSystem::GetWorkingDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:413:28
    t.method("GetWorkingDirectory", [](TSystem const& a)->std::string { return a.GetWorkingDirectory(); }, jlcxx::arg("this"));
    t.method("GetWorkingDirectory", [](TSystem const* a)->std::string { return a->GetWorkingDirectory(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::HomeDirectory(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::HomeDirectory(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:414:28
    t.method("HomeDirectory", [](TSystem& a) { return (std::string)a.HomeDirectory(); }, jlcxx::arg("this"), jlcxx::arg("userName"));
    t.method("HomeDirectory", [](TSystem& a, const char * arg0) { return (std::string)a.HomeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("userName"));
    t.method("HomeDirectory", [](TSystem* a) { return (std::string)a->HomeDirectory(); }, jlcxx::arg("this"), jlcxx::arg("userName"));
    t.method("HomeDirectory", [](TSystem* a, const char * arg0) { return (std::string)a->HomeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("userName"));

    DEBUG_MSG("Adding wrapper for std::string TSystem::GetHomeDirectory(const char *) (" __HERE__ ")");
    // signature to use in the veto list: std::string TSystem::GetHomeDirectory(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:415:28
    t.method("GetHomeDirectory", [](TSystem const& a)->std::string { return a.GetHomeDirectory(); }, jlcxx::arg("this"));
    t.method("GetHomeDirectory", [](TSystem const& a, const char * arg0)->std::string { return a.GetHomeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("userName"));
    t.method("GetHomeDirectory", [](TSystem const* a)->std::string { return a->GetHomeDirectory(); }, jlcxx::arg("this"));
    t.method("GetHomeDirectory", [](TSystem const* a, const char * arg0)->std::string { return a->GetHomeDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("userName"));

    DEBUG_MSG("Adding wrapper for int TSystem::mkdir(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::mkdir(const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:416:28
    t.method("mkdir", [](TSystem& a, const char * arg0)->int { return a.mkdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("mkdir", [](TSystem& a, const char * arg0, Bool_t arg1)->int { return a.mkdir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("recursive"));
    t.method("mkdir", [](TSystem* a, const char * arg0)->int { return a->mkdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("mkdir", [](TSystem* a, const char * arg0, Bool_t arg1)->int { return a->mkdir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("recursive"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:417:28
    t.method("cd", [](TSystem& a, const char * arg0)->Bool_t { return a.cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("cd", [](TSystem* a, const char * arg0)->Bool_t { return a->cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::pwd() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::pwd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:418:28
    t.method("pwd", [](TSystem& a) { return (std::string)a.pwd(); }, jlcxx::arg("this"));
    t.method("pwd", [](TSystem* a) { return (std::string)a->pwd(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::TempDirectory() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::TempDirectory()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:419:28
    t.method("TempDirectory", [](TSystem const& a) { return (std::string)a.TempDirectory(); }, jlcxx::arg("this"));
    t.method("TempDirectory", [](TSystem const* a) { return (std::string)a->TempDirectory(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for FILE * TSystem::TempFileName(TString &, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: FILE * TSystem::TempFileName(TString &, const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:420:28
    t.method("TempFileName", [](TSystem& a, TString & arg0)->FILE * { return a.TempFileName(arg0); }, jlcxx::arg("this"), jlcxx::arg("base"));
    t.method("TempFileName", [](TSystem& a, TString & arg0, const char * arg1)->FILE * { return a.TempFileName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("base"), jlcxx::arg("dir"));
    t.method("TempFileName", [](TSystem& a, TString & arg0, const char * arg1, const char * arg2)->FILE * { return a.TempFileName(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("base"), jlcxx::arg("dir"), jlcxx::arg("suffix"));
    t.method("TempFileName", [](TSystem* a, TString & arg0)->FILE * { return a->TempFileName(arg0); }, jlcxx::arg("this"), jlcxx::arg("base"));
    t.method("TempFileName", [](TSystem* a, TString & arg0, const char * arg1)->FILE * { return a->TempFileName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("base"), jlcxx::arg("dir"));
    t.method("TempFileName", [](TSystem* a, TString & arg0, const char * arg1, const char * arg2)->FILE * { return a->TempFileName(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("base"), jlcxx::arg("dir"), jlcxx::arg("suffix"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::BaseName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::BaseName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:423:28
    t.method("BaseName", [](TSystem& a, const char * arg0) { return (std::string)a.BaseName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));
    t.method("BaseName", [](TSystem* a, const char * arg0) { return (std::string)a->BaseName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::DirName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::DirName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:424:28
    t.method("DirName", [](TSystem& a, const char * arg0) { return (std::string)a.DirName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));
    t.method("DirName", [](TSystem* a, const char * arg0) { return (std::string)a->DirName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));

    DEBUG_MSG("Adding wrapper for TString TSystem::GetDirName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TString TSystem::GetDirName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:425:28
    t.method("GetDirName", [](TSystem& a, const char * arg0)->TString { return a.GetDirName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));
    t.method("GetDirName", [](TSystem* a, const char * arg0)->TString { return a->GetDirName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));

    DEBUG_MSG("Adding wrapper for char * TSystem::ConcatFileName(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: char * TSystem::ConcatFileName(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:426:28
    t.method("ConcatFileName", [](TSystem& a, const char * arg0, const char * arg1)->char * { return a.ConcatFileName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("name"));
    t.method("ConcatFileName", [](TSystem* a, const char * arg0, const char * arg1)->char * { return a->ConcatFileName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::IsAbsoluteFileName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::IsAbsoluteFileName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:427:28
    t.method("IsAbsoluteFileName", [](TSystem& a, const char * arg0)->Bool_t { return a.IsAbsoluteFileName(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("IsAbsoluteFileName", [](TSystem* a, const char * arg0)->Bool_t { return a->IsAbsoluteFileName(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::IsFileInIncludePath(const char *, char **) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::IsFileInIncludePath(const char *, char **)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:428:28
    t.method("IsFileInIncludePath", [](TSystem& a, const char * arg0)->Bool_t { return a.IsFileInIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("IsFileInIncludePath", [](TSystem& a, const char * arg0, char ** arg1)->Bool_t { return a.IsFileInIncludePath(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("fullpath"));
    t.method("IsFileInIncludePath", [](TSystem* a, const char * arg0)->Bool_t { return a->IsFileInIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("IsFileInIncludePath", [](TSystem* a, const char * arg0, char ** arg1)->Bool_t { return a->IsFileInIncludePath(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("fullpath"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::PrependPathName(const char *, TString &) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::PrependPathName(const char *, TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:429:28
    t.method("PrependPathName", [](TSystem& a, const char * arg0, TString & arg1) { return (std::string)a.PrependPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("name"));
    t.method("PrependPathName", [](TSystem* a, const char * arg0, TString & arg1) { return (std::string)a->PrependPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::ExpandPathName(TString &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::ExpandPathName(TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:430:28
    t.method("ExpandPathName", [](TSystem& a, TString & arg0)->Bool_t { return a.ExpandPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("ExpandPathName", [](TSystem* a, TString & arg0)->Bool_t { return a->ExpandPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for char * TSystem::ExpandPathName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: char * TSystem::ExpandPathName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:431:28
    t.method("ExpandPathName", [](TSystem& a, const char * arg0)->char * { return a.ExpandPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("ExpandPathName", [](TSystem* a, const char * arg0)->char * { return a->ExpandPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::AccessPathName(const char *, EAccessMode) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::AccessPathName(const char *, EAccessMode)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:432:28
    t.method("AccessPathName", [](TSystem& a, const char * arg0)->Bool_t { return a.AccessPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("AccessPathName", [](TSystem& a, const char * arg0, EAccessMode arg1)->Bool_t { return a.AccessPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("mode"));
    t.method("AccessPathName", [](TSystem* a, const char * arg0)->Bool_t { return a->AccessPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("AccessPathName", [](TSystem* a, const char * arg0, EAccessMode arg1)->Bool_t { return a->AccessPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for Bool_t TSystem::IsPathLocal(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TSystem::IsPathLocal(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:433:28
    t.method("IsPathLocal", [](TSystem& a, const char * arg0)->Bool_t { return a.IsPathLocal(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("IsPathLocal", [](TSystem* a, const char * arg0)->Bool_t { return a->IsPathLocal(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for int TSystem::CopyFile(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::CopyFile(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:434:28
    t.method("CopyFile", [](TSystem& a, const char * arg0, const char * arg1)->int { return a.CopyFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));
    t.method("CopyFile", [](TSystem& a, const char * arg0, const char * arg1, Bool_t arg2)->int { return a.CopyFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"), jlcxx::arg("overwrite"));
    t.method("CopyFile", [](TSystem* a, const char * arg0, const char * arg1)->int { return a->CopyFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));
    t.method("CopyFile", [](TSystem* a, const char * arg0, const char * arg1, Bool_t arg2)->int { return a->CopyFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"), jlcxx::arg("overwrite"));

    DEBUG_MSG("Adding wrapper for int TSystem::Rename(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Rename(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:435:28
    t.method("Rename", [](TSystem& a, const char * arg0, const char * arg1)->int { return a.Rename(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));
    t.method("Rename", [](TSystem* a, const char * arg0, const char * arg1)->int { return a->Rename(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));

    DEBUG_MSG("Adding wrapper for int TSystem::Link(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Link(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:436:28
    t.method("Link", [](TSystem& a, const char * arg0, const char * arg1)->int { return a.Link(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));
    t.method("Link", [](TSystem* a, const char * arg0, const char * arg1)->int { return a->Link(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));

    DEBUG_MSG("Adding wrapper for int TSystem::Symlink(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Symlink(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:437:28
    t.method("Symlink", [](TSystem& a, const char * arg0, const char * arg1)->int { return a.Symlink(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));
    t.method("Symlink", [](TSystem* a, const char * arg0, const char * arg1)->int { return a->Symlink(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("from"), jlcxx::arg("to"));

    DEBUG_MSG("Adding wrapper for int TSystem::Unlink(const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Unlink(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:438:28
    t.method("Unlink", [](TSystem& a, const char * arg0)->int { return a.Unlink(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Unlink", [](TSystem* a, const char * arg0)->int { return a->Unlink(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetPathInfo(const char *, Long_t *, Long_t *, Long_t *, Long_t *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetPathInfo(const char *, Long_t *, Long_t *, Long_t *, Long_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:439:28
    t.method("GetPathInfo", [](TSystem& a, const char * arg0, Long_t * arg1, Long_t * arg2, Long_t * arg3, Long_t * arg4)->int { return a.GetPathInfo(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("id"), jlcxx::arg("size"), jlcxx::arg("flags"), jlcxx::arg("modtime"));
    t.method("GetPathInfo", [](TSystem* a, const char * arg0, Long_t * arg1, Long_t * arg2, Long_t * arg3, Long_t * arg4)->int { return a->GetPathInfo(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("id"), jlcxx::arg("size"), jlcxx::arg("flags"), jlcxx::arg("modtime"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetPathInfo(const char *, FileStat_t &) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetPathInfo(const char *, FileStat_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:441:28
    t.method("GetPathInfo", [](TSystem& a, const char * arg0, FileStat_t & arg1)->int { return a.GetPathInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("buf"));
    t.method("GetPathInfo", [](TSystem* a, const char * arg0, FileStat_t & arg1)->int { return a->GetPathInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("buf"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetFsInfo(const char *, Long_t *, Long_t *, Long_t *, Long_t *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetFsInfo(const char *, Long_t *, Long_t *, Long_t *, Long_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:442:28
    t.method("GetFsInfo", [](TSystem& a, const char * arg0, Long_t * arg1, Long_t * arg2, Long_t * arg3, Long_t * arg4)->int { return a.GetFsInfo(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("id"), jlcxx::arg("bsize"), jlcxx::arg("blocks"), jlcxx::arg("bfree"));
    t.method("GetFsInfo", [](TSystem* a, const char * arg0, Long_t * arg1, Long_t * arg2, Long_t * arg3, Long_t * arg4)->int { return a->GetFsInfo(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("path"), jlcxx::arg("id"), jlcxx::arg("bsize"), jlcxx::arg("blocks"), jlcxx::arg("bfree"));

    DEBUG_MSG("Adding wrapper for int TSystem::Chmod(const char *, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Chmod(const char *, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:443:28
    t.method("Chmod", [](TSystem& a, const char * arg0, UInt_t arg1)->int { return a.Chmod(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("file"), jlcxx::arg("mode"));
    t.method("Chmod", [](TSystem* a, const char * arg0, UInt_t arg1)->int { return a->Chmod(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("file"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for int TSystem::Umask(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Umask(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:444:28
    t.method("Umask", [](TSystem& a, Int_t arg0)->int { return a.Umask(arg0); }, jlcxx::arg("this"), jlcxx::arg("mask"));
    t.method("Umask", [](TSystem* a, Int_t arg0)->int { return a->Umask(arg0); }, jlcxx::arg("this"), jlcxx::arg("mask"));

    DEBUG_MSG("Adding wrapper for int TSystem::Utime(const char *, Long_t, Long_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Utime(const char *, Long_t, Long_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:445:28
    t.method("Utime", [](TSystem& a, const char * arg0, Long_t arg1, Long_t arg2)->int { return a.Utime(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("file"), jlcxx::arg("modtime"), jlcxx::arg("actime"));
    t.method("Utime", [](TSystem* a, const char * arg0, Long_t arg1, Long_t arg2)->int { return a->Utime(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("file"), jlcxx::arg("modtime"), jlcxx::arg("actime"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::UnixPathName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::UnixPathName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:446:28
    t.method("UnixPathName", [](TSystem& a, const char * arg0) { return (std::string)a.UnixPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("unixpathname"));
    t.method("UnixPathName", [](TSystem* a, const char * arg0) { return (std::string)a->UnixPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("unixpathname"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::FindFile(const char *, TString &, EAccessMode) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::FindFile(const char *, TString &, EAccessMode)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:447:28
    t.method("FindFile", [](TSystem& a, const char * arg0, TString & arg1) { return (std::string)a.FindFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"));
    t.method("FindFile", [](TSystem& a, const char * arg0, TString & arg1, EAccessMode arg2) { return (std::string)a.FindFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"), jlcxx::arg("mode"));
    t.method("FindFile", [](TSystem* a, const char * arg0, TString & arg1) { return (std::string)a->FindFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"));
    t.method("FindFile", [](TSystem* a, const char * arg0, TString & arg1, EAccessMode arg2) { return (std::string)a->FindFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for char * TSystem::Which(const char *, const char *, EAccessMode) (" __HERE__ ")");
    // signature to use in the veto list: char * TSystem::Which(const char *, const char *, EAccessMode)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:448:28
    t.method("Which", [](TSystem& a, const char * arg0, const char * arg1)->char * { return a.Which(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"));
    t.method("Which", [](TSystem& a, const char * arg0, const char * arg1, EAccessMode arg2)->char * { return a.Which(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"), jlcxx::arg("mode"));
    t.method("Which", [](TSystem* a, const char * arg0, const char * arg1)->char * { return a->Which(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"));
    t.method("Which", [](TSystem* a, const char * arg0, const char * arg1, EAccessMode arg2)->char * { return a->Which(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("search"), jlcxx::arg("file"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for TList * TSystem::GetVolumes(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TList * TSystem::GetVolumes(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:449:28
    t.method("GetVolumes", [](TSystem const& a, Option_t * arg0)->TList * { return a.GetVolumes(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("GetVolumes", [](TSystem const* a, Option_t * arg0)->TList * { return a->GetVolumes(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetUid(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetUid(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:452:28
    t.method("GetUid", [](TSystem& a)->Int_t { return a.GetUid(); }, jlcxx::arg("this"));
    t.method("GetUid", [](TSystem& a, const char * arg0)->Int_t { return a.GetUid(arg0); }, jlcxx::arg("this"), jlcxx::arg("user"));
    t.method("GetUid", [](TSystem* a)->Int_t { return a->GetUid(); }, jlcxx::arg("this"));
    t.method("GetUid", [](TSystem* a, const char * arg0)->Int_t { return a->GetUid(arg0); }, jlcxx::arg("this"), jlcxx::arg("user"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetGid(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetGid(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:453:28
    t.method("GetGid", [](TSystem& a)->Int_t { return a.GetGid(); }, jlcxx::arg("this"));
    t.method("GetGid", [](TSystem& a, const char * arg0)->Int_t { return a.GetGid(arg0); }, jlcxx::arg("this"), jlcxx::arg("group"));
    t.method("GetGid", [](TSystem* a)->Int_t { return a->GetGid(); }, jlcxx::arg("this"));
    t.method("GetGid", [](TSystem* a, const char * arg0)->Int_t { return a->GetGid(arg0); }, jlcxx::arg("this"), jlcxx::arg("group"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetEffectiveUid() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetEffectiveUid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:454:28
    t.method("GetEffectiveUid", [](TSystem& a)->Int_t { return a.GetEffectiveUid(); }, jlcxx::arg("this"));
    t.method("GetEffectiveUid", [](TSystem* a)->Int_t { return a->GetEffectiveUid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetEffectiveGid() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetEffectiveGid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:455:28
    t.method("GetEffectiveGid", [](TSystem& a)->Int_t { return a.GetEffectiveGid(); }, jlcxx::arg("this"));
    t.method("GetEffectiveGid", [](TSystem* a)->Int_t { return a->GetEffectiveGid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for UserGroup_t * TSystem::GetUserInfo(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: UserGroup_t * TSystem::GetUserInfo(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:456:28
    t.method("GetUserInfo", [](TSystem& a, Int_t arg0)->UserGroup_t * { return a.GetUserInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("uid"));
    t.method("GetUserInfo", [](TSystem* a, Int_t arg0)->UserGroup_t * { return a->GetUserInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("uid"));

    DEBUG_MSG("Adding wrapper for UserGroup_t * TSystem::GetUserInfo(const char *) (" __HERE__ ")");
    // signature to use in the veto list: UserGroup_t * TSystem::GetUserInfo(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:457:28
    t.method("GetUserInfo", [](TSystem& a)->UserGroup_t * { return a.GetUserInfo(); }, jlcxx::arg("this"));
    t.method("GetUserInfo", [](TSystem& a, const char * arg0)->UserGroup_t * { return a.GetUserInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("user"));
    t.method("GetUserInfo", [](TSystem* a)->UserGroup_t * { return a->GetUserInfo(); }, jlcxx::arg("this"));
    t.method("GetUserInfo", [](TSystem* a, const char * arg0)->UserGroup_t * { return a->GetUserInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("user"));

    DEBUG_MSG("Adding wrapper for UserGroup_t * TSystem::GetGroupInfo(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: UserGroup_t * TSystem::GetGroupInfo(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:458:28
    t.method("GetGroupInfo", [](TSystem& a, Int_t arg0)->UserGroup_t * { return a.GetGroupInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("gid"));
    t.method("GetGroupInfo", [](TSystem* a, Int_t arg0)->UserGroup_t * { return a->GetGroupInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("gid"));

    DEBUG_MSG("Adding wrapper for UserGroup_t * TSystem::GetGroupInfo(const char *) (" __HERE__ ")");
    // signature to use in the veto list: UserGroup_t * TSystem::GetGroupInfo(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:459:28
    t.method("GetGroupInfo", [](TSystem& a)->UserGroup_t * { return a.GetGroupInfo(); }, jlcxx::arg("this"));
    t.method("GetGroupInfo", [](TSystem& a, const char * arg0)->UserGroup_t * { return a.GetGroupInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("group"));
    t.method("GetGroupInfo", [](TSystem* a)->UserGroup_t * { return a->GetGroupInfo(); }, jlcxx::arg("this"));
    t.method("GetGroupInfo", [](TSystem* a, const char * arg0)->UserGroup_t * { return a->GetGroupInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("group"));

    DEBUG_MSG("Adding wrapper for void TSystem::Setenv(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Setenv(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:462:28
    t.method("Setenv", [](TSystem& a, const char * arg0, const char * arg1)->void { a.Setenv(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("value"));
    t.method("Setenv", [](TSystem* a, const char * arg0, const char * arg1)->void { a->Setenv(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("value"));

    DEBUG_MSG("Adding wrapper for void TSystem::Unsetenv(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Unsetenv(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:463:28
    t.method("Unsetenv", [](TSystem& a, const char * arg0)->void { a.Unsetenv(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Unsetenv", [](TSystem* a, const char * arg0)->void { a->Unsetenv(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::Getenv(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::Getenv(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:464:28
    t.method("Getenv", [](TSystem& a, const char * arg0) { return (std::string)a.Getenv(arg0); }, jlcxx::arg("this"), jlcxx::arg("env"));
    t.method("Getenv", [](TSystem* a, const char * arg0) { return (std::string)a->Getenv(arg0); }, jlcxx::arg("this"), jlcxx::arg("env"));

    DEBUG_MSG("Adding wrapper for void TSystem::Openlog(const char *, Int_t, ELogFacility) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Openlog(const char *, Int_t, ELogFacility)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:467:28
    t.method("Openlog", [](TSystem& a, const char * arg0, Int_t arg1, ELogFacility arg2)->void { a.Openlog(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("options"), jlcxx::arg("facility"));
    t.method("Openlog", [](TSystem* a, const char * arg0, Int_t arg1, ELogFacility arg2)->void { a->Openlog(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("options"), jlcxx::arg("facility"));

    DEBUG_MSG("Adding wrapper for void TSystem::Syslog(ELogLevel, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Syslog(ELogLevel, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:468:28
    t.method("Syslog", [](TSystem& a, ELogLevel arg0, const char * arg1)->void { a.Syslog(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("mess"));
    t.method("Syslog", [](TSystem* a, ELogLevel arg0, const char * arg1)->void { a->Syslog(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("mess"));

    DEBUG_MSG("Adding wrapper for void TSystem::Closelog() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Closelog()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:469:28
    t.method("Closelog", [](TSystem& a)->void { a.Closelog(); }, jlcxx::arg("this"));
    t.method("Closelog", [](TSystem* a)->void { a->Closelog(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::RedirectOutput(const char *, const char *, RedirectHandle_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::RedirectOutput(const char *, const char *, RedirectHandle_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:472:28
    t.method("RedirectOutput", [](TSystem& a, const char * arg0)->Int_t { return a.RedirectOutput(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("RedirectOutput", [](TSystem& a, const char * arg0, const char * arg1)->Int_t { return a.RedirectOutput(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mode"));
    t.method("RedirectOutput", [](TSystem& a, const char * arg0, const char * arg1, RedirectHandle_t * arg2)->Int_t { return a.RedirectOutput(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mode"), jlcxx::arg("h"));
    t.method("RedirectOutput", [](TSystem* a, const char * arg0)->Int_t { return a->RedirectOutput(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("RedirectOutput", [](TSystem* a, const char * arg0, const char * arg1)->Int_t { return a->RedirectOutput(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mode"));
    t.method("RedirectOutput", [](TSystem* a, const char * arg0, const char * arg1, RedirectHandle_t * arg2)->Int_t { return a->RedirectOutput(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mode"), jlcxx::arg("h"));

    DEBUG_MSG("Adding wrapper for void TSystem::ShowOutput(RedirectHandle_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ShowOutput(RedirectHandle_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:473:28
    t.method("ShowOutput", [](TSystem& a, RedirectHandle_t * arg0)->void { a.ShowOutput(arg0); }, jlcxx::arg("this"), jlcxx::arg("h"));
    t.method("ShowOutput", [](TSystem* a, RedirectHandle_t * arg0)->void { a->ShowOutput(arg0); }, jlcxx::arg("this"), jlcxx::arg("h"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddDynamicPath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddDynamicPath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:476:28
    t.method("AddDynamicPath", [](TSystem& a, const char * arg0)->void { a.AddDynamicPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));
    t.method("AddDynamicPath", [](TSystem* a, const char * arg0)->void { a->AddDynamicPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetDynamicPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetDynamicPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:477:28
    t.method("GetDynamicPath", [](TSystem& a) { return (std::string)a.GetDynamicPath(); }, jlcxx::arg("this"));
    t.method("GetDynamicPath", [](TSystem* a) { return (std::string)a->GetDynamicPath(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetDynamicPath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetDynamicPath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:478:28
    t.method("SetDynamicPath", [](TSystem& a, const char * arg0)->void { a.SetDynamicPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));
    t.method("SetDynamicPath", [](TSystem* a, const char * arg0)->void { a->SetDynamicPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("pathname"));

    DEBUG_MSG("Adding wrapper for char * TSystem::DynamicPathName(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TSystem::DynamicPathName(const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:479:28
    t.method("DynamicPathName", [](TSystem& a, const char * arg0)->char * { return a.DynamicPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("lib"));
    t.method("DynamicPathName", [](TSystem& a, const char * arg0, Bool_t arg1)->char * { return a.DynamicPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lib"), jlcxx::arg("quiet"));
    t.method("DynamicPathName", [](TSystem* a, const char * arg0)->char * { return a->DynamicPathName(arg0); }, jlcxx::arg("this"), jlcxx::arg("lib"));
    t.method("DynamicPathName", [](TSystem* a, const char * arg0, Bool_t arg1)->char * { return a->DynamicPathName(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lib"), jlcxx::arg("quiet"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::FindDynamicLibrary(TString &, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::FindDynamicLibrary(TString &, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:480:28
    t.method("FindDynamicLibrary", [](TSystem& a, TString & arg0) { return (std::string)a.FindDynamicLibrary(arg0); }, jlcxx::arg("this"), jlcxx::arg("lib"));
    t.method("FindDynamicLibrary", [](TSystem& a, TString & arg0, Bool_t arg1) { return (std::string)a.FindDynamicLibrary(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lib"), jlcxx::arg("quiet"));
    t.method("FindDynamicLibrary", [](TSystem* a, TString & arg0) { return (std::string)a->FindDynamicLibrary(arg0); }, jlcxx::arg("this"), jlcxx::arg("lib"));
    t.method("FindDynamicLibrary", [](TSystem* a, TString & arg0, Bool_t arg1) { return (std::string)a->FindDynamicLibrary(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lib"), jlcxx::arg("quiet"));

    DEBUG_MSG("Adding wrapper for int TSystem::Load(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::Load(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:482:28
    t.method("Load", [](TSystem& a, const char * arg0)->int { return a.Load(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));
    t.method("Load", [](TSystem& a, const char * arg0, const char * arg1)->int { return a.Load(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("entry"));
    t.method("Load", [](TSystem& a, const char * arg0, const char * arg1, Bool_t arg2)->int { return a.Load(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("entry"), jlcxx::arg("system"));
    t.method("Load", [](TSystem* a, const char * arg0)->int { return a->Load(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));
    t.method("Load", [](TSystem* a, const char * arg0, const char * arg1)->int { return a->Load(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("entry"));
    t.method("Load", [](TSystem* a, const char * arg0, const char * arg1, Bool_t arg2)->int { return a->Load(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("entry"), jlcxx::arg("system"));

    DEBUG_MSG("Adding wrapper for void TSystem::Unload(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Unload(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:483:28
    t.method("Unload", [](TSystem& a, const char * arg0)->void { a.Unload(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));
    t.method("Unload", [](TSystem* a, const char * arg0)->void { a->Unload(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));

    DEBUG_MSG("Adding wrapper for UInt_t TSystem::LoadAllLibraries() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TSystem::LoadAllLibraries()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:484:28
    t.method("LoadAllLibraries", [](TSystem& a)->UInt_t { return a.LoadAllLibraries(); }, jlcxx::arg("this"));
    t.method("LoadAllLibraries", [](TSystem* a)->UInt_t { return a->LoadAllLibraries(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::ListSymbols(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ListSymbols(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:485:28
    t.method("ListSymbols", [](TSystem& a, const char * arg0)->void { a.ListSymbols(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));
    t.method("ListSymbols", [](TSystem& a, const char * arg0, const char * arg1)->void { a.ListSymbols(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("re"));
    t.method("ListSymbols", [](TSystem* a, const char * arg0)->void { a->ListSymbols(arg0); }, jlcxx::arg("this"), jlcxx::arg("module"));
    t.method("ListSymbols", [](TSystem* a, const char * arg0, const char * arg1)->void { a->ListSymbols(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("module"), jlcxx::arg("re"));

    DEBUG_MSG("Adding wrapper for void TSystem::ListLibraries(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::ListLibraries(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:486:28
    t.method("ListLibraries", [](TSystem& a)->void { a.ListLibraries(); }, jlcxx::arg("this"), jlcxx::arg("regexp"));
    t.method("ListLibraries", [](TSystem& a, const char * arg0)->void { a.ListLibraries(arg0); }, jlcxx::arg("this"), jlcxx::arg("regexp"));
    t.method("ListLibraries", [](TSystem* a)->void { a->ListLibraries(); }, jlcxx::arg("this"), jlcxx::arg("regexp"));
    t.method("ListLibraries", [](TSystem* a, const char * arg0)->void { a->ListLibraries(arg0); }, jlcxx::arg("this"), jlcxx::arg("regexp"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetLibraries(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetLibraries(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:487:28
    t.method("GetLibraries", [](TSystem& a) { return (std::string)a.GetLibraries(); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"), jlcxx::arg("isRegexp"));
    t.method("GetLibraries", [](TSystem& a, const char * arg0) { return (std::string)a.GetLibraries(arg0); }, jlcxx::arg("this"), jlcxx::arg("regexp"));
    t.method("GetLibraries", [](TSystem& a, const char * arg0, const char * arg1) { return (std::string)a.GetLibraries(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"));
    t.method("GetLibraries", [](TSystem& a, const char * arg0, const char * arg1, Bool_t arg2) { return (std::string)a.GetLibraries(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"), jlcxx::arg("isRegexp"));
    t.method("GetLibraries", [](TSystem* a) { return (std::string)a->GetLibraries(); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"), jlcxx::arg("isRegexp"));
    t.method("GetLibraries", [](TSystem* a, const char * arg0) { return (std::string)a->GetLibraries(arg0); }, jlcxx::arg("this"), jlcxx::arg("regexp"));
    t.method("GetLibraries", [](TSystem* a, const char * arg0, const char * arg1) { return (std::string)a->GetLibraries(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"));
    t.method("GetLibraries", [](TSystem* a, const char * arg0, const char * arg1, Bool_t arg2) { return (std::string)a->GetLibraries(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("regexp"), jlcxx::arg("option"), jlcxx::arg("isRegexp"));

    DEBUG_MSG("Adding wrapper for TInetAddress TSystem::GetHostByName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TInetAddress TSystem::GetHostByName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:492:28
    t.method("GetHostByName", [](TSystem& a, const char * arg0)->TInetAddress { return a.GetHostByName(arg0); }, jlcxx::arg("this"), jlcxx::arg("server"));
    t.method("GetHostByName", [](TSystem* a, const char * arg0)->TInetAddress { return a->GetHostByName(arg0); }, jlcxx::arg("this"), jlcxx::arg("server"));

    DEBUG_MSG("Adding wrapper for TInetAddress TSystem::GetPeerName(int) (" __HERE__ ")");
    // signature to use in the veto list: TInetAddress TSystem::GetPeerName(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:493:28
    t.method("GetPeerName", [](TSystem& a, int arg0)->TInetAddress { return a.GetPeerName(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));
    t.method("GetPeerName", [](TSystem* a, int arg0)->TInetAddress { return a->GetPeerName(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));

    DEBUG_MSG("Adding wrapper for TInetAddress TSystem::GetSockName(int) (" __HERE__ ")");
    // signature to use in the veto list: TInetAddress TSystem::GetSockName(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:494:28
    t.method("GetSockName", [](TSystem& a, int arg0)->TInetAddress { return a.GetSockName(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));
    t.method("GetSockName", [](TSystem* a, int arg0)->TInetAddress { return a->GetSockName(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetServiceByName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetServiceByName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:495:28
    t.method("GetServiceByName", [](TSystem& a, const char * arg0)->int { return a.GetServiceByName(arg0); }, jlcxx::arg("this"), jlcxx::arg("service"));
    t.method("GetServiceByName", [](TSystem* a, const char * arg0)->int { return a->GetServiceByName(arg0); }, jlcxx::arg("this"), jlcxx::arg("service"));

    DEBUG_MSG("Adding wrapper for char * TSystem::GetServiceByPort(int) (" __HERE__ ")");
    // signature to use in the veto list: char * TSystem::GetServiceByPort(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:496:28
    t.method("GetServiceByPort", [](TSystem& a, int arg0)->char * { return a.GetServiceByPort(arg0); }, jlcxx::arg("this"), jlcxx::arg("port"));
    t.method("GetServiceByPort", [](TSystem* a, int arg0)->char * { return a->GetServiceByPort(arg0); }, jlcxx::arg("this"), jlcxx::arg("port"));

    DEBUG_MSG("Adding wrapper for int TSystem::OpenConnection(const char *, int, int, const char *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::OpenConnection(const char *, int, int, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:497:28
    t.method("OpenConnection", [](TSystem& a, const char * arg0, int arg1)->int { return a.OpenConnection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"));
    t.method("OpenConnection", [](TSystem& a, const char * arg0, int arg1, int arg2)->int { return a.OpenConnection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"), jlcxx::arg("tcpwindowsize"));
    t.method("OpenConnection", [](TSystem& a, const char * arg0, int arg1, int arg2, const char * arg3)->int { return a.OpenConnection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"), jlcxx::arg("tcpwindowsize"), jlcxx::arg("protocol"));
    t.method("OpenConnection", [](TSystem* a, const char * arg0, int arg1)->int { return a->OpenConnection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"));
    t.method("OpenConnection", [](TSystem* a, const char * arg0, int arg1, int arg2)->int { return a->OpenConnection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"), jlcxx::arg("tcpwindowsize"));
    t.method("OpenConnection", [](TSystem* a, const char * arg0, int arg1, int arg2, const char * arg3)->int { return a->OpenConnection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("server"), jlcxx::arg("port"), jlcxx::arg("tcpwindowsize"), jlcxx::arg("protocol"));

    DEBUG_MSG("Adding wrapper for int TSystem::AnnounceTcpService(int, Bool_t, int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::AnnounceTcpService(int, Bool_t, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:498:28
    t.method("AnnounceTcpService", [](TSystem& a, int arg0, Bool_t arg1, int arg2)->int { return a.AnnounceTcpService(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("reuse"), jlcxx::arg("backlog"));
    t.method("AnnounceTcpService", [](TSystem& a, int arg0, Bool_t arg1, int arg2, int arg3)->int { return a.AnnounceTcpService(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("reuse"), jlcxx::arg("backlog"), jlcxx::arg("tcpwindowsize"));
    t.method("AnnounceTcpService", [](TSystem* a, int arg0, Bool_t arg1, int arg2)->int { return a->AnnounceTcpService(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("reuse"), jlcxx::arg("backlog"));
    t.method("AnnounceTcpService", [](TSystem* a, int arg0, Bool_t arg1, int arg2, int arg3)->int { return a->AnnounceTcpService(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("reuse"), jlcxx::arg("backlog"), jlcxx::arg("tcpwindowsize"));

    DEBUG_MSG("Adding wrapper for int TSystem::AnnounceUdpService(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::AnnounceUdpService(int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:499:28
    t.method("AnnounceUdpService", [](TSystem& a, int arg0, int arg1)->int { return a.AnnounceUdpService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("backlog"));
    t.method("AnnounceUdpService", [](TSystem* a, int arg0, int arg1)->int { return a->AnnounceUdpService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("backlog"));

    DEBUG_MSG("Adding wrapper for int TSystem::AnnounceUnixService(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::AnnounceUnixService(int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:500:28
    t.method("AnnounceUnixService", [](TSystem& a, int arg0, int arg1)->int { return a.AnnounceUnixService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("backlog"));
    t.method("AnnounceUnixService", [](TSystem* a, int arg0, int arg1)->int { return a->AnnounceUnixService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("port"), jlcxx::arg("backlog"));

    DEBUG_MSG("Adding wrapper for int TSystem::AnnounceUnixService(const char *, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::AnnounceUnixService(const char *, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:501:28
    t.method("AnnounceUnixService", [](TSystem& a, const char * arg0, int arg1)->int { return a.AnnounceUnixService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sockpath"), jlcxx::arg("backlog"));
    t.method("AnnounceUnixService", [](TSystem* a, const char * arg0, int arg1)->int { return a->AnnounceUnixService(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sockpath"), jlcxx::arg("backlog"));

    DEBUG_MSG("Adding wrapper for int TSystem::AcceptConnection(int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::AcceptConnection(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:502:28
    t.method("AcceptConnection", [](TSystem& a, int arg0)->int { return a.AcceptConnection(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));
    t.method("AcceptConnection", [](TSystem* a, int arg0)->int { return a->AcceptConnection(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));

    DEBUG_MSG("Adding wrapper for void TSystem::CloseConnection(int, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::CloseConnection(int, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:503:28
    t.method("CloseConnection", [](TSystem& a, int arg0)->void { a.CloseConnection(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));
    t.method("CloseConnection", [](TSystem& a, int arg0, Bool_t arg1)->void { a.CloseConnection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("force"));
    t.method("CloseConnection", [](TSystem* a, int arg0)->void { a->CloseConnection(arg0); }, jlcxx::arg("this"), jlcxx::arg("sock"));
    t.method("CloseConnection", [](TSystem* a, int arg0, Bool_t arg1)->void { a->CloseConnection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("force"));

    DEBUG_MSG("Adding wrapper for int TSystem::RecvRaw(int, void *, int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::RecvRaw(int, void *, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:504:28
    t.method("RecvRaw", [](TSystem& a, int arg0, void * arg1, int arg2, int arg3)->int { return a.RecvRaw(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"), jlcxx::arg("flag"));
    t.method("RecvRaw", [](TSystem* a, int arg0, void * arg1, int arg2, int arg3)->int { return a->RecvRaw(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for int TSystem::SendRaw(int, const void *, int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::SendRaw(int, const void *, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:505:28
    t.method("SendRaw", [](TSystem& a, int arg0, const void * arg1, int arg2, int arg3)->int { return a.SendRaw(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"), jlcxx::arg("flag"));
    t.method("SendRaw", [](TSystem* a, int arg0, const void * arg1, int arg2, int arg3)->int { return a->SendRaw(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for int TSystem::RecvBuf(int, void *, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::RecvBuf(int, void *, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:506:28
    t.method("RecvBuf", [](TSystem& a, int arg0, void * arg1, int arg2)->int { return a.RecvBuf(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"));
    t.method("RecvBuf", [](TSystem* a, int arg0, void * arg1, int arg2)->int { return a->RecvBuf(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"));

    DEBUG_MSG("Adding wrapper for int TSystem::SendBuf(int, const void *, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::SendBuf(int, const void *, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:507:28
    t.method("SendBuf", [](TSystem& a, int arg0, const void * arg1, int arg2)->int { return a.SendBuf(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"));
    t.method("SendBuf", [](TSystem* a, int arg0, const void * arg1, int arg2)->int { return a->SendBuf(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("buffer"), jlcxx::arg("length"));

    DEBUG_MSG("Adding wrapper for int TSystem::SetSockOpt(int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::SetSockOpt(int, int, int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:508:28
    t.method("SetSockOpt", [](TSystem& a, int arg0, int arg1, int arg2)->int { return a.SetSockOpt(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("kind"), jlcxx::arg("val"));
    t.method("SetSockOpt", [](TSystem* a, int arg0, int arg1, int arg2)->int { return a->SetSockOpt(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("kind"), jlcxx::arg("val"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetSockOpt(int, int, int *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetSockOpt(int, int, int *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:509:28
    t.method("GetSockOpt", [](TSystem& a, int arg0, int arg1, int * arg2)->int { return a.GetSockOpt(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("kind"), jlcxx::arg("val"));
    t.method("GetSockOpt", [](TSystem* a, int arg0, int arg1, int * arg2)->int { return a->GetSockOpt(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("sock"), jlcxx::arg("kind"), jlcxx::arg("val"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetSysInfo(SysInfo_t *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetSysInfo(SysInfo_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:512:28
    t.method("GetSysInfo", [](TSystem const& a, SysInfo_t * arg0)->int { return a.GetSysInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));
    t.method("GetSysInfo", [](TSystem const* a, SysInfo_t * arg0)->int { return a->GetSysInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetCpuInfo(CpuInfo_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetCpuInfo(CpuInfo_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:513:28
    t.method("GetCpuInfo", [](TSystem const& a, CpuInfo_t * arg0)->int { return a.GetCpuInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));
    t.method("GetCpuInfo", [](TSystem const& a, CpuInfo_t * arg0, Int_t arg1)->int { return a.GetCpuInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("info"), jlcxx::arg("sampleTime"));
    t.method("GetCpuInfo", [](TSystem const* a, CpuInfo_t * arg0)->int { return a->GetCpuInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));
    t.method("GetCpuInfo", [](TSystem const* a, CpuInfo_t * arg0, Int_t arg1)->int { return a->GetCpuInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("info"), jlcxx::arg("sampleTime"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetMemInfo(MemInfo_t *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetMemInfo(MemInfo_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:514:28
    t.method("GetMemInfo", [](TSystem const& a, MemInfo_t * arg0)->int { return a.GetMemInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));
    t.method("GetMemInfo", [](TSystem const* a, MemInfo_t * arg0)->int { return a->GetMemInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));

    DEBUG_MSG("Adding wrapper for int TSystem::GetProcInfo(ProcInfo_t *) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::GetProcInfo(ProcInfo_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:515:28
    t.method("GetProcInfo", [](TSystem const& a, ProcInfo_t * arg0)->int { return a.GetProcInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));
    t.method("GetProcInfo", [](TSystem const* a, ProcInfo_t * arg0)->int { return a->GetProcInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("info"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddIncludePath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddIncludePath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:518:28
    t.method("AddIncludePath", [](TSystem& a, const char * arg0)->void { a.AddIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("includePath"));
    t.method("AddIncludePath", [](TSystem* a, const char * arg0)->void { a->AddIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("includePath"));

    DEBUG_MSG("Adding wrapper for void TSystem::AddLinkedLibs(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::AddLinkedLibs(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:519:28
    t.method("AddLinkedLibs", [](TSystem& a, const char * arg0)->void { a.AddLinkedLibs(arg0); }, jlcxx::arg("this"), jlcxx::arg("linkedLib"));
    t.method("AddLinkedLibs", [](TSystem* a, const char * arg0)->void { a->AddLinkedLibs(arg0); }, jlcxx::arg("this"), jlcxx::arg("linkedLib"));

    DEBUG_MSG("Adding wrapper for int TSystem::CompileMacro(const char *, Option_t *, const char *, const char *, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::CompileMacro(const char *, Option_t *, const char *, const char *, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:520:28
    t.method("CompileMacro", [](TSystem& a, const char * arg0)->int { return a.CompileMacro(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("CompileMacro", [](TSystem& a, const char * arg0, Option_t * arg1)->int { return a.CompileMacro(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"));
    t.method("CompileMacro", [](TSystem& a, const char * arg0, Option_t * arg1, const char * arg2)->int { return a.CompileMacro(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"));
    t.method("CompileMacro", [](TSystem& a, const char * arg0, Option_t * arg1, const char * arg2, const char * arg3)->int { return a.CompileMacro(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"), jlcxx::arg("build_dir"));
    t.method("CompileMacro", [](TSystem& a, const char * arg0, Option_t * arg1, const char * arg2, const char * arg3, UInt_t arg4)->int { return a.CompileMacro(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"), jlcxx::arg("build_dir"), jlcxx::arg("dirmode"));
    t.method("CompileMacro", [](TSystem* a, const char * arg0)->int { return a->CompileMacro(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("CompileMacro", [](TSystem* a, const char * arg0, Option_t * arg1)->int { return a->CompileMacro(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"));
    t.method("CompileMacro", [](TSystem* a, const char * arg0, Option_t * arg1, const char * arg2)->int { return a->CompileMacro(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"));
    t.method("CompileMacro", [](TSystem* a, const char * arg0, Option_t * arg1, const char * arg2, const char * arg3)->int { return a->CompileMacro(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"), jlcxx::arg("build_dir"));
    t.method("CompileMacro", [](TSystem* a, const char * arg0, Option_t * arg1, const char * arg2, const char * arg3, UInt_t arg4)->int { return a->CompileMacro(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("opt"), jlcxx::arg("library_name"), jlcxx::arg("build_dir"), jlcxx::arg("dirmode"));

    DEBUG_MSG("Adding wrapper for Int_t TSystem::GetAclicProperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TSystem::GetAclicProperties()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:521:28
    t.method("GetAclicProperties", [](TSystem const& a)->Int_t { return a.GetAclicProperties(); }, jlcxx::arg("this"));
    t.method("GetAclicProperties", [](TSystem const* a)->Int_t { return a->GetAclicProperties(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildArch() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildArch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:522:28
    t.method("GetBuildArch", [](TSystem const& a) { return (std::string)a.GetBuildArch(); }, jlcxx::arg("this"));
    t.method("GetBuildArch", [](TSystem const* a) { return (std::string)a->GetBuildArch(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildCompiler() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildCompiler()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:523:28
    t.method("GetBuildCompiler", [](TSystem const& a) { return (std::string)a.GetBuildCompiler(); }, jlcxx::arg("this"));
    t.method("GetBuildCompiler", [](TSystem const* a) { return (std::string)a->GetBuildCompiler(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildCompilerVersion() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildCompilerVersion()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:524:28
    t.method("GetBuildCompilerVersion", [](TSystem const& a) { return (std::string)a.GetBuildCompilerVersion(); }, jlcxx::arg("this"));
    t.method("GetBuildCompilerVersion", [](TSystem const* a) { return (std::string)a->GetBuildCompilerVersion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildCompilerVersionStr() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildCompilerVersionStr()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:525:28
    t.method("GetBuildCompilerVersionStr", [](TSystem const& a) { return (std::string)a.GetBuildCompilerVersionStr(); }, jlcxx::arg("this"));
    t.method("GetBuildCompilerVersionStr", [](TSystem const* a) { return (std::string)a->GetBuildCompilerVersionStr(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildNode() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:526:28
    t.method("GetBuildNode", [](TSystem const& a) { return (std::string)a.GetBuildNode(); }, jlcxx::arg("this"));
    t.method("GetBuildNode", [](TSystem const* a) { return (std::string)a->GetBuildNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetBuildDir() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetBuildDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:527:28
    t.method("GetBuildDir", [](TSystem const& a) { return (std::string)a.GetBuildDir(); }, jlcxx::arg("this"));
    t.method("GetBuildDir", [](TSystem const* a) { return (std::string)a->GetBuildDir(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetFlagsDebug() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetFlagsDebug()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:528:28
    t.method("GetFlagsDebug", [](TSystem const& a) { return (std::string)a.GetFlagsDebug(); }, jlcxx::arg("this"));
    t.method("GetFlagsDebug", [](TSystem const* a) { return (std::string)a->GetFlagsDebug(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetFlagsOpt() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetFlagsOpt()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:529:28
    t.method("GetFlagsOpt", [](TSystem const& a) { return (std::string)a.GetFlagsOpt(); }, jlcxx::arg("this"));
    t.method("GetFlagsOpt", [](TSystem const* a) { return (std::string)a->GetFlagsOpt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetIncludePath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetIncludePath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:530:28
    t.method("GetIncludePath", [](TSystem& a) { return (std::string)a.GetIncludePath(); }, jlcxx::arg("this"));
    t.method("GetIncludePath", [](TSystem* a) { return (std::string)a->GetIncludePath(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetLinkedLibs() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetLinkedLibs()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:531:28
    t.method("GetLinkedLibs", [](TSystem const& a) { return (std::string)a.GetLinkedLibs(); }, jlcxx::arg("this"));
    t.method("GetLinkedLibs", [](TSystem const* a) { return (std::string)a->GetLinkedLibs(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetLinkdefSuffix() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetLinkdefSuffix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:532:28
    t.method("GetLinkdefSuffix", [](TSystem const& a) { return (std::string)a.GetLinkdefSuffix(); }, jlcxx::arg("this"));
    t.method("GetLinkdefSuffix", [](TSystem const* a) { return (std::string)a->GetLinkdefSuffix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TSystem::EAclicMode TSystem::GetAclicMode() (" __HERE__ ")");
    // signature to use in the veto list: TSystem::EAclicMode TSystem::GetAclicMode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:533:28
    t.method("GetAclicMode", [](TSystem const& a)->TSystem::EAclicMode { return a.GetAclicMode(); }, jlcxx::arg("this"));
    t.method("GetAclicMode", [](TSystem const* a)->TSystem::EAclicMode { return a->GetAclicMode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetMakeExe() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetMakeExe()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:534:28
    t.method("GetMakeExe", [](TSystem const& a) { return (std::string)a.GetMakeExe(); }, jlcxx::arg("this"));
    t.method("GetMakeExe", [](TSystem const* a) { return (std::string)a->GetMakeExe(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetMakeSharedLib() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetMakeSharedLib()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:535:28
    t.method("GetMakeSharedLib", [](TSystem const& a) { return (std::string)a.GetMakeSharedLib(); }, jlcxx::arg("this"));
    t.method("GetMakeSharedLib", [](TSystem const* a) { return (std::string)a->GetMakeSharedLib(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetSoExt() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetSoExt()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:536:28
    t.method("GetSoExt", [](TSystem const& a) { return (std::string)a.GetSoExt(); }, jlcxx::arg("this"));
    t.method("GetSoExt", [](TSystem const* a) { return (std::string)a->GetSoExt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::GetObjExt() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::GetObjExt()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:537:28
    t.method("GetObjExt", [](TSystem const& a) { return (std::string)a.GetObjExt(); }, jlcxx::arg("this"));
    t.method("GetObjExt", [](TSystem const* a) { return (std::string)a->GetObjExt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetBuildDir(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetBuildDir(const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:538:28
    t.method("SetBuildDir", [](TSystem& a, const char * arg0)->void { a.SetBuildDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("build_dir"));
    t.method("SetBuildDir", [](TSystem& a, const char * arg0, Bool_t arg1)->void { a.SetBuildDir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("build_dir"), jlcxx::arg("isflat"));
    t.method("SetBuildDir", [](TSystem* a, const char * arg0)->void { a->SetBuildDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("build_dir"));
    t.method("SetBuildDir", [](TSystem* a, const char * arg0, Bool_t arg1)->void { a->SetBuildDir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("build_dir"), jlcxx::arg("isflat"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetFlagsDebug(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetFlagsDebug(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:539:28
    t.method("SetFlagsDebug", [](TSystem& a, const char * arg0)->void { a.SetFlagsDebug(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetFlagsDebug", [](TSystem* a, const char * arg0)->void { a->SetFlagsDebug(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetFlagsOpt(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetFlagsOpt(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:540:28
    t.method("SetFlagsOpt", [](TSystem& a, const char * arg0)->void { a.SetFlagsOpt(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetFlagsOpt", [](TSystem* a, const char * arg0)->void { a->SetFlagsOpt(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetIncludePath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetIncludePath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:541:28
    t.method("SetIncludePath", [](TSystem& a, const char * arg0)->void { a.SetIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("includePath"));
    t.method("SetIncludePath", [](TSystem* a, const char * arg0)->void { a->SetIncludePath(arg0); }, jlcxx::arg("this"), jlcxx::arg("includePath"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetMakeExe(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetMakeExe(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:542:28
    t.method("SetMakeExe", [](TSystem& a, const char * arg0)->void { a.SetMakeExe(arg0); }, jlcxx::arg("this"), jlcxx::arg("directives"));
    t.method("SetMakeExe", [](TSystem* a, const char * arg0)->void { a->SetMakeExe(arg0); }, jlcxx::arg("this"), jlcxx::arg("directives"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetAclicMode(TSystem::EAclicMode) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetAclicMode(TSystem::EAclicMode)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:543:28
    t.method("SetAclicMode", [](TSystem& a, TSystem::EAclicMode arg0)->void { a.SetAclicMode(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));
    t.method("SetAclicMode", [](TSystem* a, TSystem::EAclicMode arg0)->void { a->SetAclicMode(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetMakeSharedLib(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetMakeSharedLib(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:544:28
    t.method("SetMakeSharedLib", [](TSystem& a, const char * arg0)->void { a.SetMakeSharedLib(arg0); }, jlcxx::arg("this"), jlcxx::arg("directives"));
    t.method("SetMakeSharedLib", [](TSystem* a, const char * arg0)->void { a->SetMakeSharedLib(arg0); }, jlcxx::arg("this"), jlcxx::arg("directives"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetLinkedLibs(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetLinkedLibs(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:545:28
    t.method("SetLinkedLibs", [](TSystem& a, const char * arg0)->void { a.SetLinkedLibs(arg0); }, jlcxx::arg("this"), jlcxx::arg("linkedLibs"));
    t.method("SetLinkedLibs", [](TSystem* a, const char * arg0)->void { a->SetLinkedLibs(arg0); }, jlcxx::arg("this"), jlcxx::arg("linkedLibs"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetLinkdefSuffix(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetLinkdefSuffix(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:546:28
    t.method("SetLinkdefSuffix", [](TSystem& a, const char * arg0)->void { a.SetLinkdefSuffix(arg0); }, jlcxx::arg("this"), jlcxx::arg("suffix"));
    t.method("SetLinkdefSuffix", [](TSystem* a, const char * arg0)->void { a->SetLinkdefSuffix(arg0); }, jlcxx::arg("this"), jlcxx::arg("suffix"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetSoExt(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetSoExt(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:547:28
    t.method("SetSoExt", [](TSystem& a, const char * arg0)->void { a.SetSoExt(arg0); }, jlcxx::arg("this"), jlcxx::arg("soExt"));
    t.method("SetSoExt", [](TSystem* a, const char * arg0)->void { a->SetSoExt(arg0); }, jlcxx::arg("this"), jlcxx::arg("soExt"));

    DEBUG_MSG("Adding wrapper for void TSystem::SetObjExt(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::SetObjExt(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:548:28
    t.method("SetObjExt", [](TSystem& a, const char * arg0)->void { a.SetObjExt(arg0); }, jlcxx::arg("this"), jlcxx::arg("objExt"));
    t.method("SetObjExt", [](TSystem* a, const char * arg0)->void { a->SetObjExt(arg0); }, jlcxx::arg("this"), jlcxx::arg("objExt"));

    DEBUG_MSG("Adding wrapper for TString TSystem::SplitAclicMode(const char *, TString &, TString &, TString &) (" __HERE__ ")");
    // signature to use in the veto list: TString TSystem::SplitAclicMode(const char *, TString &, TString &, TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:549:28
    t.method("SplitAclicMode", [](TSystem const& a, const char * arg0, TString & arg1, TString & arg2, TString & arg3)->TString { return a.SplitAclicMode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("mode"), jlcxx::arg("args"), jlcxx::arg("io"));
    t.method("SplitAclicMode", [](TSystem const* a, const char * arg0, TString & arg1, TString & arg2, TString & arg3)->TString { return a->SplitAclicMode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("mode"), jlcxx::arg("args"), jlcxx::arg("io"));

    DEBUG_MSG("Adding wrapper for void TSystem::CleanCompiledMacros() (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::CleanCompiledMacros()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:550:28
    t.method("CleanCompiledMacros", [](TSystem& a)->void { a.CleanCompiledMacros(); }, jlcxx::arg("this"));
    t.method("CleanCompiledMacros", [](TSystem* a)->void { a->CleanCompiledMacros(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TSystem::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TSystem::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TSystem!Class_Version", []()->Version_t { return TSystem::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TSystem::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TSystem::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TSystem const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TSystem const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TSystem::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TSystem& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TSystem* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TSystem::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TSystem!DeclFileName", []() { return (std::string)TSystem::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TSystem::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TSystem!ImplFileLine", []()->int { return TSystem::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TSystem::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TSystem!ImplFileName", []() { return (std::string)TSystem::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TSystem::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TSystem::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TSystem!Class_Name", []() { return (std::string)TSystem::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TSystem::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TSystem::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TSystem!Dictionary", []()->TClass * { return TSystem::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TSystem::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TSystem::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TSystem!Class", []()->TClass * { return TSystem::Class(); });

    DEBUG_MSG("Adding wrapper for void TSystem::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TSystem::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TSystem& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TSystem* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TSystem::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TSystem::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TSystem!DeclFileLine", []()->int { return TSystem::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TSystem>> type_;
};
std::shared_ptr<Wrapper> newJlTSystem(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTSystem(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TFileHandler> : std::false_type { };
  template<> struct DefaultConstructible<TFileHandler> : std::false_type { };
}

// Class generating the wrapper for type TFileHandler
// signature to use in the veto file: TFileHandler
struct JlTFileHandler: public Wrapper {

  JlTFileHandler(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TFileHandler (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSysEvtHandler.h:65:7
    jlcxx::TypeWrapper<TFileHandler>  t = jlModule.add_type<TFileHandler>("TFileHandler");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TFileHandler>>(new jlcxx::TypeWrapper<TFileHandler>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TFileHandler>> type_;
};
std::shared_ptr<Wrapper> newJlTFileHandler(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTFileHandler(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TSignalHandler> : std::false_type { };
  template<> struct DefaultConstructible<TSignalHandler> : std::false_type { };
}

// Class generating the wrapper for type TSignalHandler
// signature to use in the veto file: TSignalHandler
struct JlTSignalHandler: public Wrapper {

  JlTSignalHandler(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TSignalHandler (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSysEvtHandler.h:127:7
    jlcxx::TypeWrapper<TSignalHandler>  t = jlModule.add_type<TSignalHandler>("TSignalHandler");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TSignalHandler>>(new jlcxx::TypeWrapper<TSignalHandler>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TSignalHandler>> type_;
};
std::shared_ptr<Wrapper> newJlTSignalHandler(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTSignalHandler(module));
}
