// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoNode> : std::false_type { };
  template<> struct DefaultConstructible<TGeoNode> : std::false_type { };
template<> struct SuperType<TGeoNode> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoNode
// signature to use in the veto file: TGeoNode
struct JlTGeoNode: public Wrapper {

  JlTGeoNode(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoNode (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:39:7
    jlcxx::TypeWrapper<TGeoNode>  t = jlModule.add_type<TGeoNode>("TGeoNode",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoNode>>(new jlcxx::TypeWrapper<TGeoNode>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TGeoNode::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:70:9
    t.method("Browse", [](TGeoNode& a, TBrowser * arg0)->void { a.Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("Browse", [](TGeoNode* a, TBrowser * arg0)->void { a->Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::cd() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::cd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:71:17
    t.method("cd", [](TGeoNode const& a)->void { a.cd(); }, jlcxx::arg("this"));
    t.method("cd", [](TGeoNode const* a)->void { a->cd(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::CheckOverlaps(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::CheckOverlaps(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:72:9
    t.method("CheckOverlaps", [](TGeoNode& a)->void { a.CheckOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoNode& a, Double_t arg0)->void { a.CheckOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("CheckOverlaps", [](TGeoNode& a, Double_t arg0, Option_t * arg1)->void { a.CheckOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoNode* a)->void { a->CheckOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoNode* a, Double_t arg0)->void { a->CheckOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("CheckOverlaps", [](TGeoNode* a, Double_t arg0, Option_t * arg1)->void { a->CheckOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::CheckShapes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::CheckShapes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:73:9
    t.method("CheckShapes", [](TGeoNode& a)->void { a.CheckShapes(); }, jlcxx::arg("this"));
    t.method("CheckShapes", [](TGeoNode* a)->void { a->CheckShapes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::CountDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::CountDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:74:10
    t.method("CountDaughters", [](TGeoNode& a)->Int_t { return a.CountDaughters(); }, jlcxx::arg("this"));
    t.method("CountDaughters", [](TGeoNode& a, Bool_t arg0)->Int_t { return a.CountDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("unique_volumes"));
    t.method("CountDaughters", [](TGeoNode* a)->Int_t { return a->CountDaughters(); }, jlcxx::arg("this"));
    t.method("CountDaughters", [](TGeoNode* a, Bool_t arg0)->Int_t { return a->CountDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("unique_volumes"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:75:10
    t.method("DistancetoPrimitive", [](TGeoNode& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoNode* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:76:9
    t.method("Draw", [](TGeoNode& a)->void { a.Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoNode& a, Option_t * arg0)->void { a.Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Draw", [](TGeoNode* a)->void { a->Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoNode* a, Option_t * arg0)->void { a->Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::DrawOnly(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::DrawOnly(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:77:9
    t.method("DrawOnly", [](TGeoNode& a)->void { a.DrawOnly(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoNode& a, Option_t * arg0)->void { a.DrawOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoNode* a)->void { a->DrawOnly(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoNode* a, Option_t * arg0)->void { a->DrawOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::DrawOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::DrawOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:78:9
    t.method("DrawOverlaps", [](TGeoNode& a)->void { a.DrawOverlaps(); }, jlcxx::arg("this"));
    t.method("DrawOverlaps", [](TGeoNode* a)->void { a->DrawOverlaps(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:79:9
    t.method("ExecuteEvent", [](TGeoNode& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("ExecuteEvent", [](TGeoNode* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::FillIdArray(Int_t &, Int_t &, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::FillIdArray(Int_t &, Int_t &, Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:80:9
    t.method("FillIdArray", [](TGeoNode const& a, Int_t & arg0, Int_t & arg1, Int_t * arg2)->void { a.FillIdArray(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ifree"), jlcxx::arg("nodeid"), jlcxx::arg("array"));
    t.method("FillIdArray", [](TGeoNode const* a, Int_t & arg0, Int_t & arg1, Int_t * arg2)->void { a->FillIdArray(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ifree"), jlcxx::arg("nodeid"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::FindNode(const TGeoNode *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::FindNode(const TGeoNode *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:81:10
    t.method("FindNode", [](TGeoNode& a, const TGeoNode * arg0, Int_t arg1)->Int_t { return a.FindNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("node"), jlcxx::arg("level"));
    t.method("FindNode", [](TGeoNode* a, const TGeoNode * arg0, Int_t arg1)->Int_t { return a->FindNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("node"), jlcxx::arg("level"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:82:18
    t.method("GetByteCount", [](TGeoNode const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoNode const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNode::GetDaughter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNode::GetDaughter(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:83:14
    t.method("GetDaughter", [](TGeoNode const& a, Int_t arg0)->TGeoNode * { return a.GetDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("ind"));
    t.method("GetDaughter", [](TGeoNode const* a, Int_t arg0)->TGeoNode * { return a->GetDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("ind"));

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoNode::GetMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoNode::GetMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:84:24
    t.method("GetMatrix", [](TGeoNode const& a)->TGeoMatrix * { return a.GetMatrix(); }, jlcxx::arg("this"));
    t.method("GetMatrix", [](TGeoNode const* a)->TGeoMatrix * { return a->GetMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetColour() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetColour()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:86:10
    t.method("GetColour", [](TGeoNode const& a)->Int_t { return a.GetColour(); }, jlcxx::arg("this"));
    t.method("GetColour", [](TGeoNode const* a)->Int_t { return a->GetColour(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:87:18
    t.method("GetIndex", [](TGeoNode const& a)->Int_t { return a.GetIndex(); }, jlcxx::arg("this"));
    t.method("GetIndex", [](TGeoNode const* a)->Int_t { return a->GetIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoPatternFinder * TGeoNode::GetFinder() (" __HERE__ ")");
    // signature to use in the veto list: TGeoPatternFinder * TGeoNode::GetFinder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:88:31
    t.method("GetFinder", [](TGeoNode const& a)->TGeoPatternFinder * { return a.GetFinder(); }, jlcxx::arg("this"));
    t.method("GetFinder", [](TGeoNode const* a)->TGeoPatternFinder * { return a->GetFinder(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoNode::GetMedium() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoNode::GetMedium()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:89:16
    t.method("GetMedium", [](TGeoNode const& a)->TGeoMedium * { return a.GetMedium(); }, jlcxx::arg("this"));
    t.method("GetMedium", [](TGeoNode const* a)->TGeoMedium * { return a->GetMedium(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoNode::GetMotherVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoNode::GetMotherVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:90:16
    t.method("GetMotherVolume", [](TGeoNode const& a)->TGeoVolume * { return a.GetMotherVolume(); }, jlcxx::arg("this"));
    t.method("GetMotherVolume", [](TGeoNode const* a)->TGeoVolume * { return a->GetMotherVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetNdaughters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetNdaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:91:10
    t.method("GetNdaughters", [](TGeoNode const& a)->Int_t { return a.GetNdaughters(); }, jlcxx::arg("this"));
    t.method("GetNdaughters", [](TGeoNode const* a)->Int_t { return a->GetNdaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoNode::GetNodes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoNode::GetNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:92:15
    t.method("GetNodes", [](TGeoNode const& a)->TObjArray * { return a.GetNodes(); }, jlcxx::arg("this"));
    t.method("GetNodes", [](TGeoNode const* a)->TObjArray * { return a->GetNodes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetNumber()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:93:10
    t.method("GetNumber", [](TGeoNode const& a)->Int_t { return a.GetNumber(); }, jlcxx::arg("this"));
    t.method("GetNumber", [](TGeoNode const* a)->Int_t { return a->GetNumber(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t * TGeoNode::GetOverlaps(Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TGeoNode::GetOverlaps(Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:94:11
    t.method("GetOverlaps", [](TGeoNode const& a, Int_t & arg0)->Int_t * { return a.GetOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("novlp"));
    t.method("GetOverlaps", [](TGeoNode const* a, Int_t & arg0)->Int_t * { return a->GetOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("novlp"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoNode::GetVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoNode::GetVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:99:16
    t.method("GetVolume", [](TGeoNode const& a)->TGeoVolume * { return a.GetVolume(); }, jlcxx::arg("this"));
    t.method("GetVolume", [](TGeoNode const* a)->TGeoVolume * { return a->GetVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for char * TGeoNode::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TGeoNode::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:100:10
    t.method("GetObjectInfo", [](TGeoNode const& a, Int_t arg0, Int_t arg1)->char * { return a.GetObjectInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("GetObjectInfo", [](TGeoNode const* a, Int_t arg0, Int_t arg1)->char * { return a->GetObjectInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNode::GetOptimalVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNode::GetOptimalVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:101:18
    t.method("GetOptimalVoxels", [](TGeoNode const& a)->Int_t { return a.GetOptimalVoxels(); }, jlcxx::arg("this"));
    t.method("GetOptimalVoxels", [](TGeoNode const* a)->Int_t { return a->GetOptimalVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::InspectNode() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::InspectNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:102:9
    t.method("InspectNode", [](TGeoNode const& a)->void { a.InspectNode(); }, jlcxx::arg("this"));
    t.method("InspectNode", [](TGeoNode const* a)->void { a->InspectNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsCloned() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsCloned()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:103:11
    t.method("IsCloned", [](TGeoNode const& a)->Bool_t { return a.IsCloned(); }, jlcxx::arg("this"));
    t.method("IsCloned", [](TGeoNode const* a)->Bool_t { return a->IsCloned(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:104:11
    t.method("IsFolder", [](TGeoNode const& a)->Bool_t { return a.IsFolder(); }, jlcxx::arg("this"));
    t.method("IsFolder", [](TGeoNode const* a)->Bool_t { return a->IsFolder(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsOffset() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsOffset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:105:11
    t.method("IsOffset", [](TGeoNode const& a)->Bool_t { return a.IsOffset(); }, jlcxx::arg("this"));
    t.method("IsOffset", [](TGeoNode const* a)->Bool_t { return a->IsOffset(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsOnScreen() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsOnScreen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:106:11
    t.method("IsOnScreen", [](TGeoNode const& a)->Bool_t { return a.IsOnScreen(); }, jlcxx::arg("this"));
    t.method("IsOnScreen", [](TGeoNode const* a)->Bool_t { return a->IsOnScreen(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsOverlapping() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsOverlapping()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:107:11
    t.method("IsOverlapping", [](TGeoNode const& a)->Bool_t { return a.IsOverlapping(); }, jlcxx::arg("this"));
    t.method("IsOverlapping", [](TGeoNode const* a)->Bool_t { return a->IsOverlapping(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsVirtual() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsVirtual()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:108:11
    t.method("IsVirtual", [](TGeoNode const& a)->Bool_t { return a.IsVirtual(); }, jlcxx::arg("this"));
    t.method("IsVirtual", [](TGeoNode const* a)->Bool_t { return a->IsVirtual(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsVisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsVisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:109:11
    t.method("IsVisible", [](TGeoNode const& a)->Bool_t { return a.IsVisible(); }, jlcxx::arg("this"));
    t.method("IsVisible", [](TGeoNode const* a)->Bool_t { return a->IsVisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::IsVisDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::IsVisDaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:110:11
    t.method("IsVisDaughters", [](TGeoNode const& a)->Bool_t { return a.IsVisDaughters(); }, jlcxx::arg("this"));
    t.method("IsVisDaughters", [](TGeoNode const* a)->Bool_t { return a->IsVisDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNode::MayOverlap(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNode::MayOverlap(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:111:11
    t.method("MayOverlap", [](TGeoNode const& a, Int_t arg0)->Bool_t { return a.MayOverlap(arg0); }, jlcxx::arg("this"), jlcxx::arg("iother"));
    t.method("MayOverlap", [](TGeoNode const* a, Int_t arg0)->Bool_t { return a->MayOverlap(arg0); }, jlcxx::arg("this"), jlcxx::arg("iother"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNode::MakeCopyNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNode::MakeCopyNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:113:22
    t.method("MakeCopyNode", [](TGeoNode const& a)->TGeoNode * { return a.MakeCopyNode(); }, jlcxx::arg("this"));
    t.method("MakeCopyNode", [](TGeoNode const* a)->TGeoNode * { return a->MakeCopyNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoNode::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoNode::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:114:13
    t.method("Safety", [](TGeoNode const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoNode const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoNode const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoNode const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetCurrentPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetCurrentPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:116:9
    t.method("SetCurrentPoint", [](TGeoNode& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("SetCurrentPoint", [](TGeoNode* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:117:9
    t.method("SetVolume", [](TGeoNode& a, TGeoVolume * arg0)->void { a.SetVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("volume"));
    t.method("SetVolume", [](TGeoNode* a, TGeoVolume * arg0)->void { a->SetVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("volume"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetNumber(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:118:9
    t.method("SetNumber", [](TGeoNode& a, Int_t arg0)->void { a.SetNumber(arg0); }, jlcxx::arg("this"), jlcxx::arg("number"));
    t.method("SetNumber", [](TGeoNode* a, Int_t arg0)->void { a->SetNumber(arg0); }, jlcxx::arg("this"), jlcxx::arg("number"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetCloned(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetCloned(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:119:9
    t.method("SetCloned", [](TGeoNode& a)->void { a.SetCloned(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCloned", [](TGeoNode& a, Bool_t arg0)->void { a.SetCloned(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCloned", [](TGeoNode* a)->void { a->SetCloned(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCloned", [](TGeoNode* a, Bool_t arg0)->void { a->SetCloned(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetOverlapping(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetOverlapping(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:120:9
    t.method("SetOverlapping", [](TGeoNode& a)->void { a.SetOverlapping(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOverlapping", [](TGeoNode& a, Bool_t arg0)->void { a.SetOverlapping(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOverlapping", [](TGeoNode* a)->void { a->SetOverlapping(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOverlapping", [](TGeoNode* a, Bool_t arg0)->void { a->SetOverlapping(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetVirtual() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetVirtual()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:121:9
    t.method("SetVirtual", [](TGeoNode& a)->void { a.SetVirtual(); }, jlcxx::arg("this"));
    t.method("SetVirtual", [](TGeoNode* a)->void { a->SetVirtual(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:122:9
    t.method("SetVisibility", [](TGeoNode& a)->void { a.SetVisibility(); }, jlcxx::arg("this"));
    t.method("SetVisibility", [](TGeoNode& a, Bool_t arg0)->void { a.SetVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("SetVisibility", [](TGeoNode* a)->void { a->SetVisibility(); }, jlcxx::arg("this"));
    t.method("SetVisibility", [](TGeoNode* a, Bool_t arg0)->void { a->SetVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetInvisible() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetInvisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:123:9
    t.method("SetInvisible", [](TGeoNode& a)->void { a.SetInvisible(); }, jlcxx::arg("this"));
    t.method("SetInvisible", [](TGeoNode* a)->void { a->SetInvisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetAllInvisible() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetAllInvisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:124:9
    t.method("SetAllInvisible", [](TGeoNode& a)->void { a.SetAllInvisible(); }, jlcxx::arg("this"));
    t.method("SetAllInvisible", [](TGeoNode* a)->void { a->SetAllInvisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetMotherVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetMotherVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:125:9
    t.method("SetMotherVolume", [](TGeoNode& a, TGeoVolume * arg0)->void { a.SetMotherVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("mother"));
    t.method("SetMotherVolume", [](TGeoNode* a, TGeoVolume * arg0)->void { a->SetMotherVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("mother"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetOverlaps(Int_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetOverlaps(Int_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:126:9
    t.method("SetOverlaps", [](TGeoNode& a, Int_t * arg0, Int_t arg1)->void { a.SetOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("novlp"));
    t.method("SetOverlaps", [](TGeoNode* a, Int_t * arg0, Int_t arg1)->void { a->SetOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("novlp"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetUserExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetUserExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:127:9
    t.method("SetUserExtension", [](TGeoNode& a, TGeoExtension * arg0)->void { a.SetUserExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));
    t.method("SetUserExtension", [](TGeoNode* a, TGeoExtension * arg0)->void { a->SetUserExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::SetFWExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::SetFWExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:128:9
    t.method("SetFWExtension", [](TGeoNode& a, TGeoExtension * arg0)->void { a.SetFWExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));
    t.method("SetFWExtension", [](TGeoNode* a, TGeoExtension * arg0)->void { a->SetFWExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoNode::GetUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoNode::GetUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:129:19
    t.method("GetUserExtension", [](TGeoNode const& a)->TGeoExtension * { return a.GetUserExtension(); }, jlcxx::arg("this"));
    t.method("GetUserExtension", [](TGeoNode const* a)->TGeoExtension * { return a->GetUserExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoNode::GetFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoNode::GetFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:130:19
    t.method("GetFWExtension", [](TGeoNode const& a)->TGeoExtension * { return a.GetFWExtension(); }, jlcxx::arg("this"));
    t.method("GetFWExtension", [](TGeoNode const* a)->TGeoExtension * { return a->GetFWExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoNode::GrabUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoNode::GrabUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:131:19
    t.method("GrabUserExtension", [](TGeoNode const& a)->TGeoExtension * { return a.GrabUserExtension(); }, jlcxx::arg("this"));
    t.method("GrabUserExtension", [](TGeoNode const* a)->TGeoExtension * { return a->GrabUserExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoNode::GrabFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoNode::GrabFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:132:19
    t.method("GrabFWExtension", [](TGeoNode const& a)->TGeoExtension * { return a.GrabFWExtension(); }, jlcxx::arg("this"));
    t.method("GrabFWExtension", [](TGeoNode const* a)->TGeoExtension * { return a->GrabFWExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:134:17
    t.method("MasterToLocal", [](TGeoNode const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocal", [](TGeoNode const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:135:17
    t.method("MasterToLocalVect", [](TGeoNode const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalVect", [](TGeoNode const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:136:17
    t.method("LocalToMaster", [](TGeoNode const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMaster", [](TGeoNode const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:137:17
    t.method("LocalToMasterVect", [](TGeoNode const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterVect", [](TGeoNode const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:139:9
    t.method("ls", [](TGeoNode const& a)->void { a.ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TGeoNode const& a, Option_t * arg0)->void { a.ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("ls", [](TGeoNode const* a)->void { a->ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TGeoNode const* a, Option_t * arg0)->void { a->ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:140:9
    t.method("Paint", [](TGeoNode& a)->void { a.Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TGeoNode& a, Option_t * arg0)->void { a.Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Paint", [](TGeoNode* a)->void { a->Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TGeoNode* a, Option_t * arg0)->void { a->Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::PrintCandidates() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::PrintCandidates()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:141:9
    t.method("PrintCandidates", [](TGeoNode const& a)->void { a.PrintCandidates(); }, jlcxx::arg("this"));
    t.method("PrintCandidates", [](TGeoNode const* a)->void { a->PrintCandidates(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::PrintOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::PrintOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:142:9
    t.method("PrintOverlaps", [](TGeoNode const& a)->void { a.PrintOverlaps(); }, jlcxx::arg("this"));
    t.method("PrintOverlaps", [](TGeoNode const* a)->void { a->PrintOverlaps(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::VisibleDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::VisibleDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNode.h:143:9
    t.method("VisibleDaughters", [](TGeoNode& a)->void { a.VisibleDaughters(); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoNode& a, Bool_t arg0)->void { a.VisibleDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoNode* a)->void { a->VisibleDaughters(); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoNode* a, Bool_t arg0)->void { a->VisibleDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoNode::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoNode::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoNode!Class_Version", []()->Version_t { return TGeoNode::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNode::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNode::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoNode const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoNode const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNode::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoNode& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoNode* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNode::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNode::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoNode!DeclFileName", []() { return (std::string)TGeoNode::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoNode::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNode::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoNode!ImplFileLine", []()->int { return TGeoNode::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNode::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNode::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoNode!ImplFileName", []() { return (std::string)TGeoNode::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNode::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNode::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoNode!Class_Name", []() { return (std::string)TGeoNode::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNode::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNode::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoNode!Dictionary", []()->TClass * { return TGeoNode::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNode::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNode::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoNode!Class", []()->TClass * { return TGeoNode::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoNode::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNode::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoNode& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoNode* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoNode::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNode::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoNode!DeclFileLine", []()->int { return TGeoNode::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoNode>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoNode(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoNode(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoNavigator> : std::false_type { };
  template<> struct DefaultConstructible<TGeoNavigator> : std::false_type { };
template<> struct SuperType<TGeoNavigator> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoNavigator
// signature to use in the veto file: TGeoNavigator
struct JlTGeoNavigator: public Wrapper {

  JlTGeoNavigator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoNavigator (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:32:7
    jlcxx::TypeWrapper<TGeoNavigator>  t = jlModule.add_type<TGeoNavigator>("TGeoNavigator",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoNavigator>>(new jlcxx::TypeWrapper<TGeoNavigator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoNavigator::TGeoNavigator(TGeoManager *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:86:4
    t.constructor<TGeoManager *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("geom")    );

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::BuildCache(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::BuildCache(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:89:9
    t.method("BuildCache", [](TGeoNavigator& a)->void { a.BuildCache(); }, jlcxx::arg("this"), jlcxx::arg("dummy"), jlcxx::arg("nodeid"));
    t.method("BuildCache", [](TGeoNavigator& a, Bool_t arg0)->void { a.BuildCache(arg0); }, jlcxx::arg("this"), jlcxx::arg("dummy"));
    t.method("BuildCache", [](TGeoNavigator& a, Bool_t arg0, Bool_t arg1)->void { a.BuildCache(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dummy"), jlcxx::arg("nodeid"));
    t.method("BuildCache", [](TGeoNavigator* a)->void { a->BuildCache(); }, jlcxx::arg("this"), jlcxx::arg("dummy"), jlcxx::arg("nodeid"));
    t.method("BuildCache", [](TGeoNavigator* a, Bool_t arg0)->void { a->BuildCache(arg0); }, jlcxx::arg("this"), jlcxx::arg("dummy"));
    t.method("BuildCache", [](TGeoNavigator* a, Bool_t arg0, Bool_t arg1)->void { a->BuildCache(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dummy"), jlcxx::arg("nodeid"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:90:11
    t.method("cd", [](TGeoNavigator& a)->Bool_t { return a.cd(); }, jlcxx::arg("this"));
    t.method("cd", [](TGeoNavigator& a, const char * arg0)->Bool_t { return a.cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("cd", [](TGeoNavigator* a)->Bool_t { return a->cd(); }, jlcxx::arg("this"));
    t.method("cd", [](TGeoNavigator* a, const char * arg0)->Bool_t { return a->cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::CheckPath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::CheckPath(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:91:11
    t.method("CheckPath", [](TGeoNavigator const& a, const char * arg0)->Bool_t { return a.CheckPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("CheckPath", [](TGeoNavigator const* a, const char * arg0)->Bool_t { return a->CheckPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:92:9
    t.method("CdNode", [](TGeoNavigator& a, Int_t arg0)->void { a.CdNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeid"));
    t.method("CdNode", [](TGeoNavigator* a, Int_t arg0)->void { a->CdNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeid"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdDown(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdDown(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:93:9
    t.method("CdDown", [](TGeoNavigator& a, Int_t arg0)->void { a.CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("CdDown", [](TGeoNavigator* a, Int_t arg0)->void { a->CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdDown(TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdDown(TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:94:9
    t.method("CdDown", [](TGeoNavigator& a, TGeoNode * arg0)->void { a.CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));
    t.method("CdDown", [](TGeoNavigator* a, TGeoNode * arg0)->void { a->CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdUp() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdUp()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:95:9
    t.method("CdUp", [](TGeoNavigator& a)->void { a.CdUp(); }, jlcxx::arg("this"));
    t.method("CdUp", [](TGeoNavigator* a)->void { a->CdUp(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdTop() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdTop()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:96:9
    t.method("CdTop", [](TGeoNavigator& a)->void { a.CdTop(); }, jlcxx::arg("this"));
    t.method("CdTop", [](TGeoNavigator* a)->void { a->CdTop(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::CdNext() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::CdNext()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:97:9
    t.method("CdNext", [](TGeoNavigator& a)->void { a.CdNext(); }, jlcxx::arg("this"));
    t.method("CdNext", [](TGeoNavigator* a)->void { a->CdNext(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::GetBranchNames(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::GetBranchNames(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:98:9
    t.method("GetBranchNames", [](TGeoNavigator const& a, Int_t * arg0)->void { a.GetBranchNames(arg0); }, jlcxx::arg("this"), jlcxx::arg("names"));
    t.method("GetBranchNames", [](TGeoNavigator const* a, Int_t * arg0)->void { a->GetBranchNames(arg0); }, jlcxx::arg("this"), jlcxx::arg("names"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::GetBranchNumbers(Int_t *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::GetBranchNumbers(Int_t *, Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:99:9
    t.method("GetBranchNumbers", [](TGeoNavigator const& a, Int_t * arg0, Int_t * arg1)->void { a.GetBranchNumbers(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("copyNumbers"), jlcxx::arg("volumeNumbers"));
    t.method("GetBranchNumbers", [](TGeoNavigator const* a, Int_t * arg0, Int_t * arg1)->void { a->GetBranchNumbers(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("copyNumbers"), jlcxx::arg("volumeNumbers"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::GetBranchOnlys(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::GetBranchOnlys(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:100:9
    t.method("GetBranchOnlys", [](TGeoNavigator const& a, Int_t * arg0)->void { a.GetBranchOnlys(arg0); }, jlcxx::arg("this"), jlcxx::arg("isonly"));
    t.method("GetBranchOnlys", [](TGeoNavigator const* a, Int_t * arg0)->void { a->GetBranchOnlys(arg0); }, jlcxx::arg("this"), jlcxx::arg("isonly"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetNmany() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetNmany()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:101:10
    t.method("GetNmany", [](TGeoNavigator const& a)->Int_t { return a.GetNmany(); }, jlcxx::arg("this"));
    t.method("GetNmany", [](TGeoNavigator const* a)->Int_t { return a->GetNmany(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::CrossBoundaryAndLocate(Bool_t, TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::CrossBoundaryAndLocate(Bool_t, TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:103:14
    t.method("CrossBoundaryAndLocate", [](TGeoNavigator& a, Bool_t arg0, TGeoNode * arg1)->TGeoNode * { return a.CrossBoundaryAndLocate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("downwards"), jlcxx::arg("skipnode"));
    t.method("CrossBoundaryAndLocate", [](TGeoNavigator* a, Bool_t arg0, TGeoNode * arg1)->TGeoNode * { return a->CrossBoundaryAndLocate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("downwards"), jlcxx::arg("skipnode"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::FindNextBoundary(Double_t, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::FindNextBoundary(Double_t, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:104:14
    t.method("FindNextBoundary", [](TGeoNavigator& a)->TGeoNode * { return a.FindNextBoundary(); }, jlcxx::arg("this"));
    t.method("FindNextBoundary", [](TGeoNavigator& a, Double_t arg0)->TGeoNode * { return a.FindNextBoundary(arg0); }, jlcxx::arg("this"), jlcxx::arg("stepmax"));
    t.method("FindNextBoundary", [](TGeoNavigator& a, Double_t arg0, const char * arg1)->TGeoNode * { return a.FindNextBoundary(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("path"));
    t.method("FindNextBoundary", [](TGeoNavigator& a, Double_t arg0, const char * arg1, Bool_t arg2)->TGeoNode * { return a.FindNextBoundary(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("path"), jlcxx::arg("frombdr"));
    t.method("FindNextBoundary", [](TGeoNavigator* a)->TGeoNode * { return a->FindNextBoundary(); }, jlcxx::arg("this"));
    t.method("FindNextBoundary", [](TGeoNavigator* a, Double_t arg0)->TGeoNode * { return a->FindNextBoundary(arg0); }, jlcxx::arg("this"), jlcxx::arg("stepmax"));
    t.method("FindNextBoundary", [](TGeoNavigator* a, Double_t arg0, const char * arg1)->TGeoNode * { return a->FindNextBoundary(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("path"));
    t.method("FindNextBoundary", [](TGeoNavigator* a, Double_t arg0, const char * arg1, Bool_t arg2)->TGeoNode * { return a->FindNextBoundary(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("path"), jlcxx::arg("frombdr"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::FindNextDaughterBoundary(Double_t *, Double_t *, Int_t &, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::FindNextDaughterBoundary(Double_t *, Double_t *, Int_t &, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:105:14
    t.method("FindNextDaughterBoundary", [](TGeoNavigator& a, Double_t * arg0, Double_t * arg1, Int_t & arg2)->TGeoNode * { return a.FindNextDaughterBoundary(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("idaughter"));
    t.method("FindNextDaughterBoundary", [](TGeoNavigator& a, Double_t * arg0, Double_t * arg1, Int_t & arg2, Bool_t arg3)->TGeoNode * { return a.FindNextDaughterBoundary(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("idaughter"), jlcxx::arg("compmatrix"));
    t.method("FindNextDaughterBoundary", [](TGeoNavigator* a, Double_t * arg0, Double_t * arg1, Int_t & arg2)->TGeoNode * { return a->FindNextDaughterBoundary(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("idaughter"));
    t.method("FindNextDaughterBoundary", [](TGeoNavigator* a, Double_t * arg0, Double_t * arg1, Int_t & arg2, Bool_t arg3)->TGeoNode * { return a->FindNextDaughterBoundary(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("idaughter"), jlcxx::arg("compmatrix"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::FindNextBoundaryAndStep(Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::FindNextBoundaryAndStep(Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:106:14
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator& a)->TGeoNode * { return a.FindNextBoundaryAndStep(); }, jlcxx::arg("this"));
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator& a, Double_t arg0)->TGeoNode * { return a.FindNextBoundaryAndStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("stepmax"));
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator& a, Double_t arg0, Bool_t arg1)->TGeoNode * { return a.FindNextBoundaryAndStep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("compsafe"));
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator* a)->TGeoNode * { return a->FindNextBoundaryAndStep(); }, jlcxx::arg("this"));
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator* a, Double_t arg0)->TGeoNode * { return a->FindNextBoundaryAndStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("stepmax"));
    t.method("FindNextBoundaryAndStep", [](TGeoNavigator* a, Double_t arg0, Bool_t arg1)->TGeoNode * { return a->FindNextBoundaryAndStep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("stepmax"), jlcxx::arg("compsafe"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::FindNode(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::FindNode(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:107:14
    t.method("FindNode", [](TGeoNavigator& a)->TGeoNode * { return a.FindNode(); }, jlcxx::arg("this"));
    t.method("FindNode", [](TGeoNavigator& a, Bool_t arg0)->TGeoNode * { return a.FindNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("safe_start"));
    t.method("FindNode", [](TGeoNavigator* a)->TGeoNode * { return a->FindNode(); }, jlcxx::arg("this"));
    t.method("FindNode", [](TGeoNavigator* a, Bool_t arg0)->TGeoNode * { return a->FindNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("safe_start"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::FindNode(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::FindNode(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:108:14
    t.method("FindNode", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2)->TGeoNode * { return a.FindNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("FindNode", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2)->TGeoNode * { return a->FindNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoNavigator::FindNormal(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoNavigator::FindNormal(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:109:14
    t.method("FindNormal", [](TGeoNavigator& a)->Double_t * { return a.FindNormal(); }, jlcxx::arg("this"));
    t.method("FindNormal", [](TGeoNavigator& a, Bool_t arg0)->Double_t * { return a.FindNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("forward"));
    t.method("FindNormal", [](TGeoNavigator* a)->Double_t * { return a->FindNormal(); }, jlcxx::arg("this"));
    t.method("FindNormal", [](TGeoNavigator* a, Bool_t arg0)->Double_t * { return a->FindNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("forward"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoNavigator::FindNormalFast() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoNavigator::FindNormalFast()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:110:14
    t.method("FindNormalFast", [](TGeoNavigator& a)->Double_t * { return a.FindNormalFast(); }, jlcxx::arg("this"));
    t.method("FindNormalFast", [](TGeoNavigator* a)->Double_t * { return a->FindNormalFast(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::InitTrack(const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::InitTrack(const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:111:14
    t.method("InitTrack", [](TGeoNavigator& a, const Double_t * arg0, const Double_t * arg1)->TGeoNode * { return a.InitTrack(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("InitTrack", [](TGeoNavigator* a, const Double_t * arg0, const Double_t * arg1)->TGeoNode * { return a->InitTrack(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::InitTrack(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::InitTrack(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:112:14
    t.method("InitTrack", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoNode * { return a.InitTrack(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("nx"), jlcxx::arg("ny"), jlcxx::arg("nz"));
    t.method("InitTrack", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoNode * { return a->InitTrack(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("nx"), jlcxx::arg("ny"), jlcxx::arg("nz"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::ResetState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::ResetState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:113:9
    t.method("ResetState", [](TGeoNavigator& a)->void { a.ResetState(); }, jlcxx::arg("this"));
    t.method("ResetState", [](TGeoNavigator* a)->void { a->ResetState(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::ResetAll() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::ResetAll()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:114:9
    t.method("ResetAll", [](TGeoNavigator& a)->void { a.ResetAll(); }, jlcxx::arg("this"));
    t.method("ResetAll", [](TGeoNavigator* a)->void { a->ResetAll(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoNavigator::Safety(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoNavigator::Safety(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:115:13
    t.method("Safety", [](TGeoNavigator& a)->Double_t { return a.Safety(); }, jlcxx::arg("this"));
    t.method("Safety", [](TGeoNavigator& a, Bool_t arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("inside"));
    t.method("Safety", [](TGeoNavigator* a)->Double_t { return a->Safety(); }, jlcxx::arg("this"));
    t.method("Safety", [](TGeoNavigator* a, Bool_t arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("inside"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::SearchNode(Bool_t, const TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::SearchNode(Bool_t, const TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:116:14
    t.method("SearchNode", [](TGeoNavigator& a)->TGeoNode * { return a.SearchNode(); }, jlcxx::arg("this"));
    t.method("SearchNode", [](TGeoNavigator& a, Bool_t arg0)->TGeoNode * { return a.SearchNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("downwards"));
    t.method("SearchNode", [](TGeoNavigator& a, Bool_t arg0, const TGeoNode * arg1)->TGeoNode * { return a.SearchNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("downwards"), jlcxx::arg("skipnode"));
    t.method("SearchNode", [](TGeoNavigator* a)->TGeoNode * { return a->SearchNode(); }, jlcxx::arg("this"));
    t.method("SearchNode", [](TGeoNavigator* a, Bool_t arg0)->TGeoNode * { return a->SearchNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("downwards"));
    t.method("SearchNode", [](TGeoNavigator* a, Bool_t arg0, const TGeoNode * arg1)->TGeoNode * { return a->SearchNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("downwards"), jlcxx::arg("skipnode"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::Step(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::Step(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:117:14
    t.method("Step", [](TGeoNavigator& a)->TGeoNode * { return a.Step(); }, jlcxx::arg("this"));
    t.method("Step", [](TGeoNavigator& a, Bool_t arg0)->TGeoNode * { return a.Step(arg0); }, jlcxx::arg("this"), jlcxx::arg("is_geom"));
    t.method("Step", [](TGeoNavigator& a, Bool_t arg0, Bool_t arg1)->TGeoNode * { return a.Step(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("is_geom"), jlcxx::arg("cross"));
    t.method("Step", [](TGeoNavigator* a)->TGeoNode * { return a->Step(); }, jlcxx::arg("this"));
    t.method("Step", [](TGeoNavigator* a, Bool_t arg0)->TGeoNode * { return a->Step(arg0); }, jlcxx::arg("this"), jlcxx::arg("is_geom"));
    t.method("Step", [](TGeoNavigator* a, Bool_t arg0, Bool_t arg1)->TGeoNode * { return a->Step(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("is_geom"), jlcxx::arg("cross"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetLastPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetLastPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:118:20
    t.method("GetLastPoint", [](TGeoNavigator const& a)->const Double_t * { return a.GetLastPoint(); }, jlcxx::arg("this"));
    t.method("GetLastPoint", [](TGeoNavigator const* a)->const Double_t * { return a->GetLastPoint(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetVirtualLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetVirtualLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:119:10
    t.method("GetVirtualLevel", [](TGeoNavigator& a)->Int_t { return a.GetVirtualLevel(); }, jlcxx::arg("this"));
    t.method("GetVirtualLevel", [](TGeoNavigator* a)->Int_t { return a->GetVirtualLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::GotoSafeLevel() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::GotoSafeLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:120:11
    t.method("GotoSafeLevel", [](TGeoNavigator& a)->Bool_t { return a.GotoSafeLevel(); }, jlcxx::arg("this"));
    t.method("GotoSafeLevel", [](TGeoNavigator* a)->Bool_t { return a->GotoSafeLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetSafeLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetSafeLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:121:10
    t.method("GetSafeLevel", [](TGeoNavigator const& a)->Int_t { return a.GetSafeLevel(); }, jlcxx::arg("this"));
    t.method("GetSafeLevel", [](TGeoNavigator const* a)->Int_t { return a->GetSafeLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoNavigator::GetSafeDistance() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoNavigator::GetSafeDistance()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:122:13
    t.method("GetSafeDistance", [](TGeoNavigator const& a)->Double_t { return a.GetSafeDistance(); }, jlcxx::arg("this"));
    t.method("GetSafeDistance", [](TGeoNavigator const* a)->Double_t { return a->GetSafeDistance(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoNavigator::GetLastSafety() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoNavigator::GetLastSafety()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:123:13
    t.method("GetLastSafety", [](TGeoNavigator const& a)->Double_t { return a.GetLastSafety(); }, jlcxx::arg("this"));
    t.method("GetLastSafety", [](TGeoNavigator const* a)->Double_t { return a->GetLastSafety(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoNavigator::GetStep() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoNavigator::GetStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:124:13
    t.method("GetStep", [](TGeoNavigator const& a)->Double_t { return a.GetStep(); }, jlcxx::arg("this"));
    t.method("GetStep", [](TGeoNavigator const* a)->Double_t { return a->GetStep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetThreadId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetThreadId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:125:10
    t.method("GetThreadId", [](TGeoNavigator const& a)->Int_t { return a.GetThreadId(); }, jlcxx::arg("this"));
    t.method("GetThreadId", [](TGeoNavigator const* a)->Int_t { return a->GetThreadId(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::InspectState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::InspectState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:126:9
    t.method("InspectState", [](TGeoNavigator const& a)->void { a.InspectState(); }, jlcxx::arg("this"));
    t.method("InspectState", [](TGeoNavigator const* a)->void { a->InspectState(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsSafeStep(Double_t, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsSafeStep(Double_t, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:127:11
    t.method("IsSafeStep", [](TGeoNavigator const& a, Double_t arg0, Double_t & arg1)->Bool_t { return a.IsSafeStep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("proposed"), jlcxx::arg("newsafety"));
    t.method("IsSafeStep", [](TGeoNavigator const* a, Double_t arg0, Double_t & arg1)->Bool_t { return a->IsSafeStep(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("proposed"), jlcxx::arg("newsafety"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsSameLocation(Double_t, Double_t, Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsSameLocation(Double_t, Double_t, Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:128:11
    t.method("IsSameLocation", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a.IsSameLocation(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("IsSameLocation", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->Bool_t { return a.IsSameLocation(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("change"));
    t.method("IsSameLocation", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a->IsSameLocation(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("IsSameLocation", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->Bool_t { return a->IsSameLocation(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("change"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsSameLocation() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsSameLocation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:129:11
    t.method("IsSameLocation", [](TGeoNavigator const& a)->Bool_t { return a.IsSameLocation(); }, jlcxx::arg("this"));
    t.method("IsSameLocation", [](TGeoNavigator const* a)->Bool_t { return a->IsSameLocation(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsSamePoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsSamePoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:130:11
    t.method("IsSamePoint", [](TGeoNavigator const& a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a.IsSamePoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("IsSamePoint", [](TGeoNavigator const* a, Double_t arg0, Double_t arg1, Double_t arg2)->Bool_t { return a->IsSamePoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsStartSafe() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsStartSafe()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:131:11
    t.method("IsStartSafe", [](TGeoNavigator const& a)->Bool_t { return a.IsStartSafe(); }, jlcxx::arg("this"));
    t.method("IsStartSafe", [](TGeoNavigator const* a)->Bool_t { return a->IsStartSafe(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetStartSafe(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetStartSafe(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:132:9
    t.method("SetStartSafe", [](TGeoNavigator& a)->void { a.SetStartSafe(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetStartSafe", [](TGeoNavigator& a, Bool_t arg0)->void { a.SetStartSafe(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetStartSafe", [](TGeoNavigator* a)->void { a->SetStartSafe(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetStartSafe", [](TGeoNavigator* a, Bool_t arg0)->void { a->SetStartSafe(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetStep(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetStep(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:133:9
    t.method("SetStep", [](TGeoNavigator& a, Double_t arg0)->void { a.SetStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("step"));
    t.method("SetStep", [](TGeoNavigator* a, Double_t arg0)->void { a->SetStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsCheckingOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsCheckingOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:134:11
    t.method("IsCheckingOverlaps", [](TGeoNavigator const& a)->Bool_t { return a.IsCheckingOverlaps(); }, jlcxx::arg("this"));
    t.method("IsCheckingOverlaps", [](TGeoNavigator const* a)->Bool_t { return a->IsCheckingOverlaps(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsCurrentOverlapping() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsCurrentOverlapping()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:135:11
    t.method("IsCurrentOverlapping", [](TGeoNavigator const& a)->Bool_t { return a.IsCurrentOverlapping(); }, jlcxx::arg("this"));
    t.method("IsCurrentOverlapping", [](TGeoNavigator const* a)->Bool_t { return a->IsCurrentOverlapping(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsEntering() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsEntering()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:136:11
    t.method("IsEntering", [](TGeoNavigator const& a)->Bool_t { return a.IsEntering(); }, jlcxx::arg("this"));
    t.method("IsEntering", [](TGeoNavigator const* a)->Bool_t { return a->IsEntering(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsExiting() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsExiting()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:137:11
    t.method("IsExiting", [](TGeoNavigator const& a)->Bool_t { return a.IsExiting(); }, jlcxx::arg("this"));
    t.method("IsExiting", [](TGeoNavigator const* a)->Bool_t { return a->IsExiting(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsStepEntering() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsStepEntering()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:138:11
    t.method("IsStepEntering", [](TGeoNavigator const& a)->Bool_t { return a.IsStepEntering(); }, jlcxx::arg("this"));
    t.method("IsStepEntering", [](TGeoNavigator const* a)->Bool_t { return a->IsStepEntering(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsStepExiting() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsStepExiting()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:139:11
    t.method("IsStepExiting", [](TGeoNavigator const& a)->Bool_t { return a.IsStepExiting(); }, jlcxx::arg("this"));
    t.method("IsStepExiting", [](TGeoNavigator const* a)->Bool_t { return a->IsStepExiting(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsOutside() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsOutside()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:140:11
    t.method("IsOutside", [](TGeoNavigator const& a)->Bool_t { return a.IsOutside(); }, jlcxx::arg("this"));
    t.method("IsOutside", [](TGeoNavigator const* a)->Bool_t { return a->IsOutside(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsOnBoundary() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsOnBoundary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:141:11
    t.method("IsOnBoundary", [](TGeoNavigator const& a)->Bool_t { return a.IsOnBoundary(); }, jlcxx::arg("this"));
    t.method("IsOnBoundary", [](TGeoNavigator const* a)->Bool_t { return a->IsOnBoundary(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::IsNullStep() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::IsNullStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:142:11
    t.method("IsNullStep", [](TGeoNavigator const& a)->Bool_t { return a.IsNullStep(); }, jlcxx::arg("this"));
    t.method("IsNullStep", [](TGeoNavigator const* a)->Bool_t { return a->IsNullStep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCheckingOverlaps(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCheckingOverlaps(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:143:9
    t.method("SetCheckingOverlaps", [](TGeoNavigator& a)->void { a.SetCheckingOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCheckingOverlaps", [](TGeoNavigator& a, Bool_t arg0)->void { a.SetCheckingOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCheckingOverlaps", [](TGeoNavigator* a)->void { a->SetCheckingOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCheckingOverlaps", [](TGeoNavigator* a, Bool_t arg0)->void { a->SetCheckingOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetOutside(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetOutside(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:144:9
    t.method("SetOutside", [](TGeoNavigator& a)->void { a.SetOutside(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOutside", [](TGeoNavigator& a, Bool_t arg0)->void { a.SetOutside(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOutside", [](TGeoNavigator* a)->void { a->SetOutside(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOutside", [](TGeoNavigator* a, Bool_t arg0)->void { a->SetOutside(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::DoBackupState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::DoBackupState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:146:9
    t.method("DoBackupState", [](TGeoNavigator& a)->void { a.DoBackupState(); }, jlcxx::arg("this"));
    t.method("DoBackupState", [](TGeoNavigator* a)->void { a->DoBackupState(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::DoRestoreState() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::DoRestoreState()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:147:9
    t.method("DoRestoreState", [](TGeoNavigator& a)->void { a.DoRestoreState(); }, jlcxx::arg("this"));
    t.method("DoRestoreState", [](TGeoNavigator* a)->void { a->DoRestoreState(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:148:10
    t.method("GetNodeId", [](TGeoNavigator const& a)->Int_t { return a.GetNodeId(); }, jlcxx::arg("this"));
    t.method("GetNodeId", [](TGeoNavigator const* a)->Int_t { return a->GetNodeId(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetNextDaughterIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetNextDaughterIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:149:10
    t.method("GetNextDaughterIndex", [](TGeoNavigator const& a)->Int_t { return a.GetNextDaughterIndex(); }, jlcxx::arg("this"));
    t.method("GetNextDaughterIndex", [](TGeoNavigator const* a)->Int_t { return a->GetNextDaughterIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::GetNextNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::GetNextNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:150:14
    t.method("GetNextNode", [](TGeoNavigator const& a)->TGeoNode * { return a.GetNextNode(); }, jlcxx::arg("this"));
    t.method("GetNextNode", [](TGeoNavigator const* a)->TGeoNode * { return a->GetNextNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::GetMother(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::GetMother(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:151:14
    t.method("GetMother", [](TGeoNavigator const& a)->TGeoNode * { return a.GetMother(); }, jlcxx::arg("this"));
    t.method("GetMother", [](TGeoNavigator const& a, Int_t arg0)->TGeoNode * { return a.GetMother(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("GetMother", [](TGeoNavigator const* a)->TGeoNode * { return a->GetMother(); }, jlcxx::arg("this"));
    t.method("GetMother", [](TGeoNavigator const* a, Int_t arg0)->TGeoNode * { return a->GetMother(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNavigator::GetMotherMatrix(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNavigator::GetMotherMatrix(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:152:17
    t.method("GetMotherMatrix", [](TGeoNavigator const& a)->TGeoHMatrix * { return a.GetMotherMatrix(); }, jlcxx::arg("this"));
    t.method("GetMotherMatrix", [](TGeoNavigator const& a, Int_t arg0)->TGeoHMatrix * { return a.GetMotherMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("GetMotherMatrix", [](TGeoNavigator const* a)->TGeoHMatrix * { return a->GetMotherMatrix(); }, jlcxx::arg("this"));
    t.method("GetMotherMatrix", [](TGeoNavigator const* a, Int_t arg0)->TGeoHMatrix * { return a->GetMotherMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNavigator::GetHMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNavigator::GetHMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:153:17
    t.method("GetHMatrix", [](TGeoNavigator& a)->TGeoHMatrix * { return a.GetHMatrix(); }, jlcxx::arg("this"));
    t.method("GetHMatrix", [](TGeoNavigator* a)->TGeoHMatrix * { return a->GetHMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNavigator::GetCurrentMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNavigator::GetCurrentMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:154:17
    t.method("GetCurrentMatrix", [](TGeoNavigator const& a)->TGeoHMatrix * { return a.GetCurrentMatrix(); }, jlcxx::arg("this"));
    t.method("GetCurrentMatrix", [](TGeoNavigator const* a)->TGeoHMatrix * { return a->GetCurrentMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNavigator::GetCurrentNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNavigator::GetCurrentNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:155:14
    t.method("GetCurrentNode", [](TGeoNavigator const& a)->TGeoNode * { return a.GetCurrentNode(); }, jlcxx::arg("this"));
    t.method("GetCurrentNode", [](TGeoNavigator const* a)->TGeoNode * { return a->GetCurrentNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetCurrentNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetCurrentNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:156:10
    t.method("GetCurrentNodeId", [](TGeoNavigator const& a)->Int_t { return a.GetCurrentNodeId(); }, jlcxx::arg("this"));
    t.method("GetCurrentNodeId", [](TGeoNavigator const* a)->Int_t { return a->GetCurrentNodeId(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetCurrentPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetCurrentPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:157:20
    t.method("GetCurrentPoint", [](TGeoNavigator const& a)->const Double_t * { return a.GetCurrentPoint(); }, jlcxx::arg("this"));
    t.method("GetCurrentPoint", [](TGeoNavigator const* a)->const Double_t * { return a->GetCurrentPoint(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetCurrentDirection() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetCurrentDirection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:158:20
    t.method("GetCurrentDirection", [](TGeoNavigator const& a)->const Double_t * { return a.GetCurrentDirection(); }, jlcxx::arg("this"));
    t.method("GetCurrentDirection", [](TGeoNavigator const* a)->const Double_t * { return a->GetCurrentDirection(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoNavigator::GetCurrentVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoNavigator::GetCurrentVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:159:16
    t.method("GetCurrentVolume", [](TGeoNavigator const& a)->TGeoVolume * { return a.GetCurrentVolume(); }, jlcxx::arg("this"));
    t.method("GetCurrentVolume", [](TGeoNavigator const* a)->TGeoVolume * { return a->GetCurrentVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetCldirChecked() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetCldirChecked()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:160:20
    t.method("GetCldirChecked", [](TGeoNavigator const& a)->const Double_t * { return a.GetCldirChecked(); }, jlcxx::arg("this"));
    t.method("GetCldirChecked", [](TGeoNavigator const* a)->const Double_t * { return a->GetCldirChecked(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetCldir() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetCldir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:161:20
    t.method("GetCldir", [](TGeoNavigator const& a)->const Double_t * { return a.GetCldir(); }, jlcxx::arg("this"));
    t.method("GetCldir", [](TGeoNavigator const* a)->const Double_t * { return a->GetCldir(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNavigator::GetDivMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNavigator::GetDivMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:162:17
    t.method("GetDivMatrix", [](TGeoNavigator const& a)->TGeoHMatrix * { return a.GetDivMatrix(); }, jlcxx::arg("this"));
    t.method("GetDivMatrix", [](TGeoNavigator const* a)->TGeoHMatrix * { return a->GetDivMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoNavigator::GetNormal() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoNavigator::GetNormal()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:164:20
    t.method("GetNormal", [](TGeoNavigator const& a)->const Double_t * { return a.GetNormal(); }, jlcxx::arg("this"));
    t.method("GetNormal", [](TGeoNavigator const* a)->const Double_t * { return a->GetNormal(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:165:10
    t.method("GetLevel", [](TGeoNavigator const& a)->Int_t { return a.GetLevel(); }, jlcxx::arg("this"));
    t.method("GetLevel", [](TGeoNavigator const* a)->Int_t { return a->GetLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigator::GetPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigator::GetPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:166:16
    t.method("GetPath", [](TGeoNavigator const& a) { return (std::string)a.GetPath(); }, jlcxx::arg("this"));
    t.method("GetPath", [](TGeoNavigator const* a) { return (std::string)a->GetPath(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::GetStackLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::GetStackLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:167:10
    t.method("GetStackLevel", [](TGeoNavigator const& a)->Int_t { return a.GetStackLevel(); }, jlcxx::arg("this"));
    t.method("GetStackLevel", [](TGeoNavigator const* a)->Int_t { return a->GetStackLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCurrentPoint(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCurrentPoint(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:168:9
    t.method("SetCurrentPoint", [](TGeoNavigator& a, const Double_t * arg0)->void { a.SetCurrentPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("SetCurrentPoint", [](TGeoNavigator* a, const Double_t * arg0)->void { a->SetCurrentPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCurrentPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCurrentPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:169:9
    t.method("SetCurrentPoint", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("SetCurrentPoint", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetLastPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetLastPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:175:9
    t.method("SetLastPoint", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetLastPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("SetLastPoint", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetLastPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCurrentDirection(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCurrentDirection(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:181:9
    t.method("SetCurrentDirection", [](TGeoNavigator& a, const Double_t * arg0)->void { a.SetCurrentDirection(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("SetCurrentDirection", [](TGeoNavigator* a, const Double_t * arg0)->void { a->SetCurrentDirection(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCurrentDirection(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCurrentDirection(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:182:9
    t.method("SetCurrentDirection", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentDirection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nx"), jlcxx::arg("ny"), jlcxx::arg("nz"));
    t.method("SetCurrentDirection", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentDirection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nx"), jlcxx::arg("ny"), jlcxx::arg("nz"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetCldirChecked(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetCldirChecked(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:189:9
    t.method("SetCldirChecked", [](TGeoNavigator& a, Double_t * arg0)->void { a.SetCldirChecked(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("SetCldirChecked", [](TGeoNavigator* a, Double_t * arg0)->void { a->SetCldirChecked(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetLastSafetyForPoint(Double_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetLastSafetyForPoint(Double_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:190:9
    t.method("SetLastSafetyForPoint", [](TGeoNavigator& a, Double_t arg0, const Double_t * arg1)->void { a.SetLastSafetyForPoint(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("safe"), jlcxx::arg("point"));
    t.method("SetLastSafetyForPoint", [](TGeoNavigator* a, Double_t arg0, const Double_t * arg1)->void { a->SetLastSafetyForPoint(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("safe"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::SetLastSafetyForPoint(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::SetLastSafetyForPoint(Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:195:9
    t.method("SetLastSafetyForPoint", [](TGeoNavigator& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.SetLastSafetyForPoint(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("safe"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("SetLastSafetyForPoint", [](TGeoNavigator* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->SetLastSafetyForPoint(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("safe"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:203:9
    t.method("LocalToMaster", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMaster", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:204:9
    t.method("LocalToMasterVect", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterVect", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:205:9
    t.method("LocalToMasterBomb", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterBomb", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:206:9
    t.method("MasterToLocal", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocal", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:207:9
    t.method("MasterToLocalVect", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalVect", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:208:9
    t.method("MasterToLocalBomb", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalBomb", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::MasterToTop(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::MasterToTop(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:209:9
    t.method("MasterToTop", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToTop(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("top"));
    t.method("MasterToTop", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToTop(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("top"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::TopToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::TopToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:210:9
    t.method("TopToMaster", [](TGeoNavigator const& a, const Double_t * arg0, Double_t * arg1)->void { a.TopToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("top"), jlcxx::arg("master"));
    t.method("TopToMaster", [](TGeoNavigator const* a, const Double_t * arg0, Double_t * arg1)->void { a->TopToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("top"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for TGeoNodeCache * TGeoNavigator::GetCache() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNodeCache * TGeoNavigator::GetCache()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:211:19
    t.method("GetCache", [](TGeoNavigator const& a)->TGeoNodeCache * { return a.GetCache(); }, jlcxx::arg("this"));
    t.method("GetCache", [](TGeoNavigator const* a)->TGeoNodeCache * { return a->GetCache(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::PushPath(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::PushPath(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:214:10
    t.method("PushPath", [](TGeoNavigator& a)->Int_t { return a.PushPath(); }, jlcxx::arg("this"));
    t.method("PushPath", [](TGeoNavigator& a, Int_t arg0)->Int_t { return a.PushPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("startlevel"));
    t.method("PushPath", [](TGeoNavigator* a)->Int_t { return a->PushPath(); }, jlcxx::arg("this"));
    t.method("PushPath", [](TGeoNavigator* a, Int_t arg0)->Int_t { return a->PushPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("startlevel"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::PopPath() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::PopPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:215:11
    t.method("PopPath", [](TGeoNavigator& a)->Bool_t { return a.PopPath(); }, jlcxx::arg("this"));
    t.method("PopPath", [](TGeoNavigator* a)->Bool_t { return a->PopPath(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::PopPath(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::PopPath(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:223:11
    t.method("PopPath", [](TGeoNavigator& a, Int_t arg0)->Bool_t { return a.PopPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("PopPath", [](TGeoNavigator* a, Int_t arg0)->Bool_t { return a->PopPath(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNavigator::PushPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNavigator::PushPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:231:10
    t.method("PushPoint", [](TGeoNavigator& a)->Int_t { return a.PushPoint(); }, jlcxx::arg("this"));
    t.method("PushPoint", [](TGeoNavigator& a, Int_t arg0)->Int_t { return a.PushPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("startlevel"));
    t.method("PushPoint", [](TGeoNavigator* a)->Int_t { return a->PushPoint(); }, jlcxx::arg("this"));
    t.method("PushPoint", [](TGeoNavigator* a, Int_t arg0)->Int_t { return a->PushPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("startlevel"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::PopPoint() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::PopPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:232:11
    t.method("PopPoint", [](TGeoNavigator& a)->Bool_t { return a.PopPoint(); }, jlcxx::arg("this"));
    t.method("PopPoint", [](TGeoNavigator* a)->Bool_t { return a->PopPoint(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNavigator::PopPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNavigator::PopPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:240:11
    t.method("PopPoint", [](TGeoNavigator& a, Int_t arg0)->Bool_t { return a.PopPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("PopPoint", [](TGeoNavigator* a, Int_t arg0)->Bool_t { return a->PopPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::PopDummy(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::PopDummy(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:248:9
    t.method("PopDummy", [](TGeoNavigator& a)->void { a.PopDummy(); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNavigator& a, Int_t arg0)->void { a.PopDummy(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNavigator* a)->void { a->PopDummy(); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNavigator* a, Int_t arg0)->void { a->PopDummy(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipop"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoNavigator::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoNavigator::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoNavigator!Class_Version", []()->Version_t { return TGeoNavigator::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigator::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigator::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoNavigator const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoNavigator const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoNavigator& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoNavigator* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigator::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigator::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoNavigator!DeclFileName", []() { return (std::string)TGeoNavigator::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoNavigator::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNavigator::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoNavigator!ImplFileLine", []()->int { return TGeoNavigator::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigator::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigator::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoNavigator!ImplFileName", []() { return (std::string)TGeoNavigator::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigator::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigator::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoNavigator!Class_Name", []() { return (std::string)TGeoNavigator::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigator::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigator::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoNavigator!Dictionary", []()->TClass * { return TGeoNavigator::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigator::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigator::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoNavigator!Class", []()->TClass * { return TGeoNavigator::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoNavigator::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigator::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoNavigator& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoNavigator* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoNavigator::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNavigator::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoNavigator!DeclFileLine", []()->int { return TGeoNavigator::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoNavigator>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoNavigator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoNavigator(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<compareBAasc> : std::false_type { };
  template<> struct DefaultConstructible<compareBAasc> : std::false_type { };
}

// Class generating the wrapper for type compareBAasc
// signature to use in the veto file: compareBAasc
struct JlcompareBAasc: public Wrapper {

  JlcompareBAasc(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type compareBAasc (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:119:8
    jlcxx::TypeWrapper<compareBAasc>  t = jlModule.add_type<compareBAasc>("compareBAasc");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<compareBAasc>>(new jlcxx::TypeWrapper<compareBAasc>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void compareBAasc::compareBAasc(TGeoBranchArray **) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:120:4
    t.constructor<TGeoBranchArray **>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("d")    );

    DEBUG_MSG("Adding wrapper for bool compareBAasc::operator()(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: bool compareBAasc::operator()(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:121:9
    t.method("paren", [](compareBAasc& a, Int_t arg0, Int_t arg1)->bool { return a.operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"));
    t.method("paren", [](compareBAasc* a, Int_t arg0, Int_t arg1)->bool { return a->operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"));

    DEBUG_MSG("Adding fData methods  to provide read access to the field fData (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:122:22
    // signature to use in the veto list: compareBAasc::fData
    t.method("fData", [](const compareBAasc& a) -> TGeoBranchArray ** { return a.fData; }, jlcxx::arg("this"));
    t.method("fData", [](compareBAasc& a) -> TGeoBranchArray ** { return a.fData; }, jlcxx::arg("this"));
    t.method("fData", [](const compareBAasc* a) -> TGeoBranchArray ** { return a->fData; }, jlcxx::arg("this"));
    t.method("fData", [](compareBAasc* a) -> TGeoBranchArray ** { return a->fData; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:122:22
    // signature to use in the veto list: compareBAasc::fData
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fData! methods to provide write access to the field fData (" __HERE__ ")");
    t.method("fData!", [](compareBAasc& a, TGeoBranchArray ** val) -> TGeoBranchArray ** { return a.fData = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fData! methods to provide write access to the field fData (" __HERE__ ")");
    t.method("fData!", [](compareBAasc* a, TGeoBranchArray ** val) -> TGeoBranchArray ** { return a->fData = val; }, jlcxx::arg("this"), jlcxx::arg("value"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<compareBAasc>> type_;
};
std::shared_ptr<Wrapper> newJlcompareBAasc(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlcompareBAasc(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<compareBAdesc> : std::false_type { };
  template<> struct DefaultConstructible<compareBAdesc> : std::false_type { };
}

// Class generating the wrapper for type compareBAdesc
// signature to use in the veto file: compareBAdesc
struct JlcompareBAdesc: public Wrapper {

  JlcompareBAdesc(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type compareBAdesc (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:125:8
    jlcxx::TypeWrapper<compareBAdesc>  t = jlModule.add_type<compareBAdesc>("compareBAdesc");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<compareBAdesc>>(new jlcxx::TypeWrapper<compareBAdesc>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void compareBAdesc::compareBAdesc(TGeoBranchArray **) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:126:4
    t.constructor<TGeoBranchArray **>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("d")    );

    DEBUG_MSG("Adding wrapper for bool compareBAdesc::operator()(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: bool compareBAdesc::operator()(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:127:9
    t.method("paren", [](compareBAdesc& a, Int_t arg0, Int_t arg1)->bool { return a.operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"));
    t.method("paren", [](compareBAdesc* a, Int_t arg0, Int_t arg1)->bool { return a->operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("i1"), jlcxx::arg("i2"));

    DEBUG_MSG("Adding fData methods  to provide read access to the field fData (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:128:22
    // signature to use in the veto list: compareBAdesc::fData
    t.method("fData", [](const compareBAdesc& a) -> TGeoBranchArray ** { return a.fData; }, jlcxx::arg("this"));
    t.method("fData", [](compareBAdesc& a) -> TGeoBranchArray ** { return a.fData; }, jlcxx::arg("this"));
    t.method("fData", [](const compareBAdesc* a) -> TGeoBranchArray ** { return a->fData; }, jlcxx::arg("this"));
    t.method("fData", [](compareBAdesc* a) -> TGeoBranchArray ** { return a->fData; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:128:22
    // signature to use in the veto list: compareBAdesc::fData
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fData! methods to provide write access to the field fData (" __HERE__ ")");
    t.method("fData!", [](compareBAdesc& a, TGeoBranchArray ** val) -> TGeoBranchArray ** { return a.fData = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fData! methods to provide write access to the field fData (" __HERE__ ")");
    t.method("fData!", [](compareBAdesc* a, TGeoBranchArray ** val) -> TGeoBranchArray ** { return a->fData = val; }, jlcxx::arg("this"), jlcxx::arg("value"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<compareBAdesc>> type_;
};
std::shared_ptr<Wrapper> newJlcompareBAdesc(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlcompareBAdesc(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBuilder> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBuilder> : std::false_type { };
template<> struct SuperType<TGeoBuilder> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoBuilder
// signature to use in the veto file: TGeoBuilder
struct JlTGeoBuilder: public Wrapper {

  JlTGeoBuilder(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBuilder (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:26:7
    jlcxx::TypeWrapper<TGeoBuilder>  t = jlModule.add_type<TGeoBuilder>("TGeoBuilder",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBuilder>>(new jlcxx::TypeWrapper<TGeoBuilder>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for TGeoBuilder * TGeoBuilder::Instance(TGeoManager *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBuilder * TGeoBuilder::Instance(TGeoManager *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:42:24
    module_.method("TGeoBuilder!Instance", [](TGeoManager * arg0)->TGeoBuilder * { return TGeoBuilder::Instance(arg0); }, jlcxx::arg("geom"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBuilder::AddMaterial(TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBuilder::AddMaterial(TGeoMaterial *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:44:10
    t.method("AddMaterial", [](TGeoBuilder& a, TGeoMaterial * arg0)->Int_t { return a.AddMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("material"));
    t.method("AddMaterial", [](TGeoBuilder* a, TGeoMaterial * arg0)->Int_t { return a->AddMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("material"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBuilder::AddTransformation(TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBuilder::AddTransformation(TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:45:10
    t.method("AddTransformation", [](TGeoBuilder& a, TGeoMatrix * arg0)->Int_t { return a.AddTransformation(arg0); }, jlcxx::arg("this"), jlcxx::arg("matrix"));
    t.method("AddTransformation", [](TGeoBuilder* a, TGeoMatrix * arg0)->Int_t { return a->AddTransformation(arg0); }, jlcxx::arg("this"), jlcxx::arg("matrix"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBuilder::AddShape(TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBuilder::AddShape(TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:46:10
    t.method("AddShape", [](TGeoBuilder& a, TGeoShape * arg0)->Int_t { return a.AddShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("shape"));
    t.method("AddShape", [](TGeoBuilder* a, TGeoShape * arg0)->Int_t { return a->AddShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("shape"));

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::RegisterMatrix(TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::RegisterMatrix(TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:47:9
    t.method("RegisterMatrix", [](TGeoBuilder& a, TGeoMatrix * arg0)->void { a.RegisterMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("matrix"));
    t.method("RegisterMatrix", [](TGeoBuilder* a, TGeoMatrix * arg0)->void { a->RegisterMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("matrix"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeArb8(const char *, TGeoMedium *, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeArb8(const char *, TGeoMedium *, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:49:16
    t.method("MakeArb8", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2)->TGeoVolume * { return a.MakeArb8(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"));
    t.method("MakeArb8", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t * arg3)->TGeoVolume * { return a.MakeArb8(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("vertices"));
    t.method("MakeArb8", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2)->TGeoVolume * { return a->MakeArb8(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"));
    t.method("MakeArb8", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t * arg3)->TGeoVolume * { return a->MakeArb8(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("vertices"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeBox(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeBox(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:50:16
    t.method("MakeBox", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("MakeBox", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeCone(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeCone(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:51:16
    t.method("MakeCone", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeCone(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));
    t.method("MakeCone", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeCone(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeCons(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeCons(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:53:16
    t.method("MakeCons", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8)->TGeoVolume * { return a.MakeCons(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    t.method("MakeCons", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8)->TGeoVolume * { return a->MakeCons(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("rmin1"), jlcxx::arg("rmax1"), jlcxx::arg("rmin2"), jlcxx::arg("rmax2"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeCtub(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeCtub(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:55:16
    t.method("MakeCtub", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a.MakeCtub(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz"));
    t.method("MakeCtub", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a->MakeCtub(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"), jlcxx::arg("lx"), jlcxx::arg("ly"), jlcxx::arg("lz"), jlcxx::arg("tx"), jlcxx::arg("ty"), jlcxx::arg("tz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeEltu(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeEltu(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:57:16
    t.method("MakeEltu", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeEltu(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("dz"));
    t.method("MakeEltu", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeEltu(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("a"), jlcxx::arg("b"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeGtra(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeGtra(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:58:16
    t.method("MakeGtra", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->TGeoVolume * { return a.MakeGtra(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("twist"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2"));
    t.method("MakeGtra", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12, Double_t arg13)->TGeoVolume * { return a->MakeGtra(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("twist"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakePara(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakePara(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:61:16
    t.method("MakePara", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a.MakePara(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("alpha"), jlcxx::arg("theta"), jlcxx::arg("phi"));
    t.method("MakePara", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a->MakePara(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("alpha"), jlcxx::arg("theta"), jlcxx::arg("phi"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakePcon(const char *, TGeoMedium *, Double_t, Double_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakePcon(const char *, TGeoMedium *, Double_t, Double_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:63:16
    t.method("MakePcon", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoVolume * { return a.MakePcon(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("phi"), jlcxx::arg("dphi"), jlcxx::arg("nz"));
    t.method("MakePcon", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoVolume * { return a->MakePcon(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("phi"), jlcxx::arg("dphi"), jlcxx::arg("nz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeParaboloid(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeParaboloid(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:64:16
    t.method("MakeParaboloid", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeParaboloid(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rlo"), jlcxx::arg("rhi"), jlcxx::arg("dz"));
    t.method("MakeParaboloid", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeParaboloid(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rlo"), jlcxx::arg("rhi"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeHype(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeHype(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:65:16
    t.method("MakeHype", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeHype(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz"));
    t.method("MakeHype", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeHype(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakePgon(const char *, TGeoMedium *, Double_t, Double_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakePgon(const char *, TGeoMedium *, Double_t, Double_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:67:16
    t.method("MakePgon", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4, Int_t arg5)->TGeoVolume * { return a.MakePgon(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("phi"), jlcxx::arg("dphi"), jlcxx::arg("nedges"), jlcxx::arg("nz"));
    t.method("MakePgon", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Int_t arg4, Int_t arg5)->TGeoVolume * { return a->MakePgon(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("phi"), jlcxx::arg("dphi"), jlcxx::arg("nedges"), jlcxx::arg("nz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeSphere(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeSphere(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:68:16
    t.method("MakeSphere", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("MakeSphere", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"));
    t.method("MakeSphere", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"));
    t.method("MakeSphere", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("phimin"));
    t.method("MakeSphere", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a.MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("phimin"), jlcxx::arg("phimax"));
    t.method("MakeSphere", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("MakeSphere", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"));
    t.method("MakeSphere", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"));
    t.method("MakeSphere", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("phimin"));
    t.method("MakeSphere", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TGeoVolume * { return a->MakeSphere(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("phimin"), jlcxx::arg("phimax"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTorus(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTorus(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:70:16
    t.method("MakeTorus", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("MakeTorus", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"));
    t.method("MakeTorus", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi"));
    t.method("MakeTorus", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("MakeTorus", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"));
    t.method("MakeTorus", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTorus(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("r"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("phi1"), jlcxx::arg("dphi"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTrap(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTrap(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:72:16
    t.method("MakeTrap", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a.MakeTrap(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2"));
    t.method("MakeTrap", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10, Double_t arg11, Double_t arg12)->TGeoVolume * { return a->MakeTrap(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTrd1(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTrd1(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:75:16
    t.method("MakeTrd1", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.MakeTrd1(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("MakeTrd1", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->MakeTrd1(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTrd2(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTrd2(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:77:4
    t.method("MakeTrd2", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTrd2(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy1"), jlcxx::arg("dy2"), jlcxx::arg("dz"));
    t.method("MakeTrd2", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTrd2(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("dx1"), jlcxx::arg("dx2"), jlcxx::arg("dy1"), jlcxx::arg("dy2"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTube(const char *, TGeoMedium *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTube(const char *, TGeoMedium *, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:78:16
    t.method("MakeTube", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.MakeTube(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));
    t.method("MakeTube", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->MakeTube(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeTubs(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeTubs(const char *, TGeoMedium *, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:79:16
    t.method("MakeTubs", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a.MakeTubs(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));
    t.method("MakeTubs", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TGeoVolume * { return a->MakeTubs(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("dz"), jlcxx::arg("phi1"), jlcxx::arg("phi2"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::MakeXtru(const char *, TGeoMedium *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::MakeXtru(const char *, TGeoMedium *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:81:16
    t.method("MakeXtru", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1, Int_t arg2)->TGeoVolume * { return a.MakeXtru(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("nz"));
    t.method("MakeXtru", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1, Int_t arg2)->TGeoVolume * { return a->MakeXtru(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"), jlcxx::arg("nz"));

    DEBUG_MSG("Adding wrapper for TGeoVolumeAssembly * TGeoBuilder::MakeVolumeAssembly(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeAssembly * TGeoBuilder::MakeVolumeAssembly(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:82:24
    t.method("MakeVolumeAssembly", [](TGeoBuilder& a, const char * arg0)->TGeoVolumeAssembly * { return a.MakeVolumeAssembly(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("MakeVolumeAssembly", [](TGeoBuilder* a, const char * arg0)->TGeoVolumeAssembly * { return a->MakeVolumeAssembly(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for TGeoVolumeMulti * TGeoBuilder::MakeVolumeMulti(const char *, TGeoMedium *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolumeMulti * TGeoBuilder::MakeVolumeMulti(const char *, TGeoMedium *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:83:21
    t.method("MakeVolumeMulti", [](TGeoBuilder& a, const char * arg0, TGeoMedium * arg1)->TGeoVolumeMulti * { return a.MakeVolumeMulti(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"));
    t.method("MakeVolumeMulti", [](TGeoBuilder* a, const char * arg0, TGeoMedium * arg1)->TGeoVolumeMulti * { return a->MakeVolumeMulti(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("medium"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::Division(const char *, const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::Division(const char *, const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:86:16
    t.method("Division", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Division", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"));
    t.method("Division", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Option_t * arg7)->TGeoVolume * { return a.Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"), jlcxx::arg("option"));
    t.method("Division", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Division", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"));
    t.method("Division", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Option_t * arg7)->TGeoVolume * { return a->Division(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("mother"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::Matrix(Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::Matrix(Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:89:4
    t.method("Matrix", [](TGeoBuilder& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a.Matrix(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("index"), jlcxx::arg("theta1"), jlcxx::arg("phi1"), jlcxx::arg("theta2"), jlcxx::arg("phi2"), jlcxx::arg("theta3"), jlcxx::arg("phi3"));
    t.method("Matrix", [](TGeoBuilder* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->void { a->Matrix(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("index"), jlcxx::arg("theta1"), jlcxx::arg("phi1"), jlcxx::arg("theta2"), jlcxx::arg("phi2"), jlcxx::arg("theta3"), jlcxx::arg("phi3"));

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoBuilder::Material(const char *, Double_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoBuilder::Material(const char *, Double_t, Double_t, Double_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:90:18
    t.method("Material", [](TGeoBuilder& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"));
    t.method("Material", [](TGeoBuilder& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"), jlcxx::arg("radlen"));
    t.method("Material", [](TGeoBuilder& a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5, Double_t arg6)->TGeoMaterial * { return a.Material(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"), jlcxx::arg("radlen"), jlcxx::arg("intlen"));
    t.method("Material", [](TGeoBuilder* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"));
    t.method("Material", [](TGeoBuilder* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"), jlcxx::arg("radlen"));
    t.method("Material", [](TGeoBuilder* a, const char * arg0, Double_t arg1, Double_t arg2, Double_t arg3, Int_t arg4, Double_t arg5, Double_t arg6)->TGeoMaterial * { return a->Material(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("uid"), jlcxx::arg("radlen"), jlcxx::arg("intlen"));

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoBuilder::Mixture(const char *, Float_t *, Float_t *, Double_t, Int_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoBuilder::Mixture(const char *, Float_t *, Float_t *, Double_t, Int_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:93:4
    t.method("Mixture", [](TGeoBuilder& a, const char * arg0, Float_t * arg1, Float_t * arg2, Double_t arg3, Int_t arg4, Float_t * arg5, Int_t arg6)->TGeoMaterial * { return a.Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("nelem"), jlcxx::arg("wmat"), jlcxx::arg("uid"));
    t.method("Mixture", [](TGeoBuilder* a, const char * arg0, Float_t * arg1, Float_t * arg2, Double_t arg3, Int_t arg4, Float_t * arg5, Int_t arg6)->TGeoMaterial * { return a->Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("nelem"), jlcxx::arg("wmat"), jlcxx::arg("uid"));

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoBuilder::Mixture(const char *, Double_t *, Double_t *, Double_t, Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoBuilder::Mixture(const char *, Double_t *, Double_t *, Double_t, Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:95:4
    t.method("Mixture", [](TGeoBuilder& a, const char * arg0, Double_t * arg1, Double_t * arg2, Double_t arg3, Int_t arg4, Double_t * arg5, Int_t arg6)->TGeoMaterial * { return a.Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("nelem"), jlcxx::arg("wmat"), jlcxx::arg("uid"));
    t.method("Mixture", [](TGeoBuilder* a, const char * arg0, Double_t * arg1, Double_t * arg2, Double_t arg3, Int_t arg4, Double_t * arg5, Int_t arg6)->TGeoMaterial * { return a->Mixture(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("a"), jlcxx::arg("z"), jlcxx::arg("dens"), jlcxx::arg("nelem"), jlcxx::arg("wmat"), jlcxx::arg("uid"));

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoBuilder::Medium(const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoBuilder::Medium(const char *, Int_t, Int_t, Int_t, Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:96:16
    t.method("Medium", [](TGeoBuilder& a, const char * arg0, Int_t arg1, Int_t arg2, Int_t arg3, Int_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->TGeoMedium * { return a.Medium(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("numed"), jlcxx::arg("nmat"), jlcxx::arg("isvol"), jlcxx::arg("ifield"), jlcxx::arg("fieldm"), jlcxx::arg("tmaxfd"), jlcxx::arg("stemax"), jlcxx::arg("deemax"), jlcxx::arg("epsil"), jlcxx::arg("stmin"));
    t.method("Medium", [](TGeoBuilder* a, const char * arg0, Int_t arg1, Int_t arg2, Int_t arg3, Int_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Double_t arg8, Double_t arg9, Double_t arg10)->TGeoMedium * { return a->Medium(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("numed"), jlcxx::arg("nmat"), jlcxx::arg("isvol"), jlcxx::arg("ifield"), jlcxx::arg("fieldm"), jlcxx::arg("tmaxfd"), jlcxx::arg("stemax"), jlcxx::arg("deemax"), jlcxx::arg("epsil"), jlcxx::arg("stmin"));

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:98:9
    t.method("Node", [](TGeoBuilder& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"));
    t.method("Node", [](TGeoBuilder& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8, Int_t arg9)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"), jlcxx::arg("npar"));
    t.method("Node", [](TGeoBuilder* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"));
    t.method("Node", [](TGeoBuilder* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Float_t * arg8, Int_t arg9)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"), jlcxx::arg("npar"));

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::Node(const char *, Int_t, const char *, Double_t, Double_t, Double_t, Int_t, Bool_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:100:9
    t.method("Node", [](TGeoBuilder& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"));
    t.method("Node", [](TGeoBuilder& a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8, Int_t arg9)->void { a.Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"), jlcxx::arg("npar"));
    t.method("Node", [](TGeoBuilder* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"));
    t.method("Node", [](TGeoBuilder* a, const char * arg0, Int_t arg1, const char * arg2, Double_t arg3, Double_t arg4, Double_t arg5, Int_t arg6, Bool_t arg7, Double_t * arg8, Int_t arg9)->void { a->Node(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("nr"), jlcxx::arg("mother"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"), jlcxx::arg("irot"), jlcxx::arg("isOnly"), jlcxx::arg("upar"), jlcxx::arg("npar"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::Volume(const char *, const char *, Int_t, Float_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::Volume(const char *, const char *, Int_t, Float_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:102:16
    t.method("Volume", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"));
    t.method("Volume", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3, Int_t arg4)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"), jlcxx::arg("npar"));
    t.method("Volume", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"));
    t.method("Volume", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Float_t * arg3, Int_t arg4)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"), jlcxx::arg("npar"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBuilder::Volume(const char *, const char *, Int_t, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBuilder::Volume(const char *, const char *, Int_t, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBuilder.h:103:16
    t.method("Volume", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"));
    t.method("Volume", [](TGeoBuilder& a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3, Int_t arg4)->TGeoVolume * { return a.Volume(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"), jlcxx::arg("npar"));
    t.method("Volume", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"));
    t.method("Volume", [](TGeoBuilder* a, const char * arg0, const char * arg1, Int_t arg2, Double_t * arg3, Int_t arg4)->TGeoVolume * { return a->Volume(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("nmed"), jlcxx::arg("upar"), jlcxx::arg("npar"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoBuilder::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBuilder::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoBuilder!Class_Version", []()->Version_t { return TGeoBuilder::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBuilder::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBuilder::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoBuilder const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoBuilder const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoBuilder& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoBuilder* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoBuilder::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBuilder::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoBuilder!DeclFileName", []() { return (std::string)TGeoBuilder::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBuilder::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBuilder::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoBuilder!ImplFileLine", []()->int { return TGeoBuilder::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBuilder::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBuilder::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoBuilder!ImplFileName", []() { return (std::string)TGeoBuilder::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBuilder::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBuilder::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoBuilder!Class_Name", []() { return (std::string)TGeoBuilder::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBuilder::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBuilder::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoBuilder!Dictionary", []()->TClass * { return TGeoBuilder::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBuilder::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBuilder::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoBuilder!Class", []()->TClass * { return TGeoBuilder::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoBuilder::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBuilder::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoBuilder& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoBuilder* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoBuilder::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBuilder::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoBuilder!DeclFileLine", []()->int { return TGeoBuilder::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBuilder>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBuilder(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBuilder(module));
}
