// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TObject> : std::false_type { };
  template<> struct DefaultConstructible<TObject> : std::false_type { };
}

// Class generating the wrapper for type TObject
// signature to use in the veto file: TObject
struct JlTObject: public Wrapper {

  JlTObject(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TObject (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:41:7
    jlcxx::TypeWrapper<TObject>  t = jlModule.add_type<TObject>("TObject");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TObject>>(new jlcxx::TypeWrapper<TObject>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TObject::TObject(const TObject &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:112:4
    t.constructor<const TObject &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TObject & TObject::operator=(const TObject &) (" __HERE__ ")");
    // signature to use in the veto list: TObject & TObject::operator=(const TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:113:13
    t.method("assign", static_cast<TObject & (TObject::*)(const TObject &) >(&TObject::operator=));

    DEBUG_MSG("Adding wrapper for void TObject::AppendPad(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::AppendPad(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:116:24
    t.method("AppendPad", static_cast<void (TObject::*)(Option_t *) >(&TObject::AppendPad));
    t.method("AppendPad", [](TObject& a)->void { a.AppendPad(); });
    t.method("AppendPad", [](TObject* a)->void { a->AppendPad(); });

    DEBUG_MSG("Adding wrapper for void TObject::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Browse(TBrowser *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:117:24
    t.method("Browse", static_cast<void (TObject::*)(TBrowser *) >(&TObject::Browse));

    DEBUG_MSG("Adding wrapper for const char * TObject::ClassName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::ClassName()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:118:24
    t.method("ClassName", [](TObject const& a) { return (std::string)a.ClassName(); });
    t.method("ClassName", [](TObject const* a) { return (std::string)a->ClassName(); });

    DEBUG_MSG("Adding wrapper for void TObject::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Clear(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:119:24
    t.method("Clear", static_cast<void (TObject::*)(Option_t *) >(&TObject::Clear));
    t.method("Clear", [](TObject& a)->void { a.Clear(); });
    t.method("Clear", [](TObject* a)->void { a->Clear(); });

    DEBUG_MSG("Adding wrapper for ULong_t TObject::CheckedHash() (" __HERE__ ")");
    // signature to use in the veto list: ULong_t TObject::CheckedHash()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:120:24
    t.method("CheckedHash", static_cast<ULong_t (TObject::*)() >(&TObject::CheckedHash));

    DEBUG_MSG("Adding wrapper for TObject * TObject::Clone(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObject::Clone(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:121:24
    t.method("Clone", static_cast<TObject * (TObject::*)(const char *)  const>(&TObject::Clone));
    t.method("Clone", [](TObject const& a)->TObject * { return a.Clone(); });
    t.method("Clone", [](TObject const* a)->TObject * { return a->Clone(); });

    DEBUG_MSG("Adding wrapper for Int_t TObject::Compare(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::Compare(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:122:24
    t.method("Compare", static_cast<Int_t (TObject::*)(const TObject *)  const>(&TObject::Compare));

    DEBUG_MSG("Adding wrapper for void TObject::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:123:24
    t.method("Copy", static_cast<void (TObject::*)(TObject &)  const>(&TObject::Copy));

    DEBUG_MSG("Adding wrapper for void TObject::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Delete(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:124:24
    t.method("Delete", static_cast<void (TObject::*)(Option_t *) >(&TObject::Delete));
    t.method("Delete", [](TObject& a)->void { a.Delete(); });
    t.method("Delete", [](TObject* a)->void { a->Delete(); });

    DEBUG_MSG("Adding wrapper for Int_t TObject::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:125:24
    t.method("DistancetoPrimitive", static_cast<Int_t (TObject::*)(Int_t, Int_t) >(&TObject::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for void TObject::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Draw(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:126:24
    t.method("Draw", static_cast<void (TObject::*)(Option_t *) >(&TObject::Draw));
    t.method("Draw", [](TObject& a)->void { a.Draw(); });
    t.method("Draw", [](TObject* a)->void { a->Draw(); });

    DEBUG_MSG("Adding wrapper for void TObject::DrawClass() (" __HERE__ ")");
    // signature to use in the veto list: void TObject::DrawClass()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:127:24
    t.method("DrawClass", static_cast<void (TObject::*)()  const>(&TObject::DrawClass));

    DEBUG_MSG("Adding wrapper for TObject * TObject::DrawClone(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObject::DrawClone(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:128:24
    t.method("DrawClone", static_cast<TObject * (TObject::*)(Option_t *)  const>(&TObject::DrawClone));
    t.method("DrawClone", [](TObject const& a)->TObject * { return a.DrawClone(); });
    t.method("DrawClone", [](TObject const* a)->TObject * { return a->DrawClone(); });

    DEBUG_MSG("Adding wrapper for void TObject::Dump() (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Dump()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:129:24
    t.method("Dump", static_cast<void (TObject::*)()  const>(&TObject::Dump));

    DEBUG_MSG("Adding wrapper for void TObject::Execute(const char *, const char *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Execute(const char *, const char *, Int_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:130:24
    t.method("Execute", static_cast<void (TObject::*)(const char *, const char *, Int_t *) >(&TObject::Execute));
    t.method("Execute", [](TObject& a, const char * arg0, const char * arg1)->void { a.Execute(arg0, arg1); });
    t.method("Execute", [](TObject* a, const char * arg0, const char * arg1)->void { a->Execute(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TObject::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:132:24
    t.method("ExecuteEvent", static_cast<void (TObject::*)(Int_t, Int_t, Int_t) >(&TObject::ExecuteEvent));

    DEBUG_MSG("Adding wrapper for TObject * TObject::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObject::FindObject(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:133:24
    t.method("FindObject", static_cast<TObject * (TObject::*)(const char *)  const>(&TObject::FindObject));

    DEBUG_MSG("Adding wrapper for TObject * TObject::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TObject::FindObject(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:134:24
    t.method("FindObject", static_cast<TObject * (TObject::*)(const TObject *)  const>(&TObject::FindObject));

    DEBUG_MSG("Adding wrapper for Option_t * TObject::GetDrawOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TObject::GetDrawOption()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:135:24
    t.method("GetDrawOption", static_cast<Option_t * (TObject::*)()  const>(&TObject::GetDrawOption));

    DEBUG_MSG("Adding wrapper for UInt_t TObject::GetUniqueID() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TObject::GetUniqueID()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:136:24
    t.method("GetUniqueID", static_cast<UInt_t (TObject::*)()  const>(&TObject::GetUniqueID));

    DEBUG_MSG("Adding wrapper for const char * TObject::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::GetName()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:137:24
    t.method("GetName", [](TObject const& a) { return (std::string)a.GetName(); });
    t.method("GetName", [](TObject const* a) { return (std::string)a->GetName(); });

    DEBUG_MSG("Adding wrapper for const char * TObject::GetIconName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::GetIconName()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:138:24
    t.method("GetIconName", [](TObject const& a) { return (std::string)a.GetIconName(); });
    t.method("GetIconName", [](TObject const* a) { return (std::string)a->GetIconName(); });

    DEBUG_MSG("Adding wrapper for Option_t * TObject::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TObject::GetOption()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:139:24
    t.method("GetOption", static_cast<Option_t * (TObject::*)()  const>(&TObject::GetOption));

    DEBUG_MSG("Adding wrapper for char * TObject::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TObject::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:140:24
    t.method("GetObjectInfo", static_cast<char * (TObject::*)(Int_t, Int_t)  const>(&TObject::GetObjectInfo));

    DEBUG_MSG("Adding wrapper for const char * TObject::GetTitle() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::GetTitle()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:141:24
    t.method("GetTitle", [](TObject const& a) { return (std::string)a.GetTitle(); });
    t.method("GetTitle", [](TObject const* a) { return (std::string)a->GetTitle(); });

    DEBUG_MSG("Adding wrapper for Bool_t TObject::HandleTimer(TTimer *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::HandleTimer(TTimer *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:142:24
    t.method("HandleTimer", static_cast<Bool_t (TObject::*)(TTimer *) >(&TObject::HandleTimer));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::HasInconsistentHash() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::HasInconsistentHash()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:143:24
    t.method("HasInconsistentHash", static_cast<Bool_t (TObject::*)()  const>(&TObject::HasInconsistentHash));

    DEBUG_MSG("Adding wrapper for ULong_t TObject::Hash() (" __HERE__ ")");
    // signature to use in the veto list: ULong_t TObject::Hash()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:144:24
    t.method("Hash", static_cast<ULong_t (TObject::*)()  const>(&TObject::Hash));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::InheritsFrom(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::InheritsFrom(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:145:24
    t.method("InheritsFrom", static_cast<Bool_t (TObject::*)(const char *)  const>(&TObject::InheritsFrom));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::InheritsFrom(const TClass *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::InheritsFrom(const TClass *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:146:24
    t.method("InheritsFrom", static_cast<Bool_t (TObject::*)(const TClass *)  const>(&TObject::InheritsFrom));

    DEBUG_MSG("Adding wrapper for void TObject::Inspect() (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Inspect()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:147:24
    t.method("Inspect", static_cast<void (TObject::*)()  const>(&TObject::Inspect));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsFolder()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:148:24
    t.method("IsFolder", static_cast<Bool_t (TObject::*)()  const>(&TObject::IsFolder));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsEqual(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsEqual(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:149:24
    t.method("IsEqual", static_cast<Bool_t (TObject::*)(const TObject *)  const>(&TObject::IsEqual));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsSortable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsSortable()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:150:24
    t.method("IsSortable", static_cast<Bool_t (TObject::*)()  const>(&TObject::IsSortable));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsOnHeap() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsOnHeap()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:152:28
    t.method("IsOnHeap", static_cast<Bool_t (TObject::*)()  const>(&TObject::IsOnHeap));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsZombie() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsZombie()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:153:28
    t.method("IsZombie", static_cast<Bool_t (TObject::*)()  const>(&TObject::IsZombie));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::Notify() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::Notify()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:155:24
    t.method("Notify", static_cast<Bool_t (TObject::*)() >(&TObject::Notify));

    DEBUG_MSG("Adding wrapper for void TObject::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::ls(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:156:24
    t.method("ls", static_cast<void (TObject::*)(Option_t *)  const>(&TObject::ls));
    t.method("ls", [](TObject const& a)->void { a.ls(); });
    t.method("ls", [](TObject const* a)->void { a->ls(); });

    DEBUG_MSG("Adding wrapper for void TObject::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Paint(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:157:24
    t.method("Paint", static_cast<void (TObject::*)(Option_t *) >(&TObject::Paint));
    t.method("Paint", [](TObject& a)->void { a.Paint(); });
    t.method("Paint", [](TObject* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for void TObject::Pop() (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Pop()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:158:24
    t.method("Pop", static_cast<void (TObject::*)() >(&TObject::Pop));

    DEBUG_MSG("Adding wrapper for void TObject::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:159:24
    t.method("Print", static_cast<void (TObject::*)(Option_t *)  const>(&TObject::Print));
    t.method("Print", [](TObject const& a)->void { a.Print(); });
    t.method("Print", [](TObject const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for Int_t TObject::Read(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::Read(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:160:24
    t.method("Read", static_cast<Int_t (TObject::*)(const char *) >(&TObject::Read));

    DEBUG_MSG("Adding wrapper for void TObject::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:161:24
    t.method("RecursiveRemove", static_cast<void (TObject::*)(TObject *) >(&TObject::RecursiveRemove));

    DEBUG_MSG("Adding wrapper for void TObject::SaveAs(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SaveAs(const char *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:162:24
    t.method("SaveAs", static_cast<void (TObject::*)(const char *, Option_t *)  const>(&TObject::SaveAs));
    t.method("SaveAs", [](TObject const& a)->void { a.SaveAs(); });
    t.method("SaveAs", [](TObject const& a, const char * arg0)->void { a.SaveAs(arg0); });
    t.method("SaveAs", [](TObject const* a)->void { a->SaveAs(); });
    t.method("SaveAs", [](TObject const* a, const char * arg0)->void { a->SaveAs(arg0); });

    DEBUG_MSG("Adding wrapper for void TObject::SetDrawOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetDrawOption(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:164:24
    t.method("SetDrawOption", static_cast<void (TObject::*)(Option_t *) >(&TObject::SetDrawOption));
    t.method("SetDrawOption", [](TObject& a)->void { a.SetDrawOption(); });
    t.method("SetDrawOption", [](TObject* a)->void { a->SetDrawOption(); });

    DEBUG_MSG("Adding wrapper for void TObject::SetUniqueID(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetUniqueID(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:165:24
    t.method("SetUniqueID", static_cast<void (TObject::*)(UInt_t) >(&TObject::SetUniqueID));

    DEBUG_MSG("Adding wrapper for void TObject::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TObject::UseCurrentStyle()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:166:24
    t.method("UseCurrentStyle", static_cast<void (TObject::*)() >(&TObject::UseCurrentStyle));

    DEBUG_MSG("Adding wrapper for Int_t TObject::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:167:24
    t.method("Write", static_cast<Int_t (TObject::*)(const char *, Int_t, Int_t) >(&TObject::Write));
    t.method("Write", [](TObject& a)->Int_t { return a.Write(); });
    t.method("Write", [](TObject& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TObject& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TObject* a)->Int_t { return a->Write(); });
    t.method("Write", [](TObject* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TObject* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TObject::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:168:24
    t.method("Write", static_cast<Int_t (TObject::*)(const char *, Int_t, Int_t)  const>(&TObject::Write));
    t.method("Write", [](TObject const& a)->Int_t { return a.Write(); });
    t.method("Write", [](TObject const& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TObject const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TObject const* a)->Int_t { return a->Write(); });
    t.method("Write", [](TObject const* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TObject const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Bool_t TObject::IsDestructed() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::IsDestructed()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:178:11
    t.method("IsDestructed", static_cast<Bool_t (TObject::*)()  const>(&TObject::IsDestructed));

    DEBUG_MSG("Adding wrapper for void * TObject::operator new(size_t) (" __HERE__ ")");
    // signature to use in the veto list: void * TObject::operator new(size_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:181:13
    module_.method("TObject!new", static_cast<void * (*)(size_t) >(&TObject::operator new));

    DEBUG_MSG("Adding wrapper for void * TObject::operator new[](size_t) (" __HERE__ ")");
    // signature to use in the veto list: void * TObject::operator new[](size_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:182:13
    module_.method("TObject!new[]", static_cast<void * (*)(size_t) >(&TObject::operator new[]));

    DEBUG_MSG("Adding wrapper for void * TObject::operator new(size_t, void *) (" __HERE__ ")");
    // signature to use in the veto list: void * TObject::operator new(size_t, void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:183:13
    module_.method("TObject!new", static_cast<void * (*)(size_t, void *) >(&TObject::operator new));

    DEBUG_MSG("Adding wrapper for void * TObject::operator new[](size_t, void *) (" __HERE__ ")");
    // signature to use in the veto list: void * TObject::operator new[](size_t, void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:184:13
    module_.method("TObject!new[]", static_cast<void * (*)(size_t, void *) >(&TObject::operator new[]));

    DEBUG_MSG("Adding wrapper for void TObject::operator delete(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::operator delete(void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:185:13
    module_.method("TObject!delete", static_cast<void (*)(void *) >(&TObject::operator delete));

    DEBUG_MSG("Adding wrapper for void TObject::operator delete[](void *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::operator delete[](void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:186:13
    module_.method("TObject!delete[]", static_cast<void (*)(void *) >(&TObject::operator delete[]));

    DEBUG_MSG("Adding wrapper for void TObject::operator delete(void *, void *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::operator delete(void *, void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:193:13
    module_.method("TObject!delete", static_cast<void (*)(void *, void *) >(&TObject::operator delete));

    DEBUG_MSG("Adding wrapper for void TObject::operator delete[](void *, void *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::operator delete[](void *, void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:194:13
    module_.method("TObject!delete[]", static_cast<void (*)(void *, void *) >(&TObject::operator delete[]));

    DEBUG_MSG("Adding wrapper for void TObject::SetBit(UInt_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetBit(UInt_t, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:198:13
    t.method("SetBit", static_cast<void (TObject::*)(UInt_t, Bool_t) >(&TObject::SetBit));

    DEBUG_MSG("Adding wrapper for void TObject::SetBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetBit(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:199:13
    t.method("SetBit", static_cast<void (TObject::*)(UInt_t) >(&TObject::SetBit));

    DEBUG_MSG("Adding wrapper for void TObject::ResetBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::ResetBit(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:200:13
    t.method("ResetBit", static_cast<void (TObject::*)(UInt_t) >(&TObject::ResetBit));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::TestBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::TestBit(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:201:28
    t.method("TestBit", static_cast<Bool_t (TObject::*)(UInt_t)  const>(&TObject::TestBit));

    DEBUG_MSG("Adding wrapper for Int_t TObject::TestBits(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TObject::TestBits(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:202:13
    t.method("TestBits", static_cast<Int_t (TObject::*)(UInt_t)  const>(&TObject::TestBits));

    DEBUG_MSG("Adding wrapper for void TObject::InvertBit(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::InvertBit(UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:203:13
    t.method("InvertBit", static_cast<void (TObject::*)(UInt_t) >(&TObject::InvertBit));






    DEBUG_MSG("Adding wrapper for void TObject::AbstractMethod(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::AbstractMethod(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:232:13
    t.method("AbstractMethod", static_cast<void (TObject::*)(const char *)  const>(&TObject::AbstractMethod));

    DEBUG_MSG("Adding wrapper for void TObject::MayNotUse(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::MayNotUse(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:233:13
    t.method("MayNotUse", static_cast<void (TObject::*)(const char *)  const>(&TObject::MayNotUse));

    DEBUG_MSG("Adding wrapper for void TObject::Obsolete(const char *, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Obsolete(const char *, const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:234:13
    t.method("Obsolete", static_cast<void (TObject::*)(const char *, const char *, const char *)  const>(&TObject::Obsolete));

    DEBUG_MSG("Adding wrapper for Longptr_t TObject::GetDtorOnly() (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TObject::GetDtorOnly()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:237:21
    module_.method("TObject!GetDtorOnly", static_cast<Longptr_t (*)() >(&TObject::GetDtorOnly));

    DEBUG_MSG("Adding wrapper for void TObject::SetDtorOnly(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetDtorOnly(void *)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:238:21
    module_.method("TObject!SetDtorOnly", static_cast<void (*)(void *) >(&TObject::SetDtorOnly));

    DEBUG_MSG("Adding wrapper for Bool_t TObject::GetObjectStat() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TObject::GetObjectStat()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:239:21
    module_.method("TObject!GetObjectStat", static_cast<Bool_t (*)() >(&TObject::GetObjectStat));

    DEBUG_MSG("Adding wrapper for void TObject::SetObjectStat(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::SetObjectStat(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:240:21
    module_.method("TObject!SetObjectStat", static_cast<void (*)(Bool_t) >(&TObject::SetObjectStat));

    DEBUG_MSG("Adding wrapper for Version_t TObject::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TObject::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!Class_Version", static_cast<Version_t (*)() >(&TObject::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TObject::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObject::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    t.method("IsA", static_cast<TClass * (TObject::*)()  const>(&TObject::IsA));

    DEBUG_MSG("Adding wrapper for void TObject::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    t.method("StreamerNVirtual", static_cast<void (TObject::*)(TBuffer &) >(&TObject::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TObject::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!DeclFileName", []() { return (std::string)TObject::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TObject::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TObject::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!ImplFileLine", static_cast<int (*)() >(&TObject::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TObject::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!ImplFileName", []() { return (std::string)TObject::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TObject::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TObject::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!Class_Name", []() { return (std::string)TObject::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TObject::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObject::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!Dictionary", static_cast<TClass * (*)() >(&TObject::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TObject::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TObject::Class()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!Class", static_cast<TClass * (*)() >(&TObject::Class));

    DEBUG_MSG("Adding wrapper for void TObject::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TObject::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    t.method("Streamer", static_cast<void (TObject::*)(TBuffer &) >(&TObject::Streamer));

    DEBUG_MSG("Adding wrapper for int TObject::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TObject::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TObject.h:245:4
    module_.method("TObject!DeclFileLine", static_cast<int (*)() >(&TObject::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TObject>> type_;
};
std::shared_ptr<Wrapper> newJlTObject(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTObject(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TNamed> : std::false_type { };
  template<> struct DefaultConstructible<TNamed> : std::false_type { };
template<> struct SuperType<TNamed> { typedef TObject type; };
}

// Class generating the wrapper for type TNamed
// signature to use in the veto file: TNamed
struct JlTNamed: public Wrapper {

  JlTNamed(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TNamed (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:29:7
    jlcxx::TypeWrapper<TNamed>  t = jlModule.add_type<TNamed>("TNamed",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TNamed>>(new jlcxx::TypeWrapper<TNamed>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TNamed::TNamed(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:37:4
    t.constructor<const char *, const char *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TNamed::TNamed(const TString &, const TString &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:38:4
    t.constructor<const TString &, const TString &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TNamed::TNamed(const TNamed &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:39:4
    t.constructor<const TNamed &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TNamed & TNamed::operator=(const TNamed &) (" __HERE__ ")");
    // signature to use in the veto list: TNamed & TNamed::operator=(const TNamed &)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:40:12
    t.method("assign", static_cast<TNamed & (TNamed::*)(const TNamed &) >(&TNamed::operator=));

    DEBUG_MSG("Adding wrapper for void TNamed::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::Clear(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:42:22
    t.method("Clear", static_cast<void (TNamed::*)(Option_t *) >(&TNamed::Clear));
    t.method("Clear", [](TNamed& a)->void { a.Clear(); });
    t.method("Clear", [](TNamed* a)->void { a->Clear(); });

    DEBUG_MSG("Adding wrapper for TObject * TNamed::Clone(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TNamed::Clone(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:43:22
    t.method("Clone", static_cast<TObject * (TNamed::*)(const char *)  const>(&TNamed::Clone));
    t.method("Clone", [](TNamed const& a)->TObject * { return a.Clone(); });
    t.method("Clone", [](TNamed const* a)->TObject * { return a->Clone(); });

    DEBUG_MSG("Adding wrapper for Int_t TNamed::Compare(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TNamed::Compare(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:44:22
    t.method("Compare", static_cast<Int_t (TNamed::*)(const TObject *)  const>(&TNamed::Compare));

    DEBUG_MSG("Adding wrapper for void TNamed::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:45:22
    t.method("Copy", static_cast<void (TNamed::*)(TObject &)  const>(&TNamed::Copy));

    DEBUG_MSG("Adding wrapper for void TNamed::FillBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::FillBuffer(char *&)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:46:22
    t.method("FillBuffer", static_cast<void (TNamed::*)(char *&) >(&TNamed::FillBuffer));

    DEBUG_MSG("Adding wrapper for const char * TNamed::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TNamed::GetName()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:47:26
    t.method("GetName", [](TNamed const& a) { return (std::string)a.GetName(); });
    t.method("GetName", [](TNamed const* a) { return (std::string)a->GetName(); });

    DEBUG_MSG("Adding wrapper for const char * TNamed::GetTitle() (" __HERE__ ")");
    // signature to use in the veto list: const char * TNamed::GetTitle()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:48:26
    t.method("GetTitle", [](TNamed const& a) { return (std::string)a.GetTitle(); });
    t.method("GetTitle", [](TNamed const* a) { return (std::string)a->GetTitle(); });

    DEBUG_MSG("Adding wrapper for ULong_t TNamed::Hash() (" __HERE__ ")");
    // signature to use in the veto list: ULong_t TNamed::Hash()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:49:22
    t.method("Hash", static_cast<ULong_t (TNamed::*)()  const>(&TNamed::Hash));

    DEBUG_MSG("Adding wrapper for Bool_t TNamed::IsSortable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TNamed::IsSortable()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:50:22
    t.method("IsSortable", static_cast<Bool_t (TNamed::*)()  const>(&TNamed::IsSortable));

    DEBUG_MSG("Adding wrapper for void TNamed::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::SetName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:51:22
    t.method("SetName", static_cast<void (TNamed::*)(const char *) >(&TNamed::SetName));

    DEBUG_MSG("Adding wrapper for void TNamed::SetNameTitle(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::SetNameTitle(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:52:22
    t.method("SetNameTitle", static_cast<void (TNamed::*)(const char *, const char *) >(&TNamed::SetNameTitle));

    DEBUG_MSG("Adding wrapper for void TNamed::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::SetTitle(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:53:22
    t.method("SetTitle", static_cast<void (TNamed::*)(const char *) >(&TNamed::SetTitle));
    t.method("SetTitle", [](TNamed& a)->void { a.SetTitle(); });
    t.method("SetTitle", [](TNamed* a)->void { a->SetTitle(); });

    DEBUG_MSG("Adding wrapper for void TNamed::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::ls(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:54:22
    t.method("ls", static_cast<void (TNamed::*)(Option_t *)  const>(&TNamed::ls));
    t.method("ls", [](TNamed const& a)->void { a.ls(); });
    t.method("ls", [](TNamed const* a)->void { a->ls(); });

    DEBUG_MSG("Adding wrapper for void TNamed::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:55:22
    t.method("Print", static_cast<void (TNamed::*)(Option_t *)  const>(&TNamed::Print));
    t.method("Print", [](TNamed const& a)->void { a.Print(); });
    t.method("Print", [](TNamed const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for Int_t TNamed::Sizeof() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TNamed::Sizeof()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:56:22
    t.method("Sizeof", static_cast<Int_t (TNamed::*)()  const>(&TNamed::Sizeof));

    DEBUG_MSG("Adding wrapper for Version_t TNamed::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TNamed::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!Class_Version", static_cast<Version_t (*)() >(&TNamed::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TNamed::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TNamed::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    t.method("IsA", static_cast<TClass * (TNamed::*)()  const>(&TNamed::IsA));

    DEBUG_MSG("Adding wrapper for void TNamed::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    t.method("StreamerNVirtual", static_cast<void (TNamed::*)(TBuffer &) >(&TNamed::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TNamed::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TNamed::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!DeclFileName", []() { return (std::string)TNamed::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TNamed::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TNamed::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!ImplFileLine", static_cast<int (*)() >(&TNamed::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TNamed::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TNamed::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!ImplFileName", []() { return (std::string)TNamed::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TNamed::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TNamed::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!Class_Name", []() { return (std::string)TNamed::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TNamed::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TNamed::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!Dictionary", static_cast<TClass * (*)() >(&TNamed::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TNamed::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TNamed::Class()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!Class", static_cast<TClass * (*)() >(&TNamed::Class));

    DEBUG_MSG("Adding wrapper for void TNamed::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TNamed::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    t.method("Streamer", static_cast<void (TNamed::*)(TBuffer &) >(&TNamed::Streamer));

    DEBUG_MSG("Adding wrapper for int TNamed::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TNamed::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TNamed.h:58:4
    module_.method("TNamed!DeclFileLine", static_cast<int (*)() >(&TNamed::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TNamed>> type_;
};
std::shared_ptr<Wrapper> newJlTNamed(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTNamed(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TBrowser> : std::false_type { };
  template<> struct DefaultConstructible<TBrowser> : std::false_type { };
template<> struct SuperType<TBrowser> { typedef TNamed type; };
}

// Class generating the wrapper for type TBrowser
// signature to use in the veto file: TBrowser
struct JlTBrowser: public Wrapper {

  JlTBrowser(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TBrowser (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:37:7
    jlcxx::TypeWrapper<TBrowser>  t = jlModule.add_type<TBrowser>("TBrowser",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TBrowser>>(new jlcxx::TypeWrapper<TBrowser>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, const char *, TBrowserImp *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:58:4
    t.constructor<const char *>(/*finalize=*/true);
    t.constructor<const char *, const char *>(/*finalize=*/true);
    t.constructor<const char *, const char *, TBrowserImp *>(/*finalize=*/true);
    t.constructor<const char *, const char *, TBrowserImp *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, const char *, UInt_t, UInt_t, TBrowserImp *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:59:4
    t.constructor<const char *, const char *, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, const char *, UInt_t, UInt_t, TBrowserImp *>(/*finalize=*/true);
    t.constructor<const char *, const char *, UInt_t, UInt_t, TBrowserImp *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, const char *, Int_t, Int_t, UInt_t, UInt_t, TBrowserImp *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:60:4
    t.constructor<const char *, const char *, Int_t, Int_t, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, const char *, Int_t, Int_t, UInt_t, UInt_t, TBrowserImp *>(/*finalize=*/true);
    t.constructor<const char *, const char *, Int_t, Int_t, UInt_t, UInt_t, TBrowserImp *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, TObject *, const char *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:62:4
    t.constructor<const char *, TObject *>(/*finalize=*/true);
    t.constructor<const char *, TObject *, const char *>(/*finalize=*/true);
    t.constructor<const char *, TObject *, const char *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, TObject *, const char *, UInt_t, UInt_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:63:4
    t.constructor<const char *, TObject *, const char *, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, TObject *, const char *, UInt_t, UInt_t, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, TObject *, const char *, Int_t, Int_t, UInt_t, UInt_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:64:4
    t.constructor<const char *, TObject *, const char *, Int_t, Int_t, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, TObject *, const char *, Int_t, Int_t, UInt_t, UInt_t, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, void *, TClass *, const char *, const char *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:66:4
    t.constructor<const char *, void *, TClass *>(/*finalize=*/true);
    t.constructor<const char *, void *, TClass *, const char *>(/*finalize=*/true);
    t.constructor<const char *, void *, TClass *, const char *, const char *>(/*finalize=*/true);
    t.constructor<const char *, void *, TClass *, const char *, const char *, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, void *, TClass *, const char *, const char *, UInt_t, UInt_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:67:4
    t.constructor<const char *, void *, TClass *, const char *, const char *, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, void *, TClass *, const char *, const char *, UInt_t, UInt_t, Option_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TBrowser::TBrowser(const char *, void *, TClass *, const char *, const char *, Int_t, Int_t, UInt_t, UInt_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:68:4
    t.constructor<const char *, void *, TClass *, const char *, const char *, Int_t, Int_t, UInt_t, UInt_t>(/*finalize=*/true);
    t.constructor<const char *, void *, TClass *, const char *, const char *, Int_t, Int_t, UInt_t, UInt_t, Option_t *>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TBrowser::Add(TObject *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Add(TObject *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:83:18
    t.method("Add", static_cast<void (TBrowser::*)(TObject *, const char *, Int_t) >(&TBrowser::Add));
    t.method("Add", [](TBrowser& a, TObject * arg0)->void { a.Add(arg0); });
    t.method("Add", [](TBrowser& a, TObject * arg0, const char * arg1)->void { a.Add(arg0, arg1); });
    t.method("Add", [](TBrowser* a, TObject * arg0)->void { a->Add(arg0); });
    t.method("Add", [](TBrowser* a, TObject * arg0, const char * arg1)->void { a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TBrowser::Add(void *, TClass *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Add(void *, TClass *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:84:18
    t.method("Add", static_cast<void (TBrowser::*)(void *, TClass *, const char *, Int_t) >(&TBrowser::Add));
    t.method("Add", [](TBrowser& a, void * arg0, TClass * arg1)->void { a.Add(arg0, arg1); });
    t.method("Add", [](TBrowser& a, void * arg0, TClass * arg1, const char * arg2)->void { a.Add(arg0, arg1, arg2); });
    t.method("Add", [](TBrowser* a, void * arg0, TClass * arg1)->void { a->Add(arg0, arg1); });
    t.method("Add", [](TBrowser* a, void * arg0, TClass * arg1, const char * arg2)->void { a->Add(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TBrowser::AddCheckBox(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::AddCheckBox(TObject *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:86:18
    t.method("AddCheckBox", static_cast<void (TBrowser::*)(TObject *, Bool_t) >(&TBrowser::AddCheckBox));
    t.method("AddCheckBox", [](TBrowser& a, TObject * arg0)->void { a.AddCheckBox(arg0); });
    t.method("AddCheckBox", [](TBrowser* a, TObject * arg0)->void { a->AddCheckBox(arg0); });

    DEBUG_MSG("Adding wrapper for void TBrowser::CheckObjectItem(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::CheckObjectItem(TObject *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:87:18
    t.method("CheckObjectItem", static_cast<void (TBrowser::*)(TObject *, Bool_t) >(&TBrowser::CheckObjectItem));
    t.method("CheckObjectItem", [](TBrowser& a, TObject * arg0)->void { a.CheckObjectItem(arg0); });
    t.method("CheckObjectItem", [](TBrowser* a, TObject * arg0)->void { a->CheckObjectItem(arg0); });

    DEBUG_MSG("Adding wrapper for void TBrowser::RemoveCheckBox(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::RemoveCheckBox(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:88:18
    t.method("RemoveCheckBox", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::RemoveCheckBox));

    DEBUG_MSG("Adding wrapper for void TBrowser::Create(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Create(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:90:18
    t.method("Create", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::Create));
    t.method("Create", [](TBrowser& a)->void { a.Create(); });
    t.method("Create", [](TBrowser* a)->void { a->Create(); });

    DEBUG_MSG("Adding wrapper for void TBrowser::Destructor() (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Destructor()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:91:18
    t.method("Destructor", static_cast<void (TBrowser::*)() >(&TBrowser::Destructor));

    DEBUG_MSG("Adding wrapper for void TBrowser::BrowseObject(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::BrowseObject(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:92:18
    t.method("BrowseObject", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::BrowseObject));

    DEBUG_MSG("Adding wrapper for void TBrowser::ExecuteDefaultAction(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::ExecuteDefaultAction(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:93:18
    t.method("ExecuteDefaultAction", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::ExecuteDefaultAction));

    DEBUG_MSG("Adding wrapper for TBrowserImp * TBrowser::GetBrowserImp() (" __HERE__ ")");
    // signature to use in the veto list: TBrowserImp * TBrowser::GetBrowserImp()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:94:18
    t.method("GetBrowserImp", static_cast<TBrowserImp * (TBrowser::*)()  const>(&TBrowser::GetBrowserImp));

    DEBUG_MSG("Adding wrapper for void TBrowser::SetBrowserImp(TBrowserImp *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::SetBrowserImp(TBrowserImp *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:95:18
    t.method("SetBrowserImp", static_cast<void (TBrowser::*)(TBrowserImp *) >(&TBrowser::SetBrowserImp));

    DEBUG_MSG("Adding wrapper for Bool_t TBrowser::GetRefreshFlag() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TBrowser::GetRefreshFlag()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:97:18
    t.method("GetRefreshFlag", static_cast<Bool_t (TBrowser::*)()  const>(&TBrowser::GetRefreshFlag));

    DEBUG_MSG("Adding wrapper for TObject * TBrowser::GetSelected() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TBrowser::GetSelected()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:98:18
    t.method("GetSelected", static_cast<TObject * (TBrowser::*)()  const>(&TBrowser::GetSelected));

    DEBUG_MSG("Adding wrapper for void TBrowser::SetRefreshFlag(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::SetRefreshFlag(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:99:18
    t.method("SetRefreshFlag", static_cast<void (TBrowser::*)(Bool_t) >(&TBrowser::SetRefreshFlag));

    DEBUG_MSG("Adding wrapper for void TBrowser::Iconify() (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Iconify()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:100:18
    t.method("Iconify", static_cast<void (TBrowser::*)() >(&TBrowser::Iconify));

    DEBUG_MSG("Adding wrapper for void TBrowser::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:101:18
    t.method("RecursiveRemove", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::RecursiveRemove));

    DEBUG_MSG("Adding wrapper for void TBrowser::Refresh() (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Refresh()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:102:18
    t.method("Refresh", static_cast<void (TBrowser::*)() >(&TBrowser::Refresh));

    DEBUG_MSG("Adding wrapper for void TBrowser::SetSelected(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::SetSelected(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:103:18
    t.method("SetSelected", static_cast<void (TBrowser::*)(TObject *) >(&TBrowser::SetSelected));

    DEBUG_MSG("Adding wrapper for void TBrowser::Show() (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Show()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:104:18
    t.method("Show", static_cast<void (TBrowser::*)() >(&TBrowser::Show));

    DEBUG_MSG("Adding wrapper for void TBrowser::SetDrawOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::SetDrawOption(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:105:18
    t.method("SetDrawOption", static_cast<void (TBrowser::*)(Option_t *) >(&TBrowser::SetDrawOption));
    t.method("SetDrawOption", [](TBrowser& a)->void { a.SetDrawOption(); });
    t.method("SetDrawOption", [](TBrowser* a)->void { a->SetDrawOption(); });

    DEBUG_MSG("Adding wrapper for Option_t * TBrowser::GetDrawOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TBrowser::GetDrawOption()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:106:18
    t.method("GetDrawOption", static_cast<Option_t * (TBrowser::*)()  const>(&TBrowser::GetDrawOption));

    DEBUG_MSG("Adding wrapper for Longptr_t TBrowser::ExecPlugin(const char *, const char *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TBrowser::ExecPlugin(const char *, const char *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:108:18
    t.method("ExecPlugin", static_cast<Longptr_t (TBrowser::*)(const char *, const char *, const char *, Int_t, Int_t) >(&TBrowser::ExecPlugin));
    t.method("ExecPlugin", [](TBrowser& a)->Longptr_t { return a.ExecPlugin(); });
    t.method("ExecPlugin", [](TBrowser& a, const char * arg0)->Longptr_t { return a.ExecPlugin(arg0); });
    t.method("ExecPlugin", [](TBrowser& a, const char * arg0, const char * arg1)->Longptr_t { return a.ExecPlugin(arg0, arg1); });
    t.method("ExecPlugin", [](TBrowser& a, const char * arg0, const char * arg1, const char * arg2)->Longptr_t { return a.ExecPlugin(arg0, arg1, arg2); });
    t.method("ExecPlugin", [](TBrowser& a, const char * arg0, const char * arg1, const char * arg2, Int_t arg3)->Longptr_t { return a.ExecPlugin(arg0, arg1, arg2, arg3); });
    t.method("ExecPlugin", [](TBrowser* a)->Longptr_t { return a->ExecPlugin(); });
    t.method("ExecPlugin", [](TBrowser* a, const char * arg0)->Longptr_t { return a->ExecPlugin(arg0); });
    t.method("ExecPlugin", [](TBrowser* a, const char * arg0, const char * arg1)->Longptr_t { return a->ExecPlugin(arg0, arg1); });
    t.method("ExecPlugin", [](TBrowser* a, const char * arg0, const char * arg1, const char * arg2)->Longptr_t { return a->ExecPlugin(arg0, arg1, arg2); });
    t.method("ExecPlugin", [](TBrowser* a, const char * arg0, const char * arg1, const char * arg2, Int_t arg3)->Longptr_t { return a->ExecPlugin(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TBrowser::SetStatusText(const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::SetStatusText(const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:112:18
    t.method("SetStatusText", static_cast<void (TBrowser::*)(const char *, Int_t) >(&TBrowser::SetStatusText));

    DEBUG_MSG("Adding wrapper for void TBrowser::StartEmbedding(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::StartEmbedding(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:115:18
    t.method("StartEmbedding", static_cast<void (TBrowser::*)(Int_t, Int_t) >(&TBrowser::StartEmbedding));

    DEBUG_MSG("Adding wrapper for void TBrowser::StopEmbedding(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::StopEmbedding(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:118:18
    t.method("StopEmbedding", static_cast<void (TBrowser::*)(const char *) >(&TBrowser::StopEmbedding));
    t.method("StopEmbedding", [](TBrowser& a)->void { a.StopEmbedding(); });
    t.method("StopEmbedding", [](TBrowser* a)->void { a->StopEmbedding(); });

    DEBUG_MSG("Adding wrapper for Version_t TBrowser::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TBrowser::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!Class_Version", static_cast<Version_t (*)() >(&TBrowser::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TBrowser::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBrowser::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    t.method("IsA", static_cast<TClass * (TBrowser::*)()  const>(&TBrowser::IsA));

    DEBUG_MSG("Adding wrapper for void TBrowser::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    t.method("StreamerNVirtual", static_cast<void (TBrowser::*)(TBuffer &) >(&TBrowser::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TBrowser::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBrowser::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!DeclFileName", []() { return (std::string)TBrowser::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TBrowser::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBrowser::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!ImplFileLine", static_cast<int (*)() >(&TBrowser::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TBrowser::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBrowser::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!ImplFileName", []() { return (std::string)TBrowser::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TBrowser::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBrowser::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!Class_Name", []() { return (std::string)TBrowser::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TBrowser::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBrowser::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!Dictionary", static_cast<TClass * (*)() >(&TBrowser::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TBrowser::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBrowser::Class()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!Class", static_cast<TClass * (*)() >(&TBrowser::Class));

    DEBUG_MSG("Adding wrapper for void TBrowser::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBrowser::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    t.method("Streamer", static_cast<void (TBrowser::*)(TBuffer &) >(&TBrowser::Streamer));

    DEBUG_MSG("Adding wrapper for int TBrowser::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBrowser::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TBrowser.h:120:4
    module_.method("TBrowser!DeclFileLine", static_cast<int (*)() >(&TBrowser::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TBrowser>> type_;
};
std::shared_ptr<Wrapper> newJlTBrowser(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTBrowser(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TCollection> : std::false_type { };
  template<> struct DefaultConstructible<TCollection> : std::false_type { };
template<> struct SuperType<TCollection> { typedef TObject type; };
}

// Class generating the wrapper for type TCollection
// signature to use in the veto file: TCollection
struct JlTCollection: public Wrapper {

  JlTCollection(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TCollection (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCollection.h:65:7
    jlcxx::TypeWrapper<TCollection>  t = jlModule.add_type<TCollection>("TCollection",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TCollection>>(new jlcxx::TypeWrapper<TCollection>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TCollection>> type_;
};
std::shared_ptr<Wrapper> newJlTCollection(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTCollection(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TSeqCollection> : std::false_type { };
  template<> struct DefaultConstructible<TSeqCollection> : std::false_type { };
template<> struct SuperType<TSeqCollection> { typedef TCollection type; };
}

// Class generating the wrapper for type TSeqCollection
// signature to use in the veto file: TSeqCollection
struct JlTSeqCollection: public Wrapper {

  JlTSeqCollection(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TSeqCollection (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TSeqCollection.h:28:7
    jlcxx::TypeWrapper<TSeqCollection>  t = jlModule.add_type<TSeqCollection>("TSeqCollection",
      jlcxx::julia_base_type<TCollection>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TSeqCollection>>(new jlcxx::TypeWrapper<TSeqCollection>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TSeqCollection>> type_;
};
std::shared_ptr<Wrapper> newJlTSeqCollection(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTSeqCollection(module));
}
