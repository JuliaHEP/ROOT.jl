// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoStateInfo> : std::false_type { };
  template<> struct DefaultConstructible<TGeoStateInfo> : std::false_type { };
}

// Class generating the wrapper for type TGeoStateInfo
// signature to use in the veto file: TGeoStateInfo
struct JlTGeoStateInfo: public Wrapper {

  JlTGeoStateInfo(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoStateInfo (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:21:8
    jlcxx::TypeWrapper<TGeoStateInfo>  t = jlModule.add_type<TGeoStateInfo>("TGeoStateInfo");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoStateInfo>>(new jlcxx::TypeWrapper<TGeoStateInfo>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoStateInfo::TGeoStateInfo(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:50:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("maxdaughters")    );

    DEBUG_MSG("Adding wrapper for Version_t TGeoStateInfo::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoStateInfo::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoStateInfo!Class_Version", []()->Version_t { return TGeoStateInfo::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoStateInfo::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoStateInfo::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoStateInfo const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoStateInfo const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoStateInfo::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoStateInfo::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoStateInfo& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoStateInfo* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoStateInfo::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoStateInfo::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoStateInfo!DeclFileName", []() { return (std::string)TGeoStateInfo::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoStateInfo::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoStateInfo::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoStateInfo!ImplFileLine", []()->int { return TGeoStateInfo::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoStateInfo::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoStateInfo::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoStateInfo!ImplFileName", []() { return (std::string)TGeoStateInfo::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoStateInfo::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoStateInfo::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoStateInfo!Class_Name", []() { return (std::string)TGeoStateInfo::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoStateInfo::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoStateInfo::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoStateInfo!Dictionary", []()->TClass * { return TGeoStateInfo::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoStateInfo::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoStateInfo::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoStateInfo!Class", []()->TClass * { return TGeoStateInfo::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoStateInfo::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoStateInfo::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoStateInfo& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoStateInfo* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoStateInfo::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoStateInfo::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:339:43
    module_.method("TGeoStateInfo!DeclFileLine", []()->int { return TGeoStateInfo::DeclFileLine(); });

    DEBUG_MSG("Adding fNode methods  to provide read access to the field fNode (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:22:14
    // signature to use in the veto list: TGeoStateInfo::fNode
    t.method("fNode", [](const TGeoStateInfo& a) -> TGeoNode * { return a.fNode; }, jlcxx::arg("this"));
    t.method("fNode", [](TGeoStateInfo& a) -> TGeoNode * { return a.fNode; }, jlcxx::arg("this"));
    t.method("fNode", [](const TGeoStateInfo* a) -> TGeoNode * { return a->fNode; }, jlcxx::arg("this"));
    t.method("fNode", [](TGeoStateInfo* a) -> TGeoNode * { return a->fNode; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:22:14
    // signature to use in the veto list: TGeoStateInfo::fNode
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fNode! methods to provide write access to the field fNode (" __HERE__ ")");
    t.method("fNode!", [](TGeoStateInfo& a, TGeoNode * val) -> TGeoNode * { return a.fNode = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fNode! methods to provide write access to the field fNode (" __HERE__ ")");
    t.method("fNode!", [](TGeoStateInfo* a, TGeoNode * val) -> TGeoNode * { return a->fNode = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fAsmCurrent methods  to provide read access to the field fAsmCurrent (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:24:10
    // signature to use in the veto list: TGeoStateInfo::fAsmCurrent
    t.method("fAsmCurrent", [](const TGeoStateInfo& a) -> Int_t { return a.fAsmCurrent; }, jlcxx::arg("this"));
    t.method("fAsmCurrent", [](TGeoStateInfo& a) -> Int_t { return a.fAsmCurrent; }, jlcxx::arg("this"));
    t.method("fAsmCurrent", [](const TGeoStateInfo* a) -> Int_t { return a->fAsmCurrent; }, jlcxx::arg("this"));
    t.method("fAsmCurrent", [](TGeoStateInfo* a) -> Int_t { return a->fAsmCurrent; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:24:10
    // signature to use in the veto list: TGeoStateInfo::fAsmCurrent
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fAsmCurrent! methods to provide write access to the field fAsmCurrent (" __HERE__ ")");
    t.method("fAsmCurrent!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fAsmCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fAsmCurrent! methods to provide write access to the field fAsmCurrent (" __HERE__ ")");
    t.method("fAsmCurrent!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fAsmCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fAsmNext methods  to provide read access to the field fAsmNext (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:25:10
    // signature to use in the veto list: TGeoStateInfo::fAsmNext
    t.method("fAsmNext", [](const TGeoStateInfo& a) -> Int_t { return a.fAsmNext; }, jlcxx::arg("this"));
    t.method("fAsmNext", [](TGeoStateInfo& a) -> Int_t { return a.fAsmNext; }, jlcxx::arg("this"));
    t.method("fAsmNext", [](const TGeoStateInfo* a) -> Int_t { return a->fAsmNext; }, jlcxx::arg("this"));
    t.method("fAsmNext", [](TGeoStateInfo* a) -> Int_t { return a->fAsmNext; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:25:10
    // signature to use in the veto list: TGeoStateInfo::fAsmNext
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fAsmNext! methods to provide write access to the field fAsmNext (" __HERE__ ")");
    t.method("fAsmNext!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fAsmNext = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fAsmNext! methods to provide write access to the field fAsmNext (" __HERE__ ")");
    t.method("fAsmNext!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fAsmNext = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivCurrent methods  to provide read access to the field fDivCurrent (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:27:10
    // signature to use in the veto list: TGeoStateInfo::fDivCurrent
    t.method("fDivCurrent", [](const TGeoStateInfo& a) -> Int_t { return a.fDivCurrent; }, jlcxx::arg("this"));
    t.method("fDivCurrent", [](TGeoStateInfo& a) -> Int_t { return a.fDivCurrent; }, jlcxx::arg("this"));
    t.method("fDivCurrent", [](const TGeoStateInfo* a) -> Int_t { return a->fDivCurrent; }, jlcxx::arg("this"));
    t.method("fDivCurrent", [](TGeoStateInfo* a) -> Int_t { return a->fDivCurrent; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:27:10
    // signature to use in the veto list: TGeoStateInfo::fDivCurrent
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDivCurrent! methods to provide write access to the field fDivCurrent (" __HERE__ ")");
    t.method("fDivCurrent!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fDivCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivCurrent! methods to provide write access to the field fDivCurrent (" __HERE__ ")");
    t.method("fDivCurrent!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fDivCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivNext methods  to provide read access to the field fDivNext (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:28:10
    // signature to use in the veto list: TGeoStateInfo::fDivNext
    t.method("fDivNext", [](const TGeoStateInfo& a) -> Int_t { return a.fDivNext; }, jlcxx::arg("this"));
    t.method("fDivNext", [](TGeoStateInfo& a) -> Int_t { return a.fDivNext; }, jlcxx::arg("this"));
    t.method("fDivNext", [](const TGeoStateInfo* a) -> Int_t { return a->fDivNext; }, jlcxx::arg("this"));
    t.method("fDivNext", [](TGeoStateInfo* a) -> Int_t { return a->fDivNext; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:28:10
    // signature to use in the veto list: TGeoStateInfo::fDivNext
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDivNext! methods to provide write access to the field fDivNext (" __HERE__ ")");
    t.method("fDivNext!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fDivNext = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivNext! methods to provide write access to the field fDivNext (" __HERE__ ")");
    t.method("fDivNext!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fDivNext = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivTrans methods  to provide read access to the field fDivTrans (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:29:20
    // signature to use in the veto list: TGeoStateInfo::fDivTrans
    t.method("fDivTrans", [](const TGeoStateInfo& a) -> const TGeoTranslation& { return a.fDivTrans; }, jlcxx::arg("this"));
    t.method("fDivTrans", [](TGeoStateInfo& a) -> TGeoTranslation& { return a.fDivTrans; }, jlcxx::arg("this"));
    t.method("fDivTrans", [](const TGeoStateInfo* a) -> const TGeoTranslation& { return a->fDivTrans; }, jlcxx::arg("this"));
    t.method("fDivTrans", [](TGeoStateInfo* a) -> TGeoTranslation& { return a->fDivTrans; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:29:20
    // signature to use in the veto list: TGeoStateInfo::fDivTrans
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDivTrans! methods to provide write access to the field fDivTrans (" __HERE__ ")");
    t.method("fDivTrans!", [](TGeoStateInfo& a, const TGeoTranslation& val) -> TGeoTranslation& { return a.fDivTrans = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivTrans! methods to provide write access to the field fDivTrans (" __HERE__ ")");
    t.method("fDivTrans!", [](TGeoStateInfo* a, const TGeoTranslation& val) -> TGeoTranslation& { return a->fDivTrans = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivRot methods  to provide read access to the field fDivRot (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:30:17
    // signature to use in the veto list: TGeoStateInfo::fDivRot
    t.method("fDivRot", [](const TGeoStateInfo& a) -> const TGeoRotation& { return a.fDivRot; }, jlcxx::arg("this"));
    t.method("fDivRot", [](TGeoStateInfo& a) -> TGeoRotation& { return a.fDivRot; }, jlcxx::arg("this"));
    t.method("fDivRot", [](const TGeoStateInfo* a) -> const TGeoRotation& { return a->fDivRot; }, jlcxx::arg("this"));
    t.method("fDivRot", [](TGeoStateInfo* a) -> TGeoRotation& { return a->fDivRot; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:30:17
    // signature to use in the veto list: TGeoStateInfo::fDivRot
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDivRot! methods to provide write access to the field fDivRot (" __HERE__ ")");
    t.method("fDivRot!", [](TGeoStateInfo& a, const TGeoRotation& val) -> TGeoRotation& { return a.fDivRot = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivRot! methods to provide write access to the field fDivRot (" __HERE__ ")");
    t.method("fDivRot!", [](TGeoStateInfo* a, const TGeoRotation& val) -> TGeoRotation& { return a->fDivRot = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivCombi methods  to provide read access to the field fDivCombi (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:31:19
    // signature to use in the veto list: TGeoStateInfo::fDivCombi
    t.method("fDivCombi", [](const TGeoStateInfo& a) -> const TGeoCombiTrans& { return a.fDivCombi; }, jlcxx::arg("this"));
    t.method("fDivCombi", [](TGeoStateInfo& a) -> TGeoCombiTrans& { return a.fDivCombi; }, jlcxx::arg("this"));
    t.method("fDivCombi", [](const TGeoStateInfo* a) -> const TGeoCombiTrans& { return a->fDivCombi; }, jlcxx::arg("this"));
    t.method("fDivCombi", [](TGeoStateInfo* a) -> TGeoCombiTrans& { return a->fDivCombi; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:31:19
    // signature to use in the veto list: TGeoStateInfo::fDivCombi
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDivCombi! methods to provide write access to the field fDivCombi (" __HERE__ ")");
    t.method("fDivCombi!", [](TGeoStateInfo& a, const TGeoCombiTrans& val) -> TGeoCombiTrans& { return a.fDivCombi = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fDivCombi! methods to provide write access to the field fDivCombi (" __HERE__ ")");
    t.method("fDivCombi!", [](TGeoStateInfo* a, const TGeoCombiTrans& val) -> TGeoCombiTrans& { return a->fDivCombi = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxNcandidates methods  to provide read access to the field fVoxNcandidates (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:33:10
    // signature to use in the veto list: TGeoStateInfo::fVoxNcandidates
    t.method("fVoxNcandidates", [](const TGeoStateInfo& a) -> Int_t { return a.fVoxNcandidates; }, jlcxx::arg("this"));
    t.method("fVoxNcandidates", [](TGeoStateInfo& a) -> Int_t { return a.fVoxNcandidates; }, jlcxx::arg("this"));
    t.method("fVoxNcandidates", [](const TGeoStateInfo* a) -> Int_t { return a->fVoxNcandidates; }, jlcxx::arg("this"));
    t.method("fVoxNcandidates", [](TGeoStateInfo* a) -> Int_t { return a->fVoxNcandidates; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:33:10
    // signature to use in the veto list: TGeoStateInfo::fVoxNcandidates
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fVoxNcandidates! methods to provide write access to the field fVoxNcandidates (" __HERE__ ")");
    t.method("fVoxNcandidates!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fVoxNcandidates = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxNcandidates! methods to provide write access to the field fVoxNcandidates (" __HERE__ ")");
    t.method("fVoxNcandidates!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fVoxNcandidates = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxCurrent methods  to provide read access to the field fVoxCurrent (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:34:10
    // signature to use in the veto list: TGeoStateInfo::fVoxCurrent
    t.method("fVoxCurrent", [](const TGeoStateInfo& a) -> Int_t { return a.fVoxCurrent; }, jlcxx::arg("this"));
    t.method("fVoxCurrent", [](TGeoStateInfo& a) -> Int_t { return a.fVoxCurrent; }, jlcxx::arg("this"));
    t.method("fVoxCurrent", [](const TGeoStateInfo* a) -> Int_t { return a->fVoxCurrent; }, jlcxx::arg("this"));
    t.method("fVoxCurrent", [](TGeoStateInfo* a) -> Int_t { return a->fVoxCurrent; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:34:10
    // signature to use in the veto list: TGeoStateInfo::fVoxCurrent
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fVoxCurrent! methods to provide write access to the field fVoxCurrent (" __HERE__ ")");
    t.method("fVoxCurrent!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fVoxCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxCurrent! methods to provide write access to the field fVoxCurrent (" __HERE__ ")");
    t.method("fVoxCurrent!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fVoxCurrent = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxCheckList methods  to provide read access to the field fVoxCheckList (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:35:11
    // signature to use in the veto list: TGeoStateInfo::fVoxCheckList
    t.method("fVoxCheckList", [](const TGeoStateInfo& a) -> Int_t * { return a.fVoxCheckList; }, jlcxx::arg("this"));
    t.method("fVoxCheckList", [](TGeoStateInfo& a) -> Int_t * { return a.fVoxCheckList; }, jlcxx::arg("this"));
    t.method("fVoxCheckList", [](const TGeoStateInfo* a) -> Int_t * { return a->fVoxCheckList; }, jlcxx::arg("this"));
    t.method("fVoxCheckList", [](TGeoStateInfo* a) -> Int_t * { return a->fVoxCheckList; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:35:11
    // signature to use in the veto list: TGeoStateInfo::fVoxCheckList
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fVoxCheckList! methods to provide write access to the field fVoxCheckList (" __HERE__ ")");
    t.method("fVoxCheckList!", [](TGeoStateInfo& a, Int_t * val) -> Int_t * { return a.fVoxCheckList = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxCheckList! methods to provide write access to the field fVoxCheckList (" __HERE__ ")");
    t.method("fVoxCheckList!", [](TGeoStateInfo* a, Int_t * val) -> Int_t * { return a->fVoxCheckList = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxBits1 methods  to provide read access to the field fVoxBits1 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:36:13
    // signature to use in the veto list: TGeoStateInfo::fVoxBits1
    t.method("fVoxBits1", [](const TGeoStateInfo& a) -> UChar_t * { return a.fVoxBits1; }, jlcxx::arg("this"));
    t.method("fVoxBits1", [](TGeoStateInfo& a) -> UChar_t * { return a.fVoxBits1; }, jlcxx::arg("this"));
    t.method("fVoxBits1", [](const TGeoStateInfo* a) -> UChar_t * { return a->fVoxBits1; }, jlcxx::arg("this"));
    t.method("fVoxBits1", [](TGeoStateInfo* a) -> UChar_t * { return a->fVoxBits1; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:36:13
    // signature to use in the veto list: TGeoStateInfo::fVoxBits1
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fVoxBits1! methods to provide write access to the field fVoxBits1 (" __HERE__ ")");
    t.method("fVoxBits1!", [](TGeoStateInfo& a, UChar_t * val) -> UChar_t * { return a.fVoxBits1 = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fVoxBits1! methods to provide write access to the field fVoxBits1 (" __HERE__ ")");
    t.method("fVoxBits1!", [](TGeoStateInfo* a, UChar_t * val) -> UChar_t * { return a->fVoxBits1 = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fBoolSelected methods  to provide read access to the field fBoolSelected (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:42:10
    // signature to use in the veto list: TGeoStateInfo::fBoolSelected
    t.method("fBoolSelected", [](const TGeoStateInfo& a) -> Int_t { return a.fBoolSelected; }, jlcxx::arg("this"));
    t.method("fBoolSelected", [](TGeoStateInfo& a) -> Int_t { return a.fBoolSelected; }, jlcxx::arg("this"));
    t.method("fBoolSelected", [](const TGeoStateInfo* a) -> Int_t { return a->fBoolSelected; }, jlcxx::arg("this"));
    t.method("fBoolSelected", [](TGeoStateInfo* a) -> Int_t { return a->fBoolSelected; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:42:10
    // signature to use in the veto list: TGeoStateInfo::fBoolSelected
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fBoolSelected! methods to provide write access to the field fBoolSelected (" __HERE__ ")");
    t.method("fBoolSelected!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fBoolSelected = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fBoolSelected! methods to provide write access to the field fBoolSelected (" __HERE__ ")");
    t.method("fBoolSelected!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fBoolSelected = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruSeg methods  to provide read access to the field fXtruSeg (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:44:10
    // signature to use in the veto list: TGeoStateInfo::fXtruSeg
    t.method("fXtruSeg", [](const TGeoStateInfo& a) -> Int_t { return a.fXtruSeg; }, jlcxx::arg("this"));
    t.method("fXtruSeg", [](TGeoStateInfo& a) -> Int_t { return a.fXtruSeg; }, jlcxx::arg("this"));
    t.method("fXtruSeg", [](const TGeoStateInfo* a) -> Int_t { return a->fXtruSeg; }, jlcxx::arg("this"));
    t.method("fXtruSeg", [](TGeoStateInfo* a) -> Int_t { return a->fXtruSeg; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:44:10
    // signature to use in the veto list: TGeoStateInfo::fXtruSeg
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fXtruSeg! methods to provide write access to the field fXtruSeg (" __HERE__ ")");
    t.method("fXtruSeg!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fXtruSeg = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruSeg! methods to provide write access to the field fXtruSeg (" __HERE__ ")");
    t.method("fXtruSeg!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fXtruSeg = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruIz methods  to provide read access to the field fXtruIz (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:45:10
    // signature to use in the veto list: TGeoStateInfo::fXtruIz
    t.method("fXtruIz", [](const TGeoStateInfo& a) -> Int_t { return a.fXtruIz; }, jlcxx::arg("this"));
    t.method("fXtruIz", [](TGeoStateInfo& a) -> Int_t { return a.fXtruIz; }, jlcxx::arg("this"));
    t.method("fXtruIz", [](const TGeoStateInfo* a) -> Int_t { return a->fXtruIz; }, jlcxx::arg("this"));
    t.method("fXtruIz", [](TGeoStateInfo* a) -> Int_t { return a->fXtruIz; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:45:10
    // signature to use in the veto list: TGeoStateInfo::fXtruIz
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fXtruIz! methods to provide write access to the field fXtruIz (" __HERE__ ")");
    t.method("fXtruIz!", [](TGeoStateInfo& a, Int_t val) -> Int_t { return a.fXtruIz = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruIz! methods to provide write access to the field fXtruIz (" __HERE__ ")");
    t.method("fXtruIz!", [](TGeoStateInfo* a, Int_t val) -> Int_t { return a->fXtruIz = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruXc methods  to provide read access to the field fXtruXc (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:46:14
    // signature to use in the veto list: TGeoStateInfo::fXtruXc
    t.method("fXtruXc", [](const TGeoStateInfo& a) -> Double_t * { return a.fXtruXc; }, jlcxx::arg("this"));
    t.method("fXtruXc", [](TGeoStateInfo& a) -> Double_t * { return a.fXtruXc; }, jlcxx::arg("this"));
    t.method("fXtruXc", [](const TGeoStateInfo* a) -> Double_t * { return a->fXtruXc; }, jlcxx::arg("this"));
    t.method("fXtruXc", [](TGeoStateInfo* a) -> Double_t * { return a->fXtruXc; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:46:14
    // signature to use in the veto list: TGeoStateInfo::fXtruXc
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fXtruXc! methods to provide write access to the field fXtruXc (" __HERE__ ")");
    t.method("fXtruXc!", [](TGeoStateInfo& a, Double_t * val) -> Double_t * { return a.fXtruXc = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruXc! methods to provide write access to the field fXtruXc (" __HERE__ ")");
    t.method("fXtruXc!", [](TGeoStateInfo* a, Double_t * val) -> Double_t * { return a->fXtruXc = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruYc methods  to provide read access to the field fXtruYc (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:47:14
    // signature to use in the veto list: TGeoStateInfo::fXtruYc
    t.method("fXtruYc", [](const TGeoStateInfo& a) -> Double_t * { return a.fXtruYc; }, jlcxx::arg("this"));
    t.method("fXtruYc", [](TGeoStateInfo& a) -> Double_t * { return a.fXtruYc; }, jlcxx::arg("this"));
    t.method("fXtruYc", [](const TGeoStateInfo* a) -> Double_t * { return a->fXtruYc; }, jlcxx::arg("this"));
    t.method("fXtruYc", [](TGeoStateInfo* a) -> Double_t * { return a->fXtruYc; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:47:14
    // signature to use in the veto list: TGeoStateInfo::fXtruYc
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fXtruYc! methods to provide write access to the field fXtruYc (" __HERE__ ")");
    t.method("fXtruYc!", [](TGeoStateInfo& a, Double_t * val) -> Double_t * { return a.fXtruYc = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruYc! methods to provide write access to the field fXtruYc (" __HERE__ ")");
    t.method("fXtruYc!", [](TGeoStateInfo* a, Double_t * val) -> Double_t * { return a->fXtruYc = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruPoly methods  to provide read access to the field fXtruPoly (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:48:17
    // signature to use in the veto list: TGeoStateInfo::fXtruPoly
    t.method("fXtruPoly", [](const TGeoStateInfo& a) -> TGeoPolygon * { return a.fXtruPoly; }, jlcxx::arg("this"));
    t.method("fXtruPoly", [](TGeoStateInfo& a) -> TGeoPolygon * { return a.fXtruPoly; }, jlcxx::arg("this"));
    t.method("fXtruPoly", [](const TGeoStateInfo* a) -> TGeoPolygon * { return a->fXtruPoly; }, jlcxx::arg("this"));
    t.method("fXtruPoly", [](TGeoStateInfo* a) -> TGeoPolygon * { return a->fXtruPoly; }, jlcxx::arg("this"));
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoStateInfo.h:48:17
    // signature to use in the veto list: TGeoStateInfo::fXtruPoly
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fXtruPoly! methods to provide write access to the field fXtruPoly (" __HERE__ ")");
    t.method("fXtruPoly!", [](TGeoStateInfo& a, TGeoPolygon * val) -> TGeoPolygon * { return a.fXtruPoly = val; }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding fXtruPoly! methods to provide write access to the field fXtruPoly (" __HERE__ ")");
    t.method("fXtruPoly!", [](TGeoStateInfo* a, TGeoPolygon * val) -> TGeoPolygon * { return a->fXtruPoly = val; }, jlcxx::arg("this"), jlcxx::arg("value"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoStateInfo>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoStateInfo(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoStateInfo(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPolygon> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPolygon> : std::false_type { };
template<> struct SuperType<TGeoPolygon> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoPolygon
// signature to use in the veto file: TGeoPolygon
struct JlTGeoPolygon: public Wrapper {

  JlTGeoPolygon(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPolygon (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:19:7
    jlcxx::TypeWrapper<TGeoPolygon>  t = jlModule.add_type<TGeoPolygon>("TGeoPolygon",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPolygon>>(new jlcxx::TypeWrapper<TGeoPolygon>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoPolygon::TGeoPolygon(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:44:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("nvert")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoPolygon::Area() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPolygon::Area()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:48:13
    t.method("Area", [](TGeoPolygon const& a)->Double_t { return a.Area(); }, jlcxx::arg("this"));
    t.method("Area", [](TGeoPolygon const* a)->Double_t { return a->Area(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPolygon::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPolygon::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:49:11
    t.method("Contains", [](TGeoPolygon const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoPolygon const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:50:9
    t.method("Draw", [](TGeoPolygon& a)->void { a.Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoPolygon& a, Option_t * arg0)->void { a.Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Draw", [](TGeoPolygon* a)->void { a->Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoPolygon* a, Option_t * arg0)->void { a->Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::FinishPolygon() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::FinishPolygon()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:51:9
    t.method("FinishPolygon", [](TGeoPolygon& a)->void { a.FinishPolygon(); }, jlcxx::arg("this"));
    t.method("FinishPolygon", [](TGeoPolygon* a)->void { a->FinishPolygon(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoPolygon::GetNvert() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPolygon::GetNvert()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:52:10
    t.method("GetNvert", [](TGeoPolygon const& a)->Int_t { return a.GetNvert(); }, jlcxx::arg("this"));
    t.method("GetNvert", [](TGeoPolygon const* a)->Int_t { return a->GetNvert(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoPolygon::GetNconvex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPolygon::GetNconvex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:53:10
    t.method("GetNconvex", [](TGeoPolygon const& a)->Int_t { return a.GetNconvex(); }, jlcxx::arg("this"));
    t.method("GetNconvex", [](TGeoPolygon const* a)->Int_t { return a->GetNconvex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoPolygon::GetX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoPolygon::GetX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:54:14
    t.method("GetX", [](TGeoPolygon& a)->Double_t * { return a.GetX(); }, jlcxx::arg("this"));
    t.method("GetX", [](TGeoPolygon* a)->Double_t * { return a->GetX(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoPolygon::GetY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoPolygon::GetY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:55:14
    t.method("GetY", [](TGeoPolygon& a)->Double_t * { return a.GetY(); }, jlcxx::arg("this"));
    t.method("GetY", [](TGeoPolygon* a)->Double_t * { return a->GetY(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::GetVertices(Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::GetVertices(Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:56:9
    t.method("GetVertices", [](TGeoPolygon const& a, Double_t * arg0, Double_t * arg1)->void { a.GetVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));
    t.method("GetVertices", [](TGeoPolygon const* a, Double_t * arg0, Double_t * arg1)->void { a->GetVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::GetConvexVertices(Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::GetConvexVertices(Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:57:9
    t.method("GetConvexVertices", [](TGeoPolygon const& a, Double_t * arg0, Double_t * arg1)->void { a.GetConvexVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));
    t.method("GetConvexVertices", [](TGeoPolygon const* a, Double_t * arg0, Double_t * arg1)->void { a->GetConvexVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPolygon::IsClockwise() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPolygon::IsClockwise()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:58:11
    t.method("IsClockwise", [](TGeoPolygon const& a)->Bool_t { return a.IsClockwise(); }, jlcxx::arg("this"));
    t.method("IsClockwise", [](TGeoPolygon const* a)->Bool_t { return a->IsClockwise(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPolygon::IsConvex() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPolygon::IsConvex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:59:11
    t.method("IsConvex", [](TGeoPolygon const& a)->Bool_t { return a.IsConvex(); }, jlcxx::arg("this"));
    t.method("IsConvex", [](TGeoPolygon const* a)->Bool_t { return a->IsConvex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPolygon::IsFinished() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPolygon::IsFinished()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:60:11
    t.method("IsFinished", [](TGeoPolygon const& a)->Bool_t { return a.IsFinished(); }, jlcxx::arg("this"));
    t.method("IsFinished", [](TGeoPolygon const* a)->Bool_t { return a->IsFinished(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPolygon::IsIllegalCheck() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPolygon::IsIllegalCheck()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:61:11
    t.method("IsIllegalCheck", [](TGeoPolygon const& a)->Bool_t { return a.IsIllegalCheck(); }, jlcxx::arg("this"));
    t.method("IsIllegalCheck", [](TGeoPolygon const* a)->Bool_t { return a->IsIllegalCheck(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoPolygon::Safety(const Double_t *, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoPolygon::Safety(const Double_t *, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:62:13
    t.method("Safety", [](TGeoPolygon const& a, const Double_t * arg0, Int_t & arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("isegment"));
    t.method("Safety", [](TGeoPolygon const* a, const Double_t * arg0, Int_t & arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("isegment"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::SetConvex(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::SetConvex(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:63:9
    t.method("SetConvex", [](TGeoPolygon& a)->void { a.SetConvex(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetConvex", [](TGeoPolygon& a, Bool_t arg0)->void { a.SetConvex(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetConvex", [](TGeoPolygon* a)->void { a->SetConvex(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetConvex", [](TGeoPolygon* a, Bool_t arg0)->void { a->SetConvex(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::SetXY(Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::SetXY(Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:64:9
    t.method("SetXY", [](TGeoPolygon& a, Double_t * arg0, Double_t * arg1)->void { a.SetXY(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));
    t.method("SetXY", [](TGeoPolygon* a, Double_t * arg0, Double_t * arg1)->void { a->SetXY(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::SetNextIndex(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::SetNextIndex(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoPolygon.h:65:9
    t.method("SetNextIndex", [](TGeoPolygon& a)->void { a.SetNextIndex(); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("SetNextIndex", [](TGeoPolygon& a, Int_t arg0)->void { a.SetNextIndex(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("SetNextIndex", [](TGeoPolygon* a)->void { a->SetNextIndex(); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("SetNextIndex", [](TGeoPolygon* a, Int_t arg0)->void { a->SetNextIndex(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoPolygon::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPolygon::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoPolygon!Class_Version", []()->Version_t { return TGeoPolygon::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPolygon::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPolygon::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoPolygon const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoPolygon const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoPolygon& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoPolygon* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoPolygon::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPolygon::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoPolygon!DeclFileName", []() { return (std::string)TGeoPolygon::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPolygon::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPolygon::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoPolygon!ImplFileLine", []()->int { return TGeoPolygon::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPolygon::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPolygon::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoPolygon!ImplFileName", []() { return (std::string)TGeoPolygon::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPolygon::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPolygon::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoPolygon!Class_Name", []() { return (std::string)TGeoPolygon::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPolygon::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPolygon::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoPolygon!Dictionary", []()->TClass * { return TGeoPolygon::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPolygon::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPolygon::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoPolygon!Class", []()->TClass * { return TGeoPolygon::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoPolygon::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPolygon::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoPolygon& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoPolygon* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoPolygon::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPolygon::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoPolygon!DeclFileLine", []()->int { return TGeoPolygon::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPolygon>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPolygon(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPolygon(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoCacheState> : std::false_type { };
  template<> struct DefaultConstructible<TGeoCacheState> : std::false_type { };
template<> struct SuperType<TGeoCacheState> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoCacheState
// signature to use in the veto file: TGeoCacheState
struct JlTGeoCacheState: public Wrapper {

  JlTGeoCacheState(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoCacheState (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:28:7
    jlcxx::TypeWrapper<TGeoCacheState>  t = jlModule.add_type<TGeoCacheState>("TGeoCacheState",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoCacheState>>(new jlcxx::TypeWrapper<TGeoCacheState>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoCacheState::TGeoCacheState(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:47:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("capacity")    );

    DEBUG_MSG("Adding wrapper for void TGeoCacheState::SetState(Int_t, Int_t, Int_t, Bool_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCacheState::SetState(Int_t, Int_t, Int_t, Bool_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:50:9
    t.method("SetState", [](TGeoCacheState& a, Int_t arg0, Int_t arg1, Int_t arg2, Bool_t arg3)->void { a.SetState(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("startlevel"), jlcxx::arg("nmany"), jlcxx::arg("ovlp"));
    t.method("SetState", [](TGeoCacheState& a, Int_t arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t * arg4)->void { a.SetState(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("startlevel"), jlcxx::arg("nmany"), jlcxx::arg("ovlp"), jlcxx::arg("point"));
    t.method("SetState", [](TGeoCacheState* a, Int_t arg0, Int_t arg1, Int_t arg2, Bool_t arg3)->void { a->SetState(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("startlevel"), jlcxx::arg("nmany"), jlcxx::arg("ovlp"));
    t.method("SetState", [](TGeoCacheState* a, Int_t arg0, Int_t arg1, Int_t arg2, Bool_t arg3, Double_t * arg4)->void { a->SetState(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("startlevel"), jlcxx::arg("nmany"), jlcxx::arg("ovlp"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCacheState::GetState(Int_t &, Int_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCacheState::GetState(Int_t &, Int_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:51:11
    t.method("GetState", [](TGeoCacheState const& a, Int_t & arg0, Int_t & arg1, Double_t * arg2)->Bool_t { return a.GetState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("nmany"), jlcxx::arg("point"));
    t.method("GetState", [](TGeoCacheState const* a, Int_t & arg0, Int_t & arg1, Double_t * arg2)->Bool_t { return a->GetState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("level"), jlcxx::arg("nmany"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoCacheState::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoCacheState::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoCacheState!Class_Version", []()->Version_t { return TGeoCacheState::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCacheState::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCacheState::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoCacheState const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoCacheState const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCacheState::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCacheState::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoCacheState& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoCacheState* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoCacheState::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCacheState::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoCacheState!DeclFileName", []() { return (std::string)TGeoCacheState::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoCacheState::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCacheState::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoCacheState!ImplFileLine", []()->int { return TGeoCacheState::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCacheState::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCacheState::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoCacheState!ImplFileName", []() { return (std::string)TGeoCacheState::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCacheState::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCacheState::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoCacheState!Class_Name", []() { return (std::string)TGeoCacheState::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCacheState::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCacheState::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoCacheState!Dictionary", []()->TClass * { return TGeoCacheState::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCacheState::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCacheState::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoCacheState!Class", []()->TClass * { return TGeoCacheState::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoCacheState::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCacheState::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoCacheState& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoCacheState* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoCacheState::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCacheState::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoCacheState!DeclFileLine", []()->int { return TGeoCacheState::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoCacheState>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoCacheState(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoCacheState(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoNodeCache> : std::false_type { };
  template<> struct DefaultConstructible<TGeoNodeCache> : std::false_type { };
template<> struct SuperType<TGeoNodeCache> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoNodeCache
// signature to use in the veto file: TGeoNodeCache
struct JlTGeoNodeCache: public Wrapper {

  JlTGeoNodeCache(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoNodeCache (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:56:7
    jlcxx::TypeWrapper<TGeoNodeCache>  t = jlModule.add_type<TGeoNodeCache>("TGeoNodeCache",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoNodeCache>>(new jlcxx::TypeWrapper<TGeoNodeCache>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::TGeoNodeCache(TGeoNode *, Bool_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:84:4
    t.constructor<TGeoNode *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("top")    );
    t.constructor<TGeoNode *, Bool_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("top"), jlcxx::arg("nodeid")    );
    t.constructor<TGeoNode *, Bool_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("top"), jlcxx::arg("nodeid"), jlcxx::arg("capacity")    );

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::BuildIdArray() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::BuildIdArray()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:87:9
    t.method("BuildIdArray", [](TGeoNodeCache& a)->void { a.BuildIdArray(); }, jlcxx::arg("this"));
    t.method("BuildIdArray", [](TGeoNodeCache* a)->void { a->BuildIdArray(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::BuildInfoBranch() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::BuildInfoBranch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:88:9
    t.method("BuildInfoBranch", [](TGeoNodeCache& a)->void { a.BuildInfoBranch(); }, jlcxx::arg("this"));
    t.method("BuildInfoBranch", [](TGeoNodeCache* a)->void { a->BuildInfoBranch(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::CdNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::CdNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:89:9
    t.method("CdNode", [](TGeoNodeCache& a, Int_t arg0)->void { a.CdNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeid"));
    t.method("CdNode", [](TGeoNodeCache* a, Int_t arg0)->void { a->CdNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeid"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::CdDown(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::CdDown(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:90:11
    t.method("CdDown", [](TGeoNodeCache& a, Int_t arg0)->Bool_t { return a.CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("CdDown", [](TGeoNodeCache* a, Int_t arg0)->Bool_t { return a->CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::CdDown(TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::CdDown(TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:91:11
    t.method("CdDown", [](TGeoNodeCache& a, TGeoNode * arg0)->Bool_t { return a.CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));
    t.method("CdDown", [](TGeoNodeCache* a, TGeoNode * arg0)->Bool_t { return a->CdDown(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::CdTop() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::CdTop()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:92:9
    t.method("CdTop", [](TGeoNodeCache& a)->void { a.CdTop(); }, jlcxx::arg("this"));
    t.method("CdTop", [](TGeoNodeCache* a)->void { a->CdTop(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::CdUp() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::CdUp()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:97:9
    t.method("CdUp", [](TGeoNodeCache& a)->void { a.CdUp(); }, jlcxx::arg("this"));
    t.method("CdUp", [](TGeoNodeCache* a)->void { a->CdUp(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::FillIdBranch(const Int_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::FillIdBranch(const Int_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:98:9
    t.method("FillIdBranch", [](TGeoNodeCache& a, const Int_t * arg0)->void { a.FillIdBranch(arg0); }, jlcxx::arg("this"), jlcxx::arg("br"));
    t.method("FillIdBranch", [](TGeoNodeCache& a, const Int_t * arg0, Int_t arg1)->void { a.FillIdBranch(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("br"), jlcxx::arg("startlevel"));
    t.method("FillIdBranch", [](TGeoNodeCache* a, const Int_t * arg0)->void { a->FillIdBranch(arg0); }, jlcxx::arg("this"), jlcxx::arg("br"));
    t.method("FillIdBranch", [](TGeoNodeCache* a, const Int_t * arg0, Int_t arg1)->void { a->FillIdBranch(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("br"), jlcxx::arg("startlevel"));

    DEBUG_MSG("Adding wrapper for const Int_t * TGeoNodeCache::GetIdBranch() (" __HERE__ ")");
    // signature to use in the veto list: const Int_t * TGeoNodeCache::GetIdBranch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:103:17
    t.method("GetIdBranch", [](TGeoNodeCache const& a)->const Int_t * { return a.GetIdBranch(); }, jlcxx::arg("this"));
    t.method("GetIdBranch", [](TGeoNodeCache const* a)->const Int_t * { return a->GetIdBranch(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void * TGeoNodeCache::GetBranch() (" __HERE__ ")");
    // signature to use in the veto list: void * TGeoNodeCache::GetBranch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:104:10
    t.method("GetBranch", [](TGeoNodeCache const& a)->void * { return a.GetBranch(); }, jlcxx::arg("this"));
    t.method("GetBranch", [](TGeoNodeCache const* a)->void * { return a->GetBranch(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::GetBranchNames(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::GetBranchNames(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:105:9
    t.method("GetBranchNames", [](TGeoNodeCache const& a, Int_t * arg0)->void { a.GetBranchNames(arg0); }, jlcxx::arg("this"), jlcxx::arg("names"));
    t.method("GetBranchNames", [](TGeoNodeCache const* a, Int_t * arg0)->void { a->GetBranchNames(arg0); }, jlcxx::arg("this"), jlcxx::arg("names"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::GetBranchNumbers(Int_t *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::GetBranchNumbers(Int_t *, Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:106:9
    t.method("GetBranchNumbers", [](TGeoNodeCache const& a, Int_t * arg0, Int_t * arg1)->void { a.GetBranchNumbers(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("copyNumbers"), jlcxx::arg("volumeNumbers"));
    t.method("GetBranchNumbers", [](TGeoNodeCache const* a, Int_t * arg0, Int_t * arg1)->void { a->GetBranchNumbers(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("copyNumbers"), jlcxx::arg("volumeNumbers"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::GetBranchOnlys(Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::GetBranchOnlys(Int_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:107:9
    t.method("GetBranchOnlys", [](TGeoNodeCache const& a, Int_t * arg0)->void { a.GetBranchOnlys(arg0); }, jlcxx::arg("this"), jlcxx::arg("isonly"));
    t.method("GetBranchOnlys", [](TGeoNodeCache const* a, Int_t * arg0)->void { a->GetBranchOnlys(arg0); }, jlcxx::arg("this"), jlcxx::arg("isonly"));

    DEBUG_MSG("Adding wrapper for void * TGeoNodeCache::GetMatrices() (" __HERE__ ")");
    // signature to use in the veto list: void * TGeoNodeCache::GetMatrices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:108:10
    t.method("GetMatrices", [](TGeoNodeCache const& a)->void * { return a.GetMatrices(); }, jlcxx::arg("this"));
    t.method("GetMatrices", [](TGeoNodeCache const* a)->void * { return a->GetMatrices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNodeCache::GetCurrentMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNodeCache::GetCurrentMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:109:17
    t.method("GetCurrentMatrix", [](TGeoNodeCache const& a)->TGeoHMatrix * { return a.GetCurrentMatrix(); }, jlcxx::arg("this"));
    t.method("GetCurrentMatrix", [](TGeoNodeCache const* a)->TGeoHMatrix * { return a->GetCurrentMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNodeCache::GetCurrentNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNodeCache::GetCurrentNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:110:10
    t.method("GetCurrentNodeId", [](TGeoNodeCache const& a)->Int_t { return a.GetCurrentNodeId(); }, jlcxx::arg("this"));
    t.method("GetCurrentNodeId", [](TGeoNodeCache const* a)->Int_t { return a->GetCurrentNodeId(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNodeCache::GetMother(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNodeCache::GetMother(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:111:14
    t.method("GetMother", [](TGeoNodeCache const& a)->TGeoNode * { return a.GetMother(); }, jlcxx::arg("this"));
    t.method("GetMother", [](TGeoNodeCache const& a, Int_t arg0)->TGeoNode * { return a.GetMother(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("GetMother", [](TGeoNodeCache const* a)->TGeoNode * { return a->GetMother(); }, jlcxx::arg("this"));
    t.method("GetMother", [](TGeoNodeCache const* a, Int_t arg0)->TGeoNode * { return a->GetMother(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoNodeCache::GetMotherMatrix(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoNodeCache::GetMotherMatrix(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:112:17
    t.method("GetMotherMatrix", [](TGeoNodeCache const& a)->TGeoHMatrix * { return a.GetMotherMatrix(); }, jlcxx::arg("this"));
    t.method("GetMotherMatrix", [](TGeoNodeCache const& a, Int_t arg0)->TGeoHMatrix * { return a.GetMotherMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("GetMotherMatrix", [](TGeoNodeCache const* a)->TGeoHMatrix * { return a->GetMotherMatrix(); }, jlcxx::arg("this"));
    t.method("GetMotherMatrix", [](TGeoNodeCache const* a, Int_t arg0)->TGeoHMatrix * { return a->GetMotherMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNodeCache::GetNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNodeCache::GetNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:116:14
    t.method("GetNode", [](TGeoNodeCache const& a)->TGeoNode * { return a.GetNode(); }, jlcxx::arg("this"));
    t.method("GetNode", [](TGeoNodeCache const* a)->TGeoNode * { return a->GetNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoNodeCache::GetTopNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoNodeCache::GetTopNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:117:14
    t.method("GetTopNode", [](TGeoNodeCache const& a)->TGeoNode * { return a.GetTopNode(); }, jlcxx::arg("this"));
    t.method("GetTopNode", [](TGeoNodeCache const* a)->TGeoNode * { return a->GetTopNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoStateInfo * TGeoNodeCache::GetInfo() (" __HERE__ ")");
    // signature to use in the veto list: TGeoStateInfo * TGeoNodeCache::GetInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:118:19
    t.method("GetInfo", [](TGeoNodeCache& a)->TGeoStateInfo * { return a.GetInfo(); }, jlcxx::arg("this"));
    t.method("GetInfo", [](TGeoNodeCache* a)->TGeoStateInfo * { return a->GetInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoStateInfo * TGeoNodeCache::GetMakePWInfo(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoStateInfo * TGeoNodeCache::GetMakePWInfo(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:119:19
    t.method("GetMakePWInfo", [](TGeoNodeCache& a, Int_t arg0)->TGeoStateInfo * { return a.GetMakePWInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("nd"));
    t.method("GetMakePWInfo", [](TGeoNodeCache* a, Int_t arg0)->TGeoStateInfo * { return a->GetMakePWInfo(arg0); }, jlcxx::arg("this"), jlcxx::arg("nd"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::ReleaseInfo() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::ReleaseInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:120:9
    t.method("ReleaseInfo", [](TGeoNodeCache& a)->void { a.ReleaseInfo(); }, jlcxx::arg("this"));
    t.method("ReleaseInfo", [](TGeoNodeCache* a)->void { a->ReleaseInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNodeCache::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNodeCache::GetLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:121:10
    t.method("GetLevel", [](TGeoNodeCache const& a)->Int_t { return a.GetLevel(); }, jlcxx::arg("this"));
    t.method("GetLevel", [](TGeoNodeCache const* a)->Int_t { return a->GetLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNodeCache::GetPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNodeCache::GetPath()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:122:16
    t.method("GetPath", [](TGeoNodeCache& a) { return (std::string)a.GetPath(); }, jlcxx::arg("this"));
    t.method("GetPath", [](TGeoNodeCache* a) { return (std::string)a->GetPath(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNodeCache::GetStackLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNodeCache::GetStackLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:123:10
    t.method("GetStackLevel", [](TGeoNodeCache const& a)->Int_t { return a.GetStackLevel(); }, jlcxx::arg("this"));
    t.method("GetStackLevel", [](TGeoNodeCache const* a)->Int_t { return a->GetStackLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNodeCache::GetNodeId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNodeCache::GetNodeId()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:124:10
    t.method("GetNodeId", [](TGeoNodeCache const& a)->Int_t { return a.GetNodeId(); }, jlcxx::arg("this"));
    t.method("GetNodeId", [](TGeoNodeCache const* a)->Int_t { return a->GetNodeId(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::HasIdArray() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::HasIdArray()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:125:11
    t.method("HasIdArray", [](TGeoNodeCache const& a)->Bool_t { return a.HasIdArray(); }, jlcxx::arg("this"));
    t.method("HasIdArray", [](TGeoNodeCache const* a)->Bool_t { return a->HasIdArray(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::IsDummy() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::IsDummy()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:126:11
    t.method("IsDummy", [](TGeoNodeCache const& a)->Bool_t { return a.IsDummy(); }, jlcxx::arg("this"));
    t.method("IsDummy", [](TGeoNodeCache const* a)->Bool_t { return a->IsDummy(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:128:9
    t.method("LocalToMaster", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMaster", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:129:9
    t.method("MasterToLocal", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocal", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:130:9
    t.method("LocalToMasterVect", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterVect", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:131:9
    t.method("MasterToLocalVect", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalVect", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:132:9
    t.method("LocalToMasterBomb", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterBomb", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:133:9
    t.method("MasterToLocalBomb", [](TGeoNodeCache const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalBomb", [](TGeoNodeCache const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoNodeCache::PushState(Bool_t, Int_t, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoNodeCache::PushState(Bool_t, Int_t, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:134:10
    t.method("PushState", [](TGeoNodeCache& a, Bool_t arg0)->Int_t { return a.PushState(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("PushState", [](TGeoNodeCache& a, Bool_t arg0, Int_t arg1)->Int_t { return a.PushState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"));
    t.method("PushState", [](TGeoNodeCache& a, Bool_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a.PushState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"), jlcxx::arg("startlevel"));
    t.method("PushState", [](TGeoNodeCache& a, Bool_t arg0, Int_t arg1, Int_t arg2, Double_t * arg3)->Int_t { return a.PushState(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"), jlcxx::arg("startlevel"), jlcxx::arg("point"));
    t.method("PushState", [](TGeoNodeCache* a, Bool_t arg0)->Int_t { return a->PushState(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("PushState", [](TGeoNodeCache* a, Bool_t arg0, Int_t arg1)->Int_t { return a->PushState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"));
    t.method("PushState", [](TGeoNodeCache* a, Bool_t arg0, Int_t arg1, Int_t arg2)->Int_t { return a->PushState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"), jlcxx::arg("startlevel"));
    t.method("PushState", [](TGeoNodeCache* a, Bool_t arg0, Int_t arg1, Int_t arg2, Double_t * arg3)->Int_t { return a->PushState(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("ntmany"), jlcxx::arg("startlevel"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::PopState(Int_t &, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::PopState(Int_t &, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:135:11
    t.method("PopState", [](TGeoNodeCache& a, Int_t & arg0)->Bool_t { return a.PopState(arg0); }, jlcxx::arg("this"), jlcxx::arg("nmany"));
    t.method("PopState", [](TGeoNodeCache& a, Int_t & arg0, Double_t * arg1)->Bool_t { return a.PopState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("point"));
    t.method("PopState", [](TGeoNodeCache* a, Int_t & arg0)->Bool_t { return a->PopState(arg0); }, jlcxx::arg("this"), jlcxx::arg("nmany"));
    t.method("PopState", [](TGeoNodeCache* a, Int_t & arg0, Double_t * arg1)->Bool_t { return a->PopState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::PopState(Int_t &, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::PopState(Int_t &, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:136:11
    t.method("PopState", [](TGeoNodeCache& a, Int_t & arg0, Int_t arg1)->Bool_t { return a.PopState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("level"));
    t.method("PopState", [](TGeoNodeCache& a, Int_t & arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a.PopState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("level"), jlcxx::arg("point"));
    t.method("PopState", [](TGeoNodeCache* a, Int_t & arg0, Int_t arg1)->Bool_t { return a->PopState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("level"));
    t.method("PopState", [](TGeoNodeCache* a, Int_t & arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a->PopState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("level"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::PopDummy(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::PopDummy(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:137:9
    t.method("PopDummy", [](TGeoNodeCache& a)->void { a.PopDummy(); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNodeCache& a, Int_t arg0)->void { a.PopDummy(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNodeCache* a)->void { a->PopDummy(); }, jlcxx::arg("this"), jlcxx::arg("ipop"));
    t.method("PopDummy", [](TGeoNodeCache* a, Int_t arg0)->void { a->PopDummy(arg0); }, jlcxx::arg("this"), jlcxx::arg("ipop"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::Refresh() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::Refresh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:138:9
    t.method("Refresh", [](TGeoNodeCache& a)->void { a.Refresh(); }, jlcxx::arg("this"));
    t.method("Refresh", [](TGeoNodeCache* a)->void { a->Refresh(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoNodeCache::RestoreState(Int_t &, TGeoCacheState *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoNodeCache::RestoreState(Int_t &, TGeoCacheState *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCache.h:143:11
    t.method("RestoreState", [](TGeoNodeCache& a, Int_t & arg0, TGeoCacheState * arg1)->Bool_t { return a.RestoreState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("state"));
    t.method("RestoreState", [](TGeoNodeCache& a, Int_t & arg0, TGeoCacheState * arg1, Double_t * arg2)->Bool_t { return a.RestoreState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("state"), jlcxx::arg("point"));
    t.method("RestoreState", [](TGeoNodeCache* a, Int_t & arg0, TGeoCacheState * arg1)->Bool_t { return a->RestoreState(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("state"));
    t.method("RestoreState", [](TGeoNodeCache* a, Int_t & arg0, TGeoCacheState * arg1, Double_t * arg2)->Bool_t { return a->RestoreState(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nmany"), jlcxx::arg("state"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoNodeCache::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoNodeCache::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoNodeCache!Class_Version", []()->Version_t { return TGeoNodeCache::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNodeCache::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNodeCache::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoNodeCache const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoNodeCache const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoNodeCache& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoNodeCache* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNodeCache::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNodeCache::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoNodeCache!DeclFileName", []() { return (std::string)TGeoNodeCache::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoNodeCache::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNodeCache::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoNodeCache!ImplFileLine", []()->int { return TGeoNodeCache::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNodeCache::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNodeCache::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoNodeCache!ImplFileName", []() { return (std::string)TGeoNodeCache::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNodeCache::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNodeCache::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoNodeCache!Class_Name", []() { return (std::string)TGeoNodeCache::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNodeCache::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNodeCache::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoNodeCache!Dictionary", []()->TClass * { return TGeoNodeCache::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNodeCache::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNodeCache::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoNodeCache!Class", []()->TClass * { return TGeoNodeCache::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoNodeCache::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNodeCache::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoNodeCache& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoNodeCache* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoNodeCache::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNodeCache::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoNodeCache!DeclFileLine", []()->int { return TGeoNodeCache::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoNodeCache>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoNodeCache(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoNodeCache(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoCompositeShape> : std::false_type { };
  template<> struct DefaultConstructible<TGeoCompositeShape> : std::false_type { };
template<> struct SuperType<TGeoCompositeShape> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoCompositeShape
// signature to use in the veto file: TGeoCompositeShape
struct JlTGeoCompositeShape: public Wrapper {

  JlTGeoCompositeShape(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoCompositeShape (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:27:7
    jlcxx::TypeWrapper<TGeoCompositeShape>  t = jlModule.add_type<TGeoCompositeShape>("TGeoCompositeShape",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoCompositeShape>>(new jlcxx::TypeWrapper<TGeoCompositeShape>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::TGeoCompositeShape(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:39:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("expression")    );


    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::TGeoCompositeShape(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:40:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("expression")    );


    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::TGeoCompositeShape(const char *, TGeoBoolNode *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:41:4
    t.constructor<const char *, TGeoBoolNode *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("node")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoCompositeShape::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCompositeShape::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:45:13
    t.method("Capacity", [](TGeoCompositeShape const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoCompositeShape const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:46:9
    t.method("ClearThreadData", [](TGeoCompositeShape const& a)->void { a.ClearThreadData(); }, jlcxx::arg("this"));
    t.method("ClearThreadData", [](TGeoCompositeShape const* a)->void { a->ClearThreadData(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:47:9
    t.method("CreateThreadData", [](TGeoCompositeShape& a, Int_t arg0)->void { a.CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));
    t.method("CreateThreadData", [](TGeoCompositeShape* a, Int_t arg0)->void { a->CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:48:9
    t.method("ComputeBBox", [](TGeoCompositeShape& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoCompositeShape* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:49:9
    t.method("ComputeNormal", [](TGeoCompositeShape& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoCompositeShape* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:50:9
    t.method("ComputeNormal_v", [](TGeoCompositeShape& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoCompositeShape* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCompositeShape::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCompositeShape::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:51:11
    t.method("Contains", [](TGeoCompositeShape const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoCompositeShape const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:52:9
    t.method("Contains_v", [](TGeoCompositeShape const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoCompositeShape const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCompositeShape::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCompositeShape::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:53:10
    t.method("DistancetoPrimitive", [](TGeoCompositeShape& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoCompositeShape* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCompositeShape::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCompositeShape::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:54:13
    t.method("DistFromInside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:56:9
    t.method("DistFromInside_v", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCompositeShape::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCompositeShape::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:58:13
    t.method("DistFromOutside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:60:9
    t.method("DistFromOutside_v", [](TGeoCompositeShape const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoCompositeShape const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoCompositeShape::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoCompositeShape::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:63:4
    t.method("Divide", [](TGeoCompositeShape& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoCompositeShape* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoBoolNode * TGeoCompositeShape::GetBoolNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoBoolNode * TGeoCompositeShape::GetBoolNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:64:18
    t.method("GetBoolNode", [](TGeoCompositeShape const& a)->TGeoBoolNode * { return a.GetBoolNode(); }, jlcxx::arg("this"));
    t.method("GetBoolNode", [](TGeoCompositeShape const* a)->TGeoBoolNode * { return a->GetBoolNode(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:65:9
    t.method("GetBoundingCylinder", [](TGeoCompositeShape const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("GetBoundingCylinder", [](TGeoCompositeShape const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoCompositeShape::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoCompositeShape::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:66:15
    t.method("GetMakeRuntimeShape", [](TGeoCompositeShape const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetMakeRuntimeShape", [](TGeoCompositeShape const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:67:9
    t.method("GetMeshNumbers", [](TGeoCompositeShape const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoCompositeShape const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoCompositeShape::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoCompositeShape::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:68:10
    t.method("GetNmeshVertices", [](TGeoCompositeShape const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoCompositeShape const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCompositeShape::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCompositeShape::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:69:11
    t.method("GetPointsOnSegments", [](TGeoCompositeShape const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetPointsOnSegments", [](TGeoCompositeShape const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:70:9
    t.method("InspectShape", [](TGeoCompositeShape const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoCompositeShape const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCompositeShape::IsComposite() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCompositeShape::IsComposite()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:71:11
    t.method("IsComposite", [](TGeoCompositeShape const& a)->Bool_t { return a.IsComposite(); }, jlcxx::arg("this"));
    t.method("IsComposite", [](TGeoCompositeShape const* a)->Bool_t { return a->IsComposite(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCompositeShape::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCompositeShape::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:72:11
    t.method("IsCylType", [](TGeoCompositeShape const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoCompositeShape const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::MakeNode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::MakeNode(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:73:9
    t.method("MakeNode", [](TGeoCompositeShape& a, const char * arg0)->void { a.MakeNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("expression"));
    t.method("MakeNode", [](TGeoCompositeShape* a, const char * arg0)->void { a->MakeNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("expression"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCompositeShape::PaintComposite(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCompositeShape::PaintComposite(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:74:19
    t.method("PaintComposite", [](TGeoCompositeShape const& a)->Bool_t { return a.PaintComposite(); }, jlcxx::arg("this"));
    t.method("PaintComposite", [](TGeoCompositeShape const& a, Option_t * arg0)->Bool_t { return a.PaintComposite(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("PaintComposite", [](TGeoCompositeShape const* a)->Bool_t { return a->PaintComposite(); }, jlcxx::arg("this"));
    t.method("PaintComposite", [](TGeoCompositeShape const* a, Option_t * arg0)->Bool_t { return a->PaintComposite(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::RegisterYourself() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::RegisterYourself()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:75:9
    t.method("RegisterYourself", [](TGeoCompositeShape& a)->void { a.RegisterYourself(); }, jlcxx::arg("this"));
    t.method("RegisterYourself", [](TGeoCompositeShape* a)->void { a->RegisterYourself(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoCompositeShape::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoCompositeShape::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:76:13
    t.method("Safety", [](TGeoCompositeShape const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCompositeShape const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoCompositeShape const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoCompositeShape const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:77:9
    t.method("Safety_v", [](TGeoCompositeShape const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoCompositeShape const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:79:9
    t.method("SetDimensions", [](TGeoCompositeShape& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetDimensions", [](TGeoCompositeShape* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:80:9
    t.method("SetPoints", [](TGeoCompositeShape const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCompositeShape const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:81:9
    t.method("SetPoints", [](TGeoCompositeShape const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoCompositeShape const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoCompositeShape.h:82:9
    t.method("Sizeof3D", [](TGeoCompositeShape const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoCompositeShape const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoCompositeShape::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoCompositeShape::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoCompositeShape!Class_Version", []()->Version_t { return TGeoCompositeShape::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCompositeShape::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCompositeShape::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoCompositeShape const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoCompositeShape const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoCompositeShape& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoCompositeShape* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoCompositeShape::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCompositeShape::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoCompositeShape!DeclFileName", []() { return (std::string)TGeoCompositeShape::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoCompositeShape::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCompositeShape::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoCompositeShape!ImplFileLine", []()->int { return TGeoCompositeShape::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCompositeShape::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCompositeShape::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoCompositeShape!ImplFileName", []() { return (std::string)TGeoCompositeShape::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCompositeShape::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCompositeShape::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoCompositeShape!Class_Name", []() { return (std::string)TGeoCompositeShape::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCompositeShape::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCompositeShape::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoCompositeShape!Dictionary", []()->TClass * { return TGeoCompositeShape::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCompositeShape::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCompositeShape::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoCompositeShape!Class", []()->TClass * { return TGeoCompositeShape::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoCompositeShape::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCompositeShape::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoCompositeShape& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoCompositeShape* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoCompositeShape::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCompositeShape::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoCompositeShape!DeclFileLine", []()->int { return TGeoCompositeShape::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoCompositeShape>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoCompositeShape(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoCompositeShape(module));
}
