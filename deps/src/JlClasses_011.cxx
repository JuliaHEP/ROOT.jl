// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TBranch> : std::false_type { };
  template<> struct DefaultConstructible<TBranch> : std::false_type { };
template<> struct SuperType<TBranch> { typedef TNamed type; };
}

// Class generating the wrapper for type TBranch
// signature to use in the veto file: TBranch
struct JlTBranch: public Wrapper {

  JlTBranch(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TBranch (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:93:7
    jlcxx::TypeWrapper<TBranch>  t = jlModule.add_type<TBranch>("TBranch",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TBranch>>(new jlcxx::TypeWrapper<TBranch>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TBranch::TBranch(TTree *, const char *, void *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:194:4
    t.constructor<TTree *, const char *, void *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TTree *, const char *, void *, const char *, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TTree *, const char *, void *, const char *, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TBranch::TBranch(TBranch *, const char *, void *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:195:4
    t.constructor<TBranch *, const char *, void *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TBranch *, const char *, void *, const char *, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TBranch *, const char *, void *, const char *, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TBranch::AddLastBasket(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::AddLastBasket(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:199:22
    t.method("AddLastBasket", [](TBranch& a, Long64_t arg0)->void { a.AddLastBasket(arg0); });
    t.method("AddLastBasket", [](TBranch* a, Long64_t arg0)->void { a->AddLastBasket(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::BackFill() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::BackFill()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:200:22
    t.method("BackFill", [](TBranch& a)->Int_t { return a.BackFill(); });
    t.method("BackFill", [](TBranch* a)->Int_t { return a->BackFill(); });

    DEBUG_MSG("Adding wrapper for void TBranch::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:201:22
    t.method("Browse", [](TBranch& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TBranch* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::DeleteBaskets(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::DeleteBaskets(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:202:22
    t.method("DeleteBaskets", [](TBranch& a)->void { a.DeleteBaskets(); });
    t.method("DeleteBaskets", [](TBranch& a, Option_t * arg0)->void { a.DeleteBaskets(arg0); });
    t.method("DeleteBaskets", [](TBranch* a)->void { a->DeleteBaskets(); });
    t.method("DeleteBaskets", [](TBranch* a, Option_t * arg0)->void { a->DeleteBaskets(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::DropBaskets(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::DropBaskets(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:203:22
    t.method("DropBaskets", [](TBranch& a)->void { a.DropBaskets(); });
    t.method("DropBaskets", [](TBranch& a, Option_t * arg0)->void { a.DropBaskets(arg0); });
    t.method("DropBaskets", [](TBranch* a)->void { a->DropBaskets(); });
    t.method("DropBaskets", [](TBranch* a, Option_t * arg0)->void { a->DropBaskets(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::ExpandBasketArrays() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::ExpandBasketArrays()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:204:22
    t.method("ExpandBasketArrays", [](TBranch& a)->void { a.ExpandBasketArrays(); });
    t.method("ExpandBasketArrays", [](TBranch* a)->void { a->ExpandBasketArrays(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::Fill() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::Fill()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:205:22
    t.method("Fill", [](TBranch& a)->Int_t { return a.Fill(); });
    t.method("Fill", [](TBranch* a)->Int_t { return a->Fill(); });

    DEBUG_MSG("Adding wrapper for TBranch * TBranch::FindBranch(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TBranch::FindBranch(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:207:22
    t.method("FindBranch", [](TBranch& a, const char * arg0)->TBranch * { return a.FindBranch(arg0); });
    t.method("FindBranch", [](TBranch* a, const char * arg0)->TBranch * { return a->FindBranch(arg0); });

    DEBUG_MSG("Adding wrapper for TLeaf * TBranch::FindLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TBranch::FindLeaf(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:208:22
    t.method("FindLeaf", [](TBranch& a, const char * arg0)->TLeaf * { return a.FindLeaf(arg0); });
    t.method("FindLeaf", [](TBranch* a, const char * arg0)->TLeaf * { return a->FindLeaf(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::FlushBaskets() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::FlushBaskets()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:209:22
    t.method("FlushBaskets", [](TBranch& a)->Int_t { return a.FlushBaskets(); });
    t.method("FlushBaskets", [](TBranch* a)->Int_t { return a->FlushBaskets(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::FlushOneBasket(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::FlushOneBasket(UInt_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:210:22
    t.method("FlushOneBasket", [](TBranch& a, UInt_t arg0)->Int_t { return a.FlushOneBasket(arg0); });
    t.method("FlushOneBasket", [](TBranch* a, UInt_t arg0)->Int_t { return a->FlushOneBasket(arg0); });

    DEBUG_MSG("Adding wrapper for char * TBranch::GetAddress() (" __HERE__ ")");
    // signature to use in the veto list: char * TBranch::GetAddress()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:212:22
    t.method("GetAddress", [](TBranch const& a)->char * { return a.GetAddress(); });
    t.method("GetAddress", [](TBranch const* a)->char * { return a->GetAddress(); });

    DEBUG_MSG("Adding wrapper for Int_t * TBranch::GetBasketBytes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TBranch::GetBasketBytes()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:214:22
    t.method("GetBasketBytes", [](TBranch const& a)->Int_t * { return a.GetBasketBytes(); });
    t.method("GetBasketBytes", [](TBranch const* a)->Int_t * { return a->GetBasketBytes(); });

    DEBUG_MSG("Adding wrapper for Long64_t * TBranch::GetBasketEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t * TBranch::GetBasketEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:215:22
    t.method("GetBasketEntry", [](TBranch const& a)->Long64_t * { return a.GetBasketEntry(); });
    t.method("GetBasketEntry", [](TBranch const* a)->Long64_t * { return a->GetBasketEntry(); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetBasketSeek(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetBasketSeek(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:216:22
    t.method("GetBasketSeek", [](TBranch const& a, Int_t arg0)->Long64_t { return a.GetBasketSeek(arg0); });
    t.method("GetBasketSeek", [](TBranch const* a, Int_t arg0)->Long64_t { return a->GetBasketSeek(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetBasketSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetBasketSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:217:22
    t.method("GetBasketSize", [](TBranch const& a)->Int_t { return a.GetBasketSize(); });
    t.method("GetBasketSize", [](TBranch const* a)->Int_t { return a->GetBasketSize(); });

    DEBUG_MSG("Adding wrapper for TList * TBranch::GetBrowsables() (" __HERE__ ")");
    // signature to use in the veto list: TList * TBranch::GetBrowsables()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:219:22
    t.method("GetBrowsables", [](TBranch& a)->TList * { return a.GetBrowsables(); });
    t.method("GetBrowsables", [](TBranch* a)->TList * { return a->GetBrowsables(); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::GetClassName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::GetClassName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:220:24
    t.method("GetClassName", [](TBranch const& a) { return (std::string)a.GetClassName(); });
    t.method("GetClassName", [](TBranch const* a) { return (std::string)a->GetClassName(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetCompressionAlgorithm() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetCompressionAlgorithm()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:221:22
    t.method("GetCompressionAlgorithm", [](TBranch const& a)->Int_t { return a.GetCompressionAlgorithm(); });
    t.method("GetCompressionAlgorithm", [](TBranch const* a)->Int_t { return a->GetCompressionAlgorithm(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetCompressionLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetCompressionLevel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:222:22
    t.method("GetCompressionLevel", [](TBranch const& a)->Int_t { return a.GetCompressionLevel(); });
    t.method("GetCompressionLevel", [](TBranch const* a)->Int_t { return a->GetCompressionLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetCompressionSettings() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetCompressionSettings()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:223:22
    t.method("GetCompressionSettings", [](TBranch const& a)->Int_t { return a.GetCompressionSettings(); });
    t.method("GetCompressionSettings", [](TBranch const* a)->Int_t { return a->GetCompressionSettings(); });

    DEBUG_MSG("Adding wrapper for TDirectory * TBranch::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TBranch::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:224:22
    t.method("GetDirectory", [](TBranch const& a)->TDirectory * { return a.GetDirectory(); });
    t.method("GetDirectory", [](TBranch const* a)->TDirectory * { return a->GetDirectory(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetEntry(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetEntry(Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:225:22
    t.method("GetEntry", [](TBranch& a)->Int_t { return a.GetEntry(); });
    t.method("GetEntry", [](TBranch& a, Long64_t arg0)->Int_t { return a.GetEntry(arg0); });
    t.method("GetEntry", [](TBranch& a, Long64_t arg0, Int_t arg1)->Int_t { return a.GetEntry(arg0, arg1); });
    t.method("GetEntry", [](TBranch* a)->Int_t { return a->GetEntry(); });
    t.method("GetEntry", [](TBranch* a, Long64_t arg0)->Int_t { return a->GetEntry(arg0); });
    t.method("GetEntry", [](TBranch* a, Long64_t arg0, Int_t arg1)->Int_t { return a->GetEntry(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetEntryExport(Long64_t, Int_t, TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetEntryExport(Long64_t, Int_t, TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:226:22
    t.method("GetEntryExport", [](TBranch& a, Long64_t arg0, Int_t arg1, TClonesArray * arg2, Int_t arg3)->Int_t { return a.GetEntryExport(arg0, arg1, arg2, arg3); });
    t.method("GetEntryExport", [](TBranch* a, Long64_t arg0, Int_t arg1, TClonesArray * arg2, Int_t arg3)->Int_t { return a->GetEntryExport(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetEntryOffsetLen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetEntryOffsetLen()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:227:22
    t.method("GetEntryOffsetLen", [](TBranch const& a)->Int_t { return a.GetEntryOffsetLen(); });
    t.method("GetEntryOffsetLen", [](TBranch const* a)->Int_t { return a->GetEntryOffsetLen(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetEvent(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetEvent(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:228:22
    t.method("GetEvent", [](TBranch& a)->Int_t { return a.GetEvent(); });
    t.method("GetEvent", [](TBranch& a, Long64_t arg0)->Int_t { return a.GetEvent(arg0); });
    t.method("GetEvent", [](TBranch* a)->Int_t { return a->GetEvent(); });
    t.method("GetEvent", [](TBranch* a, Long64_t arg0)->Int_t { return a->GetEvent(arg0); });

    DEBUG_MSG("Adding wrapper for TString TBranch::GetFullName() (" __HERE__ ")");
    // signature to use in the veto list: TString TBranch::GetFullName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:229:22
    t.method("GetFullName", [](TBranch const& a)->TString { return a.GetFullName(); });
    t.method("GetFullName", [](TBranch const* a)->TString { return a->GetFullName(); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::GetIconName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::GetIconName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:230:22
    t.method("GetIconName", [](TBranch const& a) { return (std::string)a.GetIconName(); });
    t.method("GetIconName", [](TBranch const* a) { return (std::string)a->GetIconName(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetExpectedType(TClass *&, EDataType &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetExpectedType(TClass *&, EDataType &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:231:22
    t.method("GetExpectedType", [](TBranch& a, TClass *& arg0, EDataType & arg1)->Int_t { return a.GetExpectedType(arg0, arg1); });
    t.method("GetExpectedType", [](TBranch* a, TClass *& arg0, EDataType & arg1)->Int_t { return a->GetExpectedType(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TLeaf * TBranch::GetLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TBranch::GetLeaf(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:232:22
    t.method("GetLeaf", [](TBranch const& a, const char * arg0)->TLeaf * { return a.GetLeaf(arg0); });
    t.method("GetLeaf", [](TBranch const* a, const char * arg0)->TLeaf * { return a->GetLeaf(arg0); });

    DEBUG_MSG("Adding wrapper for TFile * TBranch::GetFile(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TBranch::GetFile(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:233:22
    t.method("GetFile", [](TBranch& a)->TFile * { return a.GetFile(); });
    t.method("GetFile", [](TBranch& a, Int_t arg0)->TFile * { return a.GetFile(arg0); });
    t.method("GetFile", [](TBranch* a)->TFile * { return a->GetFile(); });
    t.method("GetFile", [](TBranch* a, Int_t arg0)->TFile * { return a->GetFile(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::GetFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::GetFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:234:22
    t.method("GetFileName", [](TBranch const& a) { return (std::string)a.GetFileName(); });
    t.method("GetFileName", [](TBranch const* a) { return (std::string)a->GetFileName(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetOffset() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetOffset()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:235:22
    t.method("GetOffset", [](TBranch const& a)->Int_t { return a.GetOffset(); });
    t.method("GetOffset", [](TBranch const* a)->Int_t { return a->GetOffset(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetReadBasket() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetReadBasket()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:236:22
    t.method("GetReadBasket", [](TBranch const& a)->Int_t { return a.GetReadBasket(); });
    t.method("GetReadBasket", [](TBranch const* a)->Int_t { return a->GetReadBasket(); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetReadEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetReadEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:237:22
    t.method("GetReadEntry", [](TBranch const& a)->Long64_t { return a.GetReadEntry(); });
    t.method("GetReadEntry", [](TBranch const* a)->Long64_t { return a->GetReadEntry(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetWriteBasket() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetWriteBasket()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:238:22
    t.method("GetWriteBasket", [](TBranch const& a)->Int_t { return a.GetWriteBasket(); });
    t.method("GetWriteBasket", [](TBranch const* a)->Int_t { return a->GetWriteBasket(); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetTotalSize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetTotalSize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:239:22
    t.method("GetTotalSize", [](TBranch const& a)->Long64_t { return a.GetTotalSize(); });
    t.method("GetTotalSize", [](TBranch const& a, Option_t * arg0)->Long64_t { return a.GetTotalSize(arg0); });
    t.method("GetTotalSize", [](TBranch const* a)->Long64_t { return a->GetTotalSize(); });
    t.method("GetTotalSize", [](TBranch const* a, Option_t * arg0)->Long64_t { return a->GetTotalSize(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetTotBytes(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetTotBytes(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:240:22
    t.method("GetTotBytes", [](TBranch const& a)->Long64_t { return a.GetTotBytes(); });
    t.method("GetTotBytes", [](TBranch const& a, Option_t * arg0)->Long64_t { return a.GetTotBytes(arg0); });
    t.method("GetTotBytes", [](TBranch const* a)->Long64_t { return a->GetTotBytes(); });
    t.method("GetTotBytes", [](TBranch const* a, Option_t * arg0)->Long64_t { return a->GetTotBytes(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetZipBytes(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetZipBytes(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:241:22
    t.method("GetZipBytes", [](TBranch const& a)->Long64_t { return a.GetZipBytes(); });
    t.method("GetZipBytes", [](TBranch const& a, Option_t * arg0)->Long64_t { return a.GetZipBytes(arg0); });
    t.method("GetZipBytes", [](TBranch const* a)->Long64_t { return a->GetZipBytes(); });
    t.method("GetZipBytes", [](TBranch const* a, Option_t * arg0)->Long64_t { return a->GetZipBytes(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetEntryNumber() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetEntryNumber()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:242:22
    t.method("GetEntryNumber", [](TBranch const& a)->Long64_t { return a.GetEntryNumber(); });
    t.method("GetEntryNumber", [](TBranch const* a)->Long64_t { return a->GetEntryNumber(); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetFirstEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetFirstEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:243:22
    t.method("GetFirstEntry", [](TBranch const& a)->Long64_t { return a.GetFirstEntry(); });
    t.method("GetFirstEntry", [](TBranch const* a)->Long64_t { return a->GetFirstEntry(); });


    DEBUG_MSG("Adding wrapper for TObjArray * TBranch::GetListOfBaskets() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TBranch::GetListOfBaskets()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:245:22
    t.method("GetListOfBaskets", [](TBranch& a)->TObjArray * { return a.GetListOfBaskets(); });
    t.method("GetListOfBaskets", [](TBranch* a)->TObjArray * { return a->GetListOfBaskets(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TBranch::GetListOfBranches() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TBranch::GetListOfBranches()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:246:22
    t.method("GetListOfBranches", [](TBranch& a)->TObjArray * { return a.GetListOfBranches(); });
    t.method("GetListOfBranches", [](TBranch* a)->TObjArray * { return a->GetListOfBranches(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TBranch::GetListOfLeaves() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TBranch::GetListOfLeaves()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:247:22
    t.method("GetListOfLeaves", [](TBranch& a)->TObjArray * { return a.GetListOfLeaves(); });
    t.method("GetListOfLeaves", [](TBranch* a)->TObjArray * { return a->GetListOfLeaves(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetMaxBaskets() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetMaxBaskets()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:248:22
    t.method("GetMaxBaskets", [](TBranch const& a)->Int_t { return a.GetMaxBaskets(); });
    t.method("GetMaxBaskets", [](TBranch const* a)->Int_t { return a->GetMaxBaskets(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetNleaves() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetNleaves()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:249:22
    t.method("GetNleaves", [](TBranch const& a)->Int_t { return a.GetNleaves(); });
    t.method("GetNleaves", [](TBranch const* a)->Int_t { return a->GetNleaves(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetSplitLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetSplitLevel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:250:22
    t.method("GetSplitLevel", [](TBranch const& a)->Int_t { return a.GetSplitLevel(); });
    t.method("GetSplitLevel", [](TBranch const* a)->Int_t { return a->GetSplitLevel(); });

    DEBUG_MSG("Adding wrapper for Long64_t TBranch::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TBranch::GetEntries()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:251:22
    t.method("GetEntries", [](TBranch const& a)->Long64_t { return a.GetEntries(); });
    t.method("GetEntries", [](TBranch const* a)->Long64_t { return a->GetEntries(); });

    DEBUG_MSG("Adding wrapper for TTree * TBranch::GetTree() (" __HERE__ ")");
    // signature to use in the veto list: TTree * TBranch::GetTree()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:252:22
    t.method("GetTree", [](TBranch const& a)->TTree * { return a.GetTree(); });
    t.method("GetTree", [](TBranch const* a)->TTree * { return a->GetTree(); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::GetRow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::GetRow(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:253:22
    t.method("GetRow", [](TBranch& a, Int_t arg0)->Int_t { return a.GetRow(arg0); });
    t.method("GetRow", [](TBranch* a, Int_t arg0)->Int_t { return a->GetRow(arg0); });

    DEBUG_MSG("Adding wrapper for bool TBranch::GetMakeClass() (" __HERE__ ")");
    // signature to use in the veto list: bool TBranch::GetMakeClass()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:254:22
    t.method("GetMakeClass", [](TBranch const& a)->bool { return a.GetMakeClass(); });
    t.method("GetMakeClass", [](TBranch const* a)->bool { return a->GetMakeClass(); });

    DEBUG_MSG("Adding wrapper for TBranch * TBranch::GetMother() (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TBranch::GetMother()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:255:22
    t.method("GetMother", [](TBranch const& a)->TBranch * { return a.GetMother(); });
    t.method("GetMother", [](TBranch const* a)->TBranch * { return a->GetMother(); });

    DEBUG_MSG("Adding wrapper for TBranch * TBranch::GetSubBranch(const TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TBranch::GetSubBranch(const TBranch *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:256:22
    t.method("GetSubBranch", [](TBranch const& a, const TBranch * arg0)->TBranch * { return a.GetSubBranch(arg0); });
    t.method("GetSubBranch", [](TBranch const* a, const TBranch * arg0)->TBranch * { return a->GetSubBranch(arg0); });

    DEBUG_MSG("Adding wrapper for TBuffer * TBranch::GetTransientBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBuffer * TBranch::GetTransientBuffer(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:257:22
    t.method("GetTransientBuffer", [](TBranch& a, Int_t arg0)->TBuffer * { return a.GetTransientBuffer(arg0); });
    t.method("GetTransientBuffer", [](TBranch* a, Int_t arg0)->TBuffer * { return a->GetTransientBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for bool TBranch::IsAutoDelete() (" __HERE__ ")");
    // signature to use in the veto list: bool TBranch::IsAutoDelete()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:258:22
    t.method("IsAutoDelete", [](TBranch const& a)->bool { return a.IsAutoDelete(); });
    t.method("IsAutoDelete", [](TBranch const* a)->bool { return a->IsAutoDelete(); });

    DEBUG_MSG("Adding wrapper for bool TBranch::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: bool TBranch::IsFolder()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:259:22
    t.method("IsFolder", [](TBranch const& a)->bool { return a.IsFolder(); });
    t.method("IsFolder", [](TBranch const* a)->bool { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for void TBranch::KeepCircular(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::KeepCircular(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:260:22
    t.method("KeepCircular", [](TBranch& a, Long64_t arg0)->void { a.KeepCircular(arg0); });
    t.method("KeepCircular", [](TBranch* a, Long64_t arg0)->void { a->KeepCircular(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TBranch::LoadBaskets() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TBranch::LoadBaskets()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:261:22
    t.method("LoadBaskets", [](TBranch& a)->Int_t { return a.LoadBaskets(); });
    t.method("LoadBaskets", [](TBranch* a)->Int_t { return a->LoadBaskets(); });

    DEBUG_MSG("Adding wrapper for void TBranch::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:262:22
    t.method("Print", [](TBranch const& a)->void { a.Print(); });
    t.method("Print", [](TBranch const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TBranch const* a)->void { a->Print(); });
    t.method("Print", [](TBranch const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::PrintCacheInfo() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::PrintCacheInfo()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:263:22
    t.method("PrintCacheInfo", [](TBranch const& a)->void { a.PrintCacheInfo(); });
    t.method("PrintCacheInfo", [](TBranch const* a)->void { a->PrintCacheInfo(); });

    DEBUG_MSG("Adding wrapper for void TBranch::ReadBasket(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::ReadBasket(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:264:22
    t.method("ReadBasket", [](TBranch& a, TBuffer & arg0)->void { a.ReadBasket(arg0); });
    t.method("ReadBasket", [](TBranch* a, TBuffer & arg0)->void { a->ReadBasket(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::Refresh(TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::Refresh(TBranch *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:265:22
    t.method("Refresh", [](TBranch& a, TBranch * arg0)->void { a.Refresh(arg0); });
    t.method("Refresh", [](TBranch* a, TBranch * arg0)->void { a->Refresh(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::Reset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:266:22
    t.method("Reset", [](TBranch& a)->void { a.Reset(); });
    t.method("Reset", [](TBranch& a, Option_t * arg0)->void { a.Reset(arg0); });
    t.method("Reset", [](TBranch* a)->void { a->Reset(); });
    t.method("Reset", [](TBranch* a, Option_t * arg0)->void { a->Reset(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::ResetAddress() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::ResetAddress()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:268:22
    t.method("ResetAddress", [](TBranch& a)->void { a.ResetAddress(); });
    t.method("ResetAddress", [](TBranch* a)->void { a->ResetAddress(); });

    DEBUG_MSG("Adding wrapper for void TBranch::ResetReadEntry() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::ResetReadEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:269:22
    t.method("ResetReadEntry", [](TBranch& a)->void { a.ResetReadEntry(); });
    t.method("ResetReadEntry", [](TBranch* a)->void { a->ResetReadEntry(); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetAddress(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetAddress(void *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:270:22
    t.method("SetAddress", [](TBranch& a, void * arg0)->void { a.SetAddress(arg0); });
    t.method("SetAddress", [](TBranch* a, void * arg0)->void { a->SetAddress(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetObject(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetObject(void *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:271:22
    t.method("SetObject", [](TBranch& a, void * arg0)->void { a.SetObject(arg0); });
    t.method("SetObject", [](TBranch* a, void * arg0)->void { a->SetObject(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetAutoDelete(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetAutoDelete(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:272:22
    t.method("SetAutoDelete", [](TBranch& a)->void { a.SetAutoDelete(); });
    t.method("SetAutoDelete", [](TBranch& a, bool arg0)->void { a.SetAutoDelete(arg0); });
    t.method("SetAutoDelete", [](TBranch* a)->void { a->SetAutoDelete(); });
    t.method("SetAutoDelete", [](TBranch* a, bool arg0)->void { a->SetAutoDelete(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetBasketSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetBasketSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:273:22
    t.method("SetBasketSize", [](TBranch& a, Int_t arg0)->void { a.SetBasketSize(arg0); });
    t.method("SetBasketSize", [](TBranch* a, Int_t arg0)->void { a->SetBasketSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetBufferAddress(TBuffer *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetBufferAddress(TBuffer *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:274:22
    t.method("SetBufferAddress", [](TBranch& a, TBuffer * arg0)->void { a.SetBufferAddress(arg0); });
    t.method("SetBufferAddress", [](TBranch* a, TBuffer * arg0)->void { a->SetBufferAddress(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetCompressionAlgorithm(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetCompressionAlgorithm(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:275:22
    t.method("SetCompressionAlgorithm", [](TBranch& a)->void { a.SetCompressionAlgorithm(); });
    t.method("SetCompressionAlgorithm", [](TBranch& a, Int_t arg0)->void { a.SetCompressionAlgorithm(arg0); });
    t.method("SetCompressionAlgorithm", [](TBranch* a)->void { a->SetCompressionAlgorithm(); });
    t.method("SetCompressionAlgorithm", [](TBranch* a, Int_t arg0)->void { a->SetCompressionAlgorithm(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetCompressionLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetCompressionLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:276:22
    t.method("SetCompressionLevel", [](TBranch& a)->void { a.SetCompressionLevel(); });
    t.method("SetCompressionLevel", [](TBranch& a, Int_t arg0)->void { a.SetCompressionLevel(arg0); });
    t.method("SetCompressionLevel", [](TBranch* a)->void { a->SetCompressionLevel(); });
    t.method("SetCompressionLevel", [](TBranch* a, Int_t arg0)->void { a->SetCompressionLevel(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetCompressionSettings(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetCompressionSettings(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:277:22
    t.method("SetCompressionSettings", [](TBranch& a)->void { a.SetCompressionSettings(); });
    t.method("SetCompressionSettings", [](TBranch& a, Int_t arg0)->void { a.SetCompressionSettings(arg0); });
    t.method("SetCompressionSettings", [](TBranch* a)->void { a->SetCompressionSettings(); });
    t.method("SetCompressionSettings", [](TBranch* a, Int_t arg0)->void { a->SetCompressionSettings(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetEntries(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetEntries(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:278:22
    t.method("SetEntries", [](TBranch& a, Long64_t arg0)->void { a.SetEntries(arg0); });
    t.method("SetEntries", [](TBranch* a, Long64_t arg0)->void { a->SetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetEntryOffsetLen(Int_t, bool) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetEntryOffsetLen(Int_t, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:279:22
    t.method("SetEntryOffsetLen", [](TBranch& a, Int_t arg0)->void { a.SetEntryOffsetLen(arg0); });
    t.method("SetEntryOffsetLen", [](TBranch& a, Int_t arg0, bool arg1)->void { a.SetEntryOffsetLen(arg0, arg1); });
    t.method("SetEntryOffsetLen", [](TBranch* a, Int_t arg0)->void { a->SetEntryOffsetLen(arg0); });
    t.method("SetEntryOffsetLen", [](TBranch* a, Int_t arg0, bool arg1)->void { a->SetEntryOffsetLen(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetFirstEntry(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetFirstEntry(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:280:22
    t.method("SetFirstEntry", [](TBranch& a, Long64_t arg0)->void { a.SetFirstEntry(arg0); });
    t.method("SetFirstEntry", [](TBranch* a, Long64_t arg0)->void { a->SetFirstEntry(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetFile(TFile *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetFile(TFile *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:281:22
    t.method("SetFile", [](TBranch& a)->void { a.SetFile(); });
    t.method("SetFile", [](TBranch& a, TFile * arg0)->void { a.SetFile(arg0); });
    t.method("SetFile", [](TBranch* a)->void { a->SetFile(); });
    t.method("SetFile", [](TBranch* a, TFile * arg0)->void { a->SetFile(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetFile(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:282:22
    t.method("SetFile", [](TBranch& a, const char * arg0)->void { a.SetFile(arg0); });
    t.method("SetFile", [](TBranch* a, const char * arg0)->void { a->SetFile(arg0); });


    DEBUG_MSG("Adding wrapper for bool TBranch::SetMakeClass(bool) (" __HERE__ ")");
    // signature to use in the veto list: bool TBranch::SetMakeClass(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:284:22
    t.method("SetMakeClass", [](TBranch& a)->bool { return a.SetMakeClass(); });
    t.method("SetMakeClass", [](TBranch& a, bool arg0)->bool { return a.SetMakeClass(arg0); });
    t.method("SetMakeClass", [](TBranch* a)->bool { return a->SetMakeClass(); });
    t.method("SetMakeClass", [](TBranch* a, bool arg0)->bool { return a->SetMakeClass(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetOffset(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetOffset(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:285:22
    t.method("SetOffset", [](TBranch& a)->void { a.SetOffset(); });
    t.method("SetOffset", [](TBranch& a, Int_t arg0)->void { a.SetOffset(arg0); });
    t.method("SetOffset", [](TBranch* a)->void { a->SetOffset(); });
    t.method("SetOffset", [](TBranch* a, Int_t arg0)->void { a->SetOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetStatus(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetStatus(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:286:22
    t.method("SetStatus", [](TBranch& a)->void { a.SetStatus(); });
    t.method("SetStatus", [](TBranch& a, bool arg0)->void { a.SetStatus(arg0); });
    t.method("SetStatus", [](TBranch* a)->void { a->SetStatus(); });
    t.method("SetStatus", [](TBranch* a, bool arg0)->void { a->SetStatus(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetTree(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetTree(TTree *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:287:22
    t.method("SetTree", [](TBranch& a, TTree * arg0)->void { a.SetTree(arg0); });
    t.method("SetTree", [](TBranch* a, TTree * arg0)->void { a->SetTree(arg0); });

    DEBUG_MSG("Adding wrapper for void TBranch::SetupAddresses() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::SetupAddresses()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:288:22
    t.method("SetupAddresses", [](TBranch& a)->void { a.SetupAddresses(); });
    t.method("SetupAddresses", [](TBranch* a)->void { a->SetupAddresses(); });

    DEBUG_MSG("Adding wrapper for bool TBranch::SupportsBulkRead() (" __HERE__ ")");
    // signature to use in the veto list: bool TBranch::SupportsBulkRead()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:289:22
    t.method("SupportsBulkRead", [](TBranch const& a)->bool { return a.SupportsBulkRead(); });
    t.method("SupportsBulkRead", [](TBranch const* a)->bool { return a->SupportsBulkRead(); });

    DEBUG_MSG("Adding wrapper for void TBranch::UpdateAddress() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::UpdateAddress()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:290:22
    t.method("UpdateAddress", [](TBranch& a)->void { a.UpdateAddress(); });
    t.method("UpdateAddress", [](TBranch* a)->void { a->UpdateAddress(); });

    DEBUG_MSG("Adding wrapper for void TBranch::UpdateFile() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::UpdateFile()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:291:22
    t.method("UpdateFile", [](TBranch& a)->void { a.UpdateFile(); });
    t.method("UpdateFile", [](TBranch* a)->void { a->UpdateFile(); });

    DEBUG_MSG("Adding wrapper for void TBranch::ResetCount() (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::ResetCount()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:293:22
    module_.method("TBranch!ResetCount", []()->void { TBranch::ResetCount(); });

    DEBUG_MSG("Adding wrapper for Version_t TBranch::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TBranch::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!Class_Version", []()->Version_t { return TBranch::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TBranch::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBranch::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    t.method("IsA", [](TBranch const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TBranch const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TBranch::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    t.method("StreamerNVirtual", [](TBranch& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TBranch* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!DeclFileName", []() { return (std::string)TBranch::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TBranch::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBranch::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!ImplFileLine", []()->int { return TBranch::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!ImplFileName", []() { return (std::string)TBranch::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TBranch::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TBranch::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!Class_Name", []() { return (std::string)TBranch::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TBranch::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBranch::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!Dictionary", []()->TClass * { return TBranch::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TBranch::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TBranch::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!Class", []()->TClass * { return TBranch::Class(); });

    DEBUG_MSG("Adding wrapper for void TBranch::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TBranch::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    t.method("Streamer", [](TBranch& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TBranch* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TBranch::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TBranch::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TBranch.h:295:4
    module_.method("TBranch!DeclFileLine", []()->int { return TBranch::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TBranch>> type_;
};
std::shared_ptr<Wrapper> newJlTBranch(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTBranch(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TTree> : std::false_type { };
  template<> struct DefaultConstructible<TTree> : std::false_type { };
template<> struct SuperType<TTree> { typedef TNamed type; };
}

// Class generating the wrapper for type TTree
// signature to use in the veto file: TTree
struct JlTTree: public Wrapper {

  JlTTree(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTree (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:79:7
    jlcxx::TypeWrapper<TTree>  t = jlModule.add_type<TTree>("TTree",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTree>>(new jlcxx::TypeWrapper<TTree>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TTree::TTree(const char *, const char *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:315:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, const char *, Int_t>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const char *, const char *, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for Int_t TTree::AddBranchToCache(const char *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::AddBranchToCache(const char *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:321:28
    t.method("AddBranchToCache", [](TTree& a, const char * arg0)->Int_t { return a.AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree& a, const char * arg0, bool arg1)->Int_t { return a.AddBranchToCache(arg0, arg1); });
    t.method("AddBranchToCache", [](TTree* a, const char * arg0)->Int_t { return a->AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree* a, const char * arg0, bool arg1)->Int_t { return a->AddBranchToCache(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::AddBranchToCache(TBranch *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::AddBranchToCache(TBranch *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:322:28
    t.method("AddBranchToCache", [](TTree& a, TBranch * arg0)->Int_t { return a.AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree& a, TBranch * arg0, bool arg1)->Int_t { return a.AddBranchToCache(arg0, arg1); });
    t.method("AddBranchToCache", [](TTree* a, TBranch * arg0)->Int_t { return a->AddBranchToCache(arg0); });
    t.method("AddBranchToCache", [](TTree* a, TBranch * arg0, bool arg1)->Int_t { return a->AddBranchToCache(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::DropBranchFromCache(const char *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::DropBranchFromCache(const char *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:323:28
    t.method("DropBranchFromCache", [](TTree& a, const char * arg0)->Int_t { return a.DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree& a, const char * arg0, bool arg1)->Int_t { return a.DropBranchFromCache(arg0, arg1); });
    t.method("DropBranchFromCache", [](TTree* a, const char * arg0)->Int_t { return a->DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree* a, const char * arg0, bool arg1)->Int_t { return a->DropBranchFromCache(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::DropBranchFromCache(TBranch *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::DropBranchFromCache(TBranch *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:324:28
    t.method("DropBranchFromCache", [](TTree& a, TBranch * arg0)->Int_t { return a.DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree& a, TBranch * arg0, bool arg1)->Int_t { return a.DropBranchFromCache(arg0, arg1); });
    t.method("DropBranchFromCache", [](TTree* a, TBranch * arg0)->Int_t { return a->DropBranchFromCache(arg0); });
    t.method("DropBranchFromCache", [](TTree* a, TBranch * arg0, bool arg1)->Int_t { return a->DropBranchFromCache(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::AddClone(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddClone(TTree *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:325:28
    t.method("AddClone", [](TTree& a, TTree * arg0)->void { a.AddClone(arg0); });
    t.method("AddClone", [](TTree* a, TTree * arg0)->void { a->AddClone(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::AddTotBytes(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddTotBytes(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:331:28
    t.method("AddTotBytes", [](TTree& a, Int_t arg0)->void { a.AddTotBytes(arg0); });
    t.method("AddTotBytes", [](TTree* a, Int_t arg0)->void { a->AddTotBytes(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::AddZipBytes(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddZipBytes(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:332:28
    t.method("AddZipBytes", [](TTree& a, Int_t arg0)->void { a.AddZipBytes(arg0); });
    t.method("AddZipBytes", [](TTree* a, Int_t arg0)->void { a->AddZipBytes(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::AddAllocationCount(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::AddAllocationCount(UInt_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:337:9
    t.method("AddAllocationCount", [](TTree& a, UInt_t arg0)->void { a.AddAllocationCount(arg0); });
    t.method("AddAllocationCount", [](TTree* a, UInt_t arg0)->void { a->AddAllocationCount(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::AutoSave(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::AutoSave(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:338:28
    t.method("AutoSave", [](TTree& a)->Long64_t { return a.AutoSave(); });
    t.method("AutoSave", [](TTree& a, Option_t * arg0)->Long64_t { return a.AutoSave(arg0); });
    t.method("AutoSave", [](TTree* a)->Long64_t { return a->AutoSave(); });
    t.method("AutoSave", [](TTree* a, Option_t * arg0)->Long64_t { return a->AutoSave(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(TCollection *, Int_t, Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(TCollection *, Int_t, Int_t, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:375:28
    t.method("Branch", [](TTree& a, TCollection * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, TCollection * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree& a, TCollection * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree& a, TCollection * arg0, Int_t arg1, Int_t arg2, const char * arg3)->Int_t { return a.Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree* a, TCollection * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, TCollection * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, TCollection * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, TCollection * arg0, Int_t arg1, Int_t arg2, const char * arg3)->Int_t { return a->Branch(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(TList *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(TList *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:376:28
    t.method("Branch", [](TTree& a, TList * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, TList * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree& a, TList * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, TList * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, TList * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, TList * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Branch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Branch(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Branch(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:377:28
    t.method("Branch", [](TTree& a, const char * arg0)->Int_t { return a.Branch(arg0); });
    t.method("Branch", [](TTree& a, const char * arg0, Int_t arg1)->Int_t { return a.Branch(arg0, arg1); });
    t.method("Branch", [](TTree& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0)->Int_t { return a->Branch(arg0); });
    t.method("Branch", [](TTree* a, const char * arg0, Int_t arg1)->Int_t { return a->Branch(arg0, arg1); });
    t.method("Branch", [](TTree* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Branch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, void *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, void *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:378:28
    t.method("Branch", [](TTree& a, const char * arg0, void * arg1, const char * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree& a, const char * arg0, void * arg1, const char * arg2, Int_t arg3)->TBranch * { return a.Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree* a, const char * arg0, void * arg1, const char * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, void * arg1, const char * arg2, Int_t arg3)->TBranch * { return a->Branch(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, char *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:379:28
    t.method("Branch", [](TTree& a, const char * arg0, char * arg1, const char * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree& a, const char * arg0, char * arg1, const char * arg2, Int_t arg3)->TBranch * { return a.Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree* a, const char * arg0, char * arg1, const char * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, char * arg1, const char * arg2, Int_t arg3)->TBranch * { return a->Branch(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Branch(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Branch(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:394:28
    t.method("Branch", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a.Branch(arg0, arg1, arg2, arg3, arg4); });
    t.method("Branch", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->Branch(arg0, arg1, arg2); });
    t.method("Branch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->Branch(arg0, arg1, arg2, arg3); });
    t.method("Branch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a->Branch(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::Bronch(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::Bronch(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:416:28
    t.method("Bronch", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.Bronch(arg0, arg1, arg2); });
    t.method("Bronch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.Bronch(arg0, arg1, arg2, arg3); });
    t.method("Bronch", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a.Bronch(arg0, arg1, arg2, arg3, arg4); });
    t.method("Bronch", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->Bronch(arg0, arg1, arg2); });
    t.method("Bronch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->Bronch(arg0, arg1, arg2, arg3); });
    t.method("Bronch", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a->Bronch(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::BranchOld(const char *, const char *, void *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::BranchOld(const char *, const char *, void *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:417:28
    t.method("BranchOld", [](TTree& a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a.BranchOld(arg0, arg1, arg2); });
    t.method("BranchOld", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a.BranchOld(arg0, arg1, arg2, arg3); });
    t.method("BranchOld", [](TTree& a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a.BranchOld(arg0, arg1, arg2, arg3, arg4); });
    t.method("BranchOld", [](TTree* a, const char * arg0, const char * arg1, void * arg2)->TBranch * { return a->BranchOld(arg0, arg1, arg2); });
    t.method("BranchOld", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3)->TBranch * { return a->BranchOld(arg0, arg1, arg2, arg3); });
    t.method("BranchOld", [](TTree* a, const char * arg0, const char * arg1, void * arg2, Int_t arg3, Int_t arg4)->TBranch * { return a->BranchOld(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::BranchRef() (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::BranchRef()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:418:28
    t.method("BranchRef", [](TTree& a)->TBranch * { return a.BranchRef(); });
    t.method("BranchRef", [](TTree* a)->TBranch * { return a->BranchRef(); });

    DEBUG_MSG("Adding wrapper for void TTree::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:419:28
    t.method("Browse", [](TTree& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TTree* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::BuildIndex(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::BuildIndex(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:420:28
    t.method("BuildIndex", [](TTree& a, const char * arg0)->Int_t { return a.BuildIndex(arg0); });
    t.method("BuildIndex", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.BuildIndex(arg0, arg1); });
    t.method("BuildIndex", [](TTree* a, const char * arg0)->Int_t { return a->BuildIndex(arg0); });
    t.method("BuildIndex", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->BuildIndex(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TStreamerInfo * TTree::BuildStreamerInfo(TClass *, void *, bool) (" __HERE__ ")");
    // signature to use in the veto list: TStreamerInfo * TTree::BuildStreamerInfo(TClass *, void *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:421:28
    t.method("BuildStreamerInfo", [](TTree& a, TClass * arg0)->TStreamerInfo * { return a.BuildStreamerInfo(arg0); });
    t.method("BuildStreamerInfo", [](TTree& a, TClass * arg0, void * arg1)->TStreamerInfo * { return a.BuildStreamerInfo(arg0, arg1); });
    t.method("BuildStreamerInfo", [](TTree& a, TClass * arg0, void * arg1, bool arg2)->TStreamerInfo * { return a.BuildStreamerInfo(arg0, arg1, arg2); });
    t.method("BuildStreamerInfo", [](TTree* a, TClass * arg0)->TStreamerInfo * { return a->BuildStreamerInfo(arg0); });
    t.method("BuildStreamerInfo", [](TTree* a, TClass * arg0, void * arg1)->TStreamerInfo * { return a->BuildStreamerInfo(arg0, arg1); });
    t.method("BuildStreamerInfo", [](TTree* a, TClass * arg0, void * arg1, bool arg2)->TStreamerInfo * { return a->BuildStreamerInfo(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TFile * TTree::ChangeFile(TFile *) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TTree::ChangeFile(TFile *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:422:28
    t.method("ChangeFile", [](TTree& a, TFile * arg0)->TFile * { return a.ChangeFile(arg0); });
    t.method("ChangeFile", [](TTree* a, TFile * arg0)->TFile * { return a->ChangeFile(arg0); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::CloneTree(Long64_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::CloneTree(Long64_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:423:28
    t.method("CloneTree", [](TTree& a)->TTree * { return a.CloneTree(); });
    t.method("CloneTree", [](TTree& a, Long64_t arg0)->TTree * { return a.CloneTree(arg0); });
    t.method("CloneTree", [](TTree& a, Long64_t arg0, Option_t * arg1)->TTree * { return a.CloneTree(arg0, arg1); });
    t.method("CloneTree", [](TTree* a)->TTree * { return a->CloneTree(); });
    t.method("CloneTree", [](TTree* a, Long64_t arg0)->TTree * { return a->CloneTree(arg0); });
    t.method("CloneTree", [](TTree* a, Long64_t arg0, Option_t * arg1)->TTree * { return a->CloneTree(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::CopyAddresses(TTree *, bool) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::CopyAddresses(TTree *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:424:28
    t.method("CopyAddresses", [](TTree& a, TTree * arg0)->void { a.CopyAddresses(arg0); });
    t.method("CopyAddresses", [](TTree& a, TTree * arg0, bool arg1)->void { a.CopyAddresses(arg0, arg1); });
    t.method("CopyAddresses", [](TTree* a, TTree * arg0)->void { a->CopyAddresses(arg0); });
    t.method("CopyAddresses", [](TTree* a, TTree * arg0, bool arg1)->void { a->CopyAddresses(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::CopyEntries(TTree *, Long64_t, Option_t *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::CopyEntries(TTree *, Long64_t, Option_t *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:425:28
    t.method("CopyEntries", [](TTree& a, TTree * arg0)->Long64_t { return a.CopyEntries(arg0); });
    t.method("CopyEntries", [](TTree& a, TTree * arg0, Long64_t arg1)->Long64_t { return a.CopyEntries(arg0, arg1); });
    t.method("CopyEntries", [](TTree& a, TTree * arg0, Long64_t arg1, Option_t * arg2)->Long64_t { return a.CopyEntries(arg0, arg1, arg2); });
    t.method("CopyEntries", [](TTree& a, TTree * arg0, Long64_t arg1, Option_t * arg2, bool arg3)->Long64_t { return a.CopyEntries(arg0, arg1, arg2, arg3); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0)->Long64_t { return a->CopyEntries(arg0); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0, Long64_t arg1)->Long64_t { return a->CopyEntries(arg0, arg1); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0, Long64_t arg1, Option_t * arg2)->Long64_t { return a->CopyEntries(arg0, arg1, arg2); });
    t.method("CopyEntries", [](TTree* a, TTree * arg0, Long64_t arg1, Option_t * arg2, bool arg3)->Long64_t { return a->CopyEntries(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::CopyTree(const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::CopyTree(const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:426:28
    t.method("CopyTree", [](TTree& a, const char * arg0)->TTree * { return a.CopyTree(arg0); });
    t.method("CopyTree", [](TTree& a, const char * arg0, Option_t * arg1)->TTree * { return a.CopyTree(arg0, arg1); });
    t.method("CopyTree", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2)->TTree * { return a.CopyTree(arg0, arg1, arg2); });
    t.method("CopyTree", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2, Long64_t arg3)->TTree * { return a.CopyTree(arg0, arg1, arg2, arg3); });
    t.method("CopyTree", [](TTree* a, const char * arg0)->TTree * { return a->CopyTree(arg0); });
    t.method("CopyTree", [](TTree* a, const char * arg0, Option_t * arg1)->TTree * { return a->CopyTree(arg0, arg1); });
    t.method("CopyTree", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2)->TTree * { return a->CopyTree(arg0, arg1, arg2); });
    t.method("CopyTree", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2, Long64_t arg3)->TTree * { return a->CopyTree(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TTree::DirectoryAutoAdd(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DirectoryAutoAdd(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:428:28
    t.method("DirectoryAutoAdd", [](TTree& a, TDirectory * arg0)->void { a.DirectoryAutoAdd(arg0); });
    t.method("DirectoryAutoAdd", [](TTree* a, TDirectory * arg0)->void { a->DirectoryAutoAdd(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Debug() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Debug()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:429:28
    t.method("Debug", [](TTree const& a)->Int_t { return a.Debug(); });
    t.method("Debug", [](TTree const* a)->Int_t { return a->Debug(); });

    DEBUG_MSG("Adding wrapper for void TTree::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Delete(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:430:28
    t.method("Delete", [](TTree& a)->void { a.Delete(); });
    t.method("Delete", [](TTree& a, Option_t * arg0)->void { a.Delete(arg0); });
    t.method("Delete", [](TTree* a)->void { a->Delete(); });
    t.method("Delete", [](TTree* a, Option_t * arg0)->void { a->Delete(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:431:28
    t.method("Draw", [](TTree& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TTree* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Draw(const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Draw(const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:433:28
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Draw(arg0, arg1); });
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a.Draw(arg0, arg1, arg2); });
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a.Draw(arg0, arg1, arg2, arg3); });
    t.method("Draw", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->Long64_t { return a.Draw(arg0, arg1, arg2, arg3, arg4); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Draw(arg0, arg1); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a->Draw(arg0, arg1, arg2); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a->Draw(arg0, arg1, arg2, arg3); });
    t.method("Draw", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->Long64_t { return a->Draw(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TTree::DropBaskets() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DropBaskets()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:434:28
    t.method("DropBaskets", [](TTree& a)->void { a.DropBaskets(); });
    t.method("DropBaskets", [](TTree* a)->void { a->DropBaskets(); });

    DEBUG_MSG("Adding wrapper for void TTree::DropBuffers(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::DropBuffers(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:435:28
    t.method("DropBuffers", [](TTree& a, Int_t arg0)->void { a.DropBuffers(arg0); });
    t.method("DropBuffers", [](TTree* a, Int_t arg0)->void { a->DropBuffers(arg0); });

    DEBUG_MSG("Adding wrapper for bool TTree::EnableCache() (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::EnableCache()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:436:28
    t.method("EnableCache", [](TTree& a)->bool { return a.EnableCache(); });
    t.method("EnableCache", [](TTree* a)->bool { return a->EnableCache(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Fill() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Fill()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:437:28
    t.method("Fill", [](TTree& a)->Int_t { return a.Fill(); });
    t.method("Fill", [](TTree* a)->Int_t { return a->Fill(); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::FindBranch(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::FindBranch(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:438:28
    t.method("FindBranch", [](TTree& a, const char * arg0)->TBranch * { return a.FindBranch(arg0); });
    t.method("FindBranch", [](TTree* a, const char * arg0)->TBranch * { return a->FindBranch(arg0); });

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::FindLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::FindLeaf(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:439:28
    t.method("FindLeaf", [](TTree& a, const char * arg0)->TLeaf * { return a.FindLeaf(arg0); });
    t.method("FindLeaf", [](TTree* a, const char * arg0)->TLeaf * { return a->FindLeaf(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Fit(const char *, const char *, const char *, Option_t *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Fit(const char *, const char *, const char *, Option_t *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:440:28
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.Fit(arg0, arg1); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4)->Int_t { return a.Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5)->Int_t { return a.Fit(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Fit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5, Long64_t arg6)->Int_t { return a.Fit(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->Fit(arg0, arg1); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->Fit(arg0, arg1, arg2); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->Fit(arg0, arg1, arg2, arg3); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4)->Int_t { return a->Fit(arg0, arg1, arg2, arg3, arg4); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5)->Int_t { return a->Fit(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Fit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Option_t * arg4, Long64_t arg5, Long64_t arg6)->Int_t { return a->Fit(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::FlushBaskets(bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::FlushBaskets(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:441:28
    t.method("FlushBaskets", [](TTree const& a)->Int_t { return a.FlushBaskets(); });
    t.method("FlushBaskets", [](TTree const& a, bool arg0)->Int_t { return a.FlushBaskets(arg0); });
    t.method("FlushBaskets", [](TTree const* a)->Int_t { return a->FlushBaskets(); });
    t.method("FlushBaskets", [](TTree const* a, bool arg0)->Int_t { return a->FlushBaskets(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TTree::GetAlias(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::GetAlias(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:442:28
    t.method("GetAlias", [](TTree const& a, const char * arg0) { return (std::string)a.GetAlias(arg0); });
    t.method("GetAlias", [](TTree const* a, const char * arg0) { return (std::string)a->GetAlias(arg0); });

    DEBUG_MSG("Adding wrapper for UInt_t TTree::GetAllocationCount() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TTree::GetAllocationCount()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:443:28
    t.method("GetAllocationCount", [](TTree const& a)->UInt_t { return a.GetAllocationCount(); });
    t.method("GetAllocationCount", [](TTree const* a)->UInt_t { return a->GetAllocationCount(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetAutoFlush() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetAutoFlush()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:447:28
    t.method("GetAutoFlush", [](TTree const& a)->Long64_t { return a.GetAutoFlush(); });
    t.method("GetAutoFlush", [](TTree const* a)->Long64_t { return a->GetAutoFlush(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetAutoSave() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetAutoSave()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:448:28
    t.method("GetAutoSave", [](TTree const& a)->Long64_t { return a.GetAutoSave(); });
    t.method("GetAutoSave", [](TTree const* a)->Long64_t { return a->GetAutoSave(); });

    DEBUG_MSG("Adding wrapper for TBranch * TTree::GetBranch(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TTree::GetBranch(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:449:28
    t.method("GetBranch", [](TTree& a, const char * arg0)->TBranch * { return a.GetBranch(arg0); });
    t.method("GetBranch", [](TTree* a, const char * arg0)->TBranch * { return a->GetBranch(arg0); });

    DEBUG_MSG("Adding wrapper for bool TTree::GetBranchStatus(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::GetBranchStatus(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:451:28
    t.method("GetBranchStatus", [](TTree const& a, const char * arg0)->bool { return a.GetBranchStatus(arg0); });
    t.method("GetBranchStatus", [](TTree const* a, const char * arg0)->bool { return a->GetBranchStatus(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetBranchStyle() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetBranchStyle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:452:28
    module_.method("TTree!GetBranchStyle", []()->Int_t { return TTree::GetBranchStyle(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetCacheSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetCacheSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:453:28
    t.method("GetCacheSize", [](TTree const& a)->Long64_t { return a.GetCacheSize(); });
    t.method("GetCacheSize", [](TTree const* a)->Long64_t { return a->GetCacheSize(); });

    DEBUG_MSG("Adding wrapper for TTree::TClusterIterator TTree::GetClusterIterator(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTree::TClusterIterator TTree::GetClusterIterator(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:454:29
    t.method("GetClusterIterator", [](TTree& a, Long64_t arg0)->TTree::TClusterIterator { return a.GetClusterIterator(arg0); });
    t.method("GetClusterIterator", [](TTree* a, Long64_t arg0)->TTree::TClusterIterator { return a->GetClusterIterator(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetChainEntryNumber(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetChainEntryNumber(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:455:28
    t.method("GetChainEntryNumber", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetChainEntryNumber(arg0); });
    t.method("GetChainEntryNumber", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetChainEntryNumber(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetChainOffset() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetChainOffset()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:456:28
    t.method("GetChainOffset", [](TTree const& a)->Long64_t { return a.GetChainOffset(); });
    t.method("GetChainOffset", [](TTree const* a)->Long64_t { return a->GetChainOffset(); });

    DEBUG_MSG("Adding wrapper for bool TTree::GetClusterPrefetch() (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::GetClusterPrefetch()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:457:28
    t.method("GetClusterPrefetch", [](TTree const& a)->bool { return a.GetClusterPrefetch(); });
    t.method("GetClusterPrefetch", [](TTree const* a)->bool { return a->GetClusterPrefetch(); });

    DEBUG_MSG("Adding wrapper for TFile * TTree::GetCurrentFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TTree::GetCurrentFile()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:458:28
    t.method("GetCurrentFile", [](TTree const& a)->TFile * { return a.GetCurrentFile(); });
    t.method("GetCurrentFile", [](TTree const* a)->TFile * { return a->GetCurrentFile(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetDefaultEntryOffsetLen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetDefaultEntryOffsetLen()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:459:28
    t.method("GetDefaultEntryOffsetLen", [](TTree const& a)->Int_t { return a.GetDefaultEntryOffsetLen(); });
    t.method("GetDefaultEntryOffsetLen", [](TTree const* a)->Int_t { return a->GetDefaultEntryOffsetLen(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetDebugMax() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetDebugMax()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:460:28
    t.method("GetDebugMax", [](TTree const& a)->Long64_t { return a.GetDebugMax(); });
    t.method("GetDebugMax", [](TTree const* a)->Long64_t { return a->GetDebugMax(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetDebugMin() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetDebugMin()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:461:28
    t.method("GetDebugMin", [](TTree const& a)->Long64_t { return a.GetDebugMin(); });
    t.method("GetDebugMin", [](TTree const* a)->Long64_t { return a->GetDebugMin(); });

    DEBUG_MSG("Adding wrapper for TDirectory * TTree::GetDirectory() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TTree::GetDirectory()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:462:28
    t.method("GetDirectory", [](TTree const& a)->TDirectory * { return a.GetDirectory(); });
    t.method("GetDirectory", [](TTree const* a)->TDirectory * { return a->GetDirectory(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntries()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:463:28
    t.method("GetEntries", [](TTree const& a)->Long64_t { return a.GetEntries(); });
    t.method("GetEntries", [](TTree const* a)->Long64_t { return a->GetEntries(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntries(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntries(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:464:28
    t.method("GetEntries", [](TTree& a, const char * arg0)->Long64_t { return a.GetEntries(arg0); });
    t.method("GetEntries", [](TTree* a, const char * arg0)->Long64_t { return a->GetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntriesFast() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntriesFast()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:465:28
    t.method("GetEntriesFast", [](TTree const& a)->Long64_t { return a.GetEntriesFast(); });
    t.method("GetEntriesFast", [](TTree const* a)->Long64_t { return a->GetEntriesFast(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntriesFriend() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntriesFriend()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:466:28
    t.method("GetEntriesFriend", [](TTree const& a)->Long64_t { return a.GetEntriesFriend(); });
    t.method("GetEntriesFriend", [](TTree const* a)->Long64_t { return a->GetEntriesFriend(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEstimate() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEstimate()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:467:28
    t.method("GetEstimate", [](TTree const& a)->Long64_t { return a.GetEstimate(); });
    t.method("GetEstimate", [](TTree const* a)->Long64_t { return a->GetEstimate(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEntry(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEntry(Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:468:28
    t.method("GetEntry", [](TTree& a, Long64_t arg0)->Int_t { return a.GetEntry(arg0); });
    t.method("GetEntry", [](TTree& a, Long64_t arg0, Int_t arg1)->Int_t { return a.GetEntry(arg0, arg1); });
    t.method("GetEntry", [](TTree* a, Long64_t arg0)->Int_t { return a->GetEntry(arg0); });
    t.method("GetEntry", [](TTree* a, Long64_t arg0, Int_t arg1)->Int_t { return a->GetEntry(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEvent(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEvent(Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:469:28
    t.method("GetEvent", [](TTree& a, Long64_t arg0)->Int_t { return a.GetEvent(arg0); });
    t.method("GetEvent", [](TTree& a, Long64_t arg0, Int_t arg1)->Int_t { return a.GetEvent(arg0, arg1); });
    t.method("GetEvent", [](TTree* a, Long64_t arg0)->Int_t { return a->GetEvent(arg0); });
    t.method("GetEvent", [](TTree* a, Long64_t arg0, Int_t arg1)->Int_t { return a->GetEvent(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetEntryWithIndex(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetEntryWithIndex(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:470:28
    t.method("GetEntryWithIndex", [](TTree& a, Int_t arg0)->Int_t { return a.GetEntryWithIndex(arg0); });
    t.method("GetEntryWithIndex", [](TTree& a, Int_t arg0, Int_t arg1)->Int_t { return a.GetEntryWithIndex(arg0, arg1); });
    t.method("GetEntryWithIndex", [](TTree* a, Int_t arg0)->Int_t { return a->GetEntryWithIndex(arg0); });
    t.method("GetEntryWithIndex", [](TTree* a, Int_t arg0, Int_t arg1)->Int_t { return a->GetEntryWithIndex(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumberWithBestIndex(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumberWithBestIndex(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:471:28
    t.method("GetEntryNumberWithBestIndex", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetEntryNumberWithBestIndex(arg0); });
    t.method("GetEntryNumberWithBestIndex", [](TTree const& a, Long64_t arg0, Long64_t arg1)->Long64_t { return a.GetEntryNumberWithBestIndex(arg0, arg1); });
    t.method("GetEntryNumberWithBestIndex", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetEntryNumberWithBestIndex(arg0); });
    t.method("GetEntryNumberWithBestIndex", [](TTree const* a, Long64_t arg0, Long64_t arg1)->Long64_t { return a->GetEntryNumberWithBestIndex(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumberWithIndex(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumberWithIndex(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:472:28
    t.method("GetEntryNumberWithIndex", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetEntryNumberWithIndex(arg0); });
    t.method("GetEntryNumberWithIndex", [](TTree const& a, Long64_t arg0, Long64_t arg1)->Long64_t { return a.GetEntryNumberWithIndex(arg0, arg1); });
    t.method("GetEntryNumberWithIndex", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetEntryNumberWithIndex(arg0); });
    t.method("GetEntryNumberWithIndex", [](TTree const* a, Long64_t arg0, Long64_t arg1)->Long64_t { return a->GetEntryNumberWithIndex(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TEntryList * TTree::GetEntryList() (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TTree::GetEntryList()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:474:28
    t.method("GetEntryList", [](TTree& a)->TEntryList * { return a.GetEntryList(); });
    t.method("GetEntryList", [](TTree* a)->TEntryList * { return a->GetEntryList(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetEntryNumber(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetEntryNumber(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:475:28
    t.method("GetEntryNumber", [](TTree const& a, Long64_t arg0)->Long64_t { return a.GetEntryNumber(arg0); });
    t.method("GetEntryNumber", [](TTree const* a, Long64_t arg0)->Long64_t { return a->GetEntryNumber(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetFileNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetFileNumber()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:476:28
    t.method("GetFileNumber", [](TTree const& a)->Int_t { return a.GetFileNumber(); });
    t.method("GetFileNumber", [](TTree const* a)->Int_t { return a->GetFileNumber(); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::GetFriend(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::GetFriend(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:477:28
    t.method("GetFriend", [](TTree const& a, const char * arg0)->TTree * { return a.GetFriend(arg0); });
    t.method("GetFriend", [](TTree const* a, const char * arg0)->TTree * { return a->GetFriend(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TTree::GetFriendAlias(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::GetFriendAlias(TTree *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:478:28
    t.method("GetFriendAlias", [](TTree const& a, TTree * arg0) { return (std::string)a.GetFriendAlias(arg0); });
    t.method("GetFriendAlias", [](TTree const* a, TTree * arg0) { return (std::string)a->GetFriendAlias(arg0); });

    DEBUG_MSG("Adding wrapper for TH1 * TTree::GetHistogram() (" __HERE__ ")");
    // signature to use in the veto list: TH1 * TTree::GetHistogram()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:479:28
    t.method("GetHistogram", [](TTree& a)->TH1 * { return a.GetHistogram(); });
    t.method("GetHistogram", [](TTree* a)->TH1 * { return a->GetHistogram(); });

    DEBUG_MSG("Adding wrapper for bool TTree::GetImplicitMT() (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::GetImplicitMT()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:480:28
    t.method("GetImplicitMT", [](TTree& a)->bool { return a.GetImplicitMT(); });
    t.method("GetImplicitMT", [](TTree* a)->bool { return a->GetImplicitMT(); });

    DEBUG_MSG("Adding wrapper for Int_t * TTree::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TTree::GetIndex()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:481:28
    t.method("GetIndex", [](TTree& a)->Int_t * { return a.GetIndex(); });
    t.method("GetIndex", [](TTree* a)->Int_t * { return a->GetIndex(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetIndexValues() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetIndexValues()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:482:28
    t.method("GetIndexValues", [](TTree& a)->Double_t * { return a.GetIndexValues(); });
    t.method("GetIndexValues", [](TTree* a)->Double_t * { return a->GetIndexValues(); });

    DEBUG_MSG("Adding wrapper for ROOT::TIOFeatures TTree::GetIOFeatures() (" __HERE__ ")");
    // signature to use in the veto list: ROOT::TIOFeatures TTree::GetIOFeatures()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:483:30
    t.method("GetIOFeatures", [](TTree const& a)->ROOT::TIOFeatures { return a.GetIOFeatures(); });
    t.method("GetIOFeatures", [](TTree const* a)->ROOT::TIOFeatures { return a->GetIOFeatures(); });

    DEBUG_MSG("Adding wrapper for TIterator * TTree::GetIteratorOnAllLeaves(bool) (" __HERE__ ")");
    // signature to use in the veto list: TIterator * TTree::GetIteratorOnAllLeaves(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:484:28
    t.method("GetIteratorOnAllLeaves", [](TTree& a)->TIterator * { return a.GetIteratorOnAllLeaves(); });
    t.method("GetIteratorOnAllLeaves", [](TTree& a, bool arg0)->TIterator * { return a.GetIteratorOnAllLeaves(arg0); });
    t.method("GetIteratorOnAllLeaves", [](TTree* a)->TIterator * { return a->GetIteratorOnAllLeaves(); });
    t.method("GetIteratorOnAllLeaves", [](TTree* a, bool arg0)->TIterator * { return a->GetIteratorOnAllLeaves(arg0); });

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::GetLeaf(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::GetLeaf(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:485:28
    t.method("GetLeaf", [](TTree& a, const char * arg0, const char * arg1)->TLeaf * { return a.GetLeaf(arg0, arg1); });
    t.method("GetLeaf", [](TTree* a, const char * arg0, const char * arg1)->TLeaf * { return a->GetLeaf(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TLeaf * TTree::GetLeaf(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TTree::GetLeaf(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:486:28
    t.method("GetLeaf", [](TTree& a, const char * arg0)->TLeaf * { return a.GetLeaf(arg0); });
    t.method("GetLeaf", [](TTree* a, const char * arg0)->TLeaf * { return a->GetLeaf(arg0); });

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfClones() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfClones()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:487:28
    t.method("GetListOfClones", [](TTree& a)->TList * { return a.GetListOfClones(); });
    t.method("GetListOfClones", [](TTree* a)->TList * { return a->GetListOfClones(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TTree::GetListOfBranches() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TTree::GetListOfBranches()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:488:28
    t.method("GetListOfBranches", [](TTree& a)->TObjArray * { return a.GetListOfBranches(); });
    t.method("GetListOfBranches", [](TTree* a)->TObjArray * { return a->GetListOfBranches(); });

    DEBUG_MSG("Adding wrapper for TObjArray * TTree::GetListOfLeaves() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TTree::GetListOfLeaves()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:489:28
    t.method("GetListOfLeaves", [](TTree& a)->TObjArray * { return a.GetListOfLeaves(); });
    t.method("GetListOfLeaves", [](TTree* a)->TObjArray * { return a->GetListOfLeaves(); });

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfFriends() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfFriends()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:490:28
    t.method("GetListOfFriends", [](TTree const& a)->TList * { return a.GetListOfFriends(); });
    t.method("GetListOfFriends", [](TTree const* a)->TList * { return a->GetListOfFriends(); });

    DEBUG_MSG("Adding wrapper for TList * TTree::GetListOfAliases() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetListOfAliases()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:491:28
    t.method("GetListOfAliases", [](TTree const& a)->TList * { return a.GetListOfAliases(); });
    t.method("GetListOfAliases", [](TTree const* a)->TList * { return a->GetListOfAliases(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetMakeClass() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetMakeClass()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:495:28
    t.method("GetMakeClass", [](TTree const& a)->Int_t { return a.GetMakeClass(); });
    t.method("GetMakeClass", [](TTree const* a)->Int_t { return a->GetMakeClass(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxEntryLoop() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxEntryLoop()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:497:28
    t.method("GetMaxEntryLoop", [](TTree const& a)->Long64_t { return a.GetMaxEntryLoop(); });
    t.method("GetMaxEntryLoop", [](TTree const* a)->Long64_t { return a->GetMaxEntryLoop(); });

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetMaximum(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetMaximum(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:498:28
    t.method("GetMaximum", [](TTree& a, const char * arg0)->Double_t { return a.GetMaximum(arg0); });
    t.method("GetMaximum", [](TTree* a, const char * arg0)->Double_t { return a->GetMaximum(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxTreeSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxTreeSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:499:28
    module_.method("TTree!GetMaxTreeSize", []()->Long64_t { return TTree::GetMaxTreeSize(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetMaxVirtualSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetMaxVirtualSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:500:28
    t.method("GetMaxVirtualSize", [](TTree const& a)->Long64_t { return a.GetMaxVirtualSize(); });
    t.method("GetMaxVirtualSize", [](TTree const* a)->Long64_t { return a->GetMaxVirtualSize(); });

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetMinimum(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetMinimum(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:501:28
    t.method("GetMinimum", [](TTree& a, const char * arg0)->Double_t { return a.GetMinimum(arg0); });
    t.method("GetMinimum", [](TTree* a, const char * arg0)->Double_t { return a->GetMinimum(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetNbranches() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetNbranches()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:502:28
    t.method("GetNbranches", [](TTree& a)->Int_t { return a.GetNbranches(); });
    t.method("GetNbranches", [](TTree* a)->Int_t { return a->GetNbranches(); });

    DEBUG_MSG("Adding wrapper for TObject * TTree::GetNotify() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TTree::GetNotify()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:503:28
    t.method("GetNotify", [](TTree const& a)->TObject * { return a.GetNotify(); });
    t.method("GetNotify", [](TTree const* a)->TObject * { return a->GetNotify(); });

    DEBUG_MSG("Adding wrapper for TVirtualTreePlayer * TTree::GetPlayer() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualTreePlayer * TTree::GetPlayer()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:504:28
    t.method("GetPlayer", [](TTree& a)->TVirtualTreePlayer * { return a.GetPlayer(); });
    t.method("GetPlayer", [](TTree* a)->TVirtualTreePlayer * { return a->GetPlayer(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetPacketSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetPacketSize()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:505:28
    t.method("GetPacketSize", [](TTree const& a)->Int_t { return a.GetPacketSize(); });
    t.method("GetPacketSize", [](TTree const* a)->Int_t { return a->GetPacketSize(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetReadEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetReadEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:509:28
    t.method("GetReadEntry", [](TTree const& a)->Long64_t { return a.GetReadEntry(); });
    t.method("GetReadEntry", [](TTree const* a)->Long64_t { return a->GetReadEntry(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetReadEvent() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetReadEvent()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:510:28
    t.method("GetReadEvent", [](TTree const& a)->Long64_t { return a.GetReadEvent(); });
    t.method("GetReadEvent", [](TTree const* a)->Long64_t { return a->GetReadEvent(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetScanField() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetScanField()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:511:28
    t.method("GetScanField", [](TTree const& a)->Int_t { return a.GetScanField(); });
    t.method("GetScanField", [](TTree const* a)->Int_t { return a->GetScanField(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetSelectedRows() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetSelectedRows()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:513:28
    t.method("GetSelectedRows", [](TTree& a)->Long64_t { return a.GetSelectedRows(); });
    t.method("GetSelectedRows", [](TTree* a)->Long64_t { return a->GetSelectedRows(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetTimerInterval() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetTimerInterval()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:514:28
    t.method("GetTimerInterval", [](TTree const& a)->Int_t { return a.GetTimerInterval(); });
    t.method("GetTimerInterval", [](TTree const* a)->Int_t { return a->GetTimerInterval(); });

    DEBUG_MSG("Adding wrapper for TBuffer * TTree::GetTransientBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TBuffer * TTree::GetTransientBuffer(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:515:28
    t.method("GetTransientBuffer", [](TTree& a, Int_t arg0)->TBuffer * { return a.GetTransientBuffer(arg0); });
    t.method("GetTransientBuffer", [](TTree* a, Int_t arg0)->TBuffer * { return a->GetTransientBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetTotBytes() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetTotBytes()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:516:28
    t.method("GetTotBytes", [](TTree const& a)->Long64_t { return a.GetTotBytes(); });
    t.method("GetTotBytes", [](TTree const* a)->Long64_t { return a->GetTotBytes(); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::GetTree() (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::GetTree()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:517:28
    t.method("GetTree", [](TTree const& a)->TTree * { return a.GetTree(); });
    t.method("GetTree", [](TTree const* a)->TTree * { return a->GetTree(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetTreeNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetTreeNumber()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:519:28
    t.method("GetTreeNumber", [](TTree const& a)->Int_t { return a.GetTreeNumber(); });
    t.method("GetTreeNumber", [](TTree const* a)->Int_t { return a->GetTreeNumber(); });

    DEBUG_MSG("Adding wrapper for Float_t TTree::GetTargetMemoryRatio() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TTree::GetTargetMemoryRatio()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:520:12
    t.method("GetTargetMemoryRatio", [](TTree const& a)->Float_t { return a.GetTargetMemoryRatio(); });
    t.method("GetTargetMemoryRatio", [](TTree const* a)->Float_t { return a->GetTargetMemoryRatio(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::GetUpdate() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::GetUpdate()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:521:28
    t.method("GetUpdate", [](TTree const& a)->Int_t { return a.GetUpdate(); });
    t.method("GetUpdate", [](TTree const* a)->Int_t { return a->GetUpdate(); });

    DEBUG_MSG("Adding wrapper for TList * TTree::GetUserInfo() (" __HERE__ ")");
    // signature to use in the veto list: TList * TTree::GetUserInfo()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:522:28
    t.method("GetUserInfo", [](TTree& a)->TList * { return a.GetUserInfo(); });
    t.method("GetUserInfo", [](TTree* a)->TList * { return a->GetUserInfo(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetVal(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetVal(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:534:28
    t.method("GetVal", [](TTree& a, Int_t arg0)->Double_t * { return a.GetVal(arg0); });
    t.method("GetVal", [](TTree* a, Int_t arg0)->Double_t * { return a->GetVal(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV1()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:536:28
    t.method("GetV1", [](TTree& a)->Double_t * { return a.GetV1(); });
    t.method("GetV1", [](TTree* a)->Double_t * { return a->GetV1(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV2()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:538:28
    t.method("GetV2", [](TTree& a)->Double_t * { return a.GetV2(); });
    t.method("GetV2", [](TTree* a)->Double_t * { return a->GetV2(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV3() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV3()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:540:28
    t.method("GetV3", [](TTree& a)->Double_t * { return a.GetV3(); });
    t.method("GetV3", [](TTree* a)->Double_t * { return a->GetV3(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetV4() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetV4()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:542:28
    t.method("GetV4", [](TTree& a)->Double_t * { return a.GetV4(); });
    t.method("GetV4", [](TTree* a)->Double_t * { return a->GetV4(); });

    DEBUG_MSG("Adding wrapper for Double_t * TTree::GetW() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TTree::GetW()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:543:28
    t.method("GetW", [](TTree& a)->Double_t * { return a.GetW(); });
    t.method("GetW", [](TTree* a)->Double_t * { return a->GetW(); });

    DEBUG_MSG("Adding wrapper for Double_t TTree::GetWeight() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TTree::GetWeight()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:544:28
    t.method("GetWeight", [](TTree const& a)->Double_t { return a.GetWeight(); });
    t.method("GetWeight", [](TTree const* a)->Double_t { return a->GetWeight(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::GetZipBytes() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::GetZipBytes()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:545:28
    t.method("GetZipBytes", [](TTree const& a)->Long64_t { return a.GetZipBytes(); });
    t.method("GetZipBytes", [](TTree const* a)->Long64_t { return a->GetZipBytes(); });

    DEBUG_MSG("Adding wrapper for void TTree::IncrementTotalBuffers(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::IncrementTotalBuffers(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:546:28
    t.method("IncrementTotalBuffers", [](TTree& a, Int_t arg0)->void { a.IncrementTotalBuffers(arg0); });
    t.method("IncrementTotalBuffers", [](TTree* a, Int_t arg0)->void { a->IncrementTotalBuffers(arg0); });

    DEBUG_MSG("Adding wrapper for bool TTree::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::IsFolder()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:547:28
    t.method("IsFolder", [](TTree const& a)->bool { return a.IsFolder(); });
    t.method("IsFolder", [](TTree const* a)->bool { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for bool TTree::InPlaceClone(TDirectory *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::InPlaceClone(TDirectory *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:548:28
    t.method("InPlaceClone", [](TTree& a, TDirectory * arg0)->bool { return a.InPlaceClone(arg0); });
    t.method("InPlaceClone", [](TTree& a, TDirectory * arg0, const char * arg1)->bool { return a.InPlaceClone(arg0, arg1); });
    t.method("InPlaceClone", [](TTree* a, TDirectory * arg0)->bool { return a->InPlaceClone(arg0); });
    t.method("InPlaceClone", [](TTree* a, TDirectory * arg0, const char * arg1)->bool { return a->InPlaceClone(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::LoadBaskets(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::LoadBaskets(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:549:28
    t.method("LoadBaskets", [](TTree& a)->Int_t { return a.LoadBaskets(); });
    t.method("LoadBaskets", [](TTree& a, Long64_t arg0)->Int_t { return a.LoadBaskets(arg0); });
    t.method("LoadBaskets", [](TTree* a)->Int_t { return a->LoadBaskets(); });
    t.method("LoadBaskets", [](TTree* a, Long64_t arg0)->Int_t { return a->LoadBaskets(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::LoadTree(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::LoadTree(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:550:28
    t.method("LoadTree", [](TTree& a, Long64_t arg0)->Long64_t { return a.LoadTree(arg0); });
    t.method("LoadTree", [](TTree* a, Long64_t arg0)->Long64_t { return a->LoadTree(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::LoadTreeFriend(Long64_t, TTree *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::LoadTreeFriend(Long64_t, TTree *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:551:28
    t.method("LoadTreeFriend", [](TTree& a, Long64_t arg0, TTree * arg1)->Long64_t { return a.LoadTreeFriend(arg0, arg1); });
    t.method("LoadTreeFriend", [](TTree* a, Long64_t arg0, TTree * arg1)->Long64_t { return a->LoadTreeFriend(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeClass(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeClass(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:552:28
    t.method("MakeClass", [](TTree& a)->Int_t { return a.MakeClass(); });
    t.method("MakeClass", [](TTree& a, const char * arg0)->Int_t { return a.MakeClass(arg0); });
    t.method("MakeClass", [](TTree& a, const char * arg0, Option_t * arg1)->Int_t { return a.MakeClass(arg0, arg1); });
    t.method("MakeClass", [](TTree* a)->Int_t { return a->MakeClass(); });
    t.method("MakeClass", [](TTree* a, const char * arg0)->Int_t { return a->MakeClass(arg0); });
    t.method("MakeClass", [](TTree* a, const char * arg0, Option_t * arg1)->Int_t { return a->MakeClass(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeCode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeCode(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:553:28
    t.method("MakeCode", [](TTree& a)->Int_t { return a.MakeCode(); });
    t.method("MakeCode", [](TTree& a, const char * arg0)->Int_t { return a.MakeCode(arg0); });
    t.method("MakeCode", [](TTree* a)->Int_t { return a->MakeCode(); });
    t.method("MakeCode", [](TTree* a, const char * arg0)->Int_t { return a->MakeCode(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeProxy(const char *, const char *, const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeProxy(const char *, const char *, const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:554:28
    t.method("MakeProxy", [](TTree& a, const char * arg0)->Int_t { return a.MakeProxy(arg0); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.MakeProxy(arg0, arg1); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.MakeProxy(arg0, arg1, arg2); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, const char * arg3)->Int_t { return a.MakeProxy(arg0, arg1, arg2, arg3); });
    t.method("MakeProxy", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, const char * arg3, Int_t arg4)->Int_t { return a.MakeProxy(arg0, arg1, arg2, arg3, arg4); });
    t.method("MakeProxy", [](TTree* a, const char * arg0)->Int_t { return a->MakeProxy(arg0); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->MakeProxy(arg0, arg1); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->MakeProxy(arg0, arg1, arg2); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, const char * arg3)->Int_t { return a->MakeProxy(arg0, arg1, arg2, arg3); });
    t.method("MakeProxy", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, const char * arg3, Int_t arg4)->Int_t { return a->MakeProxy(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::MakeSelector(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::MakeSelector(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:555:28
    t.method("MakeSelector", [](TTree& a)->Int_t { return a.MakeSelector(); });
    t.method("MakeSelector", [](TTree& a, const char * arg0)->Int_t { return a.MakeSelector(arg0); });
    t.method("MakeSelector", [](TTree& a, const char * arg0, Option_t * arg1)->Int_t { return a.MakeSelector(arg0, arg1); });
    t.method("MakeSelector", [](TTree* a)->Int_t { return a->MakeSelector(); });
    t.method("MakeSelector", [](TTree* a, const char * arg0)->Int_t { return a->MakeSelector(arg0); });
    t.method("MakeSelector", [](TTree* a, const char * arg0, Option_t * arg1)->Int_t { return a->MakeSelector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TTree::MemoryFull(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::MemoryFull(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:556:28
    t.method("MemoryFull", [](TTree& a, Int_t arg0)->bool { return a.MemoryFull(arg0); });
    t.method("MemoryFull", [](TTree* a, Int_t arg0)->bool { return a->MemoryFull(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Merge(TCollection *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Merge(TCollection *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:557:28
    t.method("Merge", [](TTree& a, TCollection * arg0)->Long64_t { return a.Merge(arg0); });
    t.method("Merge", [](TTree& a, TCollection * arg0, Option_t * arg1)->Long64_t { return a.Merge(arg0, arg1); });
    t.method("Merge", [](TTree* a, TCollection * arg0)->Long64_t { return a->Merge(arg0); });
    t.method("Merge", [](TTree* a, TCollection * arg0, Option_t * arg1)->Long64_t { return a->Merge(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TTree * TTree::MergeTrees(TList *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTree::MergeTrees(TList *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:559:28
    module_.method("TTree!MergeTrees", [](TList * arg0)->TTree * { return TTree::MergeTrees(arg0); });
    module_.method("TTree!MergeTrees", [](TList * arg0, Option_t * arg1)->TTree * { return TTree::MergeTrees(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TTree::Notify() (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::Notify()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:560:28
    t.method("Notify", [](TTree& a)->bool { return a.Notify(); });
    t.method("Notify", [](TTree* a)->bool { return a->Notify(); });

    DEBUG_MSG("Adding wrapper for void TTree::OptimizeBaskets(ULong64_t, Float_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::OptimizeBaskets(ULong64_t, Float_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:561:28
    t.method("OptimizeBaskets", [](TTree& a)->void { a.OptimizeBaskets(); });
    t.method("OptimizeBaskets", [](TTree& a, ULong64_t arg0)->void { a.OptimizeBaskets(arg0); });
    t.method("OptimizeBaskets", [](TTree& a, ULong64_t arg0, Float_t arg1)->void { a.OptimizeBaskets(arg0, arg1); });
    t.method("OptimizeBaskets", [](TTree& a, ULong64_t arg0, Float_t arg1, Option_t * arg2)->void { a.OptimizeBaskets(arg0, arg1, arg2); });
    t.method("OptimizeBaskets", [](TTree* a)->void { a->OptimizeBaskets(); });
    t.method("OptimizeBaskets", [](TTree* a, ULong64_t arg0)->void { a->OptimizeBaskets(arg0); });
    t.method("OptimizeBaskets", [](TTree* a, ULong64_t arg0, Float_t arg1)->void { a->OptimizeBaskets(arg0, arg1); });
    t.method("OptimizeBaskets", [](TTree* a, ULong64_t arg0, Float_t arg1, Option_t * arg2)->void { a->OptimizeBaskets(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TPrincipal * TTree::Principal(const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TPrincipal * TTree::Principal(const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:562:28
    t.method("Principal", [](TTree& a)->TPrincipal * { return a.Principal(); });
    t.method("Principal", [](TTree& a, const char * arg0)->TPrincipal * { return a.Principal(arg0); });
    t.method("Principal", [](TTree& a, const char * arg0, const char * arg1)->TPrincipal * { return a.Principal(arg0, arg1); });
    t.method("Principal", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2)->TPrincipal * { return a.Principal(arg0, arg1, arg2); });
    t.method("Principal", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->TPrincipal * { return a.Principal(arg0, arg1, arg2, arg3); });
    t.method("Principal", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->TPrincipal * { return a.Principal(arg0, arg1, arg2, arg3, arg4); });
    t.method("Principal", [](TTree* a)->TPrincipal * { return a->Principal(); });
    t.method("Principal", [](TTree* a, const char * arg0)->TPrincipal * { return a->Principal(arg0); });
    t.method("Principal", [](TTree* a, const char * arg0, const char * arg1)->TPrincipal * { return a->Principal(arg0, arg1); });
    t.method("Principal", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2)->TPrincipal * { return a->Principal(arg0, arg1, arg2); });
    t.method("Principal", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->TPrincipal * { return a->Principal(arg0, arg1, arg2, arg3); });
    t.method("Principal", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->TPrincipal * { return a->Principal(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TTree::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:563:28
    t.method("Print", [](TTree const& a)->void { a.Print(); });
    t.method("Print", [](TTree const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TTree const* a)->void { a->Print(); });
    t.method("Print", [](TTree const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::PrintCacheStats(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::PrintCacheStats(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:564:28
    t.method("PrintCacheStats", [](TTree const& a)->void { a.PrintCacheStats(); });
    t.method("PrintCacheStats", [](TTree const& a, Option_t * arg0)->void { a.PrintCacheStats(arg0); });
    t.method("PrintCacheStats", [](TTree const* a)->void { a->PrintCacheStats(); });
    t.method("PrintCacheStats", [](TTree const* a, Option_t * arg0)->void { a->PrintCacheStats(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Process(const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Process(const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:565:28
    t.method("Process", [](TTree& a, const char * arg0)->Long64_t { return a.Process(arg0); });
    t.method("Process", [](TTree& a, const char * arg0, Option_t * arg1)->Long64_t { return a.Process(arg0, arg1); });
    t.method("Process", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2)->Long64_t { return a.Process(arg0, arg1, arg2); });
    t.method("Process", [](TTree& a, const char * arg0, Option_t * arg1, Long64_t arg2, Long64_t arg3)->Long64_t { return a.Process(arg0, arg1, arg2, arg3); });
    t.method("Process", [](TTree* a, const char * arg0)->Long64_t { return a->Process(arg0); });
    t.method("Process", [](TTree* a, const char * arg0, Option_t * arg1)->Long64_t { return a->Process(arg0, arg1); });
    t.method("Process", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2)->Long64_t { return a->Process(arg0, arg1, arg2); });
    t.method("Process", [](TTree* a, const char * arg0, Option_t * arg1, Long64_t arg2, Long64_t arg3)->Long64_t { return a->Process(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Project(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Project(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:567:28
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Project(arg0, arg1); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Long64_t { return a.Project(arg0, arg1, arg2); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Long64_t { return a.Project(arg0, arg1, arg2, arg3); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Long64_t { return a.Project(arg0, arg1, arg2, arg3, arg4); });
    t.method("Project", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4, Long64_t arg5)->Long64_t { return a.Project(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Project(arg0, arg1); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Long64_t { return a->Project(arg0, arg1, arg2); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Long64_t { return a->Project(arg0, arg1, arg2, arg3); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Long64_t { return a->Project(arg0, arg1, arg2, arg3, arg4); });
    t.method("Project", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4, Long64_t arg5)->Long64_t { return a->Project(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::ReadFile(const char *, const char *, char) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::ReadFile(const char *, const char *, char)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:569:28
    t.method("ReadFile", [](TTree& a, const char * arg0)->Long64_t { return a.ReadFile(arg0); });
    t.method("ReadFile", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.ReadFile(arg0, arg1); });
    t.method("ReadFile", [](TTree& a, const char * arg0, const char * arg1, char arg2)->Long64_t { return a.ReadFile(arg0, arg1, arg2); });
    t.method("ReadFile", [](TTree* a, const char * arg0)->Long64_t { return a->ReadFile(arg0); });
    t.method("ReadFile", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->ReadFile(arg0, arg1); });
    t.method("ReadFile", [](TTree* a, const char * arg0, const char * arg1, char arg2)->Long64_t { return a->ReadFile(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TTree::Refresh() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Refresh()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:571:28
    t.method("Refresh", [](TTree& a)->void { a.Refresh(); });
    t.method("Refresh", [](TTree* a)->void { a->Refresh(); });

    DEBUG_MSG("Adding wrapper for void TTree::RemoveFriend(TTree *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::RemoveFriend(TTree *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:574:28
    t.method("RemoveFriend", [](TTree& a, TTree * arg0)->void { a.RemoveFriend(arg0); });
    t.method("RemoveFriend", [](TTree* a, TTree * arg0)->void { a->RemoveFriend(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:575:28
    t.method("RecursiveRemove", [](TTree& a, TObject * arg0)->void { a.RecursiveRemove(arg0); });
    t.method("RecursiveRemove", [](TTree* a, TObject * arg0)->void { a->RecursiveRemove(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Reset(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:576:28
    t.method("Reset", [](TTree& a)->void { a.Reset(); });
    t.method("Reset", [](TTree& a, Option_t * arg0)->void { a.Reset(arg0); });
    t.method("Reset", [](TTree* a)->void { a->Reset(); });
    t.method("Reset", [](TTree* a, Option_t * arg0)->void { a->Reset(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::ResetBranchAddress(TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::ResetBranchAddress(TBranch *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:578:28
    t.method("ResetBranchAddress", [](TTree& a, TBranch * arg0)->void { a.ResetBranchAddress(arg0); });
    t.method("ResetBranchAddress", [](TTree* a, TBranch * arg0)->void { a->ResetBranchAddress(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::ResetBranchAddresses() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::ResetBranchAddresses()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:579:28
    t.method("ResetBranchAddresses", [](TTree& a)->void { a.ResetBranchAddresses(); });
    t.method("ResetBranchAddresses", [](TTree* a)->void { a->ResetBranchAddresses(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::Scan(const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::Scan(const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:580:28
    t.method("Scan", [](TTree& a)->Long64_t { return a.Scan(); });
    t.method("Scan", [](TTree& a, const char * arg0)->Long64_t { return a.Scan(arg0); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1)->Long64_t { return a.Scan(arg0, arg1); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a.Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a.Scan(arg0, arg1, arg2, arg3); });
    t.method("Scan", [](TTree& a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->Long64_t { return a.Scan(arg0, arg1, arg2, arg3, arg4); });
    t.method("Scan", [](TTree* a)->Long64_t { return a->Scan(); });
    t.method("Scan", [](TTree* a, const char * arg0)->Long64_t { return a->Scan(arg0); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1)->Long64_t { return a->Scan(arg0, arg1); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2)->Long64_t { return a->Scan(arg0, arg1, arg2); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3)->Long64_t { return a->Scan(arg0, arg1, arg2, arg3); });
    t.method("Scan", [](TTree* a, const char * arg0, const char * arg1, Option_t * arg2, Long64_t arg3, Long64_t arg4)->Long64_t { return a->Scan(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for bool TTree::SetAlias(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TTree::SetAlias(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:581:28
    t.method("SetAlias", [](TTree& a, const char * arg0, const char * arg1)->bool { return a.SetAlias(arg0, arg1); });
    t.method("SetAlias", [](TTree* a, const char * arg0, const char * arg1)->bool { return a->SetAlias(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetAutoSave(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetAutoSave(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:582:28
    t.method("SetAutoSave", [](TTree& a)->void { a.SetAutoSave(); });
    t.method("SetAutoSave", [](TTree& a, Long64_t arg0)->void { a.SetAutoSave(arg0); });
    t.method("SetAutoSave", [](TTree* a)->void { a->SetAutoSave(); });
    t.method("SetAutoSave", [](TTree* a, Long64_t arg0)->void { a->SetAutoSave(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetAutoFlush(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetAutoFlush(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:583:28
    t.method("SetAutoFlush", [](TTree& a)->void { a.SetAutoFlush(); });
    t.method("SetAutoFlush", [](TTree& a, Long64_t arg0)->void { a.SetAutoFlush(arg0); });
    t.method("SetAutoFlush", [](TTree* a)->void { a->SetAutoFlush(); });
    t.method("SetAutoFlush", [](TTree* a, Long64_t arg0)->void { a->SetAutoFlush(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetBasketSize(const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBasketSize(const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:584:28
    t.method("SetBasketSize", [](TTree& a, const char * arg0)->void { a.SetBasketSize(arg0); });
    t.method("SetBasketSize", [](TTree& a, const char * arg0, Int_t arg1)->void { a.SetBasketSize(arg0, arg1); });
    t.method("SetBasketSize", [](TTree* a, const char * arg0)->void { a->SetBasketSize(arg0); });
    t.method("SetBasketSize", [](TTree* a, const char * arg0, Int_t arg1)->void { a->SetBasketSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TBranch **) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TBranch **)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:585:28
    t.method("SetBranchAddress", [](TTree& a, const char * arg0, void * arg1)->Int_t { return a.SetBranchAddress(arg0, arg1); });
    t.method("SetBranchAddress", [](TTree& a, const char * arg0, void * arg1, TBranch ** arg2)->Int_t { return a.SetBranchAddress(arg0, arg1, arg2); });
    t.method("SetBranchAddress", [](TTree* a, const char * arg0, void * arg1)->Int_t { return a->SetBranchAddress(arg0, arg1); });
    t.method("SetBranchAddress", [](TTree* a, const char * arg0, void * arg1, TBranch ** arg2)->Int_t { return a->SetBranchAddress(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TClass *, EDataType, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TClass *, EDataType, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:586:28
    t.method("SetBranchAddress", [](TTree& a, const char * arg0, void * arg1, TClass * arg2, EDataType arg3, bool arg4)->Int_t { return a.SetBranchAddress(arg0, arg1, arg2, arg3, arg4); });
    t.method("SetBranchAddress", [](TTree* a, const char * arg0, void * arg1, TClass * arg2, EDataType arg3, bool arg4)->Int_t { return a->SetBranchAddress(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetBranchAddress(const char *, void *, TBranch **, TClass *, EDataType, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetBranchAddress(const char *, void *, TBranch **, TClass *, EDataType, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:587:28
    t.method("SetBranchAddress", [](TTree& a, const char * arg0, void * arg1, TBranch ** arg2, TClass * arg3, EDataType arg4, bool arg5)->Int_t { return a.SetBranchAddress(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("SetBranchAddress", [](TTree* a, const char * arg0, void * arg1, TBranch ** arg2, TClass * arg3, EDataType arg4, bool arg5)->Int_t { return a->SetBranchAddress(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TTree::SetBranchStatus(const char *, bool, UInt_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBranchStatus(const char *, bool, UInt_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:604:28
    t.method("SetBranchStatus", [](TTree& a, const char * arg0)->void { a.SetBranchStatus(arg0); });
    t.method("SetBranchStatus", [](TTree& a, const char * arg0, bool arg1)->void { a.SetBranchStatus(arg0, arg1); });
    t.method("SetBranchStatus", [](TTree& a, const char * arg0, bool arg1, UInt_t * arg2)->void { a.SetBranchStatus(arg0, arg1, arg2); });
    t.method("SetBranchStatus", [](TTree* a, const char * arg0)->void { a->SetBranchStatus(arg0); });
    t.method("SetBranchStatus", [](TTree* a, const char * arg0, bool arg1)->void { a->SetBranchStatus(arg0, arg1); });
    t.method("SetBranchStatus", [](TTree* a, const char * arg0, bool arg1, UInt_t * arg2)->void { a->SetBranchStatus(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TTree::SetBranchStyle(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetBranchStyle(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:605:28
    module_.method("TTree!SetBranchStyle", []()->void { TTree::SetBranchStyle(); });
    module_.method("TTree!SetBranchStyle", [](Int_t arg0)->void { TTree::SetBranchStyle(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetCacheSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetCacheSize(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:606:28
    t.method("SetCacheSize", [](TTree& a)->Int_t { return a.SetCacheSize(); });
    t.method("SetCacheSize", [](TTree& a, Long64_t arg0)->Int_t { return a.SetCacheSize(arg0); });
    t.method("SetCacheSize", [](TTree* a)->Int_t { return a->SetCacheSize(); });
    t.method("SetCacheSize", [](TTree* a, Long64_t arg0)->Int_t { return a->SetCacheSize(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::SetCacheEntryRange(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::SetCacheEntryRange(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:607:28
    t.method("SetCacheEntryRange", [](TTree& a, Long64_t arg0, Long64_t arg1)->Int_t { return a.SetCacheEntryRange(arg0, arg1); });
    t.method("SetCacheEntryRange", [](TTree* a, Long64_t arg0, Long64_t arg1)->Int_t { return a->SetCacheEntryRange(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetCacheLearnEntries(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetCacheLearnEntries(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:608:28
    t.method("SetCacheLearnEntries", [](TTree& a)->void { a.SetCacheLearnEntries(); });
    t.method("SetCacheLearnEntries", [](TTree& a, Int_t arg0)->void { a.SetCacheLearnEntries(arg0); });
    t.method("SetCacheLearnEntries", [](TTree* a)->void { a->SetCacheLearnEntries(); });
    t.method("SetCacheLearnEntries", [](TTree* a, Int_t arg0)->void { a->SetCacheLearnEntries(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetChainOffset(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetChainOffset(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:609:28
    t.method("SetChainOffset", [](TTree& a)->void { a.SetChainOffset(); });
    t.method("SetChainOffset", [](TTree& a, Long64_t arg0)->void { a.SetChainOffset(arg0); });
    t.method("SetChainOffset", [](TTree* a)->void { a->SetChainOffset(); });
    t.method("SetChainOffset", [](TTree* a, Long64_t arg0)->void { a->SetChainOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetCircular(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetCircular(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:610:28
    t.method("SetCircular", [](TTree& a, Long64_t arg0)->void { a.SetCircular(arg0); });
    t.method("SetCircular", [](TTree* a, Long64_t arg0)->void { a->SetCircular(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetClusterPrefetch(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetClusterPrefetch(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:611:28
    t.method("SetClusterPrefetch", [](TTree& a, bool arg0)->void { a.SetClusterPrefetch(arg0); });
    t.method("SetClusterPrefetch", [](TTree* a, bool arg0)->void { a->SetClusterPrefetch(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetDebug(Int_t, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDebug(Int_t, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:612:28
    t.method("SetDebug", [](TTree& a)->void { a.SetDebug(); });
    t.method("SetDebug", [](TTree& a, Int_t arg0)->void { a.SetDebug(arg0); });
    t.method("SetDebug", [](TTree& a, Int_t arg0, Long64_t arg1)->void { a.SetDebug(arg0, arg1); });
    t.method("SetDebug", [](TTree& a, Int_t arg0, Long64_t arg1, Long64_t arg2)->void { a.SetDebug(arg0, arg1, arg2); });
    t.method("SetDebug", [](TTree* a)->void { a->SetDebug(); });
    t.method("SetDebug", [](TTree* a, Int_t arg0)->void { a->SetDebug(arg0); });
    t.method("SetDebug", [](TTree* a, Int_t arg0, Long64_t arg1)->void { a->SetDebug(arg0, arg1); });
    t.method("SetDebug", [](TTree* a, Int_t arg0, Long64_t arg1, Long64_t arg2)->void { a->SetDebug(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TTree::SetDefaultEntryOffsetLen(Int_t, bool) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDefaultEntryOffsetLen(Int_t, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:613:28
    t.method("SetDefaultEntryOffsetLen", [](TTree& a, Int_t arg0)->void { a.SetDefaultEntryOffsetLen(arg0); });
    t.method("SetDefaultEntryOffsetLen", [](TTree& a, Int_t arg0, bool arg1)->void { a.SetDefaultEntryOffsetLen(arg0, arg1); });
    t.method("SetDefaultEntryOffsetLen", [](TTree* a, Int_t arg0)->void { a->SetDefaultEntryOffsetLen(arg0); });
    t.method("SetDefaultEntryOffsetLen", [](TTree* a, Int_t arg0, bool arg1)->void { a->SetDefaultEntryOffsetLen(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetDirectory(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetDirectory(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:614:28
    t.method("SetDirectory", [](TTree& a, TDirectory * arg0)->void { a.SetDirectory(arg0); });
    t.method("SetDirectory", [](TTree* a, TDirectory * arg0)->void { a->SetDirectory(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTree::SetEntries(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTree::SetEntries(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:615:28
    t.method("SetEntries", [](TTree& a)->Long64_t { return a.SetEntries(); });
    t.method("SetEntries", [](TTree& a, Long64_t arg0)->Long64_t { return a.SetEntries(arg0); });
    t.method("SetEntries", [](TTree* a)->Long64_t { return a->SetEntries(); });
    t.method("SetEntries", [](TTree* a, Long64_t arg0)->Long64_t { return a->SetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetEstimate(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetEstimate(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:616:28
    t.method("SetEstimate", [](TTree& a)->void { a.SetEstimate(); });
    t.method("SetEstimate", [](TTree& a, Long64_t arg0)->void { a.SetEstimate(arg0); });
    t.method("SetEstimate", [](TTree* a)->void { a->SetEstimate(); });
    t.method("SetEstimate", [](TTree* a, Long64_t arg0)->void { a->SetEstimate(arg0); });

    DEBUG_MSG("Adding wrapper for ROOT::TIOFeatures TTree::SetIOFeatures(const ROOT::TIOFeatures &) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::TIOFeatures TTree::SetIOFeatures(const ROOT::TIOFeatures &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:617:30
    t.method("SetIOFeatures", [](TTree& a, const ROOT::TIOFeatures & arg0)->ROOT::TIOFeatures { return a.SetIOFeatures(arg0); });
    t.method("SetIOFeatures", [](TTree* a, const ROOT::TIOFeatures & arg0)->ROOT::TIOFeatures { return a->SetIOFeatures(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetFileNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetFileNumber(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:618:28
    t.method("SetFileNumber", [](TTree& a)->void { a.SetFileNumber(); });
    t.method("SetFileNumber", [](TTree& a, Int_t arg0)->void { a.SetFileNumber(arg0); });
    t.method("SetFileNumber", [](TTree* a)->void { a->SetFileNumber(); });
    t.method("SetFileNumber", [](TTree* a, Int_t arg0)->void { a->SetFileNumber(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetEntryList(TEntryList *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetEntryList(TEntryList *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:620:28
    t.method("SetEntryList", [](TTree& a, TEntryList * arg0)->void { a.SetEntryList(arg0); });
    t.method("SetEntryList", [](TTree& a, TEntryList * arg0, Option_t * arg1)->void { a.SetEntryList(arg0, arg1); });
    t.method("SetEntryList", [](TTree* a, TEntryList * arg0)->void { a->SetEntryList(arg0); });
    t.method("SetEntryList", [](TTree* a, TEntryList * arg0, Option_t * arg1)->void { a->SetEntryList(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetImplicitMT(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetImplicitMT(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:621:28
    t.method("SetImplicitMT", [](TTree& a, bool arg0)->void { a.SetImplicitMT(arg0); });
    t.method("SetImplicitMT", [](TTree* a, bool arg0)->void { a->SetImplicitMT(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMakeClass(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMakeClass(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:622:28
    t.method("SetMakeClass", [](TTree& a, Int_t arg0)->void { a.SetMakeClass(arg0); });
    t.method("SetMakeClass", [](TTree* a, Int_t arg0)->void { a->SetMakeClass(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxEntryLoop(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxEntryLoop(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:623:28
    t.method("SetMaxEntryLoop", [](TTree& a)->void { a.SetMaxEntryLoop(); });
    t.method("SetMaxEntryLoop", [](TTree& a, Long64_t arg0)->void { a.SetMaxEntryLoop(arg0); });
    t.method("SetMaxEntryLoop", [](TTree* a)->void { a->SetMaxEntryLoop(); });
    t.method("SetMaxEntryLoop", [](TTree* a, Long64_t arg0)->void { a->SetMaxEntryLoop(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxTreeSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxTreeSize(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:624:28
    module_.method("TTree!SetMaxTreeSize", []()->void { TTree::SetMaxTreeSize(); });
    module_.method("TTree!SetMaxTreeSize", [](Long64_t arg0)->void { TTree::SetMaxTreeSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetMaxVirtualSize(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetMaxVirtualSize(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:625:28
    t.method("SetMaxVirtualSize", [](TTree& a)->void { a.SetMaxVirtualSize(); });
    t.method("SetMaxVirtualSize", [](TTree& a, Long64_t arg0)->void { a.SetMaxVirtualSize(arg0); });
    t.method("SetMaxVirtualSize", [](TTree* a)->void { a->SetMaxVirtualSize(); });
    t.method("SetMaxVirtualSize", [](TTree* a, Long64_t arg0)->void { a->SetMaxVirtualSize(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:626:28
    t.method("SetName", [](TTree& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TTree* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetNotify(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetNotify(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:640:28
    t.method("SetNotify", [](TTree& a, TObject * arg0)->void { a.SetNotify(arg0); });
    t.method("SetNotify", [](TTree* a, TObject * arg0)->void { a->SetNotify(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetObject(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetObject(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:642:28
    t.method("SetObject", [](TTree& a, const char * arg0, const char * arg1)->void { a.SetObject(arg0, arg1); });
    t.method("SetObject", [](TTree* a, const char * arg0, const char * arg1)->void { a->SetObject(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetParallelUnzip(bool, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetParallelUnzip(bool, Float_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:643:28
    t.method("SetParallelUnzip", [](TTree& a)->void { a.SetParallelUnzip(); });
    t.method("SetParallelUnzip", [](TTree& a, bool arg0)->void { a.SetParallelUnzip(arg0); });
    t.method("SetParallelUnzip", [](TTree& a, bool arg0, Float_t arg1)->void { a.SetParallelUnzip(arg0, arg1); });
    t.method("SetParallelUnzip", [](TTree* a)->void { a->SetParallelUnzip(); });
    t.method("SetParallelUnzip", [](TTree* a, bool arg0)->void { a->SetParallelUnzip(arg0); });
    t.method("SetParallelUnzip", [](TTree* a, bool arg0, Float_t arg1)->void { a->SetParallelUnzip(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetScanField(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetScanField(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:645:28
    t.method("SetScanField", [](TTree& a)->void { a.SetScanField(); });
    t.method("SetScanField", [](TTree& a, Int_t arg0)->void { a.SetScanField(arg0); });
    t.method("SetScanField", [](TTree* a)->void { a->SetScanField(); });
    t.method("SetScanField", [](TTree* a, Int_t arg0)->void { a->SetScanField(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetTargetMemoryRatio(Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetTargetMemoryRatio(Float_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:646:9
    t.method("SetTargetMemoryRatio", [](TTree& a, Float_t arg0)->void { a.SetTargetMemoryRatio(arg0); });
    t.method("SetTargetMemoryRatio", [](TTree* a, Float_t arg0)->void { a->SetTargetMemoryRatio(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetTimerInterval(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetTimerInterval(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:647:28
    t.method("SetTimerInterval", [](TTree& a)->void { a.SetTimerInterval(); });
    t.method("SetTimerInterval", [](TTree& a, Int_t arg0)->void { a.SetTimerInterval(arg0); });
    t.method("SetTimerInterval", [](TTree* a)->void { a->SetTimerInterval(); });
    t.method("SetTimerInterval", [](TTree* a, Int_t arg0)->void { a->SetTimerInterval(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::SetWeight(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetWeight(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:649:28
    t.method("SetWeight", [](TTree& a)->void { a.SetWeight(); });
    t.method("SetWeight", [](TTree& a, Double_t arg0)->void { a.SetWeight(arg0); });
    t.method("SetWeight", [](TTree& a, Double_t arg0, Option_t * arg1)->void { a.SetWeight(arg0, arg1); });
    t.method("SetWeight", [](TTree* a)->void { a->SetWeight(); });
    t.method("SetWeight", [](TTree* a, Double_t arg0)->void { a->SetWeight(arg0); });
    t.method("SetWeight", [](TTree* a, Double_t arg0, Option_t * arg1)->void { a->SetWeight(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::SetUpdate(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::SetUpdate(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:650:28
    t.method("SetUpdate", [](TTree& a)->void { a.SetUpdate(); });
    t.method("SetUpdate", [](TTree& a, Int_t arg0)->void { a.SetUpdate(arg0); });
    t.method("SetUpdate", [](TTree* a)->void { a->SetUpdate(); });
    t.method("SetUpdate", [](TTree* a, Int_t arg0)->void { a->SetUpdate(arg0); });

    DEBUG_MSG("Adding wrapper for void TTree::Show(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Show(Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:651:28
    t.method("Show", [](TTree& a)->void { a.Show(); });
    t.method("Show", [](TTree& a, Long64_t arg0)->void { a.Show(arg0); });
    t.method("Show", [](TTree& a, Long64_t arg0, Int_t arg1)->void { a.Show(arg0, arg1); });
    t.method("Show", [](TTree* a)->void { a->Show(); });
    t.method("Show", [](TTree* a, Long64_t arg0)->void { a->Show(arg0); });
    t.method("Show", [](TTree* a, Long64_t arg0, Int_t arg1)->void { a->Show(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTree::StartViewer() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::StartViewer()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:652:28
    t.method("StartViewer", [](TTree& a)->void { a.StartViewer(); });
    t.method("StartViewer", [](TTree* a)->void { a->StartViewer(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::StopCacheLearningPhase() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::StopCacheLearningPhase()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:653:28
    t.method("StopCacheLearningPhase", [](TTree& a)->Int_t { return a.StopCacheLearningPhase(); });
    t.method("StopCacheLearningPhase", [](TTree* a)->Int_t { return a->StopCacheLearningPhase(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::UnbinnedFit(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::UnbinnedFit(const char *, const char *, const char *, Option_t *, Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:654:28
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1)->Int_t { return a.UnbinnedFit(arg0, arg1); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2, arg3); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2, arg3, arg4); });
    t.method("UnbinnedFit", [](TTree& a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4, Long64_t arg5)->Int_t { return a.UnbinnedFit(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1)->Int_t { return a->UnbinnedFit(arg0, arg1); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2, arg3); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2, arg3, arg4); });
    t.method("UnbinnedFit", [](TTree* a, const char * arg0, const char * arg1, const char * arg2, Option_t * arg3, Long64_t arg4, Long64_t arg5)->Int_t { return a->UnbinnedFit(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TTree::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TTree::UseCurrentStyle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:655:28
    t.method("UseCurrentStyle", [](TTree& a)->void { a.UseCurrentStyle(); });
    t.method("UseCurrentStyle", [](TTree* a)->void { a->UseCurrentStyle(); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:656:28
    t.method("Write", [](TTree& a)->Int_t { return a.Write(); });
    t.method("Write", [](TTree& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TTree& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TTree& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); });
    t.method("Write", [](TTree* a)->Int_t { return a->Write(); });
    t.method("Write", [](TTree* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TTree* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });
    t.method("Write", [](TTree* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TTree::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TTree::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:657:28
    t.method("Write", [](TTree const& a)->Int_t { return a.Write(); });
    t.method("Write", [](TTree const& a, const char * arg0)->Int_t { return a.Write(arg0); });
    t.method("Write", [](TTree const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); });
    t.method("Write", [](TTree const& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); });
    t.method("Write", [](TTree const* a)->Int_t { return a->Write(); });
    t.method("Write", [](TTree const* a, const char * arg0)->Int_t { return a->Write(arg0); });
    t.method("Write", [](TTree const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); });
    t.method("Write", [](TTree const* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Version_t TTree::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TTree::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!Class_Version", []()->Version_t { return TTree::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TTree::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    t.method("IsA", [](TTree const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TTree const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TTree::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    t.method("StreamerNVirtual", [](TTree& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TTree* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TTree::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!DeclFileName", []() { return (std::string)TTree::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TTree::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTree::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!ImplFileLine", []()->int { return TTree::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TTree::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!ImplFileName", []() { return (std::string)TTree::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TTree::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTree::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!Class_Name", []() { return (std::string)TTree::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TTree::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!Dictionary", []()->TClass * { return TTree::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TTree::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTree::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!Class", []()->TClass * { return TTree::Class(); });

    DEBUG_MSG("Adding wrapper for void TTree::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTree::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    t.method("Streamer", [](TTree& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TTree* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TTree::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTree::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:659:4
    module_.method("TTree!DeclFileLine", []()->int { return TTree::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTree>> type_;
};
std::shared_ptr<Wrapper> newJlTTree(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTree(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TLeaf> : std::false_type { };
  template<> struct DefaultConstructible<TLeaf> : std::false_type { };
template<> struct SuperType<TLeaf> { typedef TNamed type; };
}

// Class generating the wrapper for type TLeaf
// signature to use in the veto file: TLeaf
struct JlTLeaf: public Wrapper {

  JlTLeaf(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TLeaf (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:57:7
    jlcxx::TypeWrapper<TLeaf>  t = jlModule.add_type<TLeaf>("TLeaf",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TLeaf>>(new jlcxx::TypeWrapper<TLeaf>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TLeaf::TLeaf(TBranch *, const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:108:4
    t.constructor<TBranch *, const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TLeaf::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:111:21
    t.method("Browse", [](TLeaf& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TLeaf* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::CanGenerateOffsetArray() (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::CanGenerateOffsetArray()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:112:21
    t.method("CanGenerateOffsetArray", [](TLeaf& a)->bool { return a.CanGenerateOffsetArray(); });
    t.method("CanGenerateOffsetArray", [](TLeaf* a)->bool { return a->CanGenerateOffsetArray(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::Export(TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Export(TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:113:21
    t.method("Export", [](TLeaf& a, TClonesArray * arg0, Int_t arg1)->void { a.Export(arg0, arg1); });
    t.method("Export", [](TLeaf* a, TClonesArray * arg0, Int_t arg1)->void { a->Export(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TLeaf::FillBasket(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::FillBasket(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:114:21
    t.method("FillBasket", [](TLeaf& a, TBuffer & arg0)->void { a.FillBasket(arg0); });
    t.method("FillBasket", [](TLeaf* a, TBuffer & arg0)->void { a->FillBasket(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t * TLeaf::GenerateOffsetArray(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TLeaf::GenerateOffsetArray(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:115:21
    t.method("GenerateOffsetArray", [](TLeaf& a, Int_t arg0, Int_t arg1)->Int_t * { return a.GenerateOffsetArray(arg0, arg1); });
    t.method("GenerateOffsetArray", [](TLeaf* a, Int_t arg0, Int_t arg1)->Int_t * { return a->GenerateOffsetArray(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TBranch * TLeaf::GetBranch() (" __HERE__ ")");
    // signature to use in the veto list: TBranch * TLeaf::GetBranch()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:116:21
    t.method("GetBranch", [](TLeaf const& a)->TBranch * { return a.GetBranch(); });
    t.method("GetBranch", [](TLeaf const* a)->TBranch * { return a->GetBranch(); });

    DEBUG_MSG("Adding wrapper for TLeaf::DeserializeType TLeaf::GetDeserializeType() (" __HERE__ ")");
    // signature to use in the veto list: TLeaf::DeserializeType TLeaf::GetDeserializeType()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:117:28
    t.method("GetDeserializeType", [](TLeaf const& a)->TLeaf::DeserializeType { return a.GetDeserializeType(); });
    t.method("GetDeserializeType", [](TLeaf const* a)->TLeaf::DeserializeType { return a->GetDeserializeType(); });

    DEBUG_MSG("Adding wrapper for TString TLeaf::GetFullName() (" __HERE__ ")");
    // signature to use in the veto list: TString TLeaf::GetFullName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:118:21
    t.method("GetFullName", [](TLeaf const& a)->TString { return a.GetFullName(); });
    t.method("GetFullName", [](TLeaf const* a)->TString { return a->GetFullName(); });

    DEBUG_MSG("Adding wrapper for TLeaf * TLeaf::GetLeafCount() (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TLeaf::GetLeafCount()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:121:21
    t.method("GetLeafCount", [](TLeaf const& a)->TLeaf * { return a.GetLeafCount(); });
    t.method("GetLeafCount", [](TLeaf const* a)->TLeaf * { return a->GetLeafCount(); });

    DEBUG_MSG("Adding wrapper for TLeaf * TLeaf::GetLeafCounter(Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: TLeaf * TLeaf::GetLeafCounter(Int_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:122:21
    t.method("GetLeafCounter", [](TLeaf const& a, Int_t & arg0)->TLeaf * { return a.GetLeafCounter(arg0); });
    t.method("GetLeafCounter", [](TLeaf const* a, Int_t & arg0)->TLeaf * { return a->GetLeafCounter(arg0); });


    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLen()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:126:21
    t.method("GetLen", [](TLeaf const& a)->Int_t { return a.GetLen(); });
    t.method("GetLen", [](TLeaf const* a)->Int_t { return a->GetLen(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLenStatic() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLenStatic()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:132:21
    t.method("GetLenStatic", [](TLeaf const& a)->Int_t { return a.GetLenStatic(); });
    t.method("GetLenStatic", [](TLeaf const* a)->Int_t { return a->GetLenStatic(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetLenType() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetLenType()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:133:21
    t.method("GetLenType", [](TLeaf const& a)->Int_t { return a.GetLenType(); });
    t.method("GetLenType", [](TLeaf const* a)->Int_t { return a->GetLenType(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetMaximum() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetMaximum()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:134:21
    t.method("GetMaximum", [](TLeaf const& a)->Int_t { return a.GetMaximum(); });
    t.method("GetMaximum", [](TLeaf const* a)->Int_t { return a->GetMaximum(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetMinimum() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetMinimum()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:135:21
    t.method("GetMinimum", [](TLeaf const& a)->Int_t { return a.GetMinimum(); });
    t.method("GetMinimum", [](TLeaf const* a)->Int_t { return a->GetMinimum(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetNdata() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetNdata()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:136:21
    t.method("GetNdata", [](TLeaf const& a)->Int_t { return a.GetNdata(); });
    t.method("GetNdata", [](TLeaf const* a)->Int_t { return a->GetNdata(); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::GetOffset() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::GetOffset()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:137:21
    t.method("GetOffset", [](TLeaf const& a)->Int_t { return a.GetOffset(); });
    t.method("GetOffset", [](TLeaf const* a)->Int_t { return a->GetOffset(); });

    DEBUG_MSG("Adding wrapper for void * TLeaf::GetValuePointer() (" __HERE__ ")");
    // signature to use in the veto list: void * TLeaf::GetValuePointer()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:138:21
    t.method("GetValuePointer", [](TLeaf const& a)->void * { return a.GetValuePointer(); });
    t.method("GetValuePointer", [](TLeaf const* a)->void * { return a->GetValuePointer(); });

    DEBUG_MSG("Adding wrapper for const char * TLeaf::GetTypeName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::GetTypeName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:139:24
    t.method("GetTypeName", [](TLeaf const& a) { return (std::string)a.GetTypeName(); });
    t.method("GetTypeName", [](TLeaf const* a) { return (std::string)a->GetTypeName(); });

    DEBUG_MSG("Adding wrapper for Double_t TLeaf::GetValue(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TLeaf::GetValue(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:141:21
    t.method("GetValue", [](TLeaf const& a)->Double_t { return a.GetValue(); });
    t.method("GetValue", [](TLeaf const& a, Int_t arg0)->Double_t { return a.GetValue(arg0); });
    t.method("GetValue", [](TLeaf const* a)->Double_t { return a->GetValue(); });
    t.method("GetValue", [](TLeaf const* a, Int_t arg0)->Double_t { return a->GetValue(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TLeaf::GetValueLong64(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TLeaf::GetValueLong64(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:142:21
    t.method("GetValueLong64", [](TLeaf const& a)->Long64_t { return a.GetValueLong64(); });
    t.method("GetValueLong64", [](TLeaf const& a, Int_t arg0)->Long64_t { return a.GetValueLong64(arg0); });
    t.method("GetValueLong64", [](TLeaf const* a)->Long64_t { return a->GetValueLong64(); });
    t.method("GetValueLong64", [](TLeaf const* a, Int_t arg0)->Long64_t { return a->GetValueLong64(arg0); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::IncludeRange(TLeaf *) (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::IncludeRange(TLeaf *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:146:21
    t.method("IncludeRange", [](TLeaf& a, TLeaf * arg0)->bool { return a.IncludeRange(arg0); });
    t.method("IncludeRange", [](TLeaf* a, TLeaf * arg0)->bool { return a->IncludeRange(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::Import(TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Import(TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:147:21
    t.method("Import", [](TLeaf& a, TClonesArray * arg0, Int_t arg1)->void { a.Import(arg0, arg1); });
    t.method("Import", [](TLeaf* a, TClonesArray * arg0, Int_t arg1)->void { a->Import(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::IsOnTerminalBranch() (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::IsOnTerminalBranch()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:148:21
    t.method("IsOnTerminalBranch", [](TLeaf const& a)->bool { return a.IsOnTerminalBranch(); });
    t.method("IsOnTerminalBranch", [](TLeaf const* a)->bool { return a->IsOnTerminalBranch(); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::IsRange() (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::IsRange()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:149:21
    t.method("IsRange", [](TLeaf const& a)->bool { return a.IsRange(); });
    t.method("IsRange", [](TLeaf const* a)->bool { return a->IsRange(); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::IsUnsigned() (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::IsUnsigned()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:150:21
    t.method("IsUnsigned", [](TLeaf const& a)->bool { return a.IsUnsigned(); });
    t.method("IsUnsigned", [](TLeaf const* a)->bool { return a->IsUnsigned(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::PrintValue(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::PrintValue(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:151:21
    t.method("PrintValue", [](TLeaf const& a)->void { a.PrintValue(); });
    t.method("PrintValue", [](TLeaf const& a, Int_t arg0)->void { a.PrintValue(arg0); });
    t.method("PrintValue", [](TLeaf const* a)->void { a->PrintValue(); });
    t.method("PrintValue", [](TLeaf const* a, Int_t arg0)->void { a->PrintValue(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::ReadBasket(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::ReadBasket(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:152:21
    t.method("ReadBasket", [](TLeaf& a, TBuffer & arg0)->void { a.ReadBasket(arg0); });
    t.method("ReadBasket", [](TLeaf* a, TBuffer & arg0)->void { a->ReadBasket(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::ReadBasketExport(TBuffer &, TClonesArray *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::ReadBasketExport(TBuffer &, TClonesArray *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:153:21
    t.method("ReadBasketExport", [](TLeaf& a, TBuffer & arg0, TClonesArray * arg1, Int_t arg2)->void { a.ReadBasketExport(arg0, arg1, arg2); });
    t.method("ReadBasketExport", [](TLeaf* a, TBuffer & arg0, TClonesArray * arg1, Int_t arg2)->void { a->ReadBasketExport(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::ReadBasketFast(TBuffer &, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::ReadBasketFast(TBuffer &, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:154:21
    t.method("ReadBasketFast", [](TLeaf& a, TBuffer & arg0, Long64_t arg1)->bool { return a.ReadBasketFast(arg0, arg1); });
    t.method("ReadBasketFast", [](TLeaf* a, TBuffer & arg0, Long64_t arg1)->bool { return a->ReadBasketFast(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TLeaf::ReadBasketSerialized(TBuffer &, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TLeaf::ReadBasketSerialized(TBuffer &, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:155:21
    t.method("ReadBasketSerialized", [](TLeaf& a, TBuffer & arg0, Long64_t arg1)->bool { return a.ReadBasketSerialized(arg0, arg1); });
    t.method("ReadBasketSerialized", [](TLeaf* a, TBuffer & arg0, Long64_t arg1)->bool { return a->ReadBasketSerialized(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TLeaf::ResetAddress(void *, bool) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TLeaf::ResetAddress(void *, bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:159:21
    t.method("ResetAddress", [](TLeaf& a, void * arg0)->Int_t { return a.ResetAddress(arg0); });
    t.method("ResetAddress", [](TLeaf& a, void * arg0, bool arg1)->Int_t { return a.ResetAddress(arg0, arg1); });
    t.method("ResetAddress", [](TLeaf* a, void * arg0)->Int_t { return a->ResetAddress(arg0); });
    t.method("ResetAddress", [](TLeaf* a, void * arg0, bool arg1)->Int_t { return a->ResetAddress(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetAddress(void *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetAddress(void *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:160:21
    t.method("SetAddress", [](TLeaf& a)->void { a.SetAddress(); });
    t.method("SetAddress", [](TLeaf& a, void * arg0)->void { a.SetAddress(arg0); });
    t.method("SetAddress", [](TLeaf* a)->void { a->SetAddress(); });
    t.method("SetAddress", [](TLeaf* a, void * arg0)->void { a->SetAddress(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetBranch(TBranch *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetBranch(TBranch *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:161:21
    t.method("SetBranch", [](TLeaf& a, TBranch * arg0)->void { a.SetBranch(arg0); });
    t.method("SetBranch", [](TLeaf* a, TBranch * arg0)->void { a->SetBranch(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetLeafCount(TLeaf *) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetLeafCount(TLeaf *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:162:21
    t.method("SetLeafCount", [](TLeaf& a, TLeaf * arg0)->void { a.SetLeafCount(arg0); });
    t.method("SetLeafCount", [](TLeaf* a, TLeaf * arg0)->void { a->SetLeafCount(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetLen(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetLen(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:163:21
    t.method("SetLen", [](TLeaf& a)->void { a.SetLen(); });
    t.method("SetLen", [](TLeaf& a, Int_t arg0)->void { a.SetLen(arg0); });
    t.method("SetLen", [](TLeaf* a)->void { a->SetLen(); });
    t.method("SetLen", [](TLeaf* a, Int_t arg0)->void { a->SetLen(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetOffset(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetOffset(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:164:21
    t.method("SetOffset", [](TLeaf& a)->void { a.SetOffset(); });
    t.method("SetOffset", [](TLeaf& a, Int_t arg0)->void { a.SetOffset(arg0); });
    t.method("SetOffset", [](TLeaf* a)->void { a->SetOffset(); });
    t.method("SetOffset", [](TLeaf* a, Int_t arg0)->void { a->SetOffset(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetRange(bool) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetRange(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:165:21
    t.method("SetRange", [](TLeaf& a)->void { a.SetRange(); });
    t.method("SetRange", [](TLeaf& a, bool arg0)->void { a.SetRange(arg0); });
    t.method("SetRange", [](TLeaf* a)->void { a->SetRange(); });
    t.method("SetRange", [](TLeaf* a, bool arg0)->void { a->SetRange(arg0); });

    DEBUG_MSG("Adding wrapper for void TLeaf::SetUnsigned() (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::SetUnsigned()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:166:21
    t.method("SetUnsigned", [](TLeaf& a)->void { a.SetUnsigned(); });
    t.method("SetUnsigned", [](TLeaf* a)->void { a->SetUnsigned(); });

    DEBUG_MSG("Adding wrapper for Version_t TLeaf::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TLeaf::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!Class_Version", []()->Version_t { return TLeaf::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    t.method("IsA", [](TLeaf const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TLeaf const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    t.method("StreamerNVirtual", [](TLeaf& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TLeaf* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TLeaf::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!DeclFileName", []() { return (std::string)TLeaf::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TLeaf::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TLeaf::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!ImplFileLine", []()->int { return TLeaf::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TLeaf::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!ImplFileName", []() { return (std::string)TLeaf::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TLeaf::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TLeaf::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!Class_Name", []() { return (std::string)TLeaf::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!Dictionary", []()->TClass * { return TLeaf::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TLeaf::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TLeaf::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!Class", []()->TClass * { return TLeaf::Class(); });

    DEBUG_MSG("Adding wrapper for void TLeaf::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TLeaf::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    t.method("Streamer", [](TLeaf& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TLeaf* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TLeaf::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TLeaf::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TLeaf.h:168:4
    module_.method("TLeaf!DeclFileLine", []()->int { return TLeaf::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TLeaf>> type_;
};
std::shared_ptr<Wrapper> newJlTLeaf(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTLeaf(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TClonesArray> : std::false_type { };
  template<> struct DefaultConstructible<TClonesArray> : std::false_type { };
template<> struct SuperType<TClonesArray> { typedef TObjArray type; };
}

// Class generating the wrapper for type TClonesArray
// signature to use in the veto file: TClonesArray
struct JlTClonesArray: public Wrapper {

  JlTClonesArray(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TClonesArray (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TClonesArray.h:29:7
    jlcxx::TypeWrapper<TClonesArray>  t = jlModule.add_type<TClonesArray>("TClonesArray",
      jlcxx::julia_base_type<TObjArray>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TClonesArray>>(new jlcxx::TypeWrapper<TClonesArray>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TClonesArray>> type_;
};
std::shared_ptr<Wrapper> newJlTClonesArray(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTClonesArray(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::TIOFeatures> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::TIOFeatures> : std::false_type { };
}

// Class generating the wrapper for type ROOT::TIOFeatures
// signature to use in the veto file: ROOT::TIOFeatures
struct JlROOT_TIOFeatures: public Wrapper {

  JlROOT_TIOFeatures(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::TIOFeatures (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/ROOT/TIOFeatures.hxx:69:7
    jlcxx::TypeWrapper<ROOT::TIOFeatures>  t = jlModule.add_type<ROOT::TIOFeatures>("ROOT!TIOFeatures");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::TIOFeatures>>(new jlcxx::TypeWrapper<ROOT::TIOFeatures>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::TIOFeatures>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_TIOFeatures(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_TIOFeatures(module));
}
