// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoScale> : std::false_type { };
  template<> struct DefaultConstructible<TGeoScale> : std::false_type { };
template<> struct SuperType<TGeoScale> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoScale
// signature to use in the veto file: TGeoScale
struct JlTGeoScale: public Wrapper {

  JlTGeoScale(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoScale (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:253:7
    jlcxx::TypeWrapper<TGeoScale>  t = jlModule.add_type<TGeoScale>("TGeoScale",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoScale>>(new jlcxx::TypeWrapper<TGeoScale>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoScale::TGeoScale(const TGeoScale &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:258:4
    t.constructor<const TGeoScale &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoScale::TGeoScale(const TGeoMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:259:4
    t.constructor<const TGeoMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoScale::TGeoScale(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:260:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoScale::TGeoScale(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:261:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoScale & TGeoScale::operator=(const TGeoScale &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoScale & TGeoScale::operator=(const TGeoScale &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:264:15
    t.method("assign", [](TGeoScale& a, const TGeoScale & arg0)->TGeoScale & { return a.operator=(arg0); });
    t.method("assign", [](TGeoScale* a, const TGeoScale & arg0)->TGeoScale & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoScale & TGeoScale::operator=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoScale & TGeoScale::operator=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:265:15
    t.method("assign", [](TGeoScale& a, const TGeoMatrix & arg0)->TGeoScale & { return a.operator=(arg0); });
    t.method("assign", [](TGeoScale* a, const TGeoMatrix & arg0)->TGeoScale & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoScale & TGeoScale::operator*=(const TGeoScale &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoScale & TGeoScale::operator*=(const TGeoScale &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:266:15
    t.method("mult!", [](TGeoScale& a, const TGeoScale & arg0)->TGeoScale & { return a.operator*=(arg0); });
    t.method("mult!", [](TGeoScale* a, const TGeoScale & arg0)->TGeoScale & { return a->operator*=(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for TGeoScale TGeoScale::operator*(const TGeoScale &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoScale TGeoScale::operator*(const TGeoScale &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:267:14
    t.method("*", [](TGeoScale const& a, const TGeoScale & arg0)->TGeoScale { return a.operator*(arg0); });
    t.method("*", [](TGeoScale const* a, const TGeoScale & arg0)->TGeoScale { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoScale::operator*(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoScale::operator*(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:268:16
    t.method("*", [](TGeoScale const& a, const TGeoMatrix & arg0)->TGeoHMatrix { return a.operator*(arg0); });
    t.method("*", [](TGeoScale const* a, const TGeoMatrix & arg0)->TGeoHMatrix { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoScale::operator==(const TGeoScale &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoScale::operator==(const TGeoScale &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:269:11
    t.method("==", [](TGeoScale const& a, const TGeoScale & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoScale const* a, const TGeoScale & arg0)->Bool_t { return a->operator==(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoScale::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoScale::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:271:16
    t.method("Inverse", [](TGeoScale const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoScale const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::SetScale(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::SetScale(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:272:9
    t.method("SetScale", [](TGeoScale& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetScale(arg0, arg1, arg2); });
    t.method("SetScale", [](TGeoScale* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetScale(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::SetScale(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::SetScale(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:273:9
    t.method("SetScale", [](TGeoScale& a, const TGeoMatrix & arg0)->void { a.SetScale(arg0); });
    t.method("SetScale", [](TGeoScale* a, const TGeoMatrix & arg0)->void { a->SetScale(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:274:9
    t.method("LocalToMaster", [](TGeoScale const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoScale const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoScale::LocalToMaster(Double_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoScale::LocalToMaster(Double_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:275:13
    t.method("LocalToMaster", [](TGeoScale const& a, Double_t arg0)->Double_t { return a.LocalToMaster(arg0); });
    t.method("LocalToMaster", [](TGeoScale const& a, Double_t arg0, const Double_t * arg1)->Double_t { return a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoScale const* a, Double_t arg0)->Double_t { return a->LocalToMaster(arg0); });
    t.method("LocalToMaster", [](TGeoScale const* a, Double_t arg0, const Double_t * arg1)->Double_t { return a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:276:9
    t.method("LocalToMasterVect", [](TGeoScale const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); });
    t.method("LocalToMasterVect", [](TGeoScale const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoScale::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoScale::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:280:16
    t.method("MakeClone", [](TGeoScale const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoScale const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:281:9
    t.method("MasterToLocal", [](TGeoScale const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoScale const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoScale::MasterToLocal(Double_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoScale::MasterToLocal(Double_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:282:13
    t.method("MasterToLocal", [](TGeoScale const& a, Double_t arg0)->Double_t { return a.MasterToLocal(arg0); });
    t.method("MasterToLocal", [](TGeoScale const& a, Double_t arg0, const Double_t * arg1)->Double_t { return a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoScale const* a, Double_t arg0)->Double_t { return a->MasterToLocal(arg0); });
    t.method("MasterToLocal", [](TGeoScale const* a, Double_t arg0, const Double_t * arg1)->Double_t { return a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:283:9
    t.method("MasterToLocalVect", [](TGeoScale const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); });
    t.method("MasterToLocalVect", [](TGeoScale const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::ReflectX(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::ReflectX(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:287:9
    t.method("ReflectX", [](TGeoScale& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectX(arg0, arg1); });
    t.method("ReflectX", [](TGeoScale* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::ReflectY(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::ReflectY(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:292:9
    t.method("ReflectY", [](TGeoScale& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectY(arg0, arg1); });
    t.method("ReflectY", [](TGeoScale* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectY(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::ReflectZ(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::ReflectZ(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:297:9
    t.method("ReflectZ", [](TGeoScale& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectZ(arg0, arg1); });
    t.method("ReflectZ", [](TGeoScale* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectZ(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoScale::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoScale::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:303:20
    t.method("GetTranslation", [](TGeoScale const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoScale const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoScale::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoScale::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:304:20
    t.method("GetRotationMatrix", [](TGeoScale const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoScale const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoScale::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoScale::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:305:20
    t.method("GetScale", [](TGeoScale const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoScale const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoScale::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoScale::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoScale!Class_Version", []()->Version_t { return TGeoScale::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoScale::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoScale::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoScale const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoScale const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoScale& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoScale* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoScale::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoScale::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoScale!DeclFileName", []() { return (std::string)TGeoScale::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoScale::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoScale::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoScale!ImplFileLine", []()->int { return TGeoScale::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoScale::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoScale::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoScale!ImplFileName", []() { return (std::string)TGeoScale::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoScale::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoScale::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoScale!Class_Name", []() { return (std::string)TGeoScale::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoScale::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoScale::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoScale!Dictionary", []()->TClass * { return TGeoScale::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoScale::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoScale::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoScale!Class", []()->TClass * { return TGeoScale::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoScale::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoScale::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoScale& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoScale* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoScale::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoScale::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoScale!DeclFileLine", []()->int { return TGeoScale::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoScale>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoScale(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoScale(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoCombiTrans> : std::false_type { };
  template<> struct DefaultConstructible<TGeoCombiTrans> : std::false_type { };
template<> struct SuperType<TGeoCombiTrans> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoCombiTrans
// signature to use in the veto file: TGeoCombiTrans
struct JlTGeoCombiTrans: public Wrapper {

  JlTGeoCombiTrans(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoCombiTrans (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:317:7
    jlcxx::TypeWrapper<TGeoCombiTrans>  t = jlModule.add_type<TGeoCombiTrans>("TGeoCombiTrans",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoCombiTrans>>(new jlcxx::TypeWrapper<TGeoCombiTrans>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(const TGeoCombiTrans &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:323:4
    t.constructor<const TGeoCombiTrans &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(const TGeoMatrix &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:324:4
    t.constructor<const TGeoMatrix &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(const TGeoTranslation &, const TGeoRotation &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:325:4
    t.constructor<const TGeoTranslation &, const TGeoRotation &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:326:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(Double_t, Double_t, Double_t, TGeoRotation *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:327:4
    t.constructor<Double_t, Double_t, Double_t, TGeoRotation *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::TGeoCombiTrans(const char *, Double_t, Double_t, Double_t, TGeoRotation *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:328:4
    t.constructor<const char *, Double_t, Double_t, Double_t, TGeoRotation *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoCombiTrans & TGeoCombiTrans::operator=(const TGeoCombiTrans &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoCombiTrans & TGeoCombiTrans::operator=(const TGeoCombiTrans &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:330:20
    t.method("assign", [](TGeoCombiTrans& a, const TGeoCombiTrans & arg0)->TGeoCombiTrans & { return a.operator=(arg0); });
    t.method("assign", [](TGeoCombiTrans* a, const TGeoCombiTrans & arg0)->TGeoCombiTrans & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoCombiTrans & TGeoCombiTrans::operator=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoCombiTrans & TGeoCombiTrans::operator=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:331:20
    t.method("assign", [](TGeoCombiTrans& a, const TGeoMatrix & arg0)->TGeoCombiTrans & { return a.operator=(arg0); });
    t.method("assign", [](TGeoCombiTrans* a, const TGeoMatrix & arg0)->TGeoCombiTrans & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoCombiTrans & TGeoCombiTrans::operator*=(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoCombiTrans & TGeoCombiTrans::operator*=(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:332:20
    t.method("mult!", [](TGeoCombiTrans& a, const TGeoMatrix & arg0)->TGeoCombiTrans & { return a.operator*=(arg0); });
    t.method("mult!", [](TGeoCombiTrans* a, const TGeoMatrix & arg0)->TGeoCombiTrans & { return a->operator*=(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for TGeoCombiTrans TGeoCombiTrans::operator*(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoCombiTrans TGeoCombiTrans::operator*(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:333:19
    t.method("*", [](TGeoCombiTrans const& a, const TGeoMatrix & arg0)->TGeoCombiTrans { return a.operator*(arg0); });
    t.method("*", [](TGeoCombiTrans const* a, const TGeoMatrix & arg0)->TGeoCombiTrans { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoCombiTrans::operator==(const TGeoMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoCombiTrans::operator==(const TGeoMatrix &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:334:11
    t.method("==", [](TGeoCombiTrans const& a, const TGeoMatrix & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoCombiTrans const* a, const TGeoMatrix & arg0)->Bool_t { return a->operator==(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:338:9
    t.method("Clear", [](TGeoCombiTrans& a)->void { a.Clear(); });
    t.method("Clear", [](TGeoCombiTrans& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TGeoCombiTrans* a)->void { a->Clear(); });
    t.method("Clear", [](TGeoCombiTrans* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoCombiTrans::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoCombiTrans::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:339:16
    t.method("Inverse", [](TGeoCombiTrans const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoCombiTrans const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoCombiTrans::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoCombiTrans::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:340:16
    t.method("MakeClone", [](TGeoCombiTrans const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoCombiTrans const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::Multiply(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::Multiply(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:341:9
    t.method("Multiply", [](TGeoCombiTrans& a, const TGeoMatrix * arg0)->void { a.Multiply(arg0); });
    t.method("Multiply", [](TGeoCombiTrans* a, const TGeoMatrix * arg0)->void { a->Multiply(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::RegisterYourself() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::RegisterYourself()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:342:9
    t.method("RegisterYourself", [](TGeoCombiTrans& a)->void { a.RegisterYourself(); });
    t.method("RegisterYourself", [](TGeoCombiTrans* a)->void { a->RegisterYourself(); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::RotateX(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::RotateX(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:343:9
    t.method("RotateX", [](TGeoCombiTrans& a, Double_t arg0)->void { a.RotateX(arg0); });
    t.method("RotateX", [](TGeoCombiTrans* a, Double_t arg0)->void { a->RotateX(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::RotateY(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::RotateY(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:344:9
    t.method("RotateY", [](TGeoCombiTrans& a, Double_t arg0)->void { a.RotateY(arg0); });
    t.method("RotateY", [](TGeoCombiTrans* a, Double_t arg0)->void { a->RotateY(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::RotateZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::RotateZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:345:9
    t.method("RotateZ", [](TGeoCombiTrans& a, Double_t arg0)->void { a.RotateZ(arg0); });
    t.method("RotateZ", [](TGeoCombiTrans* a, Double_t arg0)->void { a->RotateZ(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::ReflectX(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::ReflectX(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:346:9
    t.method("ReflectX", [](TGeoCombiTrans& a, Bool_t arg0)->void { a.ReflectX(arg0); });
    t.method("ReflectX", [](TGeoCombiTrans& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectX(arg0, arg1); });
    t.method("ReflectX", [](TGeoCombiTrans* a, Bool_t arg0)->void { a->ReflectX(arg0); });
    t.method("ReflectX", [](TGeoCombiTrans* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectX(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::ReflectY(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::ReflectY(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:347:9
    t.method("ReflectY", [](TGeoCombiTrans& a, Bool_t arg0)->void { a.ReflectY(arg0); });
    t.method("ReflectY", [](TGeoCombiTrans& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectY(arg0, arg1); });
    t.method("ReflectY", [](TGeoCombiTrans* a, Bool_t arg0)->void { a->ReflectY(arg0); });
    t.method("ReflectY", [](TGeoCombiTrans* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectY(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::ReflectZ(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::ReflectZ(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:348:9
    t.method("ReflectZ", [](TGeoCombiTrans& a, Bool_t arg0)->void { a.ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoCombiTrans& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectZ(arg0, arg1); });
    t.method("ReflectZ", [](TGeoCombiTrans* a, Bool_t arg0)->void { a->ReflectZ(arg0); });
    t.method("ReflectZ", [](TGeoCombiTrans* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectZ(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetDx(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetDx(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:350:9
    t.method("SetDx", [](TGeoCombiTrans& a, Double_t arg0)->void { a.SetDx(arg0); });
    t.method("SetDx", [](TGeoCombiTrans* a, Double_t arg0)->void { a->SetDx(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetDy(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetDy(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:351:9
    t.method("SetDy", [](TGeoCombiTrans& a, Double_t arg0)->void { a.SetDy(arg0); });
    t.method("SetDy", [](TGeoCombiTrans* a, Double_t arg0)->void { a->SetDy(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetDz(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetDz(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:352:9
    t.method("SetDz", [](TGeoCombiTrans& a, Double_t arg0)->void { a.SetDz(arg0); });
    t.method("SetDz", [](TGeoCombiTrans* a, Double_t arg0)->void { a->SetDz(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetTranslation(const TGeoTranslation &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetTranslation(const TGeoTranslation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:353:9
    t.method("SetTranslation", [](TGeoCombiTrans& a, const TGeoTranslation & arg0)->void { a.SetTranslation(arg0); });
    t.method("SetTranslation", [](TGeoCombiTrans* a, const TGeoTranslation & arg0)->void { a->SetTranslation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetTranslation(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetTranslation(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:354:9
    t.method("SetTranslation", [](TGeoCombiTrans& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetTranslation(arg0, arg1, arg2); });
    t.method("SetTranslation", [](TGeoCombiTrans* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetTranslation(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetTranslation(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetTranslation(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:355:9
    t.method("SetTranslation", [](TGeoCombiTrans& a, Double_t * arg0)->void { a.SetTranslation(arg0); });
    t.method("SetTranslation", [](TGeoCombiTrans* a, Double_t * arg0)->void { a->SetTranslation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetRotation(const TGeoRotation &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetRotation(const TGeoRotation &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:356:9
    t.method("SetRotation", [](TGeoCombiTrans& a, const TGeoRotation & arg0)->void { a.SetRotation(arg0); });
    t.method("SetRotation", [](TGeoCombiTrans* a, const TGeoRotation & arg0)->void { a->SetRotation(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::SetRotation(const TGeoRotation *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::SetRotation(const TGeoRotation *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:357:9
    t.method("SetRotation", [](TGeoCombiTrans& a, const TGeoRotation * arg0)->void { a.SetRotation(arg0); });
    t.method("SetRotation", [](TGeoCombiTrans* a, const TGeoRotation * arg0)->void { a->SetRotation(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoRotation * TGeoCombiTrans::GetRotation() (" __HERE__ ")");
    // signature to use in the veto list: TGeoRotation * TGeoCombiTrans::GetRotation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:359:18
    t.method("GetRotation", [](TGeoCombiTrans const& a)->TGeoRotation * { return a.GetRotation(); });
    t.method("GetRotation", [](TGeoCombiTrans const* a)->TGeoRotation * { return a->GetRotation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoCombiTrans::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoCombiTrans::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:361:20
    t.method("GetTranslation", [](TGeoCombiTrans const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoCombiTrans const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoCombiTrans::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoCombiTrans::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:362:20
    t.method("GetRotationMatrix", [](TGeoCombiTrans const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoCombiTrans const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoCombiTrans::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoCombiTrans::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:363:20
    t.method("GetScale", [](TGeoCombiTrans const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoCombiTrans const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoCombiTrans::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoCombiTrans::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoCombiTrans!Class_Version", []()->Version_t { return TGeoCombiTrans::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCombiTrans::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCombiTrans::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoCombiTrans const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoCombiTrans const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoCombiTrans& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoCombiTrans* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCombiTrans::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCombiTrans::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoCombiTrans!DeclFileName", []() { return (std::string)TGeoCombiTrans::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoCombiTrans::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCombiTrans::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoCombiTrans!ImplFileLine", []()->int { return TGeoCombiTrans::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCombiTrans::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCombiTrans::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoCombiTrans!ImplFileName", []() { return (std::string)TGeoCombiTrans::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoCombiTrans::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoCombiTrans::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoCombiTrans!Class_Name", []() { return (std::string)TGeoCombiTrans::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCombiTrans::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCombiTrans::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoCombiTrans!Dictionary", []()->TClass * { return TGeoCombiTrans::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoCombiTrans::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoCombiTrans::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoCombiTrans!Class", []()->TClass * { return TGeoCombiTrans::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoCombiTrans::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoCombiTrans::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoCombiTrans& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoCombiTrans* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoCombiTrans::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoCombiTrans::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoCombiTrans!DeclFileLine", []()->int { return TGeoCombiTrans::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoCombiTrans>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoCombiTrans(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoCombiTrans(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoGenTrans> : std::false_type { };
  template<> struct DefaultConstructible<TGeoGenTrans> : std::false_type { };
template<> struct SuperType<TGeoGenTrans> { typedef TGeoCombiTrans type; };
}

// Class generating the wrapper for type TGeoGenTrans
// signature to use in the veto file: TGeoGenTrans
struct JlTGeoGenTrans: public Wrapper {

  JlTGeoGenTrans(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoGenTrans (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:375:7
    jlcxx::TypeWrapper<TGeoGenTrans>  t = jlModule.add_type<TGeoGenTrans>("TGeoGenTrans",
      jlcxx::julia_base_type<TGeoCombiTrans>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoGenTrans>>(new jlcxx::TypeWrapper<TGeoGenTrans>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::TGeoGenTrans(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:380:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::TGeoGenTrans(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, TGeoRotation *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:381:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, TGeoRotation *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::TGeoGenTrans(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, TGeoRotation *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:382:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, TGeoRotation *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGenTrans::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:386:9
    t.method("Clear", [](TGeoGenTrans& a)->void { a.Clear(); });
    t.method("Clear", [](TGeoGenTrans& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TGeoGenTrans* a)->void { a->Clear(); });
    t.method("Clear", [](TGeoGenTrans* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoGenTrans::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoGenTrans::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:387:16
    t.method("Inverse", [](TGeoGenTrans const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoGenTrans const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::SetScale(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGenTrans::SetScale(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:388:9
    t.method("SetScale", [](TGeoGenTrans& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetScale(arg0, arg1, arg2); });
    t.method("SetScale", [](TGeoGenTrans* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetScale(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::SetScale(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGenTrans::SetScale(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:389:9
    t.method("SetScale", [](TGeoGenTrans& a, Double_t * arg0)->void { a.SetScale(arg0); });
    t.method("SetScale", [](TGeoGenTrans* a, Double_t * arg0)->void { a->SetScale(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoGenTrans::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoGenTrans::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:390:16
    t.method("MakeClone", [](TGeoGenTrans const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoGenTrans const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoGenTrans::Normalize() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoGenTrans::Normalize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:391:11
    t.method("Normalize", [](TGeoGenTrans& a)->Bool_t { return a.Normalize(); });
    t.method("Normalize", [](TGeoGenTrans* a)->Bool_t { return a->Normalize(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoGenTrans::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoGenTrans::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:393:20
    t.method("GetScale", [](TGeoGenTrans const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoGenTrans const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoGenTrans::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoGenTrans::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoGenTrans!Class_Version", []()->Version_t { return TGeoGenTrans::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGenTrans::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGenTrans::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoGenTrans const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoGenTrans const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGenTrans::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoGenTrans& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoGenTrans* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGenTrans::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGenTrans::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoGenTrans!DeclFileName", []() { return (std::string)TGeoGenTrans::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoGenTrans::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGenTrans::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoGenTrans!ImplFileLine", []()->int { return TGeoGenTrans::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGenTrans::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGenTrans::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoGenTrans!ImplFileName", []() { return (std::string)TGeoGenTrans::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGenTrans::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGenTrans::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoGenTrans!Class_Name", []() { return (std::string)TGeoGenTrans::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGenTrans::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGenTrans::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoGenTrans!Dictionary", []()->TClass * { return TGeoGenTrans::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGenTrans::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGenTrans::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoGenTrans!Class", []()->TClass * { return TGeoGenTrans::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoGenTrans::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGenTrans::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoGenTrans& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoGenTrans* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoGenTrans::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGenTrans::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoGenTrans!DeclFileLine", []()->int { return TGeoGenTrans::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoGenTrans>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoGenTrans(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoGenTrans(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoIdentity> : std::false_type { };
  template<> struct DefaultConstructible<TGeoIdentity> : std::false_type { };
template<> struct SuperType<TGeoIdentity> { typedef TGeoMatrix type; };
}

// Class generating the wrapper for type TGeoIdentity
// signature to use in the veto file: TGeoIdentity
struct JlTGeoIdentity: public Wrapper {

  JlTGeoIdentity(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoIdentity (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:406:7
    jlcxx::TypeWrapper<TGeoIdentity>  t = jlModule.add_type<TGeoIdentity>("TGeoIdentity",
      jlcxx::julia_base_type<TGeoMatrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoIdentity>>(new jlcxx::TypeWrapper<TGeoIdentity>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoIdentity::TGeoIdentity(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:411:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoIdentity::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoIdentity::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:414:16
    t.method("Inverse", [](TGeoIdentity const& a)->TGeoHMatrix { return a.Inverse(); });
    t.method("Inverse", [](TGeoIdentity const* a)->TGeoHMatrix { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:415:9
    t.method("LocalToMaster", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); });
    t.method("LocalToMaster", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:419:9
    t.method("LocalToMasterVect", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); });
    t.method("LocalToMasterVect", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:423:9
    t.method("LocalToMasterBomb", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); });
    t.method("LocalToMasterBomb", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoIdentity::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoIdentity::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:427:16
    t.method("MakeClone", [](TGeoIdentity const& a)->TGeoMatrix * { return a.MakeClone(); });
    t.method("MakeClone", [](TGeoIdentity const* a)->TGeoMatrix * { return a->MakeClone(); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:428:9
    t.method("MasterToLocal", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); });
    t.method("MasterToLocal", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:432:9
    t.method("MasterToLocalVect", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); });
    t.method("MasterToLocalVect", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:436:9
    t.method("MasterToLocalBomb", [](TGeoIdentity const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); });
    t.method("MasterToLocalBomb", [](TGeoIdentity const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoIdentity::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoIdentity::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:441:20
    t.method("GetTranslation", [](TGeoIdentity const& a)->const Double_t * { return a.GetTranslation(); });
    t.method("GetTranslation", [](TGeoIdentity const* a)->const Double_t * { return a->GetTranslation(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoIdentity::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoIdentity::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:442:20
    t.method("GetRotationMatrix", [](TGeoIdentity const& a)->const Double_t * { return a.GetRotationMatrix(); });
    t.method("GetRotationMatrix", [](TGeoIdentity const* a)->const Double_t * { return a->GetRotationMatrix(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoIdentity::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoIdentity::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:443:20
    t.method("GetScale", [](TGeoIdentity const& a)->const Double_t * { return a.GetScale(); });
    t.method("GetScale", [](TGeoIdentity const* a)->const Double_t * { return a->GetScale(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoIdentity::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoIdentity::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoIdentity!Class_Version", []()->Version_t { return TGeoIdentity::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIdentity::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIdentity::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoIdentity const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoIdentity const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoIdentity& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoIdentity* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIdentity::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIdentity::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoIdentity!DeclFileName", []() { return (std::string)TGeoIdentity::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoIdentity::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoIdentity::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoIdentity!ImplFileLine", []()->int { return TGeoIdentity::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIdentity::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIdentity::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoIdentity!ImplFileName", []() { return (std::string)TGeoIdentity::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoIdentity::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoIdentity::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoIdentity!Class_Name", []() { return (std::string)TGeoIdentity::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIdentity::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIdentity::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoIdentity!Dictionary", []()->TClass * { return TGeoIdentity::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoIdentity::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoIdentity::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoIdentity!Class", []()->TClass * { return TGeoIdentity::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoIdentity::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoIdentity::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoIdentity& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoIdentity* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoIdentity::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoIdentity::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoIdentity!DeclFileLine", []()->int { return TGeoIdentity::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoIdentity>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoIdentity(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoIdentity(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBranchArray> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBranchArray> : std::false_type { };
template<> struct SuperType<TGeoBranchArray> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoBranchArray
// signature to use in the veto file: TGeoBranchArray
struct JlTGeoBranchArray: public Wrapper {

  JlTGeoBranchArray(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBranchArray (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:22:7
    jlcxx::TypeWrapper<TGeoBranchArray>  t = jlModule.add_type<TGeoBranchArray>("TGeoBranchArray",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBranchArray>>(new jlcxx::TypeWrapper<TGeoBranchArray>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for TGeoBranchArray * TGeoBranchArray::MakeInstance(size_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBranchArray * TGeoBranchArray::MakeInstance(size_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:45:28
    module_.method("TGeoBranchArray!MakeInstance", [](size_t arg0)->TGeoBranchArray * { return TGeoBranchArray::MakeInstance(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoBranchArray * TGeoBranchArray::MakeInstanceAt(size_t, void *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBranchArray * TGeoBranchArray::MakeInstanceAt(size_t, void *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:48:28
    module_.method("TGeoBranchArray!MakeInstanceAt", [](size_t arg0, void * arg1)->TGeoBranchArray * { return TGeoBranchArray::MakeInstanceAt(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoBranchArray * TGeoBranchArray::MakeCopy(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBranchArray * TGeoBranchArray::MakeCopy(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:51:28
    module_.method("TGeoBranchArray!MakeCopy", [](const TGeoBranchArray & arg0)->TGeoBranchArray * { return TGeoBranchArray::MakeCopy(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoBranchArray * TGeoBranchArray::MakeCopyAt(const TGeoBranchArray &, void *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBranchArray * TGeoBranchArray::MakeCopyAt(const TGeoBranchArray &, void *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:54:28
    module_.method("TGeoBranchArray!MakeCopyAt", [](const TGeoBranchArray & arg0, void * arg1)->TGeoBranchArray * { return TGeoBranchArray::MakeCopyAt(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::ReleaseInstance(TGeoBranchArray *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::ReleaseInstance(TGeoBranchArray *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:57:16
    module_.method("TGeoBranchArray!ReleaseInstance", [](TGeoBranchArray * arg0)->void { TGeoBranchArray::ReleaseInstance(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoBranchArray & TGeoBranchArray::operator=(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBranchArray & TGeoBranchArray::operator=(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:60:21
    t.method("assign", [](TGeoBranchArray& a, const TGeoBranchArray & arg0)->TGeoBranchArray & { return a.operator=(arg0); });
    t.method("assign", [](TGeoBranchArray* a, const TGeoBranchArray & arg0)->TGeoBranchArray & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::CopyTo(TGeoBranchArray *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::CopyTo(TGeoBranchArray *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:63:9
    t.method("CopyTo", [](TGeoBranchArray& a, TGeoBranchArray * arg0)->void { a.CopyTo(arg0); });
    t.method("CopyTo", [](TGeoBranchArray* a, TGeoBranchArray * arg0)->void { a->CopyTo(arg0); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::SizeOf(size_t) (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::SizeOf(size_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:66:18
    module_.method("TGeoBranchArray!SizeOf", [](size_t arg0)->size_t { return TGeoBranchArray::SizeOf(arg0); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::SizeOfInstance(size_t) (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::SizeOfInstance(size_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:69:18
    module_.method("TGeoBranchArray!SizeOfInstance", [](size_t arg0)->size_t { return TGeoBranchArray::SizeOfInstance(arg0); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::SizeOf() (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::SizeOf()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:74:18
    t.method("SizeOf", [](TGeoBranchArray const& a)->size_t { return a.SizeOf(); });
    t.method("SizeOf", [](TGeoBranchArray const* a)->size_t { return a->SizeOf(); });

    DEBUG_MSG("Adding wrapper for void * TGeoBranchArray::DataStart() (" __HERE__ ")");
    // signature to use in the veto list: void * TGeoBranchArray::DataStart()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:78:10
    t.method("DataStart", [](TGeoBranchArray const& a)->void * { return a.DataStart(); });
    t.method("DataStart", [](TGeoBranchArray const* a)->void * { return a->DataStart(); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::DataSize() (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::DataSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:81:11
    t.method("DataSize", [](TGeoBranchArray const& a)->size_t { return a.DataSize(); });
    t.method("DataSize", [](TGeoBranchArray const* a)->size_t { return a->DataSize(); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::UpdateArray(size_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::UpdateArray(size_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:85:9
    t.method("UpdateArray", [](TGeoBranchArray& a, size_t arg0)->void { a.UpdateArray(arg0); });
    t.method("UpdateArray", [](TGeoBranchArray* a, size_t arg0)->void { a->UpdateArray(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator==(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator==(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:90:11
    t.method("==", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator==(arg0); });
    t.method("==", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator==(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator!=(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator!=(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:91:11
    t.method("!=", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator!=(arg0); });
    t.method("!=", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator>(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator>(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:92:11
    t.method(">", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator>(arg0); });
    t.method(">", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator>(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator<(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator<(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:93:11
    t.method("<", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator<(arg0); });
    t.method("<", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator<(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator>=(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator>=(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:94:11
    t.method(">=", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator>=(arg0); });
    t.method(">=", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator>=(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::operator<=(const TGeoBranchArray &) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::operator<=(const TGeoBranchArray &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:95:11
    t.method("<=", [](TGeoBranchArray const& a, const TGeoBranchArray & arg0)->Bool_t { return a.operator<=(arg0); });
    t.method("<=", [](TGeoBranchArray const* a, const TGeoBranchArray & arg0)->Bool_t { return a->operator<=(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::AddLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::AddLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:97:9
    t.method("AddLevel", [](TGeoBranchArray& a, Int_t arg0)->void { a.AddLevel(arg0); });
    t.method("AddLevel", [](TGeoBranchArray* a, Int_t arg0)->void { a->AddLevel(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TGeoBranchArray::BinarySearch(Long64_t, const TGeoBranchArray **, TGeoBranchArray *) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TGeoBranchArray::BinarySearch(Long64_t, const TGeoBranchArray **, TGeoBranchArray *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:98:20
    module_.method("TGeoBranchArray!BinarySearch", [](Long64_t arg0, const TGeoBranchArray ** arg1, TGeoBranchArray * arg2)->Long64_t { return TGeoBranchArray::BinarySearch(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoBranchArray::Compare(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBranchArray::Compare(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:99:10
    t.method("Compare", [](TGeoBranchArray const& a, const TObject * arg0)->Int_t { return a.Compare(arg0); });
    t.method("Compare", [](TGeoBranchArray const* a, const TObject * arg0)->Int_t { return a->Compare(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::CleanMatrix() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::CleanMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:100:9
    t.method("CleanMatrix", [](TGeoBranchArray& a)->void { a.CleanMatrix(); });
    t.method("CleanMatrix", [](TGeoBranchArray* a)->void { a->CleanMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoNode ** TGeoBranchArray::GetArray() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode ** TGeoBranchArray::GetArray()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:101:15
    t.method("GetArray", [](TGeoBranchArray const& a)->TGeoNode ** { return a.GetArray(); });
    t.method("GetArray", [](TGeoBranchArray const* a)->TGeoNode ** { return a->GetArray(); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::GetLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:102:11
    t.method("GetLevel", [](TGeoBranchArray const& a)->size_t { return a.GetLevel(); });
    t.method("GetLevel", [](TGeoBranchArray const* a)->size_t { return a->GetLevel(); });

    DEBUG_MSG("Adding wrapper for size_t TGeoBranchArray::GetMaxLevel() (" __HERE__ ")");
    // signature to use in the veto list: size_t TGeoBranchArray::GetMaxLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:103:11
    t.method("GetMaxLevel", [](TGeoBranchArray const& a)->size_t { return a.GetMaxLevel(); });
    t.method("GetMaxLevel", [](TGeoBranchArray const* a)->size_t { return a->GetMaxLevel(); });

    DEBUG_MSG("Adding wrapper for const TGeoHMatrix * TGeoBranchArray::GetMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoHMatrix * TGeoBranchArray::GetMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:104:23
    t.method("GetMatrix", [](TGeoBranchArray const& a)->const TGeoHMatrix * { return a.GetMatrix(); });
    t.method("GetMatrix", [](TGeoBranchArray const* a)->const TGeoHMatrix * { return a->GetMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoBranchArray::GetNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoBranchArray::GetNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:105:14
    t.method("GetNode", [](TGeoBranchArray const& a, Int_t arg0)->TGeoNode * { return a.GetNode(arg0); });
    t.method("GetNode", [](TGeoBranchArray const* a, Int_t arg0)->TGeoNode * { return a->GetNode(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoBranchArray::GetCurrentNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoBranchArray::GetCurrentNode()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:106:14
    t.method("GetCurrentNode", [](TGeoBranchArray const& a)->TGeoNode * { return a.GetCurrentNode(); });
    t.method("GetCurrentNode", [](TGeoBranchArray const* a)->TGeoNode * { return a->GetCurrentNode(); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::GetPath(TString &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::GetPath(TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:107:9
    t.method("GetPath", [](TGeoBranchArray const& a, TString & arg0)->void { a.GetPath(arg0); });
    t.method("GetPath", [](TGeoBranchArray const* a, TString & arg0)->void { a->GetPath(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::Init(TGeoNode **, TGeoMatrix *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::Init(TGeoNode **, TGeoMatrix *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:108:9
    t.method("Init", [](TGeoBranchArray& a, TGeoNode ** arg0, TGeoMatrix * arg1, Int_t arg2)->void { a.Init(arg0, arg1, arg2); });
    t.method("Init", [](TGeoBranchArray* a, TGeoNode ** arg0, TGeoMatrix * arg1, Int_t arg2)->void { a->Init(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::InitFromNavigator(TGeoNavigator *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::InitFromNavigator(TGeoNavigator *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:109:9
    t.method("InitFromNavigator", [](TGeoBranchArray& a, TGeoNavigator * arg0)->void { a.InitFromNavigator(arg0); });
    t.method("InitFromNavigator", [](TGeoBranchArray* a, TGeoNavigator * arg0)->void { a->InitFromNavigator(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::IsSortable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::IsSortable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:110:11
    t.method("IsSortable", [](TGeoBranchArray const& a)->Bool_t { return a.IsSortable(); });
    t.method("IsSortable", [](TGeoBranchArray const* a)->Bool_t { return a->IsSortable(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBranchArray::IsOutside() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBranchArray::IsOutside()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:111:11
    t.method("IsOutside", [](TGeoBranchArray const& a)->Bool_t { return a.IsOutside(); });
    t.method("IsOutside", [](TGeoBranchArray const* a)->Bool_t { return a->IsOutside(); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:112:9
    t.method("Print", [](TGeoBranchArray const& a)->void { a.Print(); });
    t.method("Print", [](TGeoBranchArray const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGeoBranchArray const* a)->void { a->Print(); });
    t.method("Print", [](TGeoBranchArray const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::Sort(Int_t, TGeoBranchArray **, Int_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::Sort(Int_t, TGeoBranchArray **, Int_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:113:16
    module_.method("TGeoBranchArray!Sort", [](Int_t arg0, TGeoBranchArray ** arg1, Int_t * arg2)->void { TGeoBranchArray::Sort(arg0, arg1, arg2); });
    module_.method("TGeoBranchArray!Sort", [](Int_t arg0, TGeoBranchArray ** arg1, Int_t * arg2, Bool_t arg3)->void { TGeoBranchArray::Sort(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::UpdateNavigator(TGeoNavigator *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::UpdateNavigator(TGeoNavigator *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBranchArray.h:114:9
    t.method("UpdateNavigator", [](TGeoBranchArray const& a, TGeoNavigator * arg0)->void { a.UpdateNavigator(arg0); });
    t.method("UpdateNavigator", [](TGeoBranchArray const* a, TGeoNavigator * arg0)->void { a->UpdateNavigator(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoBranchArray::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBranchArray::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoBranchArray!Class_Version", []()->Version_t { return TGeoBranchArray::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBranchArray::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBranchArray::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoBranchArray const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoBranchArray const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoBranchArray& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoBranchArray* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBranchArray::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBranchArray::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoBranchArray!DeclFileName", []() { return (std::string)TGeoBranchArray::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBranchArray::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBranchArray::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoBranchArray!ImplFileLine", []()->int { return TGeoBranchArray::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBranchArray::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBranchArray::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoBranchArray!ImplFileName", []() { return (std::string)TGeoBranchArray::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBranchArray::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBranchArray::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoBranchArray!Class_Name", []() { return (std::string)TGeoBranchArray::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBranchArray::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBranchArray::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoBranchArray!Dictionary", []()->TClass * { return TGeoBranchArray::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBranchArray::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBranchArray::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoBranchArray!Class", []()->TClass * { return TGeoBranchArray::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoBranchArray::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBranchArray::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoBranchArray& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoBranchArray* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoBranchArray::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBranchArray::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoBranchArray!DeclFileLine", []()->int { return TGeoBranchArray::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBranchArray>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBranchArray(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBranchArray(module));
}
