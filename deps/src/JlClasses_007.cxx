// this file was auto-generated by wrapit v1.5.0-4-gda13302
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualPad> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualPad> : std::false_type { };
template<> struct SuperType<TVirtualPad> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualPad
// signature to use in the veto file: TVirtualPad
struct JlTVirtualPad: public Wrapper {

  JlTVirtualPad(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualPad (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TVirtualPad.h:50:7
    jlcxx::TypeWrapper<TVirtualPad>  t = jlModule.add_type<TVirtualPad>("TVirtualPad",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualPad>>(new jlcxx::TypeWrapper<TVirtualPad>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualPad>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualPad(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualPad(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TPad> : std::false_type { };
  template<> struct DefaultConstructible<TPad> : std::false_type { };
template<> struct SuperType<TPad> { typedef TVirtualPad type; };
}

// Class generating the wrapper for type TPad
// signature to use in the veto file: TPad
struct JlTPad: public Wrapper {

  JlTPad(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TPad (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TPad.h:28:7
    jlcxx::TypeWrapper<TPad>  t = jlModule.add_type<TPad>("TPad",
      jlcxx::julia_base_type<TVirtualPad>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TPad>>(new jlcxx::TypeWrapper<TPad>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TPad>> type_;
};
std::shared_ptr<Wrapper> newJlTPad(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTPad(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TCanvas> : std::false_type { };
  template<> struct DefaultConstructible<TCanvas> : std::false_type { };
template<> struct SuperType<TCanvas> { typedef TPad type; };
}

// Class generating the wrapper for type TCanvas
// signature to use in the veto file: TCanvas
struct JlTCanvas: public Wrapper {

  JlTCanvas(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TCanvas (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:23:7
    jlcxx::TypeWrapper<TCanvas>  t = jlModule.add_type<TCanvas>("TCanvas",
      jlcxx::julia_base_type<TPad>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TCanvas>>(new jlcxx::TypeWrapper<TCanvas>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(Bool_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:100:4
    t.constructor<Bool_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:101:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, const char *, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:102:4
    t.constructor<const char *, const char *, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:103:4
    t.constructor<const char *, const char *, Int_t, Int_t, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:105:4
    t.constructor<const char *, Int_t, Int_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:109:9
    t.method("Constructor", [](TCanvas& a)->void { a.Constructor(); });
    t.method("Constructor", [](TCanvas* a)->void { a->Constructor(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:110:9
    t.method("Constructor", [](TCanvas& a, const char * arg0, const char * arg1, Int_t arg2)->void { a.Constructor(arg0, arg1, arg2); });
    t.method("Constructor", [](TCanvas* a, const char * arg0, const char * arg1, Int_t arg2)->void { a->Constructor(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:111:9
    t.method("Constructor", [](TCanvas& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3)->void { a.Constructor(arg0, arg1, arg2, arg3); });
    t.method("Constructor", [](TCanvas* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3)->void { a->Constructor(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:112:9
    t.method("Constructor", [](TCanvas& a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a.Constructor(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Constructor", [](TCanvas* a, const char * arg0, const char * arg1, Int_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a->Constructor(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Destructor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Destructor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:114:9
    t.method("Destructor", [](TCanvas& a)->void { a.Destructor(); });
    t.method("Destructor", [](TCanvas* a)->void { a->Destructor(); });

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::cd(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::cd(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:116:22
    t.method("cd", [](TCanvas& a)->TVirtualPad * { return a.cd(); });
    t.method("cd", [](TCanvas& a, Int_t arg0)->TVirtualPad * { return a.cd(arg0); });
    t.method("cd", [](TCanvas* a)->TVirtualPad * { return a->cd(); });
    t.method("cd", [](TCanvas* a, Int_t arg0)->TVirtualPad * { return a->cd(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:117:22
    t.method("Browse", [](TCanvas& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TCanvas* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:118:22
    t.method("Clear", [](TCanvas& a)->void { a.Clear(); });
    t.method("Clear", [](TCanvas& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TCanvas* a)->void { a->Clear(); });
    t.method("Clear", [](TCanvas* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Close(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Close(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:119:22
    t.method("Close", [](TCanvas& a)->void { a.Close(); });
    t.method("Close", [](TCanvas& a, Option_t * arg0)->void { a.Close(arg0); });
    t.method("Close", [](TCanvas* a)->void { a->Close(); });
    t.method("Close", [](TCanvas* a, Option_t * arg0)->void { a->Close(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Delete(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:120:22
    t.method("Delete", [](TCanvas& a)->void { a.Delete(); });
    t.method("Delete", [](TCanvas& a, Option_t * arg0)->void { a.Delete(arg0); });
    t.method("Delete", [](TCanvas* a)->void { a->Delete(); });
    t.method("Delete", [](TCanvas* a, Option_t * arg0)->void { a->Delete(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::DisconnectWidget() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::DisconnectWidget()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:121:22
    t.method("DisconnectWidget", [](TCanvas& a)->void { a.DisconnectWidget(); });
    t.method("DisconnectWidget", [](TCanvas* a)->void { a->DisconnectWidget(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:122:22
    t.method("Draw", [](TCanvas& a)->void { a.Draw(); });
    t.method("Draw", [](TCanvas& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TCanvas* a)->void { a->Draw(); });
    t.method("Draw", [](TCanvas* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::DrawClone(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::DrawClone(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:123:22
    t.method("DrawClone", [](TCanvas const& a)->TObject * { return a.DrawClone(); });
    t.method("DrawClone", [](TCanvas const& a, Option_t * arg0)->TObject * { return a.DrawClone(arg0); });
    t.method("DrawClone", [](TCanvas const* a)->TObject * { return a->DrawClone(); });
    t.method("DrawClone", [](TCanvas const* a, Option_t * arg0)->TObject * { return a->DrawClone(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::DrawClonePad() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::DrawClonePad()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:124:22
    t.method("DrawClonePad", [](TCanvas& a)->TObject * { return a.DrawClonePad(); });
    t.method("DrawClonePad", [](TCanvas* a)->TObject * { return a->DrawClonePad(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::EditorBar() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EditorBar()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:125:22
    t.method("EditorBar", [](TCanvas& a)->void { a.EditorBar(); });
    t.method("EditorBar", [](TCanvas* a)->void { a->EditorBar(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::EmbedInto(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EmbedInto(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:126:22
    t.method("EmbedInto", [](TCanvas& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.EmbedInto(arg0, arg1, arg2); });
    t.method("EmbedInto", [](TCanvas* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->EmbedInto(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TCanvas::EnterLeave(TPad *, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EnterLeave(TPad *, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:127:22
    t.method("EnterLeave", [](TCanvas& a, TPad * arg0, TObject * arg1)->void { a.EnterLeave(arg0, arg1); });
    t.method("EnterLeave", [](TCanvas* a, TPad * arg0, TObject * arg1)->void { a->EnterLeave(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::FeedbackMode(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::FeedbackMode(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:128:22
    t.method("FeedbackMode", [](TCanvas& a, Bool_t arg0)->void { a.FeedbackMode(arg0); });
    t.method("FeedbackMode", [](TCanvas* a, Bool_t arg0)->void { a->FeedbackMode(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Flush() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Flush()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:129:22
    t.method("Flush", [](TCanvas& a)->void { a.Flush(); });
    t.method("Flush", [](TCanvas* a)->void { a->Flush(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::UseCurrentStyle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:130:22
    t.method("UseCurrentStyle", [](TCanvas& a)->void { a.UseCurrentStyle(); });
    t.method("UseCurrentStyle", [](TCanvas* a)->void { a->UseCurrentStyle(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ForceUpdate() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ForceUpdate()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:131:22
    t.method("ForceUpdate", [](TCanvas& a)->void { a.ForceUpdate(); });
    t.method("ForceUpdate", [](TCanvas* a)->void { a->ForceUpdate(); });

    DEBUG_MSG("Adding wrapper for const char * TCanvas::GetDISPLAY() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::GetDISPLAY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:132:22
    t.method("GetDISPLAY", [](TCanvas const& a) { return (std::string)a.GetDISPLAY(); });
    t.method("GetDISPLAY", [](TCanvas const* a) { return (std::string)a->GetDISPLAY(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetDoubleBuffer() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetDoubleBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:134:22
    t.method("GetDoubleBuffer", [](TCanvas const& a)->Int_t { return a.GetDoubleBuffer(); });
    t.method("GetDoubleBuffer", [](TCanvas const* a)->Int_t { return a->GetDoubleBuffer(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEvent() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEvent()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:135:22
    t.method("GetEvent", [](TCanvas const& a)->Int_t { return a.GetEvent(); });
    t.method("GetEvent", [](TCanvas const* a)->Int_t { return a->GetEvent(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEventX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEventX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:136:22
    t.method("GetEventX", [](TCanvas const& a)->Int_t { return a.GetEventX(); });
    t.method("GetEventX", [](TCanvas const* a)->Int_t { return a->GetEventX(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEventY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEventY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:137:22
    t.method("GetEventY", [](TCanvas const& a)->Int_t { return a.GetEventY(); });
    t.method("GetEventY", [](TCanvas const* a)->Int_t { return a->GetEventY(); });

    DEBUG_MSG("Adding wrapper for Color_t TCanvas::GetHighLightColor() (" __HERE__ ")");
    // signature to use in the veto list: Color_t TCanvas::GetHighLightColor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:138:22
    t.method("GetHighLightColor", [](TCanvas const& a)->Color_t { return a.GetHighLightColor(); });
    t.method("GetHighLightColor", [](TCanvas const* a)->Color_t { return a->GetHighLightColor(); });

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetPadSave() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetPadSave()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:139:22
    t.method("GetPadSave", [](TCanvas const& a)->TVirtualPad * { return a.GetPadSave(); });
    t.method("GetPadSave", [](TCanvas const* a)->TVirtualPad * { return a->GetPadSave(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ClearPadSave() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ClearPadSave()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:140:22
    t.method("ClearPadSave", [](TCanvas& a)->void { a.ClearPadSave(); });
    t.method("ClearPadSave", [](TCanvas* a)->void { a->ClearPadSave(); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::GetSelected() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::GetSelected()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:141:22
    t.method("GetSelected", [](TCanvas const& a)->TObject * { return a.GetSelected(); });
    t.method("GetSelected", [](TCanvas const* a)->TObject * { return a->GetSelected(); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::GetClickSelected() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::GetClickSelected()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:142:22
    t.method("GetClickSelected", [](TCanvas const& a)->TObject * { return a.GetClickSelected(); });
    t.method("GetClickSelected", [](TCanvas const* a)->TObject * { return a->GetClickSelected(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetSelectedX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetSelectedX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:143:22
    t.method("GetSelectedX", [](TCanvas const& a)->Int_t { return a.GetSelectedX(); });
    t.method("GetSelectedX", [](TCanvas const* a)->Int_t { return a->GetSelectedX(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetSelectedY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetSelectedY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:144:22
    t.method("GetSelectedY", [](TCanvas const& a)->Int_t { return a.GetSelectedY(); });
    t.method("GetSelectedY", [](TCanvas const* a)->Int_t { return a->GetSelectedY(); });

    DEBUG_MSG("Adding wrapper for Option_t * TCanvas::GetSelectedOpt() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TCanvas::GetSelectedOpt()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:145:22
    t.method("GetSelectedOpt", [](TCanvas const& a)->Option_t * { return a.GetSelectedOpt(); });
    t.method("GetSelectedOpt", [](TCanvas const* a)->Option_t * { return a->GetSelectedOpt(); });

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetSelectedPad() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetSelectedPad()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:146:22
    t.method("GetSelectedPad", [](TCanvas const& a)->TVirtualPad * { return a.GetSelectedPad(); });
    t.method("GetSelectedPad", [](TCanvas const* a)->TVirtualPad * { return a->GetSelectedPad(); });

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetClickSelectedPad() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetClickSelectedPad()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:147:22
    t.method("GetClickSelectedPad", [](TCanvas const& a)->TVirtualPad * { return a.GetClickSelectedPad(); });
    t.method("GetClickSelectedPad", [](TCanvas const* a)->TVirtualPad * { return a->GetClickSelectedPad(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowEventStatus() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowEventStatus()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:148:22
    t.method("GetShowEventStatus", [](TCanvas const& a)->Bool_t { return a.GetShowEventStatus(); });
    t.method("GetShowEventStatus", [](TCanvas const* a)->Bool_t { return a->GetShowEventStatus(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowToolBar() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowToolBar()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:149:22
    t.method("GetShowToolBar", [](TCanvas const& a)->Bool_t { return a.GetShowToolBar(); });
    t.method("GetShowToolBar", [](TCanvas const* a)->Bool_t { return a->GetShowToolBar(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowEditor() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowEditor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:150:22
    t.method("GetShowEditor", [](TCanvas const& a)->Bool_t { return a.GetShowEditor(); });
    t.method("GetShowEditor", [](TCanvas const* a)->Bool_t { return a->GetShowEditor(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowToolTips() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowToolTips()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:151:22
    t.method("GetShowToolTips", [](TCanvas const& a)->Bool_t { return a.GetShowToolTips(); });
    t.method("GetShowToolTips", [](TCanvas const* a)->Bool_t { return a->GetShowToolTips(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetAutoExec() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetAutoExec()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:152:22
    t.method("GetAutoExec", [](TCanvas const& a)->Bool_t { return a.GetAutoExec(); });
    t.method("GetAutoExec", [](TCanvas const* a)->Bool_t { return a->GetAutoExec(); });

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetXsizeUser() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetXsizeUser()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:153:22
    t.method("GetXsizeUser", [](TCanvas const& a)->Size_t { return a.GetXsizeUser(); });
    t.method("GetXsizeUser", [](TCanvas const* a)->Size_t { return a->GetXsizeUser(); });

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetYsizeUser() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetYsizeUser()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:154:22
    t.method("GetYsizeUser", [](TCanvas const& a)->Size_t { return a.GetYsizeUser(); });
    t.method("GetYsizeUser", [](TCanvas const* a)->Size_t { return a->GetYsizeUser(); });

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetXsizeReal() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetXsizeReal()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:155:22
    t.method("GetXsizeReal", [](TCanvas const& a)->Size_t { return a.GetXsizeReal(); });
    t.method("GetXsizeReal", [](TCanvas const* a)->Size_t { return a->GetXsizeReal(); });

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetYsizeReal() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetYsizeReal()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:156:22
    t.method("GetYsizeReal", [](TCanvas const& a)->Size_t { return a.GetYsizeReal(); });
    t.method("GetYsizeReal", [](TCanvas const* a)->Size_t { return a->GetYsizeReal(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetCanvasID() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetCanvasID()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:157:22
    t.method("GetCanvasID", [](TCanvas const& a)->Int_t { return a.GetCanvasID(); });
    t.method("GetCanvasID", [](TCanvas const* a)->Int_t { return a->GetCanvasID(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetWindowTopX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetWindowTopX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:159:22
    t.method("GetWindowTopX", [](TCanvas& a)->Int_t { return a.GetWindowTopX(); });
    t.method("GetWindowTopX", [](TCanvas* a)->Int_t { return a->GetWindowTopX(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetWindowTopY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetWindowTopY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:160:22
    t.method("GetWindowTopY", [](TCanvas& a)->Int_t { return a.GetWindowTopY(); });
    t.method("GetWindowTopY", [](TCanvas* a)->Int_t { return a->GetWindowTopY(); });

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWindowWidth() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWindowWidth()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:161:22
    t.method("GetWindowWidth", [](TCanvas const& a)->UInt_t { return a.GetWindowWidth(); });
    t.method("GetWindowWidth", [](TCanvas const* a)->UInt_t { return a->GetWindowWidth(); });

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWindowHeight() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWindowHeight()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:162:22
    t.method("GetWindowHeight", [](TCanvas const& a)->UInt_t { return a.GetWindowHeight(); });
    t.method("GetWindowHeight", [](TCanvas const* a)->UInt_t { return a->GetWindowHeight(); });

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWw() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWw()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:163:22
    t.method("GetWw", [](TCanvas const& a)->UInt_t { return a.GetWw(); });
    t.method("GetWw", [](TCanvas const* a)->UInt_t { return a->GetWw(); });

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWh() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWh()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:164:22
    t.method("GetWh", [](TCanvas const& a)->UInt_t { return a.GetWh(); });
    t.method("GetWh", [](TCanvas const* a)->UInt_t { return a->GetWh(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::GetCanvasPar(Int_t &, Int_t &, UInt_t &, UInt_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::GetCanvasPar(Int_t &, Int_t &, UInt_t &, UInt_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:165:22
    t.method("GetCanvasPar", [](TCanvas& a, Int_t & arg0, Int_t & arg1, UInt_t & arg2, UInt_t & arg3)->void { a.GetCanvasPar(arg0, arg1, arg2, arg3); });
    t.method("GetCanvasPar", [](TCanvas* a, Int_t & arg0, Int_t & arg1, UInt_t & arg2, UInt_t & arg3)->void { a->GetCanvasPar(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TCanvas::HandleInput(EEventType, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::HandleInput(EEventType, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:167:22
    t.method("HandleInput", [](TCanvas& a, EEventType arg0, Int_t arg1, Int_t arg2)->void { a.HandleInput(arg0, arg1, arg2); });
    t.method("HandleInput", [](TCanvas* a, EEventType arg0, Int_t arg1, Int_t arg2)->void { a->HandleInput(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::HasMenuBar() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::HasMenuBar()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:168:22
    t.method("HasMenuBar", [](TCanvas const& a)->Bool_t { return a.HasMenuBar(); });
    t.method("HasMenuBar", [](TCanvas const* a)->Bool_t { return a->HasMenuBar(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::HighlightConnect(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::HighlightConnect(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:169:22
    t.method("HighlightConnect", [](TCanvas& a, const char * arg0)->void { a.HighlightConnect(arg0); });
    t.method("HighlightConnect", [](TCanvas* a, const char * arg0)->void { a->HighlightConnect(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Iconify() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Iconify()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:170:22
    t.method("Iconify", [](TCanvas& a)->void { a.Iconify(); });
    t.method("Iconify", [](TCanvas* a)->void { a->Iconify(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsBatch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsBatch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:171:22
    t.method("IsBatch", [](TCanvas const& a)->Bool_t { return a.IsBatch(); });
    t.method("IsBatch", [](TCanvas const* a)->Bool_t { return a->IsBatch(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsDrawn() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsDrawn()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:172:22
    t.method("IsDrawn", [](TCanvas const& a)->Bool_t { return a.IsDrawn(); });
    t.method("IsDrawn", [](TCanvas const* a)->Bool_t { return a->IsDrawn(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsUpdated() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsUpdated()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:173:22
    t.method("IsUpdated", [](TCanvas const& a)->Bool_t { return a.IsUpdated(); });
    t.method("IsUpdated", [](TCanvas const* a)->Bool_t { return a->IsUpdated(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:174:22
    t.method("IsFolder", [](TCanvas const& a)->Bool_t { return a.IsFolder(); });
    t.method("IsFolder", [](TCanvas const* a)->Bool_t { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsGrayscale() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsGrayscale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:175:22
    t.method("IsGrayscale", [](TCanvas& a)->Bool_t { return a.IsGrayscale(); });
    t.method("IsGrayscale", [](TCanvas* a)->Bool_t { return a->IsGrayscale(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsRetained() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsRetained()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:176:22
    t.method("IsRetained", [](TCanvas const& a)->Bool_t { return a.IsRetained(); });
    t.method("IsRetained", [](TCanvas const* a)->Bool_t { return a->IsRetained(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsWeb() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsWeb()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:177:22
    t.method("IsWeb", [](TCanvas const& a)->Bool_t { return a.IsWeb(); });
    t.method("IsWeb", [](TCanvas const* a)->Bool_t { return a->IsWeb(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:178:22
    t.method("ls", [](TCanvas const& a)->void { a.ls(); });
    t.method("ls", [](TCanvas const& a, Option_t * arg0)->void { a.ls(arg0); });
    t.method("ls", [](TCanvas const* a)->void { a->ls(); });
    t.method("ls", [](TCanvas const* a, Option_t * arg0)->void { a->ls(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::MoveOpaque(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::MoveOpaque(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:179:22
    t.method("MoveOpaque", [](TCanvas& a)->void { a.MoveOpaque(); });
    t.method("MoveOpaque", [](TCanvas& a, Int_t arg0)->void { a.MoveOpaque(arg0); });
    t.method("MoveOpaque", [](TCanvas* a)->void { a->MoveOpaque(); });
    t.method("MoveOpaque", [](TCanvas* a, Int_t arg0)->void { a->MoveOpaque(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::OpaqueMoving() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::OpaqueMoving()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:180:22
    t.method("OpaqueMoving", [](TCanvas const& a)->Bool_t { return a.OpaqueMoving(); });
    t.method("OpaqueMoving", [](TCanvas const* a)->Bool_t { return a->OpaqueMoving(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::OpaqueResizing() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::OpaqueResizing()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:181:22
    t.method("OpaqueResizing", [](TCanvas const& a)->Bool_t { return a.OpaqueResizing(); });
    t.method("OpaqueResizing", [](TCanvas const* a)->Bool_t { return a->OpaqueResizing(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:182:22
    t.method("Paint", [](TCanvas& a)->void { a.Paint(); });
    t.method("Paint", [](TCanvas& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TCanvas* a)->void { a->Paint(); });
    t.method("Paint", [](TCanvas* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for TPad * TCanvas::Pick(Int_t, Int_t, TObjLink *&) (" __HERE__ ")");
    // signature to use in the veto list: TPad * TCanvas::Pick(Int_t, Int_t, TObjLink *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:183:22
    t.method("Pick", [](TCanvas& a, Int_t arg0, Int_t arg1, TObjLink *& arg2)->TPad * { return a.Pick(arg0, arg1, arg2); });
    t.method("Pick", [](TCanvas* a, Int_t arg0, Int_t arg1, TObjLink *& arg2)->TPad * { return a->Pick(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TPad * TCanvas::Pick(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TPad * TCanvas::Pick(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:184:22
    t.method("Pick", [](TCanvas& a, Int_t arg0, Int_t arg1, TObject * arg2)->TPad * { return a.Pick(arg0, arg1, arg2); });
    t.method("Pick", [](TCanvas* a, Int_t arg0, Int_t arg1, TObject * arg2)->TPad * { return a->Pick(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Picked(TPad *, TObject *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Picked(TPad *, TObject *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:185:22
    t.method("Picked", [](TCanvas& a, TPad * arg0, TObject * arg1, Int_t arg2)->void { a.Picked(arg0, arg1, arg2); });
    t.method("Picked", [](TCanvas* a, TPad * arg0, TObject * arg1, Int_t arg2)->void { a->Picked(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Highlighted(TVirtualPad *, TObject *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Highlighted(TVirtualPad *, TObject *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:186:22
    t.method("Highlighted", [](TCanvas& a, TVirtualPad * arg0, TObject * arg1, Int_t arg2, Int_t arg3)->void { a.Highlighted(arg0, arg1, arg2, arg3); });
    t.method("Highlighted", [](TCanvas* a, TVirtualPad * arg0, TObject * arg1, Int_t arg2, Int_t arg3)->void { a->Highlighted(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ProcessedEvent(Int_t, Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ProcessedEvent(Int_t, Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:187:22
    t.method("ProcessedEvent", [](TCanvas& a, Int_t arg0, Int_t arg1, Int_t arg2, TObject * arg3)->void { a.ProcessedEvent(arg0, arg1, arg2, arg3); });
    t.method("ProcessedEvent", [](TCanvas* a, Int_t arg0, Int_t arg1, Int_t arg2, TObject * arg3)->void { a->ProcessedEvent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Selected(TVirtualPad *, TObject *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Selected(TVirtualPad *, TObject *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:188:22
    t.method("Selected", [](TCanvas& a, TVirtualPad * arg0, TObject * arg1, Int_t arg2)->void { a.Selected(arg0, arg1, arg2); });
    t.method("Selected", [](TCanvas* a, TVirtualPad * arg0, TObject * arg1, Int_t arg2)->void { a->Selected(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Cleared(TVirtualPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Cleared(TVirtualPad *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:189:22
    t.method("Cleared", [](TCanvas& a, TVirtualPad * arg0)->void { a.Cleared(arg0); });
    t.method("Cleared", [](TCanvas* a, TVirtualPad * arg0)->void { a->Cleared(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Closed() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Closed()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:190:22
    t.method("Closed", [](TCanvas& a)->void { a.Closed(); });
    t.method("Closed", [](TCanvas* a)->void { a->Closed(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::RaiseWindow() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::RaiseWindow()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:191:22
    t.method("RaiseWindow", [](TCanvas& a)->void { a.RaiseWindow(); });
    t.method("RaiseWindow", [](TCanvas* a)->void { a->RaiseWindow(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ResetDrawn() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResetDrawn()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:192:22
    t.method("ResetDrawn", [](TCanvas& a)->void { a.ResetDrawn(); });
    t.method("ResetDrawn", [](TCanvas* a)->void { a->ResetDrawn(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ResetUpdated() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResetUpdated()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:193:22
    t.method("ResetUpdated", [](TCanvas& a)->void { a.ResetUpdated(); });
    t.method("ResetUpdated", [](TCanvas* a)->void { a->ResetUpdated(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Resize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Resize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:194:22
    t.method("Resize", [](TCanvas& a)->void { a.Resize(); });
    t.method("Resize", [](TCanvas& a, Option_t * arg0)->void { a.Resize(arg0); });
    t.method("Resize", [](TCanvas* a)->void { a->Resize(); });
    t.method("Resize", [](TCanvas* a, Option_t * arg0)->void { a->Resize(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ResizeOpaque(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResizeOpaque(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:195:22
    t.method("ResizeOpaque", [](TCanvas& a)->void { a.ResizeOpaque(); });
    t.method("ResizeOpaque", [](TCanvas& a, Int_t arg0)->void { a.ResizeOpaque(arg0); });
    t.method("ResizeOpaque", [](TCanvas* a)->void { a->ResizeOpaque(); });
    t.method("ResizeOpaque", [](TCanvas* a, Int_t arg0)->void { a->ResizeOpaque(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SaveSource(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SaveSource(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:196:22
    t.method("SaveSource", [](TCanvas& a)->void { a.SaveSource(); });
    t.method("SaveSource", [](TCanvas& a, const char * arg0)->void { a.SaveSource(arg0); });
    t.method("SaveSource", [](TCanvas& a, const char * arg0, Option_t * arg1)->void { a.SaveSource(arg0, arg1); });
    t.method("SaveSource", [](TCanvas* a)->void { a->SaveSource(); });
    t.method("SaveSource", [](TCanvas* a, const char * arg0)->void { a->SaveSource(arg0); });
    t.method("SaveSource", [](TCanvas* a, const char * arg0, Option_t * arg1)->void { a->SaveSource(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetCursor(ECursor) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetCursor(ECursor)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:198:22
    t.method("SetCursor", [](TCanvas& a, ECursor arg0)->void { a.SetCursor(arg0); });
    t.method("SetCursor", [](TCanvas* a, ECursor arg0)->void { a->SetCursor(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetDoubleBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetDoubleBuffer(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:199:22
    t.method("SetDoubleBuffer", [](TCanvas& a)->void { a.SetDoubleBuffer(); });
    t.method("SetDoubleBuffer", [](TCanvas& a, Int_t arg0)->void { a.SetDoubleBuffer(arg0); });
    t.method("SetDoubleBuffer", [](TCanvas* a)->void { a->SetDoubleBuffer(); });
    t.method("SetDoubleBuffer", [](TCanvas* a, Int_t arg0)->void { a->SetDoubleBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:200:22
    t.method("SetName", [](TCanvas& a)->void { a.SetName(); });
    t.method("SetName", [](TCanvas& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TCanvas* a)->void { a->SetName(); });
    t.method("SetName", [](TCanvas* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetFixedAspectRatio(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetFixedAspectRatio(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:201:22
    t.method("SetFixedAspectRatio", [](TCanvas& a)->void { a.SetFixedAspectRatio(); });
    t.method("SetFixedAspectRatio", [](TCanvas& a, Bool_t arg0)->void { a.SetFixedAspectRatio(arg0); });
    t.method("SetFixedAspectRatio", [](TCanvas* a)->void { a->SetFixedAspectRatio(); });
    t.method("SetFixedAspectRatio", [](TCanvas* a, Bool_t arg0)->void { a->SetFixedAspectRatio(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetGrayscale(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetGrayscale(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:202:22
    t.method("SetGrayscale", [](TCanvas& a)->void { a.SetGrayscale(); });
    t.method("SetGrayscale", [](TCanvas& a, Bool_t arg0)->void { a.SetGrayscale(arg0); });
    t.method("SetGrayscale", [](TCanvas* a)->void { a->SetGrayscale(); });
    t.method("SetGrayscale", [](TCanvas* a, Bool_t arg0)->void { a->SetGrayscale(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetWindowPosition(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetWindowPosition(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:203:22
    t.method("SetWindowPosition", [](TCanvas& a, Int_t arg0, Int_t arg1)->void { a.SetWindowPosition(arg0, arg1); });
    t.method("SetWindowPosition", [](TCanvas* a, Int_t arg0, Int_t arg1)->void { a->SetWindowPosition(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetWindowSize(UInt_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetWindowSize(UInt_t, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:204:22
    t.method("SetWindowSize", [](TCanvas& a, UInt_t arg0, UInt_t arg1)->void { a.SetWindowSize(arg0, arg1); });
    t.method("SetWindowSize", [](TCanvas* a, UInt_t arg0, UInt_t arg1)->void { a->SetWindowSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetCanvasSize(UInt_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetCanvasSize(UInt_t, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:206:22
    t.method("SetCanvasSize", [](TCanvas& a, UInt_t arg0, UInt_t arg1)->void { a.SetCanvasSize(arg0, arg1); });
    t.method("SetCanvasSize", [](TCanvas* a, UInt_t arg0, UInt_t arg1)->void { a->SetCanvasSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetHighLightColor(Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetHighLightColor(Color_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:207:22
    t.method("SetHighLightColor", [](TCanvas& a, Color_t arg0)->void { a.SetHighLightColor(arg0); });
    t.method("SetHighLightColor", [](TCanvas* a, Color_t arg0)->void { a->SetHighLightColor(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSelected(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSelected(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:208:22
    t.method("SetSelected", [](TCanvas& a, TObject * arg0)->void { a.SetSelected(arg0); });
    t.method("SetSelected", [](TCanvas* a, TObject * arg0)->void { a->SetSelected(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetClickSelected(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetClickSelected(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:209:22
    t.method("SetClickSelected", [](TCanvas& a, TObject * arg0)->void { a.SetClickSelected(arg0); });
    t.method("SetClickSelected", [](TCanvas* a, TObject * arg0)->void { a->SetClickSelected(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSelectedPad(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSelectedPad(TPad *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:210:22
    t.method("SetSelectedPad", [](TCanvas& a, TPad * arg0)->void { a.SetSelectedPad(arg0); });
    t.method("SetSelectedPad", [](TCanvas* a, TPad * arg0)->void { a->SetSelectedPad(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetClickSelectedPad(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetClickSelectedPad(TPad *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:211:22
    t.method("SetClickSelectedPad", [](TCanvas& a, TPad * arg0)->void { a.SetClickSelectedPad(arg0); });
    t.method("SetClickSelectedPad", [](TCanvas* a, TPad * arg0)->void { a->SetClickSelectedPad(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Show() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Show()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:212:22
    t.method("Show", [](TCanvas& a)->void { a.Show(); });
    t.method("Show", [](TCanvas* a)->void { a->Show(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Size(Float_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Size(Float_t, Float_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:213:22
    t.method("Size", [](TCanvas& a)->void { a.Size(); });
    t.method("Size", [](TCanvas& a, Float_t arg0)->void { a.Size(arg0); });
    t.method("Size", [](TCanvas& a, Float_t arg0, Float_t arg1)->void { a.Size(arg0, arg1); });
    t.method("Size", [](TCanvas* a)->void { a->Size(); });
    t.method("Size", [](TCanvas* a, Float_t arg0)->void { a->Size(arg0); });
    t.method("Size", [](TCanvas* a, Float_t arg0, Float_t arg1)->void { a->Size(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetBatch(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetBatch(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:214:22
    t.method("SetBatch", [](TCanvas& a)->void { a.SetBatch(); });
    t.method("SetBatch", [](TCanvas& a, Bool_t arg0)->void { a.SetBatch(arg0); });
    t.method("SetBatch", [](TCanvas* a)->void { a->SetBatch(); });
    t.method("SetBatch", [](TCanvas* a, Bool_t arg0)->void { a->SetBatch(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetFolder(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetFolder(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:215:22
    module_.method("TCanvas!SetFolder", []()->void { TCanvas::SetFolder(); });
    module_.method("TCanvas!SetFolder", [](Bool_t arg0)->void { TCanvas::SetFolder(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetPadSave(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetPadSave(TPad *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:216:22
    t.method("SetPadSave", [](TCanvas& a, TPad * arg0)->void { a.SetPadSave(arg0); });
    t.method("SetPadSave", [](TCanvas* a, TPad * arg0)->void { a->SetPadSave(arg0); });

    DEBUG_MSG("Adding wrapper for bool TCanvas::SetRealAspectRatio(const Int_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TCanvas::SetRealAspectRatio(const Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:217:22
    t.method("SetRealAspectRatio", [](TCanvas& a)->bool { return a.SetRealAspectRatio(); });
    t.method("SetRealAspectRatio", [](TCanvas& a, const Int_t arg0)->bool { return a.SetRealAspectRatio(arg0); });
    t.method("SetRealAspectRatio", [](TCanvas* a)->bool { return a->SetRealAspectRatio(); });
    t.method("SetRealAspectRatio", [](TCanvas* a, const Int_t arg0)->bool { return a->SetRealAspectRatio(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetRetained(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetRetained(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:218:22
    t.method("SetRetained", [](TCanvas& a)->void { a.SetRetained(); });
    t.method("SetRetained", [](TCanvas& a, Bool_t arg0)->void { a.SetRetained(arg0); });
    t.method("SetRetained", [](TCanvas* a)->void { a->SetRetained(); });
    t.method("SetRetained", [](TCanvas* a, Bool_t arg0)->void { a->SetRetained(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetTitle(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:219:22
    t.method("SetTitle", [](TCanvas& a)->void { a.SetTitle(); });
    t.method("SetTitle", [](TCanvas& a, const char * arg0)->void { a.SetTitle(arg0); });
    t.method("SetTitle", [](TCanvas* a)->void { a->SetTitle(); });
    t.method("SetTitle", [](TCanvas* a, const char * arg0)->void { a->SetTitle(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleEventStatus() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleEventStatus()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:220:22
    t.method("ToggleEventStatus", [](TCanvas& a)->void { a.ToggleEventStatus(); });
    t.method("ToggleEventStatus", [](TCanvas* a)->void { a->ToggleEventStatus(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleAutoExec() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleAutoExec()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:221:22
    t.method("ToggleAutoExec", [](TCanvas& a)->void { a.ToggleAutoExec(); });
    t.method("ToggleAutoExec", [](TCanvas* a)->void { a->ToggleAutoExec(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleToolBar() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleToolBar()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:222:22
    t.method("ToggleToolBar", [](TCanvas& a)->void { a.ToggleToolBar(); });
    t.method("ToggleToolBar", [](TCanvas* a)->void { a->ToggleToolBar(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleEditor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleEditor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:223:22
    t.method("ToggleEditor", [](TCanvas& a)->void { a.ToggleEditor(); });
    t.method("ToggleEditor", [](TCanvas* a)->void { a->ToggleEditor(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleToolTips() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleToolTips()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:224:22
    t.method("ToggleToolTips", [](TCanvas& a)->void { a.ToggleToolTips(); });
    t.method("ToggleToolTips", [](TCanvas* a)->void { a->ToggleToolTips(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Update() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Update()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:225:22
    t.method("Update", [](TCanvas& a)->void { a.Update(); });
    t.method("Update", [](TCanvas* a)->void { a->Update(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::UpdateAsync() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::UpdateAsync()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:226:22
    t.method("UpdateAsync", [](TCanvas& a)->void { a.UpdateAsync(); });
    t.method("UpdateAsync", [](TCanvas* a)->void { a->UpdateAsync(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::UseGL() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::UseGL()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:228:24
    t.method("UseGL", [](TCanvas const& a)->Bool_t { return a.UseGL(); });
    t.method("UseGL", [](TCanvas const* a)->Bool_t { return a->UseGL(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSupportGL(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSupportGL(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:229:24
    t.method("SetSupportGL", [](TCanvas& a, Bool_t arg0)->void { a.SetSupportGL(arg0); });
    t.method("SetSupportGL", [](TCanvas* a, Bool_t arg0)->void { a->SetSupportGL(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::DeleteCanvasPainter() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::DeleteCanvasPainter()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:231:24
    t.method("DeleteCanvasPainter", [](TCanvas& a)->void { a.DeleteCanvasPainter(); });
    t.method("DeleteCanvasPainter", [](TCanvas* a)->void { a->DeleteCanvasPainter(); });

    DEBUG_MSG("Adding wrapper for TCanvas * TCanvas::MakeDefCanvas() (" __HERE__ ")");
    // signature to use in the veto list: TCanvas * TCanvas::MakeDefCanvas()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:233:22
    module_.method("TCanvas!MakeDefCanvas", []()->TCanvas * { return TCanvas::MakeDefCanvas(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::SupportAlpha() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::SupportAlpha()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:234:22
    module_.method("TCanvas!SupportAlpha", []()->Bool_t { return TCanvas::SupportAlpha(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::SaveAll(const std::vector<TPad *> &, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::SaveAll(const std::vector<TPad *> &, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TCanvas.h:236:22
    module_.method("TCanvas!SaveAll", []()->Bool_t { return TCanvas::SaveAll(); });
    module_.method("TCanvas!SaveAll", [](const std::vector<TPad *> & arg0)->Bool_t { return TCanvas::SaveAll(arg0); });
    module_.method("TCanvas!SaveAll", [](const std::vector<TPad *> & arg0, const char * arg1)->Bool_t { return TCanvas::SaveAll(arg0, arg1); });
    module_.method("TCanvas!SaveAll", [](const std::vector<TPad *> & arg0, const char * arg1, Option_t * arg2)->Bool_t { return TCanvas::SaveAll(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Version_t TCanvas::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TCanvas::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TCanvas!Class_Version", []()->Version_t { return TCanvas::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TCanvas const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TCanvas const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TCanvas& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TCanvas* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TCanvas::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TCanvas!DeclFileName", []() { return (std::string)TCanvas::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TCanvas::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TCanvas::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TCanvas!ImplFileLine", []()->int { return TCanvas::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TCanvas::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TCanvas!ImplFileName", []() { return (std::string)TCanvas::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TCanvas::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TCanvas!Class_Name", []() { return (std::string)TCanvas::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TCanvas!Dictionary", []()->TClass * { return TCanvas::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TCanvas!Class", []()->TClass * { return TCanvas::Class(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TCanvas& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TCanvas* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TCanvas::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TCanvas::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TCanvas!DeclFileLine", []()->int { return TCanvas::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TCanvas>> type_;
};
std::shared_ptr<Wrapper> newJlTCanvas(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTCanvas(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TBrowserImp> : std::false_type { };
  template<> struct DefaultConstructible<TBrowserImp> : std::false_type { };
}

// Class generating the wrapper for type TBrowserImp
// signature to use in the veto file: TBrowserImp
struct JlTBrowserImp: public Wrapper {

  JlTBrowserImp(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TBrowserImp (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TBrowserImp.h:29:7
    jlcxx::TypeWrapper<TBrowserImp>  t = jlModule.add_type<TBrowserImp>("TBrowserImp");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TBrowserImp>>(new jlcxx::TypeWrapper<TBrowserImp>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TBrowserImp>> type_;
};
std::shared_ptr<Wrapper> newJlTBrowserImp(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTBrowserImp(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<FileStat_t> : std::false_type { };
  template<> struct DefaultConstructible<FileStat_t> : std::false_type { };
}

// Class generating the wrapper for type FileStat_t
// signature to use in the veto file: FileStat_t
struct JlFileStat_t: public Wrapper {

  JlFileStat_t(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type FileStat_t (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:122:8
    jlcxx::TypeWrapper<FileStat_t>  t = jlModule.add_type<FileStat_t>("FileStat_t");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<FileStat_t>>(new jlcxx::TypeWrapper<FileStat_t>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding fDev methods  to provide read access to the field fDev (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:123:13
    // signature to use in the veto list: FileStat_t::fDev
    t.method("fDev", [](const FileStat_t& a) -> Long_t { return a.fDev; });
    t.method("fDev", [](FileStat_t& a) -> Long_t { return a.fDev; });
    t.method("fDev", [](const FileStat_t* a) -> Long_t { return a->fDev; });
    t.method("fDev", [](FileStat_t* a) -> Long_t { return a->fDev; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:123:13
    // signature to use in the veto list: FileStat_t::fDev
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fDev! methods to provide write access to the field fDev (" __HERE__ ")");
    t.method("fDev!", [](FileStat_t& a, Long_t val) -> Long_t { return a.fDev = val; });

    DEBUG_MSG("Adding fDev! methods to provide write access to the field fDev (" __HERE__ ")");
    t.method("fDev!", [](FileStat_t* a, Long_t val) -> Long_t { return a->fDev = val; });

    DEBUG_MSG("Adding fIno methods  to provide read access to the field fIno (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:124:13
    // signature to use in the veto list: FileStat_t::fIno
    t.method("fIno", [](const FileStat_t& a) -> Long_t { return a.fIno; });
    t.method("fIno", [](FileStat_t& a) -> Long_t { return a.fIno; });
    t.method("fIno", [](const FileStat_t* a) -> Long_t { return a->fIno; });
    t.method("fIno", [](FileStat_t* a) -> Long_t { return a->fIno; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:124:13
    // signature to use in the veto list: FileStat_t::fIno
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fIno! methods to provide write access to the field fIno (" __HERE__ ")");
    t.method("fIno!", [](FileStat_t& a, Long_t val) -> Long_t { return a.fIno = val; });

    DEBUG_MSG("Adding fIno! methods to provide write access to the field fIno (" __HERE__ ")");
    t.method("fIno!", [](FileStat_t* a, Long_t val) -> Long_t { return a->fIno = val; });

    DEBUG_MSG("Adding fMode methods  to provide read access to the field fMode (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:125:13
    // signature to use in the veto list: FileStat_t::fMode
    t.method("fMode", [](const FileStat_t& a) -> Int_t { return a.fMode; });
    t.method("fMode", [](FileStat_t& a) -> Int_t { return a.fMode; });
    t.method("fMode", [](const FileStat_t* a) -> Int_t { return a->fMode; });
    t.method("fMode", [](FileStat_t* a) -> Int_t { return a->fMode; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:125:13
    // signature to use in the veto list: FileStat_t::fMode
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fMode! methods to provide write access to the field fMode (" __HERE__ ")");
    t.method("fMode!", [](FileStat_t& a, Int_t val) -> Int_t { return a.fMode = val; });

    DEBUG_MSG("Adding fMode! methods to provide write access to the field fMode (" __HERE__ ")");
    t.method("fMode!", [](FileStat_t* a, Int_t val) -> Int_t { return a->fMode = val; });

    DEBUG_MSG("Adding fUid methods  to provide read access to the field fUid (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:126:13
    // signature to use in the veto list: FileStat_t::fUid
    t.method("fUid", [](const FileStat_t& a) -> Int_t { return a.fUid; });
    t.method("fUid", [](FileStat_t& a) -> Int_t { return a.fUid; });
    t.method("fUid", [](const FileStat_t* a) -> Int_t { return a->fUid; });
    t.method("fUid", [](FileStat_t* a) -> Int_t { return a->fUid; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:126:13
    // signature to use in the veto list: FileStat_t::fUid
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fUid! methods to provide write access to the field fUid (" __HERE__ ")");
    t.method("fUid!", [](FileStat_t& a, Int_t val) -> Int_t { return a.fUid = val; });

    DEBUG_MSG("Adding fUid! methods to provide write access to the field fUid (" __HERE__ ")");
    t.method("fUid!", [](FileStat_t* a, Int_t val) -> Int_t { return a->fUid = val; });

    DEBUG_MSG("Adding fGid methods  to provide read access to the field fGid (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:127:13
    // signature to use in the veto list: FileStat_t::fGid
    t.method("fGid", [](const FileStat_t& a) -> Int_t { return a.fGid; });
    t.method("fGid", [](FileStat_t& a) -> Int_t { return a.fGid; });
    t.method("fGid", [](const FileStat_t* a) -> Int_t { return a->fGid; });
    t.method("fGid", [](FileStat_t* a) -> Int_t { return a->fGid; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:127:13
    // signature to use in the veto list: FileStat_t::fGid
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fGid! methods to provide write access to the field fGid (" __HERE__ ")");
    t.method("fGid!", [](FileStat_t& a, Int_t val) -> Int_t { return a.fGid = val; });

    DEBUG_MSG("Adding fGid! methods to provide write access to the field fGid (" __HERE__ ")");
    t.method("fGid!", [](FileStat_t* a, Int_t val) -> Int_t { return a->fGid = val; });

    DEBUG_MSG("Adding fSize methods  to provide read access to the field fSize (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:128:13
    // signature to use in the veto list: FileStat_t::fSize
    t.method("fSize", [](const FileStat_t& a) -> Long64_t { return a.fSize; });
    t.method("fSize", [](FileStat_t& a) -> Long64_t { return a.fSize; });
    t.method("fSize", [](const FileStat_t* a) -> Long64_t { return a->fSize; });
    t.method("fSize", [](FileStat_t* a) -> Long64_t { return a->fSize; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:128:13
    // signature to use in the veto list: FileStat_t::fSize
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fSize! methods to provide write access to the field fSize (" __HERE__ ")");
    t.method("fSize!", [](FileStat_t& a, Long64_t val) -> Long64_t { return a.fSize = val; });

    DEBUG_MSG("Adding fSize! methods to provide write access to the field fSize (" __HERE__ ")");
    t.method("fSize!", [](FileStat_t* a, Long64_t val) -> Long64_t { return a->fSize = val; });

    DEBUG_MSG("Adding fMtime methods  to provide read access to the field fMtime (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:129:13
    // signature to use in the veto list: FileStat_t::fMtime
    t.method("fMtime", [](const FileStat_t& a) -> Long_t { return a.fMtime; });
    t.method("fMtime", [](FileStat_t& a) -> Long_t { return a.fMtime; });
    t.method("fMtime", [](const FileStat_t* a) -> Long_t { return a->fMtime; });
    t.method("fMtime", [](FileStat_t* a) -> Long_t { return a->fMtime; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:129:13
    // signature to use in the veto list: FileStat_t::fMtime
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fMtime! methods to provide write access to the field fMtime (" __HERE__ ")");
    t.method("fMtime!", [](FileStat_t& a, Long_t val) -> Long_t { return a.fMtime = val; });

    DEBUG_MSG("Adding fMtime! methods to provide write access to the field fMtime (" __HERE__ ")");
    t.method("fMtime!", [](FileStat_t* a, Long_t val) -> Long_t { return a->fMtime = val; });

    DEBUG_MSG("Adding fIsLink methods  to provide read access to the field fIsLink (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:130:13
    // signature to use in the veto list: FileStat_t::fIsLink
    t.method("fIsLink", [](const FileStat_t& a) -> Bool_t { return a.fIsLink; });
    t.method("fIsLink", [](FileStat_t& a) -> Bool_t { return a.fIsLink; });
    t.method("fIsLink", [](const FileStat_t* a) -> Bool_t { return a->fIsLink; });
    t.method("fIsLink", [](FileStat_t* a) -> Bool_t { return a->fIsLink; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:130:13
    // signature to use in the veto list: FileStat_t::fIsLink
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fIsLink! methods to provide write access to the field fIsLink (" __HERE__ ")");
    t.method("fIsLink!", [](FileStat_t& a, Bool_t val) -> Bool_t { return a.fIsLink = val; });

    DEBUG_MSG("Adding fIsLink! methods to provide write access to the field fIsLink (" __HERE__ ")");
    t.method("fIsLink!", [](FileStat_t* a, Bool_t val) -> Bool_t { return a->fIsLink = val; });

    DEBUG_MSG("Adding fUrl methods  to provide read access to the field fUrl (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:131:13
    // signature to use in the veto list: FileStat_t::fUrl
    t.method("fUrl", [](const FileStat_t& a) -> const TString& { return a.fUrl; });
    t.method("fUrl", [](FileStat_t& a) -> TString& { return a.fUrl; });
    t.method("fUrl", [](const FileStat_t* a) -> const TString& { return a->fUrl; });
    t.method("fUrl", [](FileStat_t* a) -> TString& { return a->fUrl; });
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TSystem.h:131:13
    // signature to use in the veto list: FileStat_t::fUrl
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fUrl! methods to provide write access to the field fUrl (" __HERE__ ")");
    t.method("fUrl!", [](FileStat_t& a, const TString& val) -> TString& { return a.fUrl = val; });

    DEBUG_MSG("Adding fUrl! methods to provide write access to the field fUrl (" __HERE__ ")");
    t.method("fUrl!", [](FileStat_t* a, const TString& val) -> TString& { return a->fUrl = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<FileStat_t>> type_;
};
std::shared_ptr<Wrapper> newJlFileStat_t(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlFileStat_t(module));
}
