// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TH3C> : std::false_type { };
  template<> struct DefaultConstructible<TH3C> : std::false_type { };
template<> struct SuperType<TH3C> { typedef TH3 type; };
}

// Class generating the wrapper for type TH3C
// signature to use in the veto file: TH3C
struct JlTH3C: public Wrapper {

  JlTH3C(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH3C (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:153:7
    jlcxx::TypeWrapper<TH3C>  t = jlModule.add_type<TH3C>("TH3C",
      jlcxx::julia_base_type<TH3>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH3C>>(new jlcxx::TypeWrapper<TH3C>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3C::TH3C(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:156:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3C::TH3C(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:159:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3C::TH3C(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:162:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3C::TH3C(const TH3C &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:165:4
    t.constructor<const TH3C &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH3C::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:168:22
    t.method("AddBinContent", static_cast<void (TH3C::*)(Int_t) >(&TH3C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3C::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:169:22
    t.method("AddBinContent", static_cast<void (TH3C::*)(Int_t, Double_t) >(&TH3C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3C::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:170:22
    t.method("Copy", static_cast<void (TH3C::*)(TObject &)  const>(&TH3C::Copy));

    DEBUG_MSG("Adding wrapper for void TH3C::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:171:22
    t.method("Reset", static_cast<void (TH3C::*)(Option_t *) >(&TH3C::Reset));
    t.method("Reset", [](TH3C& a)->void { a.Reset(); });
    t.method("Reset", [](TH3C* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH3C::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:172:22
    t.method("SetBinsLength", static_cast<void (TH3C::*)(Int_t) >(&TH3C::SetBinsLength));
    t.method("SetBinsLength", [](TH3C& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH3C* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH3C & TH3C::operator=(const TH3C &) (" __HERE__ ")");
    // signature to use in the veto list: TH3C & TH3C::operator=(const TH3C &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:174:22
    t.method("assign", static_cast<TH3C & (TH3C::*)(const TH3C &) >(&TH3C::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH3C::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH3C::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!Class_Version", static_cast<Version_t (*)() >(&TH3C::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH3C::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3C::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    t.method("IsA", static_cast<TClass * (TH3C::*)()  const>(&TH3C::IsA));

    DEBUG_MSG("Adding wrapper for void TH3C::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    t.method("StreamerNVirtual", static_cast<void (TH3C::*)(TBuffer &) >(&TH3C::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH3C::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3C::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!DeclFileName", []() { return (std::string)TH3C::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH3C::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3C::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!ImplFileLine", static_cast<int (*)() >(&TH3C::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH3C::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3C::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!ImplFileName", []() { return (std::string)TH3C::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH3C::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3C::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!Class_Name", []() { return (std::string)TH3C::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH3C::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3C::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!Dictionary", static_cast<TClass * (*)() >(&TH3C::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH3C::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3C::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!Class", static_cast<TClass * (*)() >(&TH3C::Class));

    DEBUG_MSG("Adding wrapper for void TH3C::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3C::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    t.method("Streamer", static_cast<void (TH3C::*)(TBuffer &) >(&TH3C::Streamer));

    DEBUG_MSG("Adding wrapper for int TH3C::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3C::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:186:4
    module_.method("TH3C!DeclFileLine", static_cast<int (*)() >(&TH3C::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH3C>> type_;
};
std::shared_ptr<Wrapper> newJlTH3C(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH3C(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH3S> : std::false_type { };
  template<> struct DefaultConstructible<TH3S> : std::false_type { };
template<> struct SuperType<TH3S> { typedef TH3 type; };
}

// Class generating the wrapper for type TH3S
// signature to use in the veto file: TH3S
struct JlTH3S: public Wrapper {

  JlTH3S(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH3S (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:191:7
    jlcxx::TypeWrapper<TH3S>  t = jlModule.add_type<TH3S>("TH3S",
      jlcxx::julia_base_type<TH3>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH3S>>(new jlcxx::TypeWrapper<TH3S>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3S::TH3S(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:194:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3S::TH3S(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:197:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3S::TH3S(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:200:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3S::TH3S(const TH3S &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:203:4
    t.constructor<const TH3S &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH3S::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:206:22
    t.method("AddBinContent", static_cast<void (TH3S::*)(Int_t) >(&TH3S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3S::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:207:22
    t.method("AddBinContent", static_cast<void (TH3S::*)(Int_t, Double_t) >(&TH3S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3S::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:208:22
    t.method("Copy", static_cast<void (TH3S::*)(TObject &)  const>(&TH3S::Copy));

    DEBUG_MSG("Adding wrapper for void TH3S::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:209:22
    t.method("Reset", static_cast<void (TH3S::*)(Option_t *) >(&TH3S::Reset));
    t.method("Reset", [](TH3S& a)->void { a.Reset(); });
    t.method("Reset", [](TH3S* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH3S::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:210:22
    t.method("SetBinsLength", static_cast<void (TH3S::*)(Int_t) >(&TH3S::SetBinsLength));
    t.method("SetBinsLength", [](TH3S& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH3S* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH3S & TH3S::operator=(const TH3S &) (" __HERE__ ")");
    // signature to use in the veto list: TH3S & TH3S::operator=(const TH3S &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:212:22
    t.method("assign", static_cast<TH3S & (TH3S::*)(const TH3S &) >(&TH3S::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH3S::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH3S::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!Class_Version", static_cast<Version_t (*)() >(&TH3S::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH3S::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3S::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    t.method("IsA", static_cast<TClass * (TH3S::*)()  const>(&TH3S::IsA));

    DEBUG_MSG("Adding wrapper for void TH3S::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    t.method("StreamerNVirtual", static_cast<void (TH3S::*)(TBuffer &) >(&TH3S::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH3S::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3S::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!DeclFileName", []() { return (std::string)TH3S::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH3S::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3S::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!ImplFileLine", static_cast<int (*)() >(&TH3S::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH3S::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3S::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!ImplFileName", []() { return (std::string)TH3S::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH3S::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3S::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!Class_Name", []() { return (std::string)TH3S::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH3S::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3S::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!Dictionary", static_cast<TClass * (*)() >(&TH3S::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH3S::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3S::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!Class", static_cast<TClass * (*)() >(&TH3S::Class));

    DEBUG_MSG("Adding wrapper for void TH3S::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3S::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    t.method("Streamer", static_cast<void (TH3S::*)(TBuffer &) >(&TH3S::Streamer));

    DEBUG_MSG("Adding wrapper for int TH3S::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3S::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:224:4
    module_.method("TH3S!DeclFileLine", static_cast<int (*)() >(&TH3S::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH3S>> type_;
};
std::shared_ptr<Wrapper> newJlTH3S(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH3S(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH3I> : std::false_type { };
  template<> struct DefaultConstructible<TH3I> : std::false_type { };
template<> struct SuperType<TH3I> { typedef TH3 type; };
}

// Class generating the wrapper for type TH3I
// signature to use in the veto file: TH3I
struct JlTH3I: public Wrapper {

  JlTH3I(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH3I (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:229:7
    jlcxx::TypeWrapper<TH3I>  t = jlModule.add_type<TH3I>("TH3I",
      jlcxx::julia_base_type<TH3>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH3I>>(new jlcxx::TypeWrapper<TH3I>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3I::TH3I(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:232:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3I::TH3I(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:235:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3I::TH3I(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:238:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3I::TH3I(const TH3I &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:241:4
    t.constructor<const TH3I &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH3I::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:244:22
    t.method("AddBinContent", static_cast<void (TH3I::*)(Int_t) >(&TH3I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3I::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:245:22
    t.method("AddBinContent", static_cast<void (TH3I::*)(Int_t, Double_t) >(&TH3I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3I::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:246:22
    t.method("Copy", static_cast<void (TH3I::*)(TObject &)  const>(&TH3I::Copy));

    DEBUG_MSG("Adding wrapper for void TH3I::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:247:22
    t.method("Reset", static_cast<void (TH3I::*)(Option_t *) >(&TH3I::Reset));
    t.method("Reset", [](TH3I& a)->void { a.Reset(); });
    t.method("Reset", [](TH3I* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH3I::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:248:22
    t.method("SetBinsLength", static_cast<void (TH3I::*)(Int_t) >(&TH3I::SetBinsLength));
    t.method("SetBinsLength", [](TH3I& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH3I* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH3I & TH3I::operator=(const TH3I &) (" __HERE__ ")");
    // signature to use in the veto list: TH3I & TH3I::operator=(const TH3I &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:250:22
    t.method("assign", static_cast<TH3I & (TH3I::*)(const TH3I &) >(&TH3I::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH3I::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH3I::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!Class_Version", static_cast<Version_t (*)() >(&TH3I::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH3I::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3I::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    t.method("IsA", static_cast<TClass * (TH3I::*)()  const>(&TH3I::IsA));

    DEBUG_MSG("Adding wrapper for void TH3I::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    t.method("StreamerNVirtual", static_cast<void (TH3I::*)(TBuffer &) >(&TH3I::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH3I::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3I::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!DeclFileName", []() { return (std::string)TH3I::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH3I::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3I::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!ImplFileLine", static_cast<int (*)() >(&TH3I::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH3I::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3I::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!ImplFileName", []() { return (std::string)TH3I::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH3I::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3I::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!Class_Name", []() { return (std::string)TH3I::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH3I::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3I::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!Dictionary", static_cast<TClass * (*)() >(&TH3I::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH3I::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3I::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!Class", static_cast<TClass * (*)() >(&TH3I::Class));

    DEBUG_MSG("Adding wrapper for void TH3I::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3I::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    t.method("Streamer", static_cast<void (TH3I::*)(TBuffer &) >(&TH3I::Streamer));

    DEBUG_MSG("Adding wrapper for int TH3I::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3I::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:262:4
    module_.method("TH3I!DeclFileLine", static_cast<int (*)() >(&TH3I::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH3I>> type_;
};
std::shared_ptr<Wrapper> newJlTH3I(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH3I(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH3F> : std::false_type { };
  template<> struct DefaultConstructible<TH3F> : std::false_type { };
template<> struct SuperType<TH3F> { typedef TH3 type; };
}

// Class generating the wrapper for type TH3F
// signature to use in the veto file: TH3F
struct JlTH3F: public Wrapper {

  JlTH3F(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH3F (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:268:7
    jlcxx::TypeWrapper<TH3F>  t = jlModule.add_type<TH3F>("TH3F",
      jlcxx::julia_base_type<TH3>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH3F>>(new jlcxx::TypeWrapper<TH3F>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3F::TH3F(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:271:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3F::TH3F(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:274:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3F::TH3F(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:277:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3F::TH3F(const TH3F &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:280:4
    t.constructor<const TH3F &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH3F::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:283:22
    t.method("AddBinContent", static_cast<void (TH3F::*)(Int_t) >(&TH3F::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3F::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:284:22
    t.method("AddBinContent", static_cast<void (TH3F::*)(Int_t, Double_t) >(&TH3F::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3F::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:286:22
    t.method("Copy", static_cast<void (TH3F::*)(TObject &)  const>(&TH3F::Copy));

    DEBUG_MSG("Adding wrapper for void TH3F::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:287:22
    t.method("Reset", static_cast<void (TH3F::*)(Option_t *) >(&TH3F::Reset));
    t.method("Reset", [](TH3F& a)->void { a.Reset(); });
    t.method("Reset", [](TH3F* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH3F::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:288:22
    t.method("SetBinsLength", static_cast<void (TH3F::*)(Int_t) >(&TH3F::SetBinsLength));
    t.method("SetBinsLength", [](TH3F& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH3F* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH3F & TH3F::operator=(const TH3F &) (" __HERE__ ")");
    // signature to use in the veto list: TH3F & TH3F::operator=(const TH3F &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:290:22
    t.method("assign", static_cast<TH3F & (TH3F::*)(const TH3F &) >(&TH3F::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH3F::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH3F::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!Class_Version", static_cast<Version_t (*)() >(&TH3F::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH3F::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3F::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    t.method("IsA", static_cast<TClass * (TH3F::*)()  const>(&TH3F::IsA));

    DEBUG_MSG("Adding wrapper for void TH3F::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    t.method("StreamerNVirtual", static_cast<void (TH3F::*)(TBuffer &) >(&TH3F::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH3F::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3F::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!DeclFileName", []() { return (std::string)TH3F::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH3F::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3F::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!ImplFileLine", static_cast<int (*)() >(&TH3F::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH3F::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3F::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!ImplFileName", []() { return (std::string)TH3F::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH3F::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3F::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!Class_Name", []() { return (std::string)TH3F::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH3F::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3F::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!Dictionary", static_cast<TClass * (*)() >(&TH3F::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH3F::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3F::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!Class", static_cast<TClass * (*)() >(&TH3F::Class));

    DEBUG_MSG("Adding wrapper for void TH3F::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3F::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    t.method("Streamer", static_cast<void (TH3F::*)(TBuffer &) >(&TH3F::Streamer));

    DEBUG_MSG("Adding wrapper for int TH3F::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3F::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:302:4
    module_.method("TH3F!DeclFileLine", static_cast<int (*)() >(&TH3F::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH3F>> type_;
};
std::shared_ptr<Wrapper> newJlTH3F(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH3F(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH3D> : std::false_type { };
  template<> struct DefaultConstructible<TH3D> : std::false_type { };
template<> struct SuperType<TH3D> { typedef TH3 type; };
}

// Class generating the wrapper for type TH3D
// signature to use in the veto file: TH3D
struct JlTH3D: public Wrapper {

  JlTH3D(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH3D (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:307:7
    jlcxx::TypeWrapper<TH3D>  t = jlModule.add_type<TH3D>("TH3D",
      jlcxx::julia_base_type<TH3>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH3D>>(new jlcxx::TypeWrapper<TH3D>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3D::TH3D(const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:310:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3D::TH3D(const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:313:4
    t.constructor<const char *, const char *, Int_t, const Float_t *, Int_t, const Float_t *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3D::TH3D(const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:316:4
    t.constructor<const char *, const char *, Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH3D::TH3D(const TH3D &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:319:4
    t.constructor<const TH3D &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TH3D::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:322:22
    t.method("AddBinContent", static_cast<void (TH3D::*)(Int_t) >(&TH3D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3D::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:323:22
    t.method("AddBinContent", static_cast<void (TH3D::*)(Int_t, Double_t) >(&TH3D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH3D::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:325:22
    t.method("Copy", static_cast<void (TH3D::*)(TObject &)  const>(&TH3D::Copy));

    DEBUG_MSG("Adding wrapper for void TH3D::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:326:22
    t.method("Reset", static_cast<void (TH3D::*)(Option_t *) >(&TH3D::Reset));
    t.method("Reset", [](TH3D& a)->void { a.Reset(); });
    t.method("Reset", [](TH3D* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH3D::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:327:22
    t.method("SetBinsLength", static_cast<void (TH3D::*)(Int_t) >(&TH3D::SetBinsLength));
    t.method("SetBinsLength", [](TH3D& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH3D* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for TH3D & TH3D::operator=(const TH3D &) (" __HERE__ ")");
    // signature to use in the veto list: TH3D & TH3D::operator=(const TH3D &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:329:22
    t.method("assign", static_cast<TH3D & (TH3D::*)(const TH3D &) >(&TH3D::operator=));

    DEBUG_MSG("Adding wrapper for Version_t TH3D::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH3D::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!Class_Version", static_cast<Version_t (*)() >(&TH3D::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH3D::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3D::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    t.method("IsA", static_cast<TClass * (TH3D::*)()  const>(&TH3D::IsA));

    DEBUG_MSG("Adding wrapper for void TH3D::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    t.method("StreamerNVirtual", static_cast<void (TH3D::*)(TBuffer &) >(&TH3D::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH3D::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3D::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!DeclFileName", []() { return (std::string)TH3D::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH3D::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3D::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!ImplFileLine", static_cast<int (*)() >(&TH3D::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH3D::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3D::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!ImplFileName", []() { return (std::string)TH3D::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH3D::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH3D::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!Class_Name", []() { return (std::string)TH3D::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH3D::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3D::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!Dictionary", static_cast<TClass * (*)() >(&TH3D::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH3D::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH3D::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!Class", static_cast<TClass * (*)() >(&TH3D::Class));

    DEBUG_MSG("Adding wrapper for void TH3D::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH3D::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    t.method("Streamer", static_cast<void (TH3D::*)(TBuffer &) >(&TH3D::Streamer));

    DEBUG_MSG("Adding wrapper for int TH3D::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH3D::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH3.h:341:4
    module_.method("TH3D!DeclFileLine", static_cast<int (*)() >(&TH3D::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH3D>> type_;
};
std::shared_ptr<Wrapper> newJlTH3D(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH3D(module));
}
