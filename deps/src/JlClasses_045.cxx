// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoDecayChannel> : std::false_type { };
  template<> struct DefaultConstructible<TGeoDecayChannel> : std::false_type { };
template<> struct SuperType<TGeoDecayChannel> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoDecayChannel
// signature to use in the veto file: TGeoDecayChannel
struct JlTGeoDecayChannel: public Wrapper {

  JlTGeoDecayChannel(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoDecayChannel (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:207:7
    jlcxx::TypeWrapper<TGeoDecayChannel>  t = jlModule.add_type<TGeoDecayChannel>("TGeoDecayChannel",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoDecayChannel>>(new jlcxx::TypeWrapper<TGeoDecayChannel>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::TGeoDecayChannel(Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:235:4
    t.constructor<Int_t, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::TGeoDecayChannel(const TGeoDecayChannel &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:244:4
    t.constructor<const TGeoDecayChannel &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TGeoDecayChannel & TGeoDecayChannel::operator=(const TGeoDecayChannel &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoDecayChannel & TGeoDecayChannel::operator=(const TGeoDecayChannel &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:256:22
    t.method("assign", static_cast<TGeoDecayChannel & (TGeoDecayChannel::*)(const TGeoDecayChannel &) >(&TGeoDecayChannel::operator=));

    DEBUG_MSG("Adding wrapper for Int_t TGeoDecayChannel::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoDecayChannel::GetIndex()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:259:10
    t.method("GetIndex", static_cast<Int_t (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::GetIndex));

    DEBUG_MSG("Adding wrapper for const char * TGeoDecayChannel::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoDecayChannel::GetName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:260:16
    t.method("GetName", [](TGeoDecayChannel const& a) { return (std::string)a.GetName(); });
    t.method("GetName", [](TGeoDecayChannel const* a) { return (std::string)a->GetName(); });

    DEBUG_MSG("Adding wrapper for UInt_t TGeoDecayChannel::Decay() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TGeoDecayChannel::Decay()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:261:11
    t.method("Decay", static_cast<UInt_t (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::Decay));

    DEBUG_MSG("Adding wrapper for Double_t TGeoDecayChannel::BranchingRatio() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoDecayChannel::BranchingRatio()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:262:13
    t.method("BranchingRatio", static_cast<Double_t (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::BranchingRatio));

    DEBUG_MSG("Adding wrapper for Double_t TGeoDecayChannel::Qvalue() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoDecayChannel::Qvalue()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:263:13
    t.method("Qvalue", static_cast<Double_t (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::Qvalue));

    DEBUG_MSG("Adding wrapper for Int_t TGeoDecayChannel::DeltaIso() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoDecayChannel::DeltaIso()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:264:10
    t.method("DeltaIso", static_cast<Int_t (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::DeltaIso));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoDecayChannel::Daughter() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoDecayChannel::Daughter()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:265:19
    t.method("Daughter", static_cast<TGeoElementRN * (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::Daughter));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoDecayChannel::Parent() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoDecayChannel::Parent()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:266:19
    t.method("Parent", static_cast<TGeoElementRN * (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::Parent));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::DecayName(UInt_t, TString &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::DecayName(UInt_t, TString &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:267:16
    module_.method("TGeoDecayChannel!DecayName", static_cast<void (*)(UInt_t, TString &) >(&TGeoDecayChannel::DecayName));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::SetParent(TGeoElementRN *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::SetParent(TGeoElementRN *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:269:9
    t.method("SetParent", static_cast<void (TGeoDecayChannel::*)(TGeoElementRN *) >(&TGeoDecayChannel::SetParent));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::SetDaughter(TGeoElementRN *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::SetDaughter(TGeoElementRN *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:270:9
    t.method("SetDaughter", static_cast<void (TGeoDecayChannel::*)(TGeoElementRN *) >(&TGeoDecayChannel::SetDaughter));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:272:9
    t.method("Print", static_cast<void (TGeoDecayChannel::*)(Option_t *)  const>(&TGeoDecayChannel::Print));
    t.method("Print", [](TGeoDecayChannel const& a)->void { a.Print(); });
    t.method("Print", [](TGeoDecayChannel const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for TGeoDecayChannel * TGeoDecayChannel::ReadDecay(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoDecayChannel * TGeoDecayChannel::ReadDecay(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:273:29
    module_.method("TGeoDecayChannel!ReadDecay", static_cast<TGeoDecayChannel * (*)(const char *) >(&TGeoDecayChannel::ReadDecay));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::DecayShift(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::DecayShift(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:275:17
    t.method("DecayShift", static_cast<void (TGeoDecayChannel::*)(Int_t &, Int_t &, Int_t &)  const>(&TGeoDecayChannel::DecayShift));

    DEBUG_MSG("Adding wrapper for Version_t TGeoDecayChannel::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoDecayChannel::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!Class_Version", static_cast<Version_t (*)() >(&TGeoDecayChannel::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoDecayChannel::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoDecayChannel::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    t.method("IsA", static_cast<TClass * (TGeoDecayChannel::*)()  const>(&TGeoDecayChannel::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    t.method("StreamerNVirtual", static_cast<void (TGeoDecayChannel::*)(TBuffer &) >(&TGeoDecayChannel::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoDecayChannel::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoDecayChannel::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!DeclFileName", []() { return (std::string)TGeoDecayChannel::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoDecayChannel::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoDecayChannel::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!ImplFileLine", static_cast<int (*)() >(&TGeoDecayChannel::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoDecayChannel::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoDecayChannel::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!ImplFileName", []() { return (std::string)TGeoDecayChannel::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoDecayChannel::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoDecayChannel::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!Class_Name", []() { return (std::string)TGeoDecayChannel::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoDecayChannel::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoDecayChannel::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!Dictionary", static_cast<TClass * (*)() >(&TGeoDecayChannel::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoDecayChannel::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoDecayChannel::Class()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!Class", static_cast<TClass * (*)() >(&TGeoDecayChannel::Class));

    DEBUG_MSG("Adding wrapper for void TGeoDecayChannel::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoDecayChannel::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    t.method("Streamer", static_cast<void (TGeoDecayChannel::*)(TBuffer &) >(&TGeoDecayChannel::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoDecayChannel::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoDecayChannel::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:277:4
    module_.method("TGeoDecayChannel!DeclFileLine", static_cast<int (*)() >(&TGeoDecayChannel::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoDecayChannel>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoDecayChannel(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoDecayChannel(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBatemanSol> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBatemanSol> : std::false_type { };
template<> struct SuperType<TGeoBatemanSol> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoBatemanSol
// signature to use in the veto file: TGeoBatemanSol
struct JlTGeoBatemanSol: public Wrapper {

  JlTGeoBatemanSol(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBatemanSol (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:286:7
    jlcxx::TypeWrapper<TGeoBatemanSol>  t = jlModule.add_type<TGeoBatemanSol>("TGeoBatemanSol",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBatemanSol>>(new jlcxx::TypeWrapper<TGeoBatemanSol>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::TGeoBatemanSol(TGeoElementRN *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:316:4
    t.constructor<TGeoElementRN *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::TGeoBatemanSol(const TObjArray *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:317:4
    t.constructor<const TObjArray *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::TGeoBatemanSol(const TGeoBatemanSol &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:318:4
    t.constructor<const TGeoBatemanSol &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TGeoBatemanSol & TGeoBatemanSol::operator=(const TGeoBatemanSol &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBatemanSol & TGeoBatemanSol::operator=(const TGeoBatemanSol &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:321:20
    t.method("assign", static_cast<TGeoBatemanSol & (TGeoBatemanSol::*)(const TGeoBatemanSol &) >(&TGeoBatemanSol::operator=));

    DEBUG_MSG("Adding wrapper for TGeoBatemanSol & TGeoBatemanSol::operator+=(const TGeoBatemanSol &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoBatemanSol & TGeoBatemanSol::operator+=(const TGeoBatemanSol &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:322:20
    t.method("add!", static_cast<TGeoBatemanSol & (TGeoBatemanSol::*)(const TGeoBatemanSol &) >(&TGeoBatemanSol::operator+=));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBatemanSol::Concentration(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBatemanSol::Concentration(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:324:13
    t.method("Concentration", static_cast<Double_t (TGeoBatemanSol::*)(Double_t)  const>(&TGeoBatemanSol::Concentration));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::Draw(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:325:9
    t.method("Draw", static_cast<void (TGeoBatemanSol::*)(Option_t *) >(&TGeoBatemanSol::Draw));
    t.method("Draw", [](TGeoBatemanSol& a)->void { a.Draw(); });
    t.method("Draw", [](TGeoBatemanSol* a)->void { a->Draw(); });

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::GetCoeff(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::GetCoeff(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:326:9
    t.method("GetCoeff", static_cast<void (TGeoBatemanSol::*)(Int_t, Double_t &, Double_t &)  const>(&TGeoBatemanSol::GetCoeff));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::GetRange(Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::GetRange(Double_t &, Double_t &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:331:9
    t.method("GetRange", static_cast<void (TGeoBatemanSol::*)(Double_t &, Double_t &)  const>(&TGeoBatemanSol::GetRange));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoBatemanSol::GetElement() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoBatemanSol::GetElement()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:336:19
    t.method("GetElement", static_cast<TGeoElementRN * (TGeoBatemanSol::*)()  const>(&TGeoBatemanSol::GetElement));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoBatemanSol::GetTopElement() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoBatemanSol::GetTopElement()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:337:19
    t.method("GetTopElement", static_cast<TGeoElementRN * (TGeoBatemanSol::*)()  const>(&TGeoBatemanSol::GetTopElement));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBatemanSol::GetNcoeff() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBatemanSol::GetNcoeff()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:338:10
    t.method("GetNcoeff", static_cast<Int_t (TGeoBatemanSol::*)()  const>(&TGeoBatemanSol::GetNcoeff));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:339:9
    t.method("Print", static_cast<void (TGeoBatemanSol::*)(Option_t *)  const>(&TGeoBatemanSol::Print));
    t.method("Print", [](TGeoBatemanSol const& a)->void { a.Print(); });
    t.method("Print", [](TGeoBatemanSol const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::SetRange(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::SetRange(Double_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:340:9
    t.method("SetRange", static_cast<void (TGeoBatemanSol::*)(Double_t, Double_t) >(&TGeoBatemanSol::SetRange));
    t.method("SetRange", [](TGeoBatemanSol& a)->void { a.SetRange(); });
    t.method("SetRange", [](TGeoBatemanSol& a, Double_t arg0)->void { a.SetRange(arg0); });
    t.method("SetRange", [](TGeoBatemanSol* a)->void { a->SetRange(); });
    t.method("SetRange", [](TGeoBatemanSol* a, Double_t arg0)->void { a->SetRange(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::SetFactor(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::SetFactor(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:345:9
    t.method("SetFactor", static_cast<void (TGeoBatemanSol::*)(Double_t) >(&TGeoBatemanSol::SetFactor));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::FindSolution(const TObjArray *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::FindSolution(const TObjArray *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:346:9
    t.method("FindSolution", static_cast<void (TGeoBatemanSol::*)(const TObjArray *) >(&TGeoBatemanSol::FindSolution));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::Normalize(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::Normalize(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:347:9
    t.method("Normalize", static_cast<void (TGeoBatemanSol::*)(Double_t) >(&TGeoBatemanSol::Normalize));

    DEBUG_MSG("Adding wrapper for Version_t TGeoBatemanSol::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBatemanSol::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!Class_Version", static_cast<Version_t (*)() >(&TGeoBatemanSol::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoBatemanSol::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBatemanSol::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    t.method("IsA", static_cast<TClass * (TGeoBatemanSol::*)()  const>(&TGeoBatemanSol::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    t.method("StreamerNVirtual", static_cast<void (TGeoBatemanSol::*)(TBuffer &) >(&TGeoBatemanSol::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoBatemanSol::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBatemanSol::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!DeclFileName", []() { return (std::string)TGeoBatemanSol::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBatemanSol::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBatemanSol::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!ImplFileLine", static_cast<int (*)() >(&TGeoBatemanSol::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoBatemanSol::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBatemanSol::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!ImplFileName", []() { return (std::string)TGeoBatemanSol::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBatemanSol::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBatemanSol::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!Class_Name", []() { return (std::string)TGeoBatemanSol::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBatemanSol::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBatemanSol::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!Dictionary", static_cast<TClass * (*)() >(&TGeoBatemanSol::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoBatemanSol::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBatemanSol::Class()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!Class", static_cast<TClass * (*)() >(&TGeoBatemanSol::Class));

    DEBUG_MSG("Adding wrapper for void TGeoBatemanSol::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBatemanSol::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    t.method("Streamer", static_cast<void (TGeoBatemanSol::*)(TBuffer &) >(&TGeoBatemanSol::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoBatemanSol::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBatemanSol::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:349:4
    module_.method("TGeoBatemanSol!DeclFileLine", static_cast<int (*)() >(&TGeoBatemanSol::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBatemanSol>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBatemanSol(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBatemanSol(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoElemIter> : std::false_type { };
  template<> struct DefaultConstructible<TGeoElemIter> : std::false_type { };
}

// Class generating the wrapper for type TGeoElemIter
// signature to use in the veto file: TGeoElemIter
struct JlTGeoElemIter: public Wrapper {

  JlTGeoElemIter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoElemIter (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:358:7
    jlcxx::TypeWrapper<TGeoElemIter>  t = jlModule.add_type<TGeoElemIter>("TGeoElemIter");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoElemIter>>(new jlcxx::TypeWrapper<TGeoElemIter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TGeoElemIter::TGeoElemIter(TGeoElementRN *, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:373:4
    t.constructor<TGeoElementRN *>(/*finalize=*/true);
    t.constructor<TGeoElementRN *, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoElemIter::TGeoElemIter(const TGeoElemIter &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:374:4
    t.constructor<const TGeoElemIter &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TGeoElemIter & TGeoElemIter::operator=(const TGeoElemIter &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoElemIter & TGeoElemIter::operator=(const TGeoElemIter &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:377:18
    t.method("assign", static_cast<TGeoElemIter & (TGeoElemIter::*)(const TGeoElemIter &) >(&TGeoElemIter::operator=));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoElemIter::operator()() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoElemIter::operator()()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:378:19
    t.method("paren", static_cast<TGeoElementRN * (TGeoElemIter::*)() >(&TGeoElemIter::operator()));

    DEBUG_MSG("Adding wrapper for TGeoElementRN * TGeoElemIter::Next() (" __HERE__ ")");
    // signature to use in the veto list: TGeoElementRN * TGeoElemIter::Next()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:379:19
    t.method("Next", static_cast<TGeoElementRN * (TGeoElemIter::*)() >(&TGeoElemIter::Next));

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoElemIter::GetBranch() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoElemIter::GetBranch()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:381:15
    t.method("GetBranch", static_cast<TObjArray * (TGeoElemIter::*)()  const>(&TGeoElemIter::GetBranch));

    DEBUG_MSG("Adding wrapper for const TGeoElementRN * TGeoElemIter::GetTop() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoElementRN * TGeoElemIter::GetTop()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:382:25
    t.method("GetTop", static_cast<const TGeoElementRN * (TGeoElemIter::*)()  const>(&TGeoElemIter::GetTop));

    DEBUG_MSG("Adding wrapper for const TGeoElementRN * TGeoElemIter::GetElement() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoElementRN * TGeoElemIter::GetElement()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:383:25
    t.method("GetElement", static_cast<const TGeoElementRN * (TGeoElemIter::*)()  const>(&TGeoElemIter::GetElement));

    DEBUG_MSG("Adding wrapper for Int_t TGeoElemIter::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoElemIter::GetLevel()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:384:10
    t.method("GetLevel", static_cast<Int_t (TGeoElemIter::*)()  const>(&TGeoElemIter::GetLevel));

    DEBUG_MSG("Adding wrapper for Double_t TGeoElemIter::GetRatio() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoElemIter::GetRatio()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:385:13
    t.method("GetRatio", static_cast<Double_t (TGeoElemIter::*)()  const>(&TGeoElemIter::GetRatio));

    DEBUG_MSG("Adding wrapper for void TGeoElemIter::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoElemIter::Print(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:386:17
    t.method("Print", static_cast<void (TGeoElemIter::*)(Option_t *)  const>(&TGeoElemIter::Print));
    t.method("Print", [](TGeoElemIter const& a)->void { a.Print(); });
    t.method("Print", [](TGeoElemIter const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TGeoElemIter::SetLimitRatio(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoElemIter::SetLimitRatio(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:387:9
    t.method("SetLimitRatio", static_cast<void (TGeoElemIter::*)(Double_t) >(&TGeoElemIter::SetLimitRatio));

    DEBUG_MSG("Adding wrapper for Version_t TGeoElemIter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoElemIter::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!Class_Version", static_cast<Version_t (*)() >(&TGeoElemIter::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoElemIter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoElemIter::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    t.method("IsA", static_cast<TClass * (TGeoElemIter::*)()  const>(&TGeoElemIter::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoElemIter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoElemIter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    t.method("StreamerNVirtual", static_cast<void (TGeoElemIter::*)(TBuffer &) >(&TGeoElemIter::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoElemIter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoElemIter::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!DeclFileName", []() { return (std::string)TGeoElemIter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoElemIter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoElemIter::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!ImplFileLine", static_cast<int (*)() >(&TGeoElemIter::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoElemIter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoElemIter::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!ImplFileName", []() { return (std::string)TGeoElemIter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoElemIter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoElemIter::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!Class_Name", []() { return (std::string)TGeoElemIter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoElemIter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoElemIter::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!Dictionary", static_cast<TClass * (*)() >(&TGeoElemIter::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoElemIter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoElemIter::Class()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!Class", static_cast<TClass * (*)() >(&TGeoElemIter::Class));

    DEBUG_MSG("Adding wrapper for void TGeoElemIter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoElemIter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    t.method("Streamer", static_cast<void (TGeoElemIter::*)(TBuffer &) >(&TGeoElemIter::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoElemIter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoElemIter::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoElement.h:389:4
    module_.method("TGeoElemIter!DeclFileLine", static_cast<int (*)() >(&TGeoElemIter::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoElemIter>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoElemIter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoElemIter(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoExtension> : std::false_type { };
  template<> struct DefaultConstructible<TGeoExtension> : std::false_type { };
template<> struct SuperType<TGeoExtension> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoExtension
// signature to use in the veto file: TGeoExtension
struct JlTGeoExtension: public Wrapper {

  JlTGeoExtension(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoExtension (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:17:7
    jlcxx::TypeWrapper<TGeoExtension>  t = jlModule.add_type<TGeoExtension>("TGeoExtension",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoExtension>>(new jlcxx::TypeWrapper<TGeoExtension>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoExtension::Grab() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoExtension::Grab()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:25:27
    t.method("Grab", static_cast<TGeoExtension * (TGeoExtension::*)() >(&TGeoExtension::Grab));

    DEBUG_MSG("Adding wrapper for void TGeoExtension::Release() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoExtension::Release()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:28:17
    t.method("Release", static_cast<void (TGeoExtension::*)()  const>(&TGeoExtension::Release));

    DEBUG_MSG("Adding wrapper for Version_t TGeoExtension::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoExtension::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!Class_Version", static_cast<Version_t (*)() >(&TGeoExtension::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoExtension::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoExtension::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    t.method("IsA", static_cast<TClass * (TGeoExtension::*)()  const>(&TGeoExtension::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoExtension::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoExtension::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    t.method("StreamerNVirtual", static_cast<void (TGeoExtension::*)(TBuffer &) >(&TGeoExtension::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoExtension::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoExtension::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!DeclFileName", []() { return (std::string)TGeoExtension::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoExtension::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoExtension::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!ImplFileLine", static_cast<int (*)() >(&TGeoExtension::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoExtension::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoExtension::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!ImplFileName", []() { return (std::string)TGeoExtension::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoExtension::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoExtension::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!Class_Name", []() { return (std::string)TGeoExtension::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoExtension::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoExtension::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!Dictionary", static_cast<TClass * (*)() >(&TGeoExtension::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoExtension::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoExtension::Class()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!Class", static_cast<TClass * (*)() >(&TGeoExtension::Class));

    DEBUG_MSG("Adding wrapper for void TGeoExtension::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoExtension::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    t.method("Streamer", static_cast<void (TGeoExtension::*)(TBuffer &) >(&TGeoExtension::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoExtension::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoExtension::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoExtension.h:30:4
    module_.method("TGeoExtension!DeclFileLine", static_cast<int (*)() >(&TGeoExtension::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoExtension>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoExtension(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoExtension(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoMixture> : std::false_type { };
  template<> struct DefaultConstructible<TGeoMixture> : std::false_type { };
template<> struct SuperType<TGeoMixture> { typedef TGeoMaterial type; };
}

// Class generating the wrapper for type TGeoMixture
// signature to use in the veto file: TGeoMixture
struct JlTGeoMixture: public Wrapper {

  JlTGeoMixture(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoMixture (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:156:7
    jlcxx::TypeWrapper<TGeoMixture>  t = jlModule.add_type<TGeoMixture>("TGeoMixture",
      jlcxx::julia_base_type<TGeoMaterial>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoMixture>>(new jlcxx::TypeWrapper<TGeoMixture>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TGeoMixture::TGeoMixture(const char *, Int_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:174:4
    t.constructor<const char *, Int_t>(/*finalize=*/true);
    t.constructor<const char *, Int_t, Double_t>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TGeoMixture::AddElement(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::AddElement(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:178:9
    t.method("AddElement", static_cast<void (TGeoMixture::*)(Double_t, Double_t, Double_t) >(&TGeoMixture::AddElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::AddElement(TGeoMaterial *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::AddElement(TGeoMaterial *, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:179:9
    t.method("AddElement", static_cast<void (TGeoMixture::*)(TGeoMaterial *, Double_t) >(&TGeoMixture::AddElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::AddElement(TGeoElement *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::AddElement(TGeoElement *, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:180:9
    t.method("AddElement", static_cast<void (TGeoMixture::*)(TGeoElement *, Double_t) >(&TGeoMixture::AddElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::AddElement(TGeoElement *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::AddElement(TGeoElement *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:181:9
    t.method("AddElement", static_cast<void (TGeoMixture::*)(TGeoElement *, Int_t) >(&TGeoMixture::AddElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::DefineElement(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::DefineElement(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:183:9
    t.method("DefineElement", static_cast<void (TGeoMixture::*)(Int_t, Double_t, Double_t, Double_t) >(&TGeoMixture::DefineElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::DefineElement(Int_t, TGeoElement *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::DefineElement(Int_t, TGeoElement *, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:184:9
    t.method("DefineElement", static_cast<void (TGeoMixture::*)(Int_t, TGeoElement *, Double_t) >(&TGeoMixture::DefineElement));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::DefineElement(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::DefineElement(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:185:9
    t.method("DefineElement", static_cast<void (TGeoMixture::*)(Int_t, Int_t, Int_t) >(&TGeoMixture::DefineElement));

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoMixture::DecayMaterial(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoMixture::DecayMaterial(Double_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:187:18
    t.method("DecayMaterial", static_cast<TGeoMaterial * (TGeoMixture::*)(Double_t, Double_t) >(&TGeoMixture::DecayMaterial));
    t.method("DecayMaterial", [](TGeoMixture& a, Double_t arg0)->TGeoMaterial * { return a.DecayMaterial(arg0); });
    t.method("DecayMaterial", [](TGeoMixture* a, Double_t arg0)->TGeoMaterial * { return a->DecayMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoMixture::FillMaterialEvolution(TObjArray *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::FillMaterialEvolution(TObjArray *, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:188:9
    t.method("FillMaterialEvolution", static_cast<void (TGeoMixture::*)(TObjArray *, Double_t) >(&TGeoMixture::FillMaterialEvolution));
    t.method("FillMaterialEvolution", [](TGeoMixture& a, TObjArray * arg0)->void { a.FillMaterialEvolution(arg0); });
    t.method("FillMaterialEvolution", [](TGeoMixture* a, TObjArray * arg0)->void { a->FillMaterialEvolution(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMixture::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMixture::GetByteCount()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:190:10
    t.method("GetByteCount", static_cast<Int_t (TGeoMixture::*)()  const>(&TGeoMixture::GetByteCount));

    DEBUG_MSG("Adding wrapper for TGeoElement * TGeoMixture::GetElement(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoElement * TGeoMixture::GetElement(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:191:17
    t.method("GetElement", static_cast<TGeoElement * (TGeoMixture::*)(Int_t)  const>(&TGeoMixture::GetElement));
    t.method("GetElement", [](TGeoMixture const& a)->TGeoElement * { return a.GetElement(); });
    t.method("GetElement", [](TGeoMixture const* a)->TGeoElement * { return a->GetElement(); });

    DEBUG_MSG("Adding wrapper for void TGeoMixture::GetElementProp(Double_t &, Double_t &, Double_t &, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::GetElementProp(Double_t &, Double_t &, Double_t &, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:192:9
    t.method("GetElementProp", static_cast<void (TGeoMixture::*)(Double_t &, Double_t &, Double_t &, Int_t) >(&TGeoMixture::GetElementProp));
    t.method("GetElementProp", [](TGeoMixture& a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a.GetElementProp(arg0, arg1, arg2); });
    t.method("GetElementProp", [](TGeoMixture* a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a->GetElementProp(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoMixture::GetNelements() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMixture::GetNelements()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:198:10
    t.method("GetNelements", static_cast<Int_t (TGeoMixture::*)()  const>(&TGeoMixture::GetNelements));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoMixture::GetZmixt() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoMixture::GetZmixt()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:199:14
    t.method("GetZmixt", static_cast<Double_t * (TGeoMixture::*)()  const>(&TGeoMixture::GetZmixt));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoMixture::GetAmixt() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoMixture::GetAmixt()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:200:14
    t.method("GetAmixt", static_cast<Double_t * (TGeoMixture::*)()  const>(&TGeoMixture::GetAmixt));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoMixture::GetWmixt() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoMixture::GetWmixt()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:201:14
    t.method("GetWmixt", static_cast<Double_t * (TGeoMixture::*)()  const>(&TGeoMixture::GetWmixt));

    DEBUG_MSG("Adding wrapper for Int_t * TGeoMixture::GetNmixt() (" __HERE__ ")");
    // signature to use in the veto list: Int_t * TGeoMixture::GetNmixt()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:202:11
    t.method("GetNmixt", static_cast<Int_t * (TGeoMixture::*)()  const>(&TGeoMixture::GetNmixt));

    DEBUG_MSG("Adding wrapper for Double_t TGeoMixture::GetSpecificActivity(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoMixture::GetSpecificActivity(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:203:13
    t.method("GetSpecificActivity", static_cast<Double_t (TGeoMixture::*)(Int_t)  const>(&TGeoMixture::GetSpecificActivity));
    t.method("GetSpecificActivity", [](TGeoMixture const& a)->Double_t { return a.GetSpecificActivity(); });
    t.method("GetSpecificActivity", [](TGeoMixture const* a)->Double_t { return a->GetSpecificActivity(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMixture::IsEq(const TGeoMaterial *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMixture::IsEq(const TGeoMaterial *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:205:11
    t.method("IsEq", static_cast<Bool_t (TGeoMixture::*)(const TGeoMaterial *)  const>(&TGeoMixture::IsEq));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMixture::IsMixture() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMixture::IsMixture()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:206:11
    t.method("IsMixture", static_cast<Bool_t (TGeoMixture::*)()  const>(&TGeoMixture::IsMixture));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::Print(const Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::Print(const Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:207:9
    t.method("Print", static_cast<void (TGeoMixture::*)(const Option_t *)  const>(&TGeoMixture::Print));
    t.method("Print", [](TGeoMixture const& a)->void { a.Print(); });
    t.method("Print", [](TGeoMixture const* a)->void { a->Print(); });

    DEBUG_MSG("Adding wrapper for void TGeoMixture::SetA(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::SetA(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:209:9
    t.method("SetA", static_cast<void (TGeoMixture::*)(Double_t) >(&TGeoMixture::SetA));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::SetZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::SetZ(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:210:9
    t.method("SetZ", static_cast<void (TGeoMixture::*)(Double_t) >(&TGeoMixture::SetZ));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::SetDensity(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::SetDensity(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:211:9
    t.method("SetDensity", static_cast<void (TGeoMixture::*)(Double_t) >(&TGeoMixture::SetDensity));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::ComputeDerivedQuantities() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::ComputeDerivedQuantities()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:216:9
    t.method("ComputeDerivedQuantities", static_cast<void (TGeoMixture::*)() >(&TGeoMixture::ComputeDerivedQuantities));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::ComputeRadiationLength() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::ComputeRadiationLength()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:217:9
    t.method("ComputeRadiationLength", static_cast<void (TGeoMixture::*)() >(&TGeoMixture::ComputeRadiationLength));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::ComputeNuclearInterLength() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::ComputeNuclearInterLength()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:218:9
    t.method("ComputeNuclearInterLength", static_cast<void (TGeoMixture::*)() >(&TGeoMixture::ComputeNuclearInterLength));

    DEBUG_MSG("Adding wrapper for Version_t TGeoMixture::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoMixture::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!Class_Version", static_cast<Version_t (*)() >(&TGeoMixture::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TGeoMixture::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMixture::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    t.method("IsA", static_cast<TClass * (TGeoMixture::*)()  const>(&TGeoMixture::IsA));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    t.method("StreamerNVirtual", static_cast<void (TGeoMixture::*)(TBuffer &) >(&TGeoMixture::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TGeoMixture::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMixture::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!DeclFileName", []() { return (std::string)TGeoMixture::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoMixture::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMixture::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!ImplFileLine", static_cast<int (*)() >(&TGeoMixture::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TGeoMixture::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMixture::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!ImplFileName", []() { return (std::string)TGeoMixture::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMixture::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMixture::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!Class_Name", []() { return (std::string)TGeoMixture::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMixture::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMixture::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!Dictionary", static_cast<TClass * (*)() >(&TGeoMixture::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TGeoMixture::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMixture::Class()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!Class", static_cast<TClass * (*)() >(&TGeoMixture::Class));

    DEBUG_MSG("Adding wrapper for void TGeoMixture::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMixture::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    t.method("Streamer", static_cast<void (TGeoMixture::*)(TBuffer &) >(&TGeoMixture::Streamer));

    DEBUG_MSG("Adding wrapper for int TGeoMixture::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMixture::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TGeoMaterial.h:220:4
    module_.method("TGeoMixture!DeclFileLine", static_cast<int (*)() >(&TGeoMixture::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoMixture>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoMixture(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoMixture(module));
}
