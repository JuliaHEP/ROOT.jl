// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoEltu> : std::false_type { };
  template<> struct DefaultConstructible<TGeoEltu> : std::false_type { };
template<> struct SuperType<TGeoEltu> { typedef TGeoTube type; };
}

// Class generating the wrapper for type TGeoEltu
// signature to use in the veto file: TGeoEltu
struct JlTGeoEltu: public Wrapper {

  JlTGeoEltu(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoEltu (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:17:7
    jlcxx::TypeWrapper<TGeoEltu>  t = jlModule.add_type<TGeoEltu>("TGeoEltu",
      jlcxx::julia_base_type<TGeoTube>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoEltu>>(new jlcxx::TypeWrapper<TGeoEltu>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoEltu::TGeoEltu(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:24:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoEltu::TGeoEltu(const char *, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:25:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoEltu::TGeoEltu(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:26:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::Capacity()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:30:13
    t.method("Capacity", [](TGeoEltu const& a)->Double_t { return a.Capacity(); });
    t.method("Capacity", [](TGeoEltu const* a)->Double_t { return a->Capacity(); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:31:9
    t.method("ComputeBBox", [](TGeoEltu& a)->void { a.ComputeBBox(); });
    t.method("ComputeBBox", [](TGeoEltu* a)->void { a->ComputeBBox(); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:32:9
    t.method("ComputeNormal", [](TGeoEltu& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); });
    t.method("ComputeNormal", [](TGeoEltu* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:33:9
    t.method("ComputeNormal_v", [](TGeoEltu& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); });
    t.method("ComputeNormal_v", [](TGeoEltu* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoEltu::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoEltu::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:34:11
    t.method("Contains", [](TGeoEltu const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); });
    t.method("Contains", [](TGeoEltu const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:35:9
    t.method("Contains_v", [](TGeoEltu const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); });
    t.method("Contains_v", [](TGeoEltu const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoEltu::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoEltu::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:36:10
    t.method("DistancetoPrimitive", [](TGeoEltu& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); });
    t.method("DistancetoPrimitive", [](TGeoEltu* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:37:13
    t.method("DistFromInside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); });
    t.method("DistFromInside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); });
    t.method("DistFromInside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); });
    t.method("DistFromInside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:39:9
    t.method("DistFromInside_v", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromInside_v", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:41:13
    t.method("DistFromOutside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); });
    t.method("DistFromOutside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); });
    t.method("DistFromOutside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); });
    t.method("DistFromOutside", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:43:9
    t.method("DistFromOutside_v", [](TGeoEltu const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });
    t.method("DistFromOutside_v", [](TGeoEltu const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoEltu::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoEltu::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:46:4
    t.method("Divide", [](TGeoEltu& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("Divide", [](TGeoEltu* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::GetA() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::GetA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:47:21
    t.method("GetA", [](TGeoEltu const& a)->Double_t { return a.GetA(); });
    t.method("GetA", [](TGeoEltu const* a)->Double_t { return a->GetA(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::GetB() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::GetB()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:48:21
    t.method("GetB", [](TGeoEltu const& a)->Double_t { return a.GetB(); });
    t.method("GetB", [](TGeoEltu const* a)->Double_t { return a->GetB(); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:49:9
    t.method("GetBoundingCylinder", [](TGeoEltu const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); });
    t.method("GetBoundingCylinder", [](TGeoEltu const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoEltu::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoEltu::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:51:15
    t.method("GetMakeRuntimeShape", [](TGeoEltu const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); });
    t.method("GetMakeRuntimeShape", [](TGeoEltu const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:52:9
    t.method("GetMeshNumbers", [](TGeoEltu const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); });
    t.method("GetMeshNumbers", [](TGeoEltu const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoEltu::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoEltu::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:53:10
    t.method("GetNmeshVertices", [](TGeoEltu const& a)->Int_t { return a.GetNmeshVertices(); });
    t.method("GetNmeshVertices", [](TGeoEltu const* a)->Int_t { return a->GetNmeshVertices(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoEltu::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoEltu::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:54:11
    t.method("GetPointsOnSegments", [](TGeoEltu const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); });
    t.method("GetPointsOnSegments", [](TGeoEltu const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::InspectShape()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:55:9
    t.method("InspectShape", [](TGeoEltu const& a)->void { a.InspectShape(); });
    t.method("InspectShape", [](TGeoEltu const* a)->void { a->InspectShape(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoEltu::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoEltu::IsCylType()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:56:11
    t.method("IsCylType", [](TGeoEltu const& a)->Bool_t { return a.IsCylType(); });
    t.method("IsCylType", [](TGeoEltu const* a)->Bool_t { return a->IsCylType(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoEltu::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoEltu::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:57:13
    t.method("Safety", [](TGeoEltu const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); });
    t.method("Safety", [](TGeoEltu const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); });
    t.method("Safety", [](TGeoEltu const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); });
    t.method("Safety", [](TGeoEltu const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:58:9
    t.method("Safety_v", [](TGeoEltu const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); });
    t.method("Safety_v", [](TGeoEltu const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::SetEltuDimensions(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::SetEltuDimensions(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:60:9
    t.method("SetEltuDimensions", [](TGeoEltu& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetEltuDimensions(arg0, arg1, arg2); });
    t.method("SetEltuDimensions", [](TGeoEltu* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetEltuDimensions(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:61:9
    t.method("SetDimensions", [](TGeoEltu& a, Double_t * arg0)->void { a.SetDimensions(arg0); });
    t.method("SetDimensions", [](TGeoEltu* a, Double_t * arg0)->void { a->SetDimensions(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:62:9
    t.method("SetPoints", [](TGeoEltu const& a, Double_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoEltu const* a, Double_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:63:9
    t.method("SetPoints", [](TGeoEltu const& a, Float_t * arg0)->void { a.SetPoints(arg0); });
    t.method("SetPoints", [](TGeoEltu const* a, Float_t * arg0)->void { a->SetPoints(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoEltu::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoEltu::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!Class_Version", []()->Version_t { return TGeoEltu::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoEltu::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoEltu::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    t.method("IsA", [](TGeoEltu const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoEltu const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    t.method("StreamerNVirtual", [](TGeoEltu& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoEltu* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoEltu::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoEltu::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!DeclFileName", []() { return (std::string)TGeoEltu::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoEltu::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoEltu::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!ImplFileLine", []()->int { return TGeoEltu::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoEltu::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoEltu::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!ImplFileName", []() { return (std::string)TGeoEltu::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoEltu::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoEltu::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!Class_Name", []() { return (std::string)TGeoEltu::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoEltu::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoEltu::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!Dictionary", []()->TClass * { return TGeoEltu::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoEltu::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoEltu::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!Class", []()->TClass * { return TGeoEltu::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoEltu::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoEltu::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    t.method("Streamer", [](TGeoEltu& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoEltu* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoEltu::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoEltu::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoEltu.h:65:4
    module_.method("TGeoEltu!DeclFileLine", []()->int { return TGeoEltu::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoEltu>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoEltu(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoEltu(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoRCExtension> : std::false_type { };
  template<> struct DefaultConstructible<TGeoRCExtension> : std::false_type { };
template<> struct SuperType<TGeoRCExtension> { typedef TGeoExtension type; };
}

// Class generating the wrapper for type TGeoRCExtension
// signature to use in the veto file: TGeoRCExtension
struct JlTGeoRCExtension: public Wrapper {

  JlTGeoRCExtension(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoRCExtension (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:33:7
    jlcxx::TypeWrapper<TGeoRCExtension>  t = jlModule.add_type<TGeoRCExtension>("TGeoRCExtension",
      jlcxx::julia_base_type<TGeoExtension>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoRCExtension>>(new jlcxx::TypeWrapper<TGeoRCExtension>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void TGeoRCExtension::TGeoRCExtension(TObject *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:39:4
    t.constructor<TObject *>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoRCExtension::Grab() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoRCExtension::Grab()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:41:19
    t.method("Grab", [](TGeoRCExtension& a)->TGeoExtension * { return a.Grab(); });
    t.method("Grab", [](TGeoRCExtension* a)->TGeoExtension * { return a->Grab(); });

    DEBUG_MSG("Adding wrapper for void TGeoRCExtension::Release() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRCExtension::Release()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:46:9
    t.method("Release", [](TGeoRCExtension const& a)->void { a.Release(); });
    t.method("Release", [](TGeoRCExtension const* a)->void { a->Release(); });

    DEBUG_MSG("Adding wrapper for void TGeoRCExtension::SetUserObject(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRCExtension::SetUserObject(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:48:9
    t.method("SetUserObject", [](TGeoRCExtension& a, TObject * arg0)->void { a.SetUserObject(arg0); });
    t.method("SetUserObject", [](TGeoRCExtension* a, TObject * arg0)->void { a->SetUserObject(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TGeoRCExtension::GetUserObject() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGeoRCExtension::GetUserObject()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:49:13
    t.method("GetUserObject", [](TGeoRCExtension const& a)->TObject * { return a.GetUserObject(); });
    t.method("GetUserObject", [](TGeoRCExtension const* a)->TObject * { return a->GetUserObject(); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoRCExtension::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoRCExtension::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!Class_Version", []()->Version_t { return TGeoRCExtension::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRCExtension::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRCExtension::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    t.method("IsA", [](TGeoRCExtension const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoRCExtension const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoRCExtension::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRCExtension::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    t.method("StreamerNVirtual", [](TGeoRCExtension& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoRCExtension* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRCExtension::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRCExtension::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!DeclFileName", []() { return (std::string)TGeoRCExtension::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoRCExtension::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRCExtension::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!ImplFileLine", []()->int { return TGeoRCExtension::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRCExtension::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRCExtension::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!ImplFileName", []() { return (std::string)TGeoRCExtension::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRCExtension::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRCExtension::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!Class_Name", []() { return (std::string)TGeoRCExtension::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRCExtension::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRCExtension::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!Dictionary", []()->TClass * { return TGeoRCExtension::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRCExtension::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRCExtension::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!Class", []()->TClass * { return TGeoRCExtension::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoRCExtension::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRCExtension::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    t.method("Streamer", [](TGeoRCExtension& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoRCExtension* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoRCExtension::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRCExtension::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoExtension.h:58:4
    module_.method("TGeoRCExtension!DeclFileLine", []()->int { return TGeoRCExtension::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoRCExtension>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoRCExtension(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoRCExtension(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualMagField> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualMagField> : std::false_type { };
template<> struct SuperType<TVirtualMagField> { typedef TNamed type; };
}

// Class generating the wrapper for type TVirtualMagField
// signature to use in the veto file: TVirtualMagField
struct JlTVirtualMagField: public Wrapper {

  JlTVirtualMagField(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualMagField (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:16:7
    jlcxx::TypeWrapper<TVirtualMagField>  t = jlModule.add_type<TVirtualMagField>("TVirtualMagField",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualMagField>>(new jlcxx::TypeWrapper<TVirtualMagField>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TVirtualMagField::Field(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualMagField::Field(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:22:17
    t.method("Field", [](TVirtualMagField& a, const Double_t * arg0, Double_t * arg1)->void { a.Field(arg0, arg1); });
    t.method("Field", [](TVirtualMagField* a, const Double_t * arg0, Double_t * arg1)->void { a->Field(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TVirtualMagField::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TVirtualMagField::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!Class_Version", []()->Version_t { return TVirtualMagField::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualMagField::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualMagField::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    t.method("IsA", [](TVirtualMagField const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TVirtualMagField const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TVirtualMagField::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualMagField::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    t.method("StreamerNVirtual", [](TVirtualMagField& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TVirtualMagField* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualMagField::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualMagField::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!DeclFileName", []() { return (std::string)TVirtualMagField::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TVirtualMagField::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualMagField::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!ImplFileLine", []()->int { return TVirtualMagField::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualMagField::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualMagField::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!ImplFileName", []() { return (std::string)TVirtualMagField::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualMagField::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualMagField::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!Class_Name", []() { return (std::string)TVirtualMagField::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualMagField::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualMagField::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!Dictionary", []()->TClass * { return TVirtualMagField::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualMagField::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualMagField::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!Class", []()->TClass * { return TVirtualMagField::Class(); });

    DEBUG_MSG("Adding wrapper for void TVirtualMagField::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualMagField::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    t.method("Streamer", [](TVirtualMagField& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TVirtualMagField* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TVirtualMagField::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualMagField::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:24:4
    module_.method("TVirtualMagField!DeclFileLine", []()->int { return TVirtualMagField::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualMagField>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualMagField(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualMagField(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoUniformMagField> : std::false_type { };
  template<> struct DefaultConstructible<TGeoUniformMagField> : std::false_type { };
template<> struct SuperType<TGeoUniformMagField> { typedef TVirtualMagField type; };
}

// Class generating the wrapper for type TGeoUniformMagField
// signature to use in the veto file: TGeoUniformMagField
struct JlTGeoUniformMagField: public Wrapper {

  JlTGeoUniformMagField(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoUniformMagField (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:33:7
    jlcxx::TypeWrapper<TGeoUniformMagField>  t = jlModule.add_type<TGeoUniformMagField>("TGeoUniformMagField",
      jlcxx::julia_base_type<TVirtualMagField>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoUniformMagField>>(new jlcxx::TypeWrapper<TGeoUniformMagField>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoUniformMagField::TGeoUniformMagField(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:43:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TGeoUniformMagField::Field(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUniformMagField::Field(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:46:9
    t.method("Field", [](TGeoUniformMagField& a, const Double_t * arg0, Double_t * arg1)->void { a.Field(arg0, arg1); });
    t.method("Field", [](TGeoUniformMagField* a, const Double_t * arg0, Double_t * arg1)->void { a->Field(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoUniformMagField::GetFieldValue() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoUniformMagField::GetFieldValue()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:53:20
    t.method("GetFieldValue", [](TGeoUniformMagField const& a)->const Double_t * { return a.GetFieldValue(); });
    t.method("GetFieldValue", [](TGeoUniformMagField const* a)->const Double_t * { return a->GetFieldValue(); });

    DEBUG_MSG("Adding wrapper for void TGeoUniformMagField::SetFieldValue(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUniformMagField::SetFieldValue(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:54:9
    t.method("SetFieldValue", [](TGeoUniformMagField& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetFieldValue(arg0, arg1, arg2); });
    t.method("SetFieldValue", [](TGeoUniformMagField* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetFieldValue(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoUniformMagField::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoUniformMagField::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!Class_Version", []()->Version_t { return TGeoUniformMagField::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUniformMagField::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUniformMagField::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    t.method("IsA", [](TGeoUniformMagField const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoUniformMagField const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoUniformMagField::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUniformMagField::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    t.method("StreamerNVirtual", [](TGeoUniformMagField& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoUniformMagField* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUniformMagField::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUniformMagField::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!DeclFileName", []() { return (std::string)TGeoUniformMagField::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoUniformMagField::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoUniformMagField::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!ImplFileLine", []()->int { return TGeoUniformMagField::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUniformMagField::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUniformMagField::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!ImplFileName", []() { return (std::string)TGeoUniformMagField::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoUniformMagField::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoUniformMagField::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!Class_Name", []() { return (std::string)TGeoUniformMagField::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUniformMagField::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUniformMagField::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!Dictionary", []()->TClass * { return TGeoUniformMagField::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoUniformMagField::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoUniformMagField::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!Class", []()->TClass * { return TGeoUniformMagField::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoUniformMagField::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoUniformMagField::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    t.method("Streamer", [](TGeoUniformMagField& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoUniformMagField* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoUniformMagField::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoUniformMagField::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualMagField.h:61:4
    module_.method("TGeoUniformMagField!DeclFileLine", []()->int { return TGeoUniformMagField::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoUniformMagField>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoUniformMagField(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoUniformMagField(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoGlobalMagField> : std::false_type { };
  template<> struct DefaultConstructible<TGeoGlobalMagField> : std::false_type { };
template<> struct SuperType<TGeoGlobalMagField> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoGlobalMagField
// signature to use in the veto file: TGeoGlobalMagField
struct JlTGeoGlobalMagField: public Wrapper {

  JlTGeoGlobalMagField(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoGlobalMagField (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:18:7
    jlcxx::TypeWrapper<TGeoGlobalMagField>  t = jlModule.add_type<TGeoGlobalMagField>("TGeoGlobalMagField",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoGlobalMagField>>(new jlcxx::TypeWrapper<TGeoGlobalMagField>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TVirtualMagField * TGeoGlobalMagField::GetField() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualMagField * TGeoGlobalMagField::GetField()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:34:22
    t.method("GetField", [](TGeoGlobalMagField const& a)->TVirtualMagField * { return a.GetField(); });
    t.method("GetField", [](TGeoGlobalMagField const* a)->TVirtualMagField * { return a->GetField(); });

    DEBUG_MSG("Adding wrapper for void TGeoGlobalMagField::SetField(TVirtualMagField *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGlobalMagField::SetField(TVirtualMagField *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:35:9
    t.method("SetField", [](TGeoGlobalMagField& a, TVirtualMagField * arg0)->void { a.SetField(arg0); });
    t.method("SetField", [](TGeoGlobalMagField* a, TVirtualMagField * arg0)->void { a->SetField(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoGlobalMagField::IsLocked() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoGlobalMagField::IsLocked()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:36:11
    t.method("IsLocked", [](TGeoGlobalMagField& a)->Bool_t { return a.IsLocked(); });
    t.method("IsLocked", [](TGeoGlobalMagField* a)->Bool_t { return a->IsLocked(); });

    DEBUG_MSG("Adding wrapper for void TGeoGlobalMagField::Lock() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGlobalMagField::Lock()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:37:9
    t.method("Lock", [](TGeoGlobalMagField& a)->void { a.Lock(); });
    t.method("Lock", [](TGeoGlobalMagField* a)->void { a->Lock(); });

    DEBUG_MSG("Adding wrapper for TGeoGlobalMagField * TGeoGlobalMagField::Instance() (" __HERE__ ")");
    // signature to use in the veto list: TGeoGlobalMagField * TGeoGlobalMagField::Instance()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:40:31
    module_.method("TGeoGlobalMagField!Instance", []()->TGeoGlobalMagField * { return TGeoGlobalMagField::Instance(); });

    DEBUG_MSG("Adding wrapper for TGeoGlobalMagField * TGeoGlobalMagField::GetInstance() (" __HERE__ ")");
    // signature to use in the veto list: TGeoGlobalMagField * TGeoGlobalMagField::GetInstance()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:41:31
    module_.method("TGeoGlobalMagField!GetInstance", []()->TGeoGlobalMagField * { return TGeoGlobalMagField::GetInstance(); });

    DEBUG_MSG("Adding wrapper for void TGeoGlobalMagField::Field(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGlobalMagField::Field(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:44:9
    t.method("Field", [](TGeoGlobalMagField& a, const Double_t * arg0, Double_t * arg1)->void { a.Field(arg0, arg1); });
    t.method("Field", [](TGeoGlobalMagField* a, const Double_t * arg0, Double_t * arg1)->void { a->Field(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoGlobalMagField::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoGlobalMagField::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!Class_Version", []()->Version_t { return TGeoGlobalMagField::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGlobalMagField::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGlobalMagField::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    t.method("IsA", [](TGeoGlobalMagField const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoGlobalMagField const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoGlobalMagField::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGlobalMagField::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    t.method("StreamerNVirtual", [](TGeoGlobalMagField& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoGlobalMagField* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGlobalMagField::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGlobalMagField::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!DeclFileName", []() { return (std::string)TGeoGlobalMagField::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoGlobalMagField::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGlobalMagField::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!ImplFileLine", []()->int { return TGeoGlobalMagField::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGlobalMagField::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGlobalMagField::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!ImplFileName", []() { return (std::string)TGeoGlobalMagField::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoGlobalMagField::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoGlobalMagField::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!Class_Name", []() { return (std::string)TGeoGlobalMagField::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGlobalMagField::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGlobalMagField::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!Dictionary", []()->TClass * { return TGeoGlobalMagField::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoGlobalMagField::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoGlobalMagField::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!Class", []()->TClass * { return TGeoGlobalMagField::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoGlobalMagField::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoGlobalMagField::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    t.method("Streamer", [](TGeoGlobalMagField& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoGlobalMagField* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoGlobalMagField::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoGlobalMagField::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoGlobalMagField.h:50:4
    module_.method("TGeoGlobalMagField!DeclFileLine", []()->int { return TGeoGlobalMagField::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoGlobalMagField>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoGlobalMagField(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoGlobalMagField(module));
}
