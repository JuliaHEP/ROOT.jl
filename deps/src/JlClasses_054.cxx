// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoHalfSpace> : std::false_type { };
  template<> struct DefaultConstructible<TGeoHalfSpace> : std::false_type { };
template<> struct SuperType<TGeoHalfSpace> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoHalfSpace
// signature to use in the veto file: TGeoHalfSpace
struct JlTGeoHalfSpace: public Wrapper {

  JlTGeoHalfSpace(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoHalfSpace (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:17:7
    jlcxx::TypeWrapper<TGeoHalfSpace>  t = jlModule.add_type<TGeoHalfSpace>("TGeoHalfSpace",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoHalfSpace>>(new jlcxx::TypeWrapper<TGeoHalfSpace>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::TGeoHalfSpace(const char *, Double_t *, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:28:4
    t.constructor<const char *, Double_t *, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("p"), jlcxx::arg("n")    );


    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::TGeoHalfSpace(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:29:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoHalfSpace::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHalfSpace::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:33:13
    t.method("Capacity", [](TGeoHalfSpace const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoHalfSpace const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:34:9
    t.method("ComputeBBox", [](TGeoHalfSpace& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoHalfSpace* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:35:9
    t.method("ComputeNormal", [](TGeoHalfSpace& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoHalfSpace* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:36:9
    t.method("ComputeNormal_v", [](TGeoHalfSpace& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoHalfSpace* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHalfSpace::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHalfSpace::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:37:11
    t.method("Contains", [](TGeoHalfSpace const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoHalfSpace const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:38:9
    t.method("Contains_v", [](TGeoHalfSpace const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoHalfSpace const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHalfSpace::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHalfSpace::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:39:10
    t.method("DistancetoPrimitive", [](TGeoHalfSpace& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoHalfSpace* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHalfSpace::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHalfSpace::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:40:13
    t.method("DistFromInside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:42:9
    t.method("DistFromInside_v", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHalfSpace::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHalfSpace::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:44:13
    t.method("DistFromOutside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:46:9
    t.method("DistFromOutside_v", [](TGeoHalfSpace const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoHalfSpace const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoHalfSpace::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoHalfSpace::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:49:4
    t.method("Divide", [](TGeoHalfSpace& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoHalfSpace* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoHalfSpace::GetPoint() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoHalfSpace::GetPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:50:22
    t.method("GetPoint", [](TGeoHalfSpace& a)->Double_t * { return a.GetPoint(); }, jlcxx::arg("this"));
    t.method("GetPoint", [](TGeoHalfSpace* a)->Double_t * { return a->GetPoint(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoHalfSpace::GetNorm() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoHalfSpace::GetNorm()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:51:22
    t.method("GetNorm", [](TGeoHalfSpace& a)->Double_t * { return a.GetNorm(); }, jlcxx::arg("this"));
    t.method("GetNorm", [](TGeoHalfSpace* a)->Double_t * { return a->GetNorm(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:52:9
    t.method("GetBoundingCylinder", [](TGeoHalfSpace const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("GetBoundingCylinder", [](TGeoHalfSpace const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoHalfSpace::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoHalfSpace::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:53:15
    t.method("GetMakeRuntimeShape", [](TGeoHalfSpace const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetMakeRuntimeShape", [](TGeoHalfSpace const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:54:9
    t.method("GetMeshNumbers", [](TGeoHalfSpace const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoHalfSpace const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHalfSpace::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHalfSpace::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:55:10
    t.method("GetNmeshVertices", [](TGeoHalfSpace const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoHalfSpace const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:56:9
    t.method("InspectShape", [](TGeoHalfSpace const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoHalfSpace const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHalfSpace::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHalfSpace::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:57:11
    t.method("IsCylType", [](TGeoHalfSpace const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoHalfSpace const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHalfSpace::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHalfSpace::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:58:13
    t.method("Safety", [](TGeoHalfSpace const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoHalfSpace const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoHalfSpace const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoHalfSpace const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:59:9
    t.method("Safety_v", [](TGeoHalfSpace const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoHalfSpace const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:61:9
    t.method("SetDimensions", [](TGeoHalfSpace& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoHalfSpace* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:62:9
    t.method("SetPoints", [](TGeoHalfSpace const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetPoints", [](TGeoHalfSpace const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:63:9
    t.method("SetPoints", [](TGeoHalfSpace const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetPoints", [](TGeoHalfSpace const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHalfSpace.h:64:9
    t.method("Sizeof3D", [](TGeoHalfSpace const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoHalfSpace const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoHalfSpace::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoHalfSpace::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoHalfSpace!Class_Version", []()->Version_t { return TGeoHalfSpace::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHalfSpace::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHalfSpace::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoHalfSpace const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoHalfSpace const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoHalfSpace& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoHalfSpace* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoHalfSpace::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHalfSpace::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoHalfSpace!DeclFileName", []() { return (std::string)TGeoHalfSpace::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoHalfSpace::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHalfSpace::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoHalfSpace!ImplFileLine", []()->int { return TGeoHalfSpace::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHalfSpace::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHalfSpace::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoHalfSpace!ImplFileName", []() { return (std::string)TGeoHalfSpace::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHalfSpace::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHalfSpace::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoHalfSpace!Class_Name", []() { return (std::string)TGeoHalfSpace::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHalfSpace::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHalfSpace::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoHalfSpace!Dictionary", []()->TClass * { return TGeoHalfSpace::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHalfSpace::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHalfSpace::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoHalfSpace!Class", []()->TClass * { return TGeoHalfSpace::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoHalfSpace::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHalfSpace::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoHalfSpace& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoHalfSpace* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoHalfSpace::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHalfSpace::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoHalfSpace!DeclFileLine", []()->int { return TGeoHalfSpace::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoHalfSpace>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoHalfSpace(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoHalfSpace(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoHelix> : std::false_type { };
  template<> struct DefaultConstructible<TGeoHelix> : std::false_type { };
template<> struct SuperType<TGeoHelix> { typedef TObject type; };
}

// Class generating the wrapper for type TGeoHelix
// signature to use in the veto file: TGeoHelix
struct JlTGeoHelix: public Wrapper {

  JlTGeoHelix(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoHelix (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:19:7
    jlcxx::TypeWrapper<TGeoHelix>  t = jlModule.add_type<TGeoHelix>("TGeoHelix",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoHelix>>(new jlcxx::TypeWrapper<TGeoHelix>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoHelix::TGeoHelix(Double_t, Double_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:40:4
    t.constructor<Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("curvature"), jlcxx::arg("step")    );
    t.constructor<Double_t, Double_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("curvature"), jlcxx::arg("step"), jlcxx::arg("charge")    );

    DEBUG_MSG("Adding wrapper for void TGeoHelix::InitPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::InitPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:44:9
    t.method("InitPoint", [](TGeoHelix& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.InitPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("z0"));
    t.method("InitPoint", [](TGeoHelix* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->InitPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x0"), jlcxx::arg("y0"), jlcxx::arg("z0"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::InitPoint(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::InitPoint(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:45:9
    t.method("InitPoint", [](TGeoHelix& a, Double_t * arg0)->void { a.InitPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("InitPoint", [](TGeoHelix* a, Double_t * arg0)->void { a->InitPoint(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::InitDirection(Double_t, Double_t, Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::InitDirection(Double_t, Double_t, Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:46:9
    t.method("InitDirection", [](TGeoHelix& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.InitDirection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dirx"), jlcxx::arg("diry"), jlcxx::arg("dirz"));
    t.method("InitDirection", [](TGeoHelix& a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->void { a.InitDirection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("dirx"), jlcxx::arg("diry"), jlcxx::arg("dirz"), jlcxx::arg("is_normalized"));
    t.method("InitDirection", [](TGeoHelix* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->InitDirection(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dirx"), jlcxx::arg("diry"), jlcxx::arg("dirz"));
    t.method("InitDirection", [](TGeoHelix* a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->void { a->InitDirection(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("dirx"), jlcxx::arg("diry"), jlcxx::arg("dirz"), jlcxx::arg("is_normalized"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::InitDirection(Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::InitDirection(Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:47:9
    t.method("InitDirection", [](TGeoHelix& a, Double_t * arg0)->void { a.InitDirection(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("InitDirection", [](TGeoHelix& a, Double_t * arg0, Bool_t arg1)->void { a.InitDirection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("is_normalized"));
    t.method("InitDirection", [](TGeoHelix* a, Double_t * arg0)->void { a->InitDirection(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("InitDirection", [](TGeoHelix* a, Double_t * arg0, Bool_t arg1)->void { a->InitDirection(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dir"), jlcxx::arg("is_normalized"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHelix::ComputeSafeStep(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHelix::ComputeSafeStep(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:49:13
    t.method("ComputeSafeStep", [](TGeoHelix const& a)->Double_t { return a.ComputeSafeStep(); }, jlcxx::arg("this"));
    t.method("ComputeSafeStep", [](TGeoHelix const& a, Double_t arg0)->Double_t { return a.ComputeSafeStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("epsil"));
    t.method("ComputeSafeStep", [](TGeoHelix const* a)->Double_t { return a->ComputeSafeStep(); }, jlcxx::arg("this"));
    t.method("ComputeSafeStep", [](TGeoHelix const* a, Double_t arg0)->Double_t { return a->ComputeSafeStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("epsil"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoHelix::GetCurrentPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoHelix::GetCurrentPoint()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:50:20
    t.method("GetCurrentPoint", [](TGeoHelix const& a)->const Double_t * { return a.GetCurrentPoint(); }, jlcxx::arg("this"));
    t.method("GetCurrentPoint", [](TGeoHelix const* a)->const Double_t * { return a->GetCurrentPoint(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoHelix::GetCurrentDirection() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoHelix::GetCurrentDirection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:51:20
    t.method("GetCurrentDirection", [](TGeoHelix const& a)->const Double_t * { return a.GetCurrentDirection(); }, jlcxx::arg("this"));
    t.method("GetCurrentDirection", [](TGeoHelix const* a)->const Double_t * { return a->GetCurrentDirection(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHelix::GetXYcurvature() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHelix::GetXYcurvature()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:52:13
    t.method("GetXYcurvature", [](TGeoHelix const& a)->Double_t { return a.GetXYcurvature(); }, jlcxx::arg("this"));
    t.method("GetXYcurvature", [](TGeoHelix const* a)->Double_t { return a->GetXYcurvature(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHelix::GetStep() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHelix::GetStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:53:13
    t.method("GetStep", [](TGeoHelix const& a)->Double_t { return a.GetStep(); }, jlcxx::arg("this"));
    t.method("GetStep", [](TGeoHelix const* a)->Double_t { return a->GetStep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHelix::GetTotalCurvature() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHelix::GetTotalCurvature()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:54:13
    t.method("GetTotalCurvature", [](TGeoHelix const& a)->Double_t { return a.GetTotalCurvature(); }, jlcxx::arg("this"));
    t.method("GetTotalCurvature", [](TGeoHelix const* a)->Double_t { return a->GetTotalCurvature(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHelix::IsRightHanded() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHelix::IsRightHanded()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:55:11
    t.method("IsRightHanded", [](TGeoHelix const& a)->Bool_t { return a.IsRightHanded(); }, jlcxx::arg("this"));
    t.method("IsRightHanded", [](TGeoHelix const* a)->Bool_t { return a->IsRightHanded(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::ResetStep() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::ResetStep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:60:9
    t.method("ResetStep", [](TGeoHelix& a)->void { a.ResetStep(); }, jlcxx::arg("this"));
    t.method("ResetStep", [](TGeoHelix* a)->void { a->ResetStep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHelix::StepToPlane(Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHelix::StepToPlane(Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:61:13
    t.method("StepToPlane", [](TGeoHelix& a, Double_t * arg0, Double_t * arg1)->Double_t { return a.StepToPlane(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("norm"));
    t.method("StepToPlane", [](TGeoHelix* a, Double_t * arg0, Double_t * arg1)->Double_t { return a->StepToPlane(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::SetCharge(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::SetCharge(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:64:9
    t.method("SetCharge", [](TGeoHelix& a, Int_t arg0)->void { a.SetCharge(arg0); }, jlcxx::arg("this"), jlcxx::arg("charge"));
    t.method("SetCharge", [](TGeoHelix* a, Int_t arg0)->void { a->SetCharge(arg0); }, jlcxx::arg("this"), jlcxx::arg("charge"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::SetXYcurvature(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::SetXYcurvature(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:65:9
    t.method("SetXYcurvature", [](TGeoHelix& a, Double_t arg0)->void { a.SetXYcurvature(arg0); }, jlcxx::arg("this"), jlcxx::arg("curvature"));
    t.method("SetXYcurvature", [](TGeoHelix* a, Double_t arg0)->void { a->SetXYcurvature(arg0); }, jlcxx::arg("this"), jlcxx::arg("curvature"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::SetField(Double_t, Double_t, Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::SetField(Double_t, Double_t, Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:66:9
    t.method("SetField", [](TGeoHelix& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetField(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"));
    t.method("SetField", [](TGeoHelix& a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->void { a.SetField(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"), jlcxx::arg("is_normalized"));
    t.method("SetField", [](TGeoHelix* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetField(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"));
    t.method("SetField", [](TGeoHelix* a, Double_t arg0, Double_t arg1, Double_t arg2, Bool_t arg3)->void { a->SetField(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"), jlcxx::arg("is_normalized"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::SetHelixStep(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::SetHelixStep(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:67:9
    t.method("SetHelixStep", [](TGeoHelix& a, Double_t arg0)->void { a.SetHelixStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("hstep"));
    t.method("SetHelixStep", [](TGeoHelix* a, Double_t arg0)->void { a->SetHelixStep(arg0); }, jlcxx::arg("this"), jlcxx::arg("hstep"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::Step(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::Step(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:69:9
    t.method("Step", [](TGeoHelix& a, Double_t arg0)->void { a.Step(arg0); }, jlcxx::arg("this"), jlcxx::arg("step"));
    t.method("Step", [](TGeoHelix* a, Double_t arg0)->void { a->Step(arg0); }, jlcxx::arg("this"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::UpdateHelix() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::UpdateHelix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHelix.h:71:9
    t.method("UpdateHelix", [](TGeoHelix& a)->void { a.UpdateHelix(); }, jlcxx::arg("this"));
    t.method("UpdateHelix", [](TGeoHelix* a)->void { a->UpdateHelix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoHelix::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoHelix::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoHelix!Class_Version", []()->Version_t { return TGeoHelix::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHelix::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHelix::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoHelix const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoHelix const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHelix::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoHelix& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoHelix* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoHelix::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHelix::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoHelix!DeclFileName", []() { return (std::string)TGeoHelix::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoHelix::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHelix::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoHelix!ImplFileLine", []()->int { return TGeoHelix::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHelix::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHelix::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoHelix!ImplFileName", []() { return (std::string)TGeoHelix::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHelix::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHelix::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoHelix!Class_Name", []() { return (std::string)TGeoHelix::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHelix::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHelix::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoHelix!Dictionary", []()->TClass * { return TGeoHelix::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHelix::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHelix::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoHelix!Class", []()->TClass * { return TGeoHelix::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoHelix::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHelix::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoHelix& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoHelix* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoHelix::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHelix::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoHelix!DeclFileLine", []()->int { return TGeoHelix::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoHelix>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoHelix(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoHelix(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoHype> : std::false_type { };
  template<> struct DefaultConstructible<TGeoHype> : std::false_type { };
template<> struct SuperType<TGeoHype> { typedef TGeoTube type; };
}

// Class generating the wrapper for type TGeoHype
// signature to use in the veto file: TGeoHype
struct JlTGeoHype: public Wrapper {

  JlTGeoHype(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoHype (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:17:7
    jlcxx::TypeWrapper<TGeoHype>  t = jlModule.add_type<TGeoHype>("TGeoHype",
      jlcxx::julia_base_type<TGeoTube>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoHype>>(new jlcxx::TypeWrapper<TGeoHype>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoHype::TGeoHype(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:39:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoHype::TGeoHype(const char *, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:40:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz")    );


    DEBUG_MSG("Adding wrapper for void TGeoHype::TGeoHype(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:41:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("params")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:46:13
    t.method("Capacity", [](TGeoHype const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoHype const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:47:9
    t.method("ComputeBBox", [](TGeoHype& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoHype* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:48:9
    t.method("ComputeNormal", [](TGeoHype& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoHype* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:49:9
    t.method("ComputeNormal_v", [](TGeoHype& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoHype* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHype::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHype::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:50:11
    t.method("Contains", [](TGeoHype const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoHype const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:51:9
    t.method("Contains_v", [](TGeoHype const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoHype const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:52:13
    t.method("DistFromInside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:54:9
    t.method("DistFromInside_v", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:56:13
    t.method("DistFromOutside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:58:9
    t.method("DistFromOutside_v", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHype::DistToHype(const Double_t *, const Double_t *, Double_t *, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHype::DistToHype(const Double_t *, const Double_t *, Double_t *, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:60:10
    t.method("DistToHype", [](TGeoHype const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Bool_t arg3, Bool_t arg4)->Int_t { return a.DistToHype(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("s"), jlcxx::arg("inner"), jlcxx::arg("in"));
    t.method("DistToHype", [](TGeoHype const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Bool_t arg3, Bool_t arg4)->Int_t { return a->DistToHype(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("s"), jlcxx::arg("inner"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHype::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHype::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:61:10
    t.method("DistancetoPrimitive", [](TGeoHype& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoHype* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoHype::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoHype::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:63:4
    t.method("Divide", [](TGeoHype& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoHype* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:64:13
    t.method("GetAxisRange", [](TGeoHype const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoHype const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:65:9
    t.method("GetBoundingCylinder", [](TGeoHype const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoHype const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHype::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHype::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:67:10
    t.method("GetByteCount", [](TGeoHype const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoHype const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHype::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHype::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:68:11
    t.method("GetPointsOnSegments", [](TGeoHype const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetPointsOnSegments", [](TGeoHype const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoHype::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoHype::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:69:15
    t.method("GetMakeRuntimeShape", [](TGeoHype const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoHype const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:70:9
    t.method("GetMeshNumbers", [](TGeoHype const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoHype const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoHype::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoHype::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:71:10
    t.method("GetNmeshVertices", [](TGeoHype const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoHype const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::GetStIn() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::GetStIn()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:72:13
    t.method("GetStIn", [](TGeoHype const& a)->Double_t { return a.GetStIn(); }, jlcxx::arg("this"));
    t.method("GetStIn", [](TGeoHype const* a)->Double_t { return a->GetStIn(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::GetStOut() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::GetStOut()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:73:13
    t.method("GetStOut", [](TGeoHype const& a)->Double_t { return a.GetStOut(); }, jlcxx::arg("this"));
    t.method("GetStOut", [](TGeoHype const* a)->Double_t { return a->GetStOut(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHype::HasInner() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHype::HasInner()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:74:11
    t.method("HasInner", [](TGeoHype const& a)->Bool_t { return a.HasInner(); }, jlcxx::arg("this"));
    t.method("HasInner", [](TGeoHype const* a)->Bool_t { return a->HasInner(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::RadiusHypeSq(Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::RadiusHypeSq(Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:75:13
    t.method("RadiusHypeSq", [](TGeoHype const& a, Double_t arg0, Bool_t arg1)->Double_t { return a.RadiusHypeSq(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("z"), jlcxx::arg("inner"));
    t.method("RadiusHypeSq", [](TGeoHype const* a, Double_t arg0, Bool_t arg1)->Double_t { return a->RadiusHypeSq(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("z"), jlcxx::arg("inner"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::ZHypeSq(Double_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::ZHypeSq(Double_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:76:13
    t.method("ZHypeSq", [](TGeoHype const& a, Double_t arg0, Bool_t arg1)->Double_t { return a.ZHypeSq(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("inner"));
    t.method("ZHypeSq", [](TGeoHype const* a, Double_t arg0, Bool_t arg1)->Double_t { return a->ZHypeSq(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("inner"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:77:9
    t.method("InspectShape", [](TGeoHype const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoHype const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoHype::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoHype::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:78:11
    t.method("IsCylType", [](TGeoHype const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoHype const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:81:13
    t.method("Safety", [](TGeoHype const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoHype const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoHype const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoHype const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:82:9
    t.method("Safety_v", [](TGeoHype const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoHype const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoHype::SafetyToHype(const Double_t *, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoHype::SafetyToHype(const Double_t *, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:83:13
    t.method("SafetyToHype", [](TGeoHype const& a, const Double_t * arg0, Bool_t arg1, Bool_t arg2)->Double_t { return a.SafetyToHype(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inner"), jlcxx::arg("in"));
    t.method("SafetyToHype", [](TGeoHype const* a, const Double_t * arg0, Bool_t arg1, Bool_t arg2)->Double_t { return a->SafetyToHype(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("inner"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::SetHypeDimensions(Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::SetHypeDimensions(Double_t, Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:85:9
    t.method("SetHypeDimensions", [](TGeoHype& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a.SetHypeDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz"));
    t.method("SetHypeDimensions", [](TGeoHype* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, Double_t arg4)->void { a->SetHypeDimensions(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("rin"), jlcxx::arg("stin"), jlcxx::arg("rout"), jlcxx::arg("stout"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:86:9
    t.method("SetDimensions", [](TGeoHype& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoHype* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:87:9
    t.method("SetPoints", [](TGeoHype const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoHype const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:88:9
    t.method("SetPoints", [](TGeoHype const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoHype const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoHype.h:90:9
    t.method("Sizeof3D", [](TGeoHype const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoHype const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoHype::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoHype::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoHype!Class_Version", []()->Version_t { return TGeoHype::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHype::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHype::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoHype const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoHype const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoHype::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoHype& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoHype* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoHype::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHype::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoHype!DeclFileName", []() { return (std::string)TGeoHype::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoHype::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHype::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoHype!ImplFileLine", []()->int { return TGeoHype::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHype::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHype::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoHype!ImplFileName", []() { return (std::string)TGeoHype::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoHype::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoHype::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoHype!Class_Name", []() { return (std::string)TGeoHype::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHype::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHype::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoHype!Dictionary", []()->TClass * { return TGeoHype::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoHype::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoHype::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoHype!Class", []()->TClass * { return TGeoHype::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoHype::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoHype::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoHype& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoHype* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoHype::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoHype::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoHype!DeclFileLine", []()->int { return TGeoHype::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoHype>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoHype(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoHype(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoNavigatorArray> : std::false_type { };
  template<> struct DefaultConstructible<TGeoNavigatorArray> : std::false_type { };
template<> struct SuperType<TGeoNavigatorArray> { typedef TObjArray type; };
}

// Class generating the wrapper for type TGeoNavigatorArray
// signature to use in the veto file: TGeoNavigatorArray
struct JlTGeoNavigatorArray: public Wrapper {

  JlTGeoNavigatorArray(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoNavigatorArray (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:262:7
    jlcxx::TypeWrapper<TGeoNavigatorArray>  t = jlModule.add_type<TGeoNavigatorArray>("TGeoNavigatorArray",
      jlcxx::julia_base_type<TObjArray>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoNavigatorArray>>(new jlcxx::TypeWrapper<TGeoNavigatorArray>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoNavigatorArray::TGeoNavigatorArray(TGeoManager *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:272:4
    t.constructor<TGeoManager *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("mgr")    );

    DEBUG_MSG("Adding wrapper for TGeoNavigator * TGeoNavigatorArray::AddNavigator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigator * TGeoNavigatorArray::AddNavigator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:275:19
    t.method("AddNavigator", [](TGeoNavigatorArray& a)->TGeoNavigator * { return a.AddNavigator(); }, jlcxx::arg("this"));
    t.method("AddNavigator", [](TGeoNavigatorArray* a)->TGeoNavigator * { return a->AddNavigator(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNavigator * TGeoNavigatorArray::GetCurrentNavigator() (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigator * TGeoNavigatorArray::GetCurrentNavigator()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:276:26
    t.method("GetCurrentNavigator", [](TGeoNavigatorArray const& a)->TGeoNavigator * { return a.GetCurrentNavigator(); }, jlcxx::arg("this"));
    t.method("GetCurrentNavigator", [](TGeoNavigatorArray const* a)->TGeoNavigator * { return a->GetCurrentNavigator(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNavigator * TGeoNavigatorArray::SetCurrentNavigator(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNavigator * TGeoNavigatorArray::SetCurrentNavigator(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoNavigator.h:277:19
    t.method("SetCurrentNavigator", [](TGeoNavigatorArray& a, Int_t arg0)->TGeoNavigator * { return a.SetCurrentNavigator(arg0); }, jlcxx::arg("this"), jlcxx::arg("inav"));
    t.method("SetCurrentNavigator", [](TGeoNavigatorArray* a, Int_t arg0)->TGeoNavigator * { return a->SetCurrentNavigator(arg0); }, jlcxx::arg("this"), jlcxx::arg("inav"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoNavigatorArray::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoNavigatorArray::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoNavigatorArray!Class_Version", []()->Version_t { return TGeoNavigatorArray::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigatorArray::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigatorArray::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoNavigatorArray const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoNavigatorArray const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoNavigatorArray::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigatorArray::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoNavigatorArray& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoNavigatorArray* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigatorArray::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigatorArray::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoNavigatorArray!DeclFileName", []() { return (std::string)TGeoNavigatorArray::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoNavigatorArray::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNavigatorArray::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoNavigatorArray!ImplFileLine", []()->int { return TGeoNavigatorArray::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigatorArray::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigatorArray::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoNavigatorArray!ImplFileName", []() { return (std::string)TGeoNavigatorArray::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoNavigatorArray::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoNavigatorArray::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoNavigatorArray!Class_Name", []() { return (std::string)TGeoNavigatorArray::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigatorArray::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigatorArray::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoNavigatorArray!Dictionary", []()->TClass * { return TGeoNavigatorArray::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoNavigatorArray::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoNavigatorArray::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoNavigatorArray!Class", []()->TClass * { return TGeoNavigatorArray::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoNavigatorArray::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoNavigatorArray::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoNavigatorArray& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoNavigatorArray* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoNavigatorArray::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoNavigatorArray::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoNavigatorArray!DeclFileLine", []()->int { return TGeoNavigatorArray::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoNavigatorArray>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoNavigatorArray(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoNavigatorArray(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoRegion> : std::false_type { };
  template<> struct DefaultConstructible<TGeoRegion> : std::false_type { };
template<> struct SuperType<TGeoRegion> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoRegion
// signature to use in the veto file: TGeoRegion
struct JlTGeoRegion: public Wrapper {

  JlTGeoRegion(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoRegion (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:36:7
    jlcxx::TypeWrapper<TGeoRegion>  t = jlModule.add_type<TGeoRegion>("TGeoRegion",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoRegion>>(new jlcxx::TypeWrapper<TGeoRegion>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoRegion::TGeoRegion(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:43:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name")    );
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title")    );


    DEBUG_MSG("Adding wrapper for void TGeoRegion::TGeoRegion(const TGeoRegion &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:44:4
    t.constructor<const TGeoRegion &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("other")    );

    DEBUG_MSG("Adding wrapper for TGeoRegion & TGeoRegion::operator=(const TGeoRegion &) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRegion & TGeoRegion::operator=(const TGeoRegion &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:45:16
    t.method("assign", [](TGeoRegion& a, const TGeoRegion & arg0)->TGeoRegion & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));
    t.method("assign", [](TGeoRegion* a, const TGeoRegion & arg0)->TGeoRegion & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));

    DEBUG_MSG("Adding wrapper for void TGeoRegion::AddVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::AddVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:49:9
    t.method("AddVolume", [](TGeoRegion& a, TGeoVolume * arg0)->void { a.AddVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("vol"));
    t.method("AddVolume", [](TGeoRegion* a, TGeoVolume * arg0)->void { a->AddVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("vol"));

    DEBUG_MSG("Adding wrapper for bool TGeoRegion::AddVolume(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoRegion::AddVolume(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:50:9
    t.method("AddVolume", [](TGeoRegion& a, const char * arg0)->bool { return a.AddVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("AddVolume", [](TGeoRegion* a, const char * arg0)->bool { return a->AddVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for int TGeoRegion::GetNvolumes() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegion::GetNvolumes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:51:8
    t.method("GetNvolumes", [](TGeoRegion const& a)->int { return a.GetNvolumes(); }, jlcxx::arg("this"));
    t.method("GetNvolumes", [](TGeoRegion const* a)->int { return a->GetNvolumes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoRegion::GetVolume(int) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoRegion::GetVolume(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:52:16
    t.method("GetVolume", [](TGeoRegion const& a, int arg0)->TGeoVolume * { return a.GetVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetVolume", [](TGeoRegion const* a, int arg0)->TGeoVolume * { return a->GetVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for void TGeoRegion::AddCut(const char *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::AddCut(const char *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:55:9
    t.method("AddCut", [](TGeoRegion& a, const char * arg0, Double_t arg1)->void { a.AddCut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("cut"));
    t.method("AddCut", [](TGeoRegion* a, const char * arg0, Double_t arg1)->void { a->AddCut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("cut"));

    DEBUG_MSG("Adding wrapper for void TGeoRegion::AddCut(const TGeoRegionCut &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::AddCut(const TGeoRegionCut &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:56:9
    t.method("AddCut", [](TGeoRegion& a, const TGeoRegionCut & arg0)->void { a.AddCut(arg0); }, jlcxx::arg("this"), jlcxx::arg("regioncut"));
    t.method("AddCut", [](TGeoRegion* a, const TGeoRegionCut & arg0)->void { a->AddCut(arg0); }, jlcxx::arg("this"), jlcxx::arg("regioncut"));

    DEBUG_MSG("Adding wrapper for int TGeoRegion::GetNcuts() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegion::GetNcuts()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:57:8
    t.method("GetNcuts", [](TGeoRegion const& a)->int { return a.GetNcuts(); }, jlcxx::arg("this"));
    t.method("GetNcuts", [](TGeoRegion const* a)->int { return a->GetNcuts(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoRegionCut * TGeoRegion::GetCut(int) (" __HERE__ ")");
    // signature to use in the veto list: TGeoRegionCut * TGeoRegion::GetCut(int)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:58:19
    t.method("GetCut", [](TGeoRegion const& a, int arg0)->TGeoRegionCut * { return a.GetCut(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetCut", [](TGeoRegion const* a, int arg0)->TGeoRegionCut * { return a->GetCut(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for void TGeoRegion::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoRegion.h:60:9
    t.method("Print", [](TGeoRegion const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoRegion const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TGeoRegion const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoRegion const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoRegion::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoRegion::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoRegion!Class_Version", []()->Version_t { return TGeoRegion::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegion::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegion::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoRegion const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoRegion const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoRegion::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoRegion& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoRegion* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoRegion::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegion::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoRegion!DeclFileName", []() { return (std::string)TGeoRegion::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoRegion::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegion::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoRegion!ImplFileLine", []()->int { return TGeoRegion::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRegion::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegion::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoRegion!ImplFileName", []() { return (std::string)TGeoRegion::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoRegion::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoRegion::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoRegion!Class_Name", []() { return (std::string)TGeoRegion::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegion::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegion::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoRegion!Dictionary", []()->TClass * { return TGeoRegion::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoRegion::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoRegion::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoRegion!Class", []()->TClass * { return TGeoRegion::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoRegion::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoRegion::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoRegion& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoRegion* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoRegion::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoRegion::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoRegion!DeclFileLine", []()->int { return TGeoRegion::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoRegion>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoRegion(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoRegion(module));
}
