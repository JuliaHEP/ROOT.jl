// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TGeoMatrix> : std::false_type { };
  template<> struct DefaultConstructible<TGeoMatrix> : std::false_type { };
template<> struct SuperType<TGeoMatrix> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoMatrix
// signature to use in the veto file: TGeoMatrix
struct JlTGeoMatrix: public Wrapper {

  JlTGeoMatrix(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoMatrix (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:38:7
    jlcxx::TypeWrapper<TGeoMatrix>  t = jlModule.add_type<TGeoMatrix>("TGeoMatrix",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoMatrix>>(new jlcxx::TypeWrapper<TGeoMatrix>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsIdentity() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsIdentity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:63:11
    t.method("IsIdentity", [](TGeoMatrix const& a)->Bool_t { return a.IsIdentity(); }, jlcxx::arg("this"));
    t.method("IsIdentity", [](TGeoMatrix const* a)->Bool_t { return a->IsIdentity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsTranslation() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:64:11
    t.method("IsTranslation", [](TGeoMatrix const& a)->Bool_t { return a.IsTranslation(); }, jlcxx::arg("this"));
    t.method("IsTranslation", [](TGeoMatrix const* a)->Bool_t { return a->IsTranslation(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsRotation() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsRotation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:65:11
    t.method("IsRotation", [](TGeoMatrix const& a)->Bool_t { return a.IsRotation(); }, jlcxx::arg("this"));
    t.method("IsRotation", [](TGeoMatrix const* a)->Bool_t { return a->IsRotation(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsReflection() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsReflection()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:66:11
    t.method("IsReflection", [](TGeoMatrix const& a)->Bool_t { return a.IsReflection(); }, jlcxx::arg("this"));
    t.method("IsReflection", [](TGeoMatrix const* a)->Bool_t { return a->IsReflection(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsScale() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:67:11
    t.method("IsScale", [](TGeoMatrix const& a)->Bool_t { return a.IsScale(); }, jlcxx::arg("this"));
    t.method("IsScale", [](TGeoMatrix const* a)->Bool_t { return a->IsScale(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsShared() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsShared()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:68:11
    t.method("IsShared", [](TGeoMatrix const& a)->Bool_t { return a.IsShared(); }, jlcxx::arg("this"));
    t.method("IsShared", [](TGeoMatrix const* a)->Bool_t { return a->IsShared(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsOwned() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsOwned()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:69:11
    t.method("IsOwned", [](TGeoMatrix const& a)->Bool_t { return a.IsOwned(); }, jlcxx::arg("this"));
    t.method("IsOwned", [](TGeoMatrix const* a)->Bool_t { return a->IsOwned(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsCombi() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsCombi()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:70:11
    t.method("IsCombi", [](TGeoMatrix const& a)->Bool_t { return a.IsCombi(); }, jlcxx::arg("this"));
    t.method("IsCombi", [](TGeoMatrix const* a)->Bool_t { return a->IsCombi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsGeneral() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsGeneral()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:71:11
    t.method("IsGeneral", [](TGeoMatrix const& a)->Bool_t { return a.IsGeneral(); }, jlcxx::arg("this"));
    t.method("IsGeneral", [](TGeoMatrix const* a)->Bool_t { return a->IsGeneral(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsRegistered() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsRegistered()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:72:11
    t.method("IsRegistered", [](TGeoMatrix const& a)->Bool_t { return a.IsRegistered(); }, jlcxx::arg("this"));
    t.method("IsRegistered", [](TGeoMatrix const* a)->Bool_t { return a->IsRegistered(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoMatrix::IsRotAboutZ() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoMatrix::IsRotAboutZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:73:11
    t.method("IsRotAboutZ", [](TGeoMatrix const& a)->Bool_t { return a.IsRotAboutZ(); }, jlcxx::arg("this"));
    t.method("IsRotAboutZ", [](TGeoMatrix const* a)->Bool_t { return a->IsRotAboutZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::GetHomogenousMatrix(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::GetHomogenousMatrix(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:74:9
    t.method("GetHomogenousMatrix", [](TGeoMatrix const& a, Double_t * arg0)->void { a.GetHomogenousMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("hmat"));
    t.method("GetHomogenousMatrix", [](TGeoMatrix const* a, Double_t * arg0)->void { a->GetHomogenousMatrix(arg0); }, jlcxx::arg("this"), jlcxx::arg("hmat"));

    DEBUG_MSG("Adding wrapper for const char * TGeoMatrix::GetPointerName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMatrix::GetPointerName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:75:16
    t.method("GetPointerName", [](TGeoMatrix const& a) { return (std::string)a.GetPointerName(); }, jlcxx::arg("this"));
    t.method("GetPointerName", [](TGeoMatrix const* a) { return (std::string)a->GetPointerName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoMatrix::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoMatrix::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:77:18
    t.method("GetByteCount", [](TGeoMatrix const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoMatrix const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoMatrix::GetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoMatrix::GetTranslation()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:78:28
    t.method("GetTranslation", [](TGeoMatrix const& a)->const Double_t * { return a.GetTranslation(); }, jlcxx::arg("this"));
    t.method("GetTranslation", [](TGeoMatrix const* a)->const Double_t * { return a->GetTranslation(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoMatrix::GetRotationMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoMatrix::GetRotationMatrix()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:79:28
    t.method("GetRotationMatrix", [](TGeoMatrix const& a)->const Double_t * { return a.GetRotationMatrix(); }, jlcxx::arg("this"));
    t.method("GetRotationMatrix", [](TGeoMatrix const* a)->const Double_t * { return a->GetRotationMatrix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoMatrix::GetScale() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoMatrix::GetScale()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:80:28
    t.method("GetScale", [](TGeoMatrix const& a)->const Double_t * { return a.GetScale(); }, jlcxx::arg("this"));
    t.method("GetScale", [](TGeoMatrix const* a)->const Double_t * { return a->GetScale(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoHMatrix TGeoMatrix::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix TGeoMatrix::Inverse()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:81:24
    t.method("Inverse", [](TGeoMatrix const& a)->TGeoHMatrix { return a.Inverse(); }, jlcxx::arg("this"));
    t.method("Inverse", [](TGeoMatrix const* a)->TGeoHMatrix { return a->Inverse(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::LocalToMaster(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::LocalToMaster(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:82:17
    t.method("LocalToMaster", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMaster", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMaster(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::LocalToMasterVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::LocalToMasterVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:83:17
    t.method("LocalToMasterVect", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterVect", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::LocalToMasterBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::LocalToMasterBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:84:17
    t.method("LocalToMasterBomb", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));
    t.method("LocalToMasterBomb", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->LocalToMasterBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("local"), jlcxx::arg("master"));

    DEBUG_MSG("Adding wrapper for TGeoMatrix * TGeoMatrix::MakeClone() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMatrix * TGeoMatrix::MakeClone()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:85:24
    t.method("MakeClone", [](TGeoMatrix const& a)->TGeoMatrix * { return a.MakeClone(); }, jlcxx::arg("this"));
    t.method("MakeClone", [](TGeoMatrix const* a)->TGeoMatrix * { return a->MakeClone(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::MasterToLocal(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::MasterToLocal(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:86:17
    t.method("MasterToLocal", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocal", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocal(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::MasterToLocalVect(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::MasterToLocalVect(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:87:17
    t.method("MasterToLocalVect", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalVect", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalVect(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::MasterToLocalBomb(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::MasterToLocalBomb(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:88:17
    t.method("MasterToLocalBomb", [](TGeoMatrix const& a, const Double_t * arg0, Double_t * arg1)->void { a.MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));
    t.method("MasterToLocalBomb", [](TGeoMatrix const* a, const Double_t * arg0, Double_t * arg1)->void { a->MasterToLocalBomb(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("master"), jlcxx::arg("local"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::Normalize(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::Normalize(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:89:16
    module_.method("TGeoMatrix!Normalize", [](Double_t * arg0)->void { TGeoMatrix::Normalize(arg0); }, jlcxx::arg("vect"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:90:9
    t.method("Print", [](TGeoMatrix const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoMatrix const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TGeoMatrix const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoMatrix const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::RotateX(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::RotateX(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:91:17
    t.method("RotateX", [](TGeoMatrix& a, Double_t arg0)->void { a.RotateX(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("RotateX", [](TGeoMatrix* a, Double_t arg0)->void { a->RotateX(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::RotateY(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::RotateY(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:92:17
    t.method("RotateY", [](TGeoMatrix& a, Double_t arg0)->void { a.RotateY(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("RotateY", [](TGeoMatrix* a, Double_t arg0)->void { a->RotateY(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::RotateZ(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::RotateZ(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:93:17
    t.method("RotateZ", [](TGeoMatrix& a, Double_t arg0)->void { a.RotateZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("RotateZ", [](TGeoMatrix* a, Double_t arg0)->void { a->RotateZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::ReflectX(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::ReflectX(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:94:17
    t.method("ReflectX", [](TGeoMatrix& a, Bool_t arg0)->void { a.ReflectX(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectX", [](TGeoMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectX(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));
    t.method("ReflectX", [](TGeoMatrix* a, Bool_t arg0)->void { a->ReflectX(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectX", [](TGeoMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectX(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::ReflectY(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::ReflectY(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:95:17
    t.method("ReflectY", [](TGeoMatrix& a, Bool_t arg0)->void { a.ReflectY(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectY", [](TGeoMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectY(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));
    t.method("ReflectY", [](TGeoMatrix* a, Bool_t arg0)->void { a->ReflectY(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectY", [](TGeoMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectY(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::ReflectZ(Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::ReflectZ(Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:96:17
    t.method("ReflectZ", [](TGeoMatrix& a, Bool_t arg0)->void { a.ReflectZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectZ", [](TGeoMatrix& a, Bool_t arg0, Bool_t arg1)->void { a.ReflectZ(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));
    t.method("ReflectZ", [](TGeoMatrix* a, Bool_t arg0)->void { a->ReflectZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("leftside"));
    t.method("ReflectZ", [](TGeoMatrix* a, Bool_t arg0, Bool_t arg1)->void { a->ReflectZ(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("leftside"), jlcxx::arg("rotonly"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::RegisterYourself() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::RegisterYourself()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:97:17
    t.method("RegisterYourself", [](TGeoMatrix& a)->void { a.RegisterYourself(); }, jlcxx::arg("this"));
    t.method("RegisterYourself", [](TGeoMatrix* a)->void { a->RegisterYourself(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::SetDefaultName() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::SetDefaultName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:98:9
    t.method("SetDefaultName", [](TGeoMatrix& a)->void { a.SetDefaultName(); }, jlcxx::arg("this"));
    t.method("SetDefaultName", [](TGeoMatrix* a)->void { a->SetDefaultName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::SetDx(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::SetDx(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:99:17
    t.method("SetDx", [](TGeoMatrix& a, Double_t arg0)->void { a.SetDx(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetDx", [](TGeoMatrix* a, Double_t arg0)->void { a->SetDx(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::SetDy(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::SetDy(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:100:17
    t.method("SetDy", [](TGeoMatrix& a, Double_t arg0)->void { a.SetDy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetDy", [](TGeoMatrix* a, Double_t arg0)->void { a->SetDy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::SetDz(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::SetDz(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:101:17
    t.method("SetDz", [](TGeoMatrix& a, Double_t arg0)->void { a.SetDz(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetDz", [](TGeoMatrix* a, Double_t arg0)->void { a->SetDz(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::SetShared(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::SetShared(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoMatrix.h:102:9
    t.method("SetShared", [](TGeoMatrix& a)->void { a.SetShared(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetShared", [](TGeoMatrix& a, Bool_t arg0)->void { a.SetShared(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetShared", [](TGeoMatrix* a)->void { a->SetShared(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetShared", [](TGeoMatrix* a, Bool_t arg0)->void { a->SetShared(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoMatrix::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoMatrix::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoMatrix!Class_Version", []()->Version_t { return TGeoMatrix::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMatrix::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMatrix::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoMatrix const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoMatrix const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoMatrix& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoMatrix* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoMatrix::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMatrix::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoMatrix!DeclFileName", []() { return (std::string)TGeoMatrix::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoMatrix::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMatrix::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoMatrix!ImplFileLine", []()->int { return TGeoMatrix::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMatrix::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMatrix::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoMatrix!ImplFileName", []() { return (std::string)TGeoMatrix::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoMatrix::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoMatrix::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoMatrix!Class_Name", []() { return (std::string)TGeoMatrix::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMatrix::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMatrix::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoMatrix!Dictionary", []()->TClass * { return TGeoMatrix::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoMatrix::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoMatrix::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoMatrix!Class", []()->TClass * { return TGeoMatrix::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoMatrix::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoMatrix::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoMatrix& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoMatrix* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoMatrix::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoMatrix::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoMatrix!DeclFileLine", []()->int { return TGeoMatrix::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoMatrix>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoMatrix(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoMatrix(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoVolume> : std::false_type { };
  template<> struct DefaultConstructible<TGeoVolume> : std::false_type { };
template<> struct SuperType<TGeoVolume> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoVolume
// signature to use in the veto file: TGeoVolume
struct JlTGeoVolume: public Wrapper {

  JlTGeoVolume(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoVolume (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:43:7
    jlcxx::TypeWrapper<TGeoVolume>  t = jlModule.add_type<TGeoVolume>("TGeoVolume",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoVolume>>(new jlcxx::TypeWrapper<TGeoVolume>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::no    );

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ClearThreadData() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ClearThreadData()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:67:17
    t.method("ClearThreadData", [](TGeoVolume const& a)->void { a.ClearThreadData(); }, jlcxx::arg("this"));
    t.method("ClearThreadData", [](TGeoVolume const* a)->void { a->ClearThreadData(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CreateThreadData(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CreateThreadData(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:68:17
    t.method("CreateThreadData", [](TGeoVolume& a, Int_t arg0)->void { a.CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));
    t.method("CreateThreadData", [](TGeoVolume* a, Int_t arg0)->void { a->CreateThreadData(arg0); }, jlcxx::arg("this"), jlcxx::arg("nthreads"));


    DEBUG_MSG("Adding wrapper for void TGeoVolume::TGeoVolume(const char *, const TGeoShape *, const TGeoMedium *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:86:4
    t.constructor<const char *, const TGeoShape *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape")    );
    t.constructor<const char *, const TGeoShape *, const TGeoMedium *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("shape"), jlcxx::arg("med")    );

    DEBUG_MSG("Adding wrapper for void TGeoVolume::cd(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::cd(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:91:17
    t.method("cd", [](TGeoVolume const& a, Int_t arg0)->void { a.cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("inode"));
    t.method("cd", [](TGeoVolume const* a, Int_t arg0)->void { a->cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("inode"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:92:9
    t.method("Browse", [](TGeoVolume& a, TBrowser * arg0)->void { a.Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("Browse", [](TGeoVolume* a, TBrowser * arg0)->void { a->Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoVolume::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoVolume::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:93:13
    t.method("Capacity", [](TGeoVolume const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoVolume const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CheckShapes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CheckShapes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:94:9
    t.method("CheckShapes", [](TGeoVolume& a)->void { a.CheckShapes(); }, jlcxx::arg("this"));
    t.method("CheckShapes", [](TGeoVolume* a)->void { a->CheckShapes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ClearNodes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ClearNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:95:9
    t.method("ClearNodes", [](TGeoVolume& a)->void { a.ClearNodes(); }, jlcxx::arg("this"));
    t.method("ClearNodes", [](TGeoVolume* a)->void { a->ClearNodes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ClearShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ClearShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:96:9
    t.method("ClearShape", [](TGeoVolume& a)->void { a.ClearShape(); }, jlcxx::arg("this"));
    t.method("ClearShape", [](TGeoVolume* a)->void { a->ClearShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CleanAll() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CleanAll()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:97:9
    t.method("CleanAll", [](TGeoVolume& a)->void { a.CleanAll(); }, jlcxx::arg("this"));
    t.method("CleanAll", [](TGeoVolume* a)->void { a->CleanAll(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolume::CloneVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolume::CloneVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:98:24
    t.method("CloneVolume", [](TGeoVolume const& a)->TGeoVolume * { return a.CloneVolume(); }, jlcxx::arg("this"));
    t.method("CloneVolume", [](TGeoVolume const* a)->TGeoVolume * { return a->CloneVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CloneNodesAndConnect(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CloneNodesAndConnect(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:99:9
    t.method("CloneNodesAndConnect", [](TGeoVolume const& a, TGeoVolume * arg0)->void { a.CloneNodesAndConnect(arg0); }, jlcxx::arg("this"), jlcxx::arg("newmother"));
    t.method("CloneNodesAndConnect", [](TGeoVolume const* a, TGeoVolume * arg0)->void { a->CloneNodesAndConnect(arg0); }, jlcxx::arg("this"), jlcxx::arg("newmother"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CheckGeometry(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CheckGeometry(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:100:9
    t.method("CheckGeometry", [](TGeoVolume const& a)->void { a.CheckGeometry(); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));
    t.method("CheckGeometry", [](TGeoVolume const& a, Int_t arg0)->void { a.CheckGeometry(arg0); }, jlcxx::arg("this"), jlcxx::arg("nrays"));
    t.method("CheckGeometry", [](TGeoVolume const& a, Int_t arg0, Double_t arg1)->void { a.CheckGeometry(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"));
    t.method("CheckGeometry", [](TGeoVolume const& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.CheckGeometry(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"));
    t.method("CheckGeometry", [](TGeoVolume const& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.CheckGeometry(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));
    t.method("CheckGeometry", [](TGeoVolume const* a)->void { a->CheckGeometry(); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));
    t.method("CheckGeometry", [](TGeoVolume const* a, Int_t arg0)->void { a->CheckGeometry(arg0); }, jlcxx::arg("this"), jlcxx::arg("nrays"));
    t.method("CheckGeometry", [](TGeoVolume const* a, Int_t arg0, Double_t arg1)->void { a->CheckGeometry(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"));
    t.method("CheckGeometry", [](TGeoVolume const* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->CheckGeometry(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"));
    t.method("CheckGeometry", [](TGeoVolume const* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->CheckGeometry(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CheckOverlaps(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CheckOverlaps(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:101:9
    t.method("CheckOverlaps", [](TGeoVolume const& a)->void { a.CheckOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoVolume const& a, Double_t arg0)->void { a.CheckOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("CheckOverlaps", [](TGeoVolume const& a, Double_t arg0, Option_t * arg1)->void { a.CheckOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoVolume const* a)->void { a->CheckOverlaps(); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));
    t.method("CheckOverlaps", [](TGeoVolume const* a, Double_t arg0)->void { a->CheckOverlaps(arg0); }, jlcxx::arg("this"), jlcxx::arg("ovlp"));
    t.method("CheckOverlaps", [](TGeoVolume const* a, Double_t arg0, Option_t * arg1)->void { a->CheckOverlaps(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ovlp"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CheckShape(Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CheckShape(Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:102:9
    t.method("CheckShape", [](TGeoVolume& a, Int_t arg0)->void { a.CheckShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("testNo"));
    t.method("CheckShape", [](TGeoVolume& a, Int_t arg0, Int_t arg1)->void { a.CheckShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("testNo"), jlcxx::arg("nsamples"));
    t.method("CheckShape", [](TGeoVolume& a, Int_t arg0, Int_t arg1, Option_t * arg2)->void { a.CheckShape(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("testNo"), jlcxx::arg("nsamples"), jlcxx::arg("option"));
    t.method("CheckShape", [](TGeoVolume* a, Int_t arg0)->void { a->CheckShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("testNo"));
    t.method("CheckShape", [](TGeoVolume* a, Int_t arg0, Int_t arg1)->void { a->CheckShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("testNo"), jlcxx::arg("nsamples"));
    t.method("CheckShape", [](TGeoVolume* a, Int_t arg0, Int_t arg1, Option_t * arg2)->void { a->CheckShape(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("testNo"), jlcxx::arg("nsamples"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::CountNodes(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::CountNodes(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:103:10
    t.method("CountNodes", [](TGeoVolume& a)->Int_t { return a.CountNodes(); }, jlcxx::arg("this"));
    t.method("CountNodes", [](TGeoVolume& a, Int_t arg0)->Int_t { return a.CountNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("nlevels"));
    t.method("CountNodes", [](TGeoVolume& a, Int_t arg0, Int_t arg1)->Int_t { return a.CountNodes(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nlevels"), jlcxx::arg("option"));
    t.method("CountNodes", [](TGeoVolume* a)->Int_t { return a->CountNodes(); }, jlcxx::arg("this"));
    t.method("CountNodes", [](TGeoVolume* a, Int_t arg0)->Int_t { return a->CountNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("nlevels"));
    t.method("CountNodes", [](TGeoVolume* a, Int_t arg0, Int_t arg1)->Int_t { return a->CountNodes(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nlevels"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:104:11
    t.method("Contains", [](TGeoVolume const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoVolume const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::CreateDummyMedium() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::CreateDummyMedium()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:105:16
    module_.method("TGeoVolume!CreateDummyMedium", []()->void { TGeoVolume::CreateDummyMedium(); });

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoVolume::DummyMedium() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoVolume::DummyMedium()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:106:23
    module_.method("TGeoVolume!DummyMedium", []()->TGeoMedium * { return TGeoVolume::DummyMedium(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsAssembly() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsAssembly()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:107:19
    t.method("IsAssembly", [](TGeoVolume const& a)->Bool_t { return a.IsAssembly(); }, jlcxx::arg("this"));
    t.method("IsAssembly", [](TGeoVolume const* a)->Bool_t { return a->IsAssembly(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:108:11
    t.method("IsFolder", [](TGeoVolume const& a)->Bool_t { return a.IsFolder(); }, jlcxx::arg("this"));
    t.method("IsFolder", [](TGeoVolume const* a)->Bool_t { return a->IsFolder(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsRunTime() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsRunTime()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:109:11
    t.method("IsRunTime", [](TGeoVolume const& a)->Bool_t { return a.IsRunTime(); }, jlcxx::arg("this"));
    t.method("IsRunTime", [](TGeoVolume const* a)->Bool_t { return a->IsRunTime(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVolumeMulti() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVolumeMulti()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:110:19
    t.method("IsVolumeMulti", [](TGeoVolume const& a)->Bool_t { return a.IsVolumeMulti(); }, jlcxx::arg("this"));
    t.method("IsVolumeMulti", [](TGeoVolume const* a)->Bool_t { return a->IsVolumeMulti(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolume::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolume::AddNode(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:112:4
    t.method("AddNode", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1)->TGeoNode * { return a.AddNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNode", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a.AddNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"));
    t.method("AddNode", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a.AddNode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"), jlcxx::arg("option"));
    t.method("AddNode", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1)->TGeoNode * { return a->AddNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNode", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->TGeoNode * { return a->AddNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"));
    t.method("AddNode", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->TGeoNode * { return a->AddNode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::AddNodeOffset(TGeoVolume *, Int_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::AddNodeOffset(TGeoVolume *, Int_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:113:9
    t.method("AddNodeOffset", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1)->void { a.AddNodeOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNodeOffset", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, Double_t arg2)->void { a.AddNodeOffset(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("offset"));
    t.method("AddNodeOffset", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, Double_t arg2, Option_t * arg3)->void { a.AddNodeOffset(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("offset"), jlcxx::arg("option"));
    t.method("AddNodeOffset", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1)->void { a->AddNodeOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNodeOffset", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, Double_t arg2)->void { a->AddNodeOffset(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("offset"));
    t.method("AddNodeOffset", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, Double_t arg2, Option_t * arg3)->void { a->AddNodeOffset(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("offset"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::AddNodeOverlap(TGeoVolume *, Int_t, TGeoMatrix *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:114:17
    t.method("AddNodeOverlap", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1)->void { a.AddNodeOverlap(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNodeOverlap", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->void { a.AddNodeOverlap(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"));
    t.method("AddNodeOverlap", [](TGeoVolume& a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a.AddNodeOverlap(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"), jlcxx::arg("option"));
    t.method("AddNodeOverlap", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1)->void { a->AddNodeOverlap(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"));
    t.method("AddNodeOverlap", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2)->void { a->AddNodeOverlap(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"));
    t.method("AddNodeOverlap", [](TGeoVolume* a, TGeoVolume * arg0, Int_t arg1, TGeoMatrix * arg2, Option_t * arg3)->void { a->AddNodeOverlap(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("vol"), jlcxx::arg("copy_no"), jlcxx::arg("mat"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolume::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolume::Divide(const char *, Int_t, Int_t, Double_t, Double_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:116:24
    t.method("Divide", [](TGeoVolume& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoVolume& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"));
    t.method("Divide", [](TGeoVolume& a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"), jlcxx::arg("option"));
    t.method("Divide", [](TGeoVolume* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoVolume* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"));
    t.method("Divide", [](TGeoVolume* a, const char * arg0, Int_t arg1, Int_t arg2, Double_t arg3, Double_t arg4, Int_t arg5, Option_t * arg6)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"), jlcxx::arg("numed"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:118:10
    t.method("DistancetoPrimitive", [](TGeoVolume& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoVolume* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:119:9
    t.method("Draw", [](TGeoVolume& a)->void { a.Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoVolume& a, Option_t * arg0)->void { a.Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Draw", [](TGeoVolume* a)->void { a->Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TGeoVolume* a, Option_t * arg0)->void { a->Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::DrawOnly(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::DrawOnly(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:120:17
    t.method("DrawOnly", [](TGeoVolume& a)->void { a.DrawOnly(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoVolume& a, Option_t * arg0)->void { a.DrawOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoVolume* a)->void { a->DrawOnly(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("DrawOnly", [](TGeoVolume* a, Option_t * arg0)->void { a->DrawOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for TH2F * TGeoVolume::LegoPlot(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH2F * TGeoVolume::LegoPlot(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:121:10
    t.method("LegoPlot", [](TGeoVolume& a)->TH2F * { return a.LegoPlot(); }, jlcxx::arg("this"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0)->TH2F * { return a.LegoPlot(arg0); }, jlcxx::arg("this"), jlcxx::arg("ntheta"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1)->TH2F * { return a.LegoPlot(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2)->TH2F * { return a.LegoPlot(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("LegoPlot", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Option_t * arg8)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("option"));
    t.method("LegoPlot", [](TGeoVolume* a)->TH2F * { return a->LegoPlot(); }, jlcxx::arg("this"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0)->TH2F * { return a->LegoPlot(arg0); }, jlcxx::arg("this"), jlcxx::arg("ntheta"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1)->TH2F * { return a->LegoPlot(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2)->TH2F * { return a->LegoPlot(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"), jlcxx::arg("rmax"));
    t.method("LegoPlot", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Option_t * arg8)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); }, jlcxx::arg("this"), jlcxx::arg("ntheta"), jlcxx::arg("themin"), jlcxx::arg("themax"), jlcxx::arg("nphi"), jlcxx::arg("phimin"), jlcxx::arg("phimax"), jlcxx::arg("rmin"), jlcxx::arg("rmax"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:124:9
    t.method("Paint", [](TGeoVolume& a)->void { a.Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TGeoVolume& a, Option_t * arg0)->void { a.Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Paint", [](TGeoVolume* a)->void { a->Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TGeoVolume* a, Option_t * arg0)->void { a->Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:125:9
    t.method("Print", [](TGeoVolume const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoVolume const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TGeoVolume const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGeoVolume const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::PrintNodes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::PrintNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:126:9
    t.method("PrintNodes", [](TGeoVolume const& a)->void { a.PrintNodes(); }, jlcxx::arg("this"));
    t.method("PrintNodes", [](TGeoVolume const* a)->void { a->PrintNodes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::PrintVoxels() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::PrintVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:127:9
    t.method("PrintVoxels", [](TGeoVolume const& a)->void { a.PrintVoxels(); }, jlcxx::arg("this"));
    t.method("PrintVoxels", [](TGeoVolume const* a)->void { a->PrintVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ReplayCreation(const TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ReplayCreation(const TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:128:9
    t.method("ReplayCreation", [](TGeoVolume& a, const TGeoVolume * arg0)->void { a.ReplayCreation(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));
    t.method("ReplayCreation", [](TGeoVolume* a, const TGeoVolume * arg0)->void { a->ReplayCreation(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetUserExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetUserExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:129:9
    t.method("SetUserExtension", [](TGeoVolume& a, TGeoExtension * arg0)->void { a.SetUserExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));
    t.method("SetUserExtension", [](TGeoVolume* a, TGeoExtension * arg0)->void { a->SetUserExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetFWExtension(TGeoExtension *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetFWExtension(TGeoExtension *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:130:9
    t.method("SetFWExtension", [](TGeoVolume& a, TGeoExtension * arg0)->void { a.SetFWExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));
    t.method("SetFWExtension", [](TGeoVolume* a, TGeoExtension * arg0)->void { a->SetFWExtension(arg0); }, jlcxx::arg("this"), jlcxx::arg("ext"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetRefCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetRefCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:131:10
    t.method("GetRefCount", [](TGeoVolume const& a)->Int_t { return a.GetRefCount(); }, jlcxx::arg("this"));
    t.method("GetRefCount", [](TGeoVolume const* a)->Int_t { return a->GetRefCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoVolume::GetUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoVolume::GetUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:132:19
    t.method("GetUserExtension", [](TGeoVolume const& a)->TGeoExtension * { return a.GetUserExtension(); }, jlcxx::arg("this"));
    t.method("GetUserExtension", [](TGeoVolume const* a)->TGeoExtension * { return a->GetUserExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoVolume::GetFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoVolume::GetFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:133:19
    t.method("GetFWExtension", [](TGeoVolume const& a)->TGeoExtension * { return a.GetFWExtension(); }, jlcxx::arg("this"));
    t.method("GetFWExtension", [](TGeoVolume const* a)->TGeoExtension * { return a->GetFWExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoVolume::GrabUserExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoVolume::GrabUserExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:134:19
    t.method("GrabUserExtension", [](TGeoVolume const& a)->TGeoExtension * { return a.GrabUserExtension(); }, jlcxx::arg("this"));
    t.method("GrabUserExtension", [](TGeoVolume const* a)->TGeoExtension * { return a->GrabUserExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoExtension * TGeoVolume::GrabFWExtension() (" __HERE__ ")");
    // signature to use in the veto list: TGeoExtension * TGeoVolume::GrabFWExtension()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:135:19
    t.method("GrabFWExtension", [](TGeoVolume const& a)->TGeoExtension * { return a.GrabFWExtension(); }, jlcxx::arg("this"));
    t.method("GrabFWExtension", [](TGeoVolume const* a)->TGeoExtension * { return a->GrabFWExtension(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Grab() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Grab()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:136:9
    t.method("Grab", [](TGeoVolume& a)->void { a.Grab(); }, jlcxx::arg("this"));
    t.method("Grab", [](TGeoVolume* a)->void { a->Grab(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Release() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Release()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:137:9
    t.method("Release", [](TGeoVolume& a)->void { a.Release(); }, jlcxx::arg("this"));
    t.method("Release", [](TGeoVolume* a)->void { a->Release(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:143:9
    t.method("ExecuteEvent", [](TGeoVolume& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("ExecuteEvent", [](TGeoVolume* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsActive() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsActive()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:145:11
    t.method("IsActive", [](TGeoVolume const& a)->Bool_t { return a.IsActive(); }, jlcxx::arg("this"));
    t.method("IsActive", [](TGeoVolume const* a)->Bool_t { return a->IsActive(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsActiveDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsActiveDaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:146:11
    t.method("IsActiveDaughters", [](TGeoVolume const& a)->Bool_t { return a.IsActiveDaughters(); }, jlcxx::arg("this"));
    t.method("IsActiveDaughters", [](TGeoVolume const* a)->Bool_t { return a->IsActiveDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsAdded() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsAdded()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:147:11
    t.method("IsAdded", [](TGeoVolume const& a)->Bool_t { return a.IsAdded(); }, jlcxx::arg("this"));
    t.method("IsAdded", [](TGeoVolume const* a)->Bool_t { return a->IsAdded(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsOverlappingCandidate() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsOverlappingCandidate()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:148:11
    t.method("IsOverlappingCandidate", [](TGeoVolume const& a)->Bool_t { return a.IsOverlappingCandidate(); }, jlcxx::arg("this"));
    t.method("IsOverlappingCandidate", [](TGeoVolume const* a)->Bool_t { return a->IsOverlappingCandidate(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsReplicated() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsReplicated()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:149:11
    t.method("IsReplicated", [](TGeoVolume const& a)->Bool_t { return a.IsReplicated(); }, jlcxx::arg("this"));
    t.method("IsReplicated", [](TGeoVolume const* a)->Bool_t { return a->IsReplicated(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsSelected() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsSelected()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:150:11
    t.method("IsSelected", [](TGeoVolume const& a)->Bool_t { return a.IsSelected(); }, jlcxx::arg("this"));
    t.method("IsSelected", [](TGeoVolume const* a)->Bool_t { return a->IsSelected(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsCylVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsCylVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:151:11
    t.method("IsCylVoxels", [](TGeoVolume const& a)->Bool_t { return a.IsCylVoxels(); }, jlcxx::arg("this"));
    t.method("IsCylVoxels", [](TGeoVolume const* a)->Bool_t { return a->IsCylVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsXYZVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsXYZVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:152:11
    t.method("IsXYZVoxels", [](TGeoVolume const& a)->Bool_t { return a.IsXYZVoxels(); }, jlcxx::arg("this"));
    t.method("IsXYZVoxels", [](TGeoVolume const* a)->Bool_t { return a->IsXYZVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsTopVolume() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsTopVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:153:11
    t.method("IsTopVolume", [](TGeoVolume const& a)->Bool_t { return a.IsTopVolume(); }, jlcxx::arg("this"));
    t.method("IsTopVolume", [](TGeoVolume const* a)->Bool_t { return a->IsTopVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsValid() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsValid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:154:11
    t.method("IsValid", [](TGeoVolume const& a)->Bool_t { return a.IsValid(); }, jlcxx::arg("this"));
    t.method("IsValid", [](TGeoVolume const* a)->Bool_t { return a->IsValid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:155:19
    t.method("IsVisible", [](TGeoVolume const& a)->Bool_t { return a.IsVisible(); }, jlcxx::arg("this"));
    t.method("IsVisible", [](TGeoVolume const* a)->Bool_t { return a->IsVisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVisibleDaughters() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVisibleDaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:156:11
    t.method("IsVisibleDaughters", [](TGeoVolume const& a)->Bool_t { return a.IsVisibleDaughters(); }, jlcxx::arg("this"));
    t.method("IsVisibleDaughters", [](TGeoVolume const* a)->Bool_t { return a->IsVisibleDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVisContainers() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVisContainers()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:157:11
    t.method("IsVisContainers", [](TGeoVolume const& a)->Bool_t { return a.IsVisContainers(); }, jlcxx::arg("this"));
    t.method("IsVisContainers", [](TGeoVolume const* a)->Bool_t { return a->IsVisContainers(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVisLeaves() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVisLeaves()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:158:11
    t.method("IsVisLeaves", [](TGeoVolume const& a)->Bool_t { return a.IsVisLeaves(); }, jlcxx::arg("this"));
    t.method("IsVisLeaves", [](TGeoVolume const* a)->Bool_t { return a->IsVisLeaves(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsVisOnly() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsVisOnly()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:159:11
    t.method("IsVisOnly", [](TGeoVolume const& a)->Bool_t { return a.IsVisOnly(); }, jlcxx::arg("this"));
    t.method("IsVisOnly", [](TGeoVolume const* a)->Bool_t { return a->IsVisOnly(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsAllInvisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsAllInvisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:160:11
    t.method("IsAllInvisible", [](TGeoVolume const& a)->Bool_t { return a.IsAllInvisible(); }, jlcxx::arg("this"));
    t.method("IsAllInvisible", [](TGeoVolume const* a)->Bool_t { return a->IsAllInvisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsRaytracing() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsRaytracing()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:161:11
    t.method("IsRaytracing", [](TGeoVolume const& a)->Bool_t { return a.IsRaytracing(); }, jlcxx::arg("this"));
    t.method("IsRaytracing", [](TGeoVolume const* a)->Bool_t { return a->IsRaytracing(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolume::Import(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolume::Import(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:162:23
    module_.method("TGeoVolume!Import", [](const char * arg0)->TGeoVolume * { return TGeoVolume::Import(arg0); }, jlcxx::arg("filename"));
    module_.method("TGeoVolume!Import", [](const char * arg0, const char * arg1)->TGeoVolume * { return TGeoVolume::Import(arg0, arg1); }, jlcxx::arg("filename"), jlcxx::arg("name"));
    module_.method("TGeoVolume!Import", [](const char * arg0, const char * arg1, Option_t * arg2)->TGeoVolume * { return TGeoVolume::Import(arg0, arg1, arg2); }, jlcxx::arg("filename"), jlcxx::arg("name"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::Export(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::Export(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:163:10
    t.method("Export", [](TGeoVolume& a, const char * arg0)->Int_t { return a.Export(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("Export", [](TGeoVolume& a, const char * arg0, const char * arg1)->Int_t { return a.Export(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("name"));
    t.method("Export", [](TGeoVolume& a, const char * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.Export(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("Export", [](TGeoVolume* a, const char * arg0)->Int_t { return a->Export(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("Export", [](TGeoVolume* a, const char * arg0, const char * arg1)->Int_t { return a->Export(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("name"));
    t.method("Export", [](TGeoVolume* a, const char * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->Export(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("name"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolume::FindNode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolume::FindNode(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:164:14
    t.method("FindNode", [](TGeoVolume const& a, const char * arg0)->TGeoNode * { return a.FindNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("FindNode", [](TGeoVolume const* a, const char * arg0)->TGeoNode * { return a->FindNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::FindOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::FindOverlaps()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:165:9
    t.method("FindOverlaps", [](TGeoVolume const& a)->void { a.FindOverlaps(); }, jlcxx::arg("this"));
    t.method("FindOverlaps", [](TGeoVolume const* a)->void { a->FindOverlaps(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::FindMatrixOfDaughterVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::FindMatrixOfDaughterVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:166:11
    t.method("FindMatrixOfDaughterVolume", [](TGeoVolume const& a, TGeoVolume * arg0)->Bool_t { return a.FindMatrixOfDaughterVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("vol"));
    t.method("FindMatrixOfDaughterVolume", [](TGeoVolume const* a, TGeoVolume * arg0)->Bool_t { return a->FindMatrixOfDaughterVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("vol"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetCurrentNodeIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetCurrentNodeIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:167:18
    t.method("GetCurrentNodeIndex", [](TGeoVolume const& a)->Int_t { return a.GetCurrentNodeIndex(); }, jlcxx::arg("this"));
    t.method("GetCurrentNodeIndex", [](TGeoVolume const* a)->Int_t { return a->GetCurrentNodeIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetNextNodeIndex() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetNextNodeIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:168:18
    t.method("GetNextNodeIndex", [](TGeoVolume const& a)->Int_t { return a.GetNextNodeIndex(); }, jlcxx::arg("this"));
    t.method("GetNextNodeIndex", [](TGeoVolume const* a)->Int_t { return a->GetNextNodeIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObjArray * TGeoVolume::GetNodes() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TGeoVolume::GetNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:169:15
    t.method("GetNodes", [](TGeoVolume& a)->TObjArray * { return a.GetNodes(); }, jlcxx::arg("this"));
    t.method("GetNodes", [](TGeoVolume* a)->TObjArray * { return a->GetNodes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetNdaughters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetNdaughters()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:170:10
    t.method("GetNdaughters", [](TGeoVolume const& a)->Int_t { return a.GetNdaughters(); }, jlcxx::arg("this"));
    t.method("GetNdaughters", [](TGeoVolume const* a)->Int_t { return a->GetNdaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetNtotal() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetNtotal()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:171:10
    t.method("GetNtotal", [](TGeoVolume const& a)->Int_t { return a.GetNtotal(); }, jlcxx::arg("this"));
    t.method("GetNtotal", [](TGeoVolume const* a)->Int_t { return a->GetNtotal(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:172:18
    t.method("GetByteCount", [](TGeoVolume const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoVolume const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoManager * TGeoVolume::GetGeoManager() (" __HERE__ ")");
    // signature to use in the veto list: TGeoManager * TGeoVolume::GetGeoManager()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:173:17
    t.method("GetGeoManager", [](TGeoVolume const& a)->TGeoManager * { return a.GetGeoManager(); }, jlcxx::arg("this"));
    t.method("GetGeoManager", [](TGeoVolume const* a)->TGeoManager * { return a->GetGeoManager(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoMaterial * TGeoVolume::GetMaterial() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMaterial * TGeoVolume::GetMaterial()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:174:18
    t.method("GetMaterial", [](TGeoVolume const& a)->TGeoMaterial * { return a.GetMaterial(); }, jlcxx::arg("this"));
    t.method("GetMaterial", [](TGeoVolume const* a)->TGeoMaterial * { return a->GetMaterial(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoMedium * TGeoVolume::GetMedium() (" __HERE__ ")");
    // signature to use in the veto list: TGeoMedium * TGeoVolume::GetMedium()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:175:16
    t.method("GetMedium", [](TGeoVolume const& a)->TGeoMedium * { return a.GetMedium(); }, jlcxx::arg("this"));
    t.method("GetMedium", [](TGeoVolume const* a)->TGeoMedium * { return a->GetMedium(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObject * TGeoVolume::GetField() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TGeoVolume::GetField()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:176:13
    t.method("GetField", [](TGeoVolume const& a)->TObject * { return a.GetField(); }, jlcxx::arg("this"));
    t.method("GetField", [](TGeoVolume const* a)->TObject * { return a->GetField(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoPatternFinder * TGeoVolume::GetFinder() (" __HERE__ ")");
    // signature to use in the veto list: TGeoPatternFinder * TGeoVolume::GetFinder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:177:23
    t.method("GetFinder", [](TGeoVolume const& a)->TGeoPatternFinder * { return a.GetFinder(); }, jlcxx::arg("this"));
    t.method("GetFinder", [](TGeoVolume const* a)->TGeoPatternFinder * { return a->GetFinder(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVoxelFinder * TGeoVolume::GetVoxels() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVoxelFinder * TGeoVolume::GetVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:178:21
    t.method("GetVoxels", [](TGeoVolume const& a)->TGeoVoxelFinder * { return a.GetVoxels(); }, jlcxx::arg("this"));
    t.method("GetVoxels", [](TGeoVolume const* a)->TGeoVoxelFinder * { return a->GetVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TGeoVolume::GetIconName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolume::GetIconName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:179:16
    t.method("GetIconName", [](TGeoVolume const& a) { return (std::string)a.GetIconName(); }, jlcxx::arg("this"));
    t.method("GetIconName", [](TGeoVolume const* a) { return (std::string)a->GetIconName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetIndex(const TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetIndex(const TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:180:10
    t.method("GetIndex", [](TGeoVolume const& a, const TGeoNode * arg0)->Int_t { return a.GetIndex(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));
    t.method("GetIndex", [](TGeoVolume const* a, const TGeoNode * arg0)->Int_t { return a->GetIndex(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolume::GetNode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolume::GetNode(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:181:14
    t.method("GetNode", [](TGeoVolume const& a, const char * arg0)->TGeoNode * { return a.GetNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("GetNode", [](TGeoVolume const* a, const char * arg0)->TGeoNode * { return a->GetNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolume::GetNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolume::GetNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:182:14
    t.method("GetNode", [](TGeoVolume const& a, Int_t arg0)->TGeoNode * { return a.GetNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetNode", [](TGeoVolume const* a, Int_t arg0)->TGeoNode * { return a->GetNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetNodeIndex(const TGeoNode *, Int_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetNodeIndex(const TGeoNode *, Int_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:183:10
    t.method("GetNodeIndex", [](TGeoVolume const& a, const TGeoNode * arg0, Int_t * arg1, Int_t arg2)->Int_t { return a.GetNodeIndex(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("node"), jlcxx::arg("check_list"), jlcxx::arg("ncheck"));
    t.method("GetNodeIndex", [](TGeoVolume const* a, const TGeoNode * arg0, Int_t * arg1, Int_t arg2)->Int_t { return a->GetNodeIndex(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("node"), jlcxx::arg("check_list"), jlcxx::arg("ncheck"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoVolume::GetNumber() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoVolume::GetNumber()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:184:10
    t.method("GetNumber", [](TGeoVolume const& a)->Int_t { return a.GetNumber(); }, jlcxx::arg("this"));
    t.method("GetNumber", [](TGeoVolume const* a)->Int_t { return a->GetNumber(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for char * TGeoVolume::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TGeoVolume::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:185:10
    t.method("GetObjectInfo", [](TGeoVolume const& a, Int_t arg0, Int_t arg1)->char * { return a.GetObjectInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("GetObjectInfo", [](TGeoVolume const* a, Int_t arg0, Int_t arg1)->char * { return a->GetObjectInfo(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::GetOptimalVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::GetOptimalVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:186:11
    t.method("GetOptimalVoxels", [](TGeoVolume const& a)->Bool_t { return a.GetOptimalVoxels(); }, jlcxx::arg("this"));
    t.method("GetOptimalVoxels", [](TGeoVolume const* a)->Bool_t { return a->GetOptimalVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Option_t * TGeoVolume::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TGeoVolume::GetOption()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:187:14
    t.method("GetOption", [](TGeoVolume const& a)->Option_t * { return a.GetOption(); }, jlcxx::arg("this"));
    t.method("GetOption", [](TGeoVolume const* a)->Option_t * { return a->GetOption(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TGeoVolume::GetPointerName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolume::GetPointerName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:188:16
    t.method("GetPointerName", [](TGeoVolume const& a) { return (std::string)a.GetPointerName(); }, jlcxx::arg("this"));
    t.method("GetPointerName", [](TGeoVolume const* a) { return (std::string)a->GetPointerName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Char_t TGeoVolume::GetTransparency() (" __HERE__ ")");
    // signature to use in the veto list: Char_t TGeoVolume::GetTransparency()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:189:11
    t.method("GetTransparency", [](TGeoVolume const& a)->Char_t { return a.GetTransparency(); }, jlcxx::arg("this"));
    t.method("GetTransparency", [](TGeoVolume const* a)->Char_t { return a->GetTransparency(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoVolume::GetShape() (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoVolume::GetShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:190:15
    t.method("GetShape", [](TGeoVolume const& a)->TGeoShape * { return a.GetShape(); }, jlcxx::arg("this"));
    t.method("GetShape", [](TGeoVolume const* a)->TGeoShape * { return a->GetShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::GrabFocus() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::GrabFocus()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:191:9
    t.method("GrabFocus", [](TGeoVolume& a)->void { a.GrabFocus(); }, jlcxx::arg("this"));
    t.method("GrabFocus", [](TGeoVolume* a)->void { a->GrabFocus(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Gsord(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Gsord(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:192:9
    t.method("Gsord", [](TGeoVolume& a, Int_t arg0)->void { a.Gsord(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Gsord", [](TGeoVolume* a, Int_t arg0)->void { a->Gsord(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::IsStyleDefault() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::IsStyleDefault()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:193:11
    t.method("IsStyleDefault", [](TGeoVolume const& a)->Bool_t { return a.IsStyleDefault(); }, jlcxx::arg("this"));
    t.method("IsStyleDefault", [](TGeoVolume const* a)->Bool_t { return a->IsStyleDefault(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::InspectMaterial() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::InspectMaterial()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:194:9
    t.method("InspectMaterial", [](TGeoVolume const& a)->void { a.InspectMaterial(); }, jlcxx::arg("this"));
    t.method("InspectMaterial", [](TGeoVolume const* a)->void { a->InspectMaterial(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:195:9
    t.method("InspectShape", [](TGeoVolume const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoVolume const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolume::MakeCopyVolume(TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolume::MakeCopyVolume(TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:196:24
    t.method("MakeCopyVolume", [](TGeoVolume& a, TGeoShape * arg0)->TGeoVolume * { return a.MakeCopyVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("newshape"));
    t.method("MakeCopyVolume", [](TGeoVolume* a, TGeoShape * arg0)->TGeoVolume * { return a->MakeCopyVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("newshape"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::MakeCopyNodes(const TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::MakeCopyNodes(const TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:197:9
    t.method("MakeCopyNodes", [](TGeoVolume& a, const TGeoVolume * arg0)->void { a.MakeCopyNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));
    t.method("MakeCopyNodes", [](TGeoVolume* a, const TGeoVolume * arg0)->void { a->MakeCopyNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("other"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoVolume::MakeReflectedVolume(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoVolume::MakeReflectedVolume(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:198:16
    t.method("MakeReflectedVolume", [](TGeoVolume const& a)->TGeoVolume * { return a.MakeReflectedVolume(); }, jlcxx::arg("this"));
    t.method("MakeReflectedVolume", [](TGeoVolume const& a, const char * arg0)->TGeoVolume * { return a.MakeReflectedVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("newname"));
    t.method("MakeReflectedVolume", [](TGeoVolume const* a)->TGeoVolume * { return a->MakeReflectedVolume(); }, jlcxx::arg("this"));
    t.method("MakeReflectedVolume", [](TGeoVolume const* a, const char * arg0)->TGeoVolume * { return a->MakeReflectedVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("newname"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::OptimizeVoxels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::OptimizeVoxels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:199:11
    t.method("OptimizeVoxels", [](TGeoVolume& a)->Bool_t { return a.OptimizeVoxels(); }, jlcxx::arg("this"));
    t.method("OptimizeVoxels", [](TGeoVolume* a)->Bool_t { return a->OptimizeVoxels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::RandomPoints(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::RandomPoints(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:200:9
    t.method("RandomPoints", [](TGeoVolume& a)->void { a.RandomPoints(); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("option"));
    t.method("RandomPoints", [](TGeoVolume& a, Int_t arg0)->void { a.RandomPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("npoints"));
    t.method("RandomPoints", [](TGeoVolume& a, Int_t arg0, Option_t * arg1)->void { a.RandomPoints(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("option"));
    t.method("RandomPoints", [](TGeoVolume* a)->void { a->RandomPoints(); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("option"));
    t.method("RandomPoints", [](TGeoVolume* a, Int_t arg0)->void { a->RandomPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("npoints"));
    t.method("RandomPoints", [](TGeoVolume* a, Int_t arg0, Option_t * arg1)->void { a->RandomPoints(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:201:9
    t.method("RandomRays", [](TGeoVolume& a)->void { a.RandomRays(); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"), jlcxx::arg("check_norm"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0)->void { a.RandomRays(arg0); }, jlcxx::arg("this"), jlcxx::arg("nrays"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0, Double_t arg1)->void { a.RandomRays(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.RandomRays(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.RandomRays(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4)->void { a.RandomRays(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"));
    t.method("RandomRays", [](TGeoVolume& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a.RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"), jlcxx::arg("check_norm"));
    t.method("RandomRays", [](TGeoVolume* a)->void { a->RandomRays(); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"), jlcxx::arg("check_norm"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0)->void { a->RandomRays(arg0); }, jlcxx::arg("this"), jlcxx::arg("nrays"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0, Double_t arg1)->void { a->RandomRays(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->RandomRays(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->RandomRays(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4)->void { a->RandomRays(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"));
    t.method("RandomRays", [](TGeoVolume* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a->RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("nrays"), jlcxx::arg("startx"), jlcxx::arg("starty"), jlcxx::arg("startz"), jlcxx::arg("target_vol"), jlcxx::arg("check_norm"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Raytrace(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Raytrace(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:203:9
    t.method("Raytrace", [](TGeoVolume& a)->void { a.Raytrace(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("Raytrace", [](TGeoVolume& a, Bool_t arg0)->void { a.Raytrace(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("Raytrace", [](TGeoVolume* a)->void { a->Raytrace(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("Raytrace", [](TGeoVolume* a, Bool_t arg0)->void { a->Raytrace(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::RegisterYourself(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::RegisterYourself(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:204:9
    t.method("RegisterYourself", [](TGeoVolume& a)->void { a.RegisterYourself(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("RegisterYourself", [](TGeoVolume& a, Option_t * arg0)->void { a.RegisterYourself(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("RegisterYourself", [](TGeoVolume* a)->void { a->RegisterYourself(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("RegisterYourself", [](TGeoVolume* a, Option_t * arg0)->void { a->RegisterYourself(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::RemoveNode(TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::RemoveNode(TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:205:9
    t.method("RemoveNode", [](TGeoVolume& a, TGeoNode * arg0)->void { a.RemoveNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));
    t.method("RemoveNode", [](TGeoVolume* a, TGeoNode * arg0)->void { a->RemoveNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("node"));

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoVolume::ReplaceNode(TGeoNode *, TGeoShape *, TGeoMatrix *, TGeoMedium *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoVolume::ReplaceNode(TGeoNode *, TGeoShape *, TGeoMatrix *, TGeoMedium *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:206:14
    t.method("ReplaceNode", [](TGeoVolume& a, TGeoNode * arg0)->TGeoNode * { return a.ReplaceNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"));
    t.method("ReplaceNode", [](TGeoVolume& a, TGeoNode * arg0, TGeoShape * arg1)->TGeoNode * { return a.ReplaceNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"));
    t.method("ReplaceNode", [](TGeoVolume& a, TGeoNode * arg0, TGeoShape * arg1, TGeoMatrix * arg2)->TGeoNode * { return a.ReplaceNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"), jlcxx::arg("newpos"));
    t.method("ReplaceNode", [](TGeoVolume& a, TGeoNode * arg0, TGeoShape * arg1, TGeoMatrix * arg2, TGeoMedium * arg3)->TGeoNode * { return a.ReplaceNode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"), jlcxx::arg("newpos"), jlcxx::arg("newmed"));
    t.method("ReplaceNode", [](TGeoVolume* a, TGeoNode * arg0)->TGeoNode * { return a->ReplaceNode(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"));
    t.method("ReplaceNode", [](TGeoVolume* a, TGeoNode * arg0, TGeoShape * arg1)->TGeoNode * { return a->ReplaceNode(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"));
    t.method("ReplaceNode", [](TGeoVolume* a, TGeoNode * arg0, TGeoShape * arg1, TGeoMatrix * arg2)->TGeoNode * { return a->ReplaceNode(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"), jlcxx::arg("newpos"));
    t.method("ReplaceNode", [](TGeoVolume* a, TGeoNode * arg0, TGeoShape * arg1, TGeoMatrix * arg2, TGeoMedium * arg3)->TGeoNode * { return a->ReplaceNode(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("nodeorig"), jlcxx::arg("newshape"), jlcxx::arg("newpos"), jlcxx::arg("newmed"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::ResetTransparency(Char_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::ResetTransparency(Char_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:208:9
    t.method("ResetTransparency", [](TGeoVolume& a)->void { a.ResetTransparency(); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("ResetTransparency", [](TGeoVolume& a, Char_t arg0)->void { a.ResetTransparency(arg0); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("ResetTransparency", [](TGeoVolume* a)->void { a->ResetTransparency(); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("ResetTransparency", [](TGeoVolume* a, Char_t arg0)->void { a->ResetTransparency(arg0); }, jlcxx::arg("this"), jlcxx::arg("transparency"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SaveAs(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SaveAs(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:209:9
    t.method("SaveAs", [](TGeoVolume const& a)->void { a.SaveAs(); }, jlcxx::arg("this"));
    t.method("SaveAs", [](TGeoVolume const& a, const char * arg0)->void { a.SaveAs(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("SaveAs", [](TGeoVolume const& a, const char * arg0, Option_t * arg1)->void { a.SaveAs(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("option"));
    t.method("SaveAs", [](TGeoVolume const* a)->void { a->SaveAs(); }, jlcxx::arg("this"));
    t.method("SaveAs", [](TGeoVolume const* a, const char * arg0)->void { a->SaveAs(arg0); }, jlcxx::arg("this"), jlcxx::arg("filename"));
    t.method("SaveAs", [](TGeoVolume const* a, const char * arg0, Option_t * arg1)->void { a->SaveAs(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SelectVolume(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SelectVolume(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:211:9
    t.method("SelectVolume", [](TGeoVolume& a)->void { a.SelectVolume(); }, jlcxx::arg("this"), jlcxx::arg("clear"));
    t.method("SelectVolume", [](TGeoVolume& a, Bool_t arg0)->void { a.SelectVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("clear"));
    t.method("SelectVolume", [](TGeoVolume* a)->void { a->SelectVolume(); }, jlcxx::arg("this"), jlcxx::arg("clear"));
    t.method("SelectVolume", [](TGeoVolume* a, Bool_t arg0)->void { a->SelectVolume(arg0); }, jlcxx::arg("this"), jlcxx::arg("clear"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetActivity(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetActivity(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:212:9
    t.method("SetActivity", [](TGeoVolume& a)->void { a.SetActivity(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActivity", [](TGeoVolume& a, Bool_t arg0)->void { a.SetActivity(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActivity", [](TGeoVolume* a)->void { a->SetActivity(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActivity", [](TGeoVolume* a, Bool_t arg0)->void { a->SetActivity(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetActiveDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetActiveDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:213:9
    t.method("SetActiveDaughters", [](TGeoVolume& a)->void { a.SetActiveDaughters(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActiveDaughters", [](TGeoVolume& a, Bool_t arg0)->void { a.SetActiveDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActiveDaughters", [](TGeoVolume* a)->void { a->SetActiveDaughters(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetActiveDaughters", [](TGeoVolume* a, Bool_t arg0)->void { a->SetActiveDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetAsTopVolume() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetAsTopVolume()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:214:9
    t.method("SetAsTopVolume", [](TGeoVolume& a)->void { a.SetAsTopVolume(); }, jlcxx::arg("this"));
    t.method("SetAsTopVolume", [](TGeoVolume* a)->void { a->SetAsTopVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetAdded() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetAdded()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:215:9
    t.method("SetAdded", [](TGeoVolume& a)->void { a.SetAdded(); }, jlcxx::arg("this"));
    t.method("SetAdded", [](TGeoVolume* a)->void { a->SetAdded(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetReplicated() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetReplicated()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:216:9
    t.method("SetReplicated", [](TGeoVolume& a)->void { a.SetReplicated(); }, jlcxx::arg("this"));
    t.method("SetReplicated", [](TGeoVolume* a)->void { a->SetReplicated(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetCurrentPoint(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetCurrentPoint(Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:217:9
    t.method("SetCurrentPoint", [](TGeoVolume& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));
    t.method("SetCurrentPoint", [](TGeoVolume* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetCurrentPoint(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("z"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetCylVoxels(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetCylVoxels(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:218:9
    t.method("SetCylVoxels", [](TGeoVolume& a)->void { a.SetCylVoxels(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCylVoxels", [](TGeoVolume& a, Bool_t arg0)->void { a.SetCylVoxels(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCylVoxels", [](TGeoVolume* a)->void { a->SetCylVoxels(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetCylVoxels", [](TGeoVolume* a, Bool_t arg0)->void { a->SetCylVoxels(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetNodes(TObjArray *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetNodes(TObjArray *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:223:9
    t.method("SetNodes", [](TGeoVolume& a, TObjArray * arg0)->void { a.SetNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodes"));
    t.method("SetNodes", [](TGeoVolume* a, TObjArray * arg0)->void { a->SetNodes(arg0); }, jlcxx::arg("this"), jlcxx::arg("nodes"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetOverlappingCandidate(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetOverlappingCandidate(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:228:9
    t.method("SetOverlappingCandidate", [](TGeoVolume& a, Bool_t arg0)->void { a.SetOverlappingCandidate(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetOverlappingCandidate", [](TGeoVolume* a, Bool_t arg0)->void { a->SetOverlappingCandidate(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetShape(const TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetShape(const TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:229:9
    t.method("SetShape", [](TGeoVolume& a, const TGeoShape * arg0)->void { a.SetShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("shape"));
    t.method("SetShape", [](TGeoVolume* a, const TGeoShape * arg0)->void { a->SetShape(arg0); }, jlcxx::arg("this"), jlcxx::arg("shape"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetTransparency(Char_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetTransparency(Char_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:230:9
    t.method("SetTransparency", [](TGeoVolume& a)->void { a.SetTransparency(); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("SetTransparency", [](TGeoVolume& a, Char_t arg0)->void { a.SetTransparency(arg0); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("SetTransparency", [](TGeoVolume* a)->void { a->SetTransparency(); }, jlcxx::arg("this"), jlcxx::arg("transparency"));
    t.method("SetTransparency", [](TGeoVolume* a, Char_t arg0)->void { a->SetTransparency(arg0); }, jlcxx::arg("this"), jlcxx::arg("transparency"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetField(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetField(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:231:9
    t.method("SetField", [](TGeoVolume& a, TObject * arg0)->void { a.SetField(arg0); }, jlcxx::arg("this"), jlcxx::arg("field"));
    t.method("SetField", [](TGeoVolume* a, TObject * arg0)->void { a->SetField(arg0); }, jlcxx::arg("this"), jlcxx::arg("field"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetOption(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetOption(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:232:9
    t.method("SetOption", [](TGeoVolume& a, const char * arg0)->void { a.SetOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetOption", [](TGeoVolume* a, const char * arg0)->void { a->SetOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetAttVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetAttVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:233:9
    t.method("SetAttVisibility", [](TGeoVolume& a, Bool_t arg0)->void { a.SetAttVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("SetAttVisibility", [](TGeoVolume* a, Bool_t arg0)->void { a->SetAttVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:234:9
    t.method("SetVisibility", [](TGeoVolume& a)->void { a.SetVisibility(); }, jlcxx::arg("this"));
    t.method("SetVisibility", [](TGeoVolume& a, Bool_t arg0)->void { a.SetVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("SetVisibility", [](TGeoVolume* a)->void { a->SetVisibility(); }, jlcxx::arg("this"));
    t.method("SetVisibility", [](TGeoVolume* a, Bool_t arg0)->void { a->SetVisibility(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetVisContainers(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetVisContainers(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:235:9
    t.method("SetVisContainers", [](TGeoVolume& a)->void { a.SetVisContainers(); }, jlcxx::arg("this"));
    t.method("SetVisContainers", [](TGeoVolume& a, Bool_t arg0)->void { a.SetVisContainers(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetVisContainers", [](TGeoVolume* a)->void { a->SetVisContainers(); }, jlcxx::arg("this"));
    t.method("SetVisContainers", [](TGeoVolume* a, Bool_t arg0)->void { a->SetVisContainers(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetVisLeaves(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetVisLeaves(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:236:9
    t.method("SetVisLeaves", [](TGeoVolume& a)->void { a.SetVisLeaves(); }, jlcxx::arg("this"));
    t.method("SetVisLeaves", [](TGeoVolume& a, Bool_t arg0)->void { a.SetVisLeaves(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetVisLeaves", [](TGeoVolume* a)->void { a->SetVisLeaves(); }, jlcxx::arg("this"));
    t.method("SetVisLeaves", [](TGeoVolume* a, Bool_t arg0)->void { a->SetVisLeaves(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetVisOnly(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetVisOnly(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:237:9
    t.method("SetVisOnly", [](TGeoVolume& a)->void { a.SetVisOnly(); }, jlcxx::arg("this"));
    t.method("SetVisOnly", [](TGeoVolume& a, Bool_t arg0)->void { a.SetVisOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("SetVisOnly", [](TGeoVolume* a)->void { a->SetVisOnly(); }, jlcxx::arg("this"));
    t.method("SetVisOnly", [](TGeoVolume* a, Bool_t arg0)->void { a->SetVisOnly(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetLineColor(Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetLineColor(Color_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:238:9
    t.method("SetLineColor", [](TGeoVolume& a, Color_t arg0)->void { a.SetLineColor(arg0); }, jlcxx::arg("this"), jlcxx::arg("lcolor"));
    t.method("SetLineColor", [](TGeoVolume* a, Color_t arg0)->void { a->SetLineColor(arg0); }, jlcxx::arg("this"), jlcxx::arg("lcolor"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetLineStyle(Style_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetLineStyle(Style_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:239:9
    t.method("SetLineStyle", [](TGeoVolume& a, Style_t arg0)->void { a.SetLineStyle(arg0); }, jlcxx::arg("this"), jlcxx::arg("lstyle"));
    t.method("SetLineStyle", [](TGeoVolume* a, Style_t arg0)->void { a->SetLineStyle(arg0); }, jlcxx::arg("this"), jlcxx::arg("lstyle"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetLineWidth(Width_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetLineWidth(Width_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:240:9
    t.method("SetLineWidth", [](TGeoVolume& a, Width_t arg0)->void { a.SetLineWidth(arg0); }, jlcxx::arg("this"), jlcxx::arg("lwidth"));
    t.method("SetLineWidth", [](TGeoVolume* a, Width_t arg0)->void { a->SetLineWidth(arg0); }, jlcxx::arg("this"), jlcxx::arg("lwidth"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetInvisible() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetInvisible()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:241:9
    t.method("SetInvisible", [](TGeoVolume& a)->void { a.SetInvisible(); }, jlcxx::arg("this"));
    t.method("SetInvisible", [](TGeoVolume* a)->void { a->SetInvisible(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetMedium(TGeoMedium *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetMedium(TGeoMedium *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:242:17
    t.method("SetMedium", [](TGeoVolume& a, TGeoMedium * arg0)->void { a.SetMedium(arg0); }, jlcxx::arg("this"), jlcxx::arg("medium"));
    t.method("SetMedium", [](TGeoVolume* a, TGeoMedium * arg0)->void { a->SetMedium(arg0); }, jlcxx::arg("this"), jlcxx::arg("medium"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetVoxelFinder(TGeoVoxelFinder *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetVoxelFinder(TGeoVoxelFinder *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:243:9
    t.method("SetVoxelFinder", [](TGeoVolume& a, TGeoVoxelFinder * arg0)->void { a.SetVoxelFinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("finder"));
    t.method("SetVoxelFinder", [](TGeoVolume* a, TGeoVoxelFinder * arg0)->void { a->SetVoxelFinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("finder"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetFinder(TGeoPatternFinder *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetFinder(TGeoPatternFinder *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:244:9
    t.method("SetFinder", [](TGeoVolume& a, TGeoPatternFinder * arg0)->void { a.SetFinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("finder"));
    t.method("SetFinder", [](TGeoVolume* a, TGeoPatternFinder * arg0)->void { a->SetFinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("finder"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetNumber(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetNumber(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:245:9
    t.method("SetNumber", [](TGeoVolume& a, Int_t arg0)->void { a.SetNumber(arg0); }, jlcxx::arg("this"), jlcxx::arg("number"));
    t.method("SetNumber", [](TGeoVolume* a, Int_t arg0)->void { a->SetNumber(arg0); }, jlcxx::arg("this"), jlcxx::arg("number"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SetNtotal(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SetNtotal(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:246:9
    t.method("SetNtotal", [](TGeoVolume& a, Int_t arg0)->void { a.SetNtotal(arg0); }, jlcxx::arg("this"), jlcxx::arg("ntotal"));
    t.method("SetNtotal", [](TGeoVolume* a, Int_t arg0)->void { a->SetNtotal(arg0); }, jlcxx::arg("this"), jlcxx::arg("ntotal"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::SortNodes() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::SortNodes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:247:9
    t.method("SortNodes", [](TGeoVolume& a)->void { a.SortNodes(); }, jlcxx::arg("this"));
    t.method("SortNodes", [](TGeoVolume* a)->void { a->SortNodes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::UnmarkSaved() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::UnmarkSaved()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:248:9
    t.method("UnmarkSaved", [](TGeoVolume& a)->void { a.UnmarkSaved(); }, jlcxx::arg("this"));
    t.method("UnmarkSaved", [](TGeoVolume* a)->void { a->UnmarkSaved(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoVolume::Valid() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoVolume::Valid()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:249:11
    t.method("Valid", [](TGeoVolume const& a)->Bool_t { return a.Valid(); }, jlcxx::arg("this"));
    t.method("Valid", [](TGeoVolume const* a)->Bool_t { return a->Valid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::VisibleDaughters(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::VisibleDaughters(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:250:9
    t.method("VisibleDaughters", [](TGeoVolume& a)->void { a.VisibleDaughters(); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoVolume& a, Bool_t arg0)->void { a.VisibleDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoVolume* a)->void { a->VisibleDaughters(); }, jlcxx::arg("this"), jlcxx::arg("vis"));
    t.method("VisibleDaughters", [](TGeoVolume* a, Bool_t arg0)->void { a->VisibleDaughters(arg0); }, jlcxx::arg("this"), jlcxx::arg("vis"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::InvisibleAll(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::InvisibleAll(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:251:9
    t.method("InvisibleAll", [](TGeoVolume& a)->void { a.InvisibleAll(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("InvisibleAll", [](TGeoVolume& a, Bool_t arg0)->void { a.InvisibleAll(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("InvisibleAll", [](TGeoVolume* a)->void { a->InvisibleAll(); }, jlcxx::arg("this"), jlcxx::arg("flag"));
    t.method("InvisibleAll", [](TGeoVolume* a, Bool_t arg0)->void { a->InvisibleAll(arg0); }, jlcxx::arg("this"), jlcxx::arg("flag"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Voxelize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Voxelize(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:252:9
    t.method("Voxelize", [](TGeoVolume& a, Option_t * arg0)->void { a.Voxelize(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Voxelize", [](TGeoVolume* a, Option_t * arg0)->void { a->Voxelize(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoVolume::Weight(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoVolume::Weight(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:253:13
    t.method("Weight", [](TGeoVolume& a)->Double_t { return a.Weight(); }, jlcxx::arg("this"));
    t.method("Weight", [](TGeoVolume& a, Double_t arg0)->Double_t { return a.Weight(arg0); }, jlcxx::arg("this"), jlcxx::arg("precision"));
    t.method("Weight", [](TGeoVolume& a, Double_t arg0, Option_t * arg1)->Double_t { return a.Weight(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("precision"), jlcxx::arg("option"));
    t.method("Weight", [](TGeoVolume* a)->Double_t { return a->Weight(); }, jlcxx::arg("this"));
    t.method("Weight", [](TGeoVolume* a, Double_t arg0)->Double_t { return a->Weight(arg0); }, jlcxx::arg("this"), jlcxx::arg("precision"));
    t.method("Weight", [](TGeoVolume* a, Double_t arg0, Option_t * arg1)->Double_t { return a->Weight(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("precision"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoVolume::WeightA() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoVolume::WeightA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoVolume.h:254:13
    t.method("WeightA", [](TGeoVolume const& a)->Double_t { return a.WeightA(); }, jlcxx::arg("this"));
    t.method("WeightA", [](TGeoVolume const* a)->Double_t { return a->WeightA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoVolume::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoVolume::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoVolume!Class_Version", []()->Version_t { return TGeoVolume::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolume::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolume::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoVolume const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoVolume const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoVolume::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoVolume& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoVolume* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoVolume::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolume::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoVolume!DeclFileName", []() { return (std::string)TGeoVolume::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoVolume::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolume::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoVolume!ImplFileLine", []()->int { return TGeoVolume::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolume::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolume::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoVolume!ImplFileName", []() { return (std::string)TGeoVolume::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoVolume::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoVolume::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoVolume!Class_Name", []() { return (std::string)TGeoVolume::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolume::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolume::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoVolume!Dictionary", []()->TClass * { return TGeoVolume::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoVolume::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoVolume::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoVolume!Class", []()->TClass * { return TGeoVolume::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoVolume::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoVolume::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoVolume& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoVolume* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoVolume::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoVolume::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoVolume!DeclFileLine", []()->int { return TGeoVolume::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoVolume>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoVolume(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoVolume(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoBBox> : std::false_type { };
  template<> struct DefaultConstructible<TGeoBBox> : std::false_type { };
template<> struct SuperType<TGeoBBox> { typedef TGeoShape type; };
}

// Class generating the wrapper for type TGeoBBox
// signature to use in the veto file: TGeoBBox
struct JlTGeoBBox: public Wrapper {

  JlTGeoBBox(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoBBox (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:17:7
    jlcxx::TypeWrapper<TGeoBBox>  t = jlModule.add_type<TGeoBBox>("TGeoBBox",
      jlcxx::julia_base_type<TGeoShape>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoBBox>>(new jlcxx::TypeWrapper<TGeoBBox>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoBBox::TGeoBBox(Double_t, Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:33:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz")    );
    t.constructor<Double_t, Double_t, Double_t, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin")    );


    DEBUG_MSG("Adding wrapper for void TGeoBBox::TGeoBBox(const char *, Double_t, Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:34:4
    t.constructor<const char *, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz")    );
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin")    );


    DEBUG_MSG("Adding wrapper for void TGeoBBox::TGeoBBox(Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:35:4
    t.constructor<Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("param")    );

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::AreOverlapping(const TGeoBBox *, const TGeoMatrix *, const TGeoBBox *, const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::AreOverlapping(const TGeoBBox *, const TGeoMatrix *, const TGeoBBox *, const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:40:4
    module_.method("TGeoBBox!AreOverlapping", [](const TGeoBBox * arg0, const TGeoMatrix * arg1, const TGeoBBox * arg2, const TGeoMatrix * arg3)->Bool_t { return TGeoBBox::AreOverlapping(arg0, arg1, arg2, arg3); }, jlcxx::arg("box1"), jlcxx::arg("mat1"), jlcxx::arg("box2"), jlcxx::arg("mat2"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:43:13
    t.method("Capacity", [](TGeoBBox const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoBBox const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:44:9
    t.method("ComputeBBox", [](TGeoBBox& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoBBox* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:45:9
    t.method("ComputeNormal", [](TGeoBBox& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoBBox* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:46:9
    t.method("ComputeNormal_v", [](TGeoBBox& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoBBox* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:47:11
    t.method("Contains", [](TGeoBBox const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoBBox const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:48:9
    t.method("Contains_v", [](TGeoBBox const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoBBox const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::Contains(const Double_t *, Double_t, Double_t, Double_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::Contains(const Double_t *, Double_t, Double_t, Double_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:49:18
    module_.method("TGeoBBox!Contains", [](const Double_t * arg0, Double_t arg1, Double_t arg2, Double_t arg3, const Double_t * arg4)->Bool_t { return TGeoBBox::Contains(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("point"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::CouldBeCrossed(const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::CouldBeCrossed(const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:50:11
    t.method("CouldBeCrossed", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1)->Bool_t { return a.CouldBeCrossed(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("CouldBeCrossed", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1)->Bool_t { return a->CouldBeCrossed(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBBox::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBBox::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:51:10
    t.method("DistancetoPrimitive", [](TGeoBBox& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TGeoBBox* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:52:13
    t.method("DistFromInside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:54:9
    t.method("DistFromInside_v", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::DistFromInside(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::DistFromInside(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:56:20
    module_.method("TGeoBBox!DistFromInside", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, const Double_t * arg5)->Double_t { return TGeoBBox::DistFromInside(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"));
    module_.method("TGeoBBox!DistFromInside", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, const Double_t * arg5, Double_t arg6)->Double_t { return TGeoBBox::DistFromInside(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"), jlcxx::arg("stepmax"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:58:13
    t.method("DistFromOutside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:60:9
    t.method("DistFromOutside_v", [](TGeoBBox const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoBBox const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::DistFromOutside(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, const Double_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::DistFromOutside(const Double_t *, const Double_t *, Double_t, Double_t, Double_t, const Double_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:62:20
    module_.method("TGeoBBox!DistFromOutside", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, const Double_t * arg5)->Double_t { return TGeoBBox::DistFromOutside(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"));
    module_.method("TGeoBBox!DistFromOutside", [](const Double_t * arg0, const Double_t * arg1, Double_t arg2, Double_t arg3, Double_t arg4, const Double_t * arg5, Double_t arg6)->Double_t { return TGeoBBox::DistFromOutside(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"), jlcxx::arg("stepmax"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoBBox::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoBBox::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:65:4
    t.method("Divide", [](TGeoBBox& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoBBox* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for const char * TGeoBBox::GetAxisName(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBBox::GetAxisName(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:66:16
    t.method("GetAxisName", [](TGeoBBox const& a, Int_t arg0) { return (std::string)a.GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));
    t.method("GetAxisName", [](TGeoBBox const* a, Int_t arg0) { return (std::string)a->GetAxisName(arg0); }, jlcxx::arg("this"), jlcxx::arg("iaxis"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:67:13
    t.method("GetAxisRange", [](TGeoBBox const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoBBox const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:68:9
    t.method("GetBoundingCylinder", [](TGeoBBox const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoBBox const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBBox::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBBox::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:70:10
    t.method("GetByteCount", [](TGeoBBox const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoBBox const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::GetFacetArea(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::GetFacetArea(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:71:21
    t.method("GetFacetArea", [](TGeoBBox const& a)->Double_t { return a.GetFacetArea(); }, jlcxx::arg("this"));
    t.method("GetFacetArea", [](TGeoBBox const& a, Int_t arg0)->Double_t { return a.GetFacetArea(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("GetFacetArea", [](TGeoBBox const* a)->Double_t { return a->GetFacetArea(); }, jlcxx::arg("this"));
    t.method("GetFacetArea", [](TGeoBBox const* a, Int_t arg0)->Double_t { return a->GetFacetArea(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::GetPointsOnFacet(Int_t, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::GetPointsOnFacet(Int_t, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:72:19
    t.method("GetPointsOnFacet", [](TGeoBBox const& a, Int_t arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a.GetPointsOnFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("index"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnFacet", [](TGeoBBox const* a, Int_t arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a->GetPointsOnFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("index"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::GetPointsOnSegments(Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::GetPointsOnSegments(Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:73:11
    t.method("GetPointsOnSegments", [](TGeoBBox const& a, Int_t arg0, Double_t * arg1)->Bool_t { return a.GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));
    t.method("GetPointsOnSegments", [](TGeoBBox const* a, Int_t arg0, Double_t * arg1)->Bool_t { return a->GetPointsOnSegments(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("npoints"), jlcxx::arg("array"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBBox::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBBox::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:75:4
    t.method("GetFittingBox", [](TGeoBBox const& a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("GetFittingBox", [](TGeoBBox const* a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoBBox::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoBBox::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:76:15
    t.method("GetMakeRuntimeShape", [](TGeoBBox const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoBBox const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::GetMeshNumbers(Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::GetMeshNumbers(Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:77:9
    t.method("GetMeshNumbers", [](TGeoBBox const& a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a.GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));
    t.method("GetMeshNumbers", [](TGeoBBox const* a, Int_t & arg0, Int_t & arg1, Int_t & arg2)->void { a->GetMeshNumbers(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nvert"), jlcxx::arg("nsegs"), jlcxx::arg("npols"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoBBox::GetNmeshVertices() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoBBox::GetNmeshVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:78:10
    t.method("GetNmeshVertices", [](TGeoBBox const& a)->Int_t { return a.GetNmeshVertices(); }, jlcxx::arg("this"));
    t.method("GetNmeshVertices", [](TGeoBBox const* a)->Int_t { return a->GetNmeshVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::GetDX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::GetDX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:79:21
    t.method("GetDX", [](TGeoBBox const& a)->Double_t { return a.GetDX(); }, jlcxx::arg("this"));
    t.method("GetDX", [](TGeoBBox const* a)->Double_t { return a->GetDX(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::GetDY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::GetDY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:80:21
    t.method("GetDY", [](TGeoBBox const& a)->Double_t { return a.GetDY(); }, jlcxx::arg("this"));
    t.method("GetDY", [](TGeoBBox const* a)->Double_t { return a->GetDY(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::GetDZ() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::GetDZ()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:81:21
    t.method("GetDZ", [](TGeoBBox const& a)->Double_t { return a.GetDZ(); }, jlcxx::arg("this"));
    t.method("GetDZ", [](TGeoBBox const* a)->Double_t { return a->GetDZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const Double_t * TGeoBBox::GetOrigin() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TGeoBBox::GetOrigin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:82:28
    t.method("GetOrigin", [](TGeoBBox const& a)->const Double_t * { return a.GetOrigin(); }, jlcxx::arg("this"));
    t.method("GetOrigin", [](TGeoBBox const* a)->const Double_t * { return a->GetOrigin(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:83:9
    t.method("InspectShape", [](TGeoBBox const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoBBox const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:84:11
    t.method("IsCylType", [](TGeoBBox const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoBBox const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::IsValidBox() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::IsValidBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:85:11
    t.method("IsValidBox", [](TGeoBBox const& a)->Bool_t { return a.IsValidBox(); }, jlcxx::arg("this"));
    t.method("IsValidBox", [](TGeoBBox const* a)->Bool_t { return a->IsValidBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoBBox::IsNullBox() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoBBox::IsNullBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:86:19
    t.method("IsNullBox", [](TGeoBBox const& a)->Bool_t { return a.IsNullBox(); }, jlcxx::arg("this"));
    t.method("IsNullBox", [](TGeoBBox const* a)->Bool_t { return a->IsNullBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoBBox::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoBBox::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:88:13
    t.method("Safety", [](TGeoBBox const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoBBox const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoBBox const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoBBox const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:89:9
    t.method("Safety_v", [](TGeoBBox const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoBBox const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::SetBoxDimensions(Double_t, Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::SetBoxDimensions(Double_t, Double_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:91:9
    t.method("SetBoxDimensions", [](TGeoBBox& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetBoxDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("SetBoxDimensions", [](TGeoBBox& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t * arg3)->void { a.SetBoxDimensions(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"));
    t.method("SetBoxDimensions", [](TGeoBBox* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetBoxDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("SetBoxDimensions", [](TGeoBBox* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t * arg3)->void { a->SetBoxDimensions(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"), jlcxx::arg("origin"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:92:9
    t.method("SetDimensions", [](TGeoBBox& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoBBox* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::SetBoxPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::SetBoxPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:93:9
    t.method("SetBoxPoints", [](TGeoBBox const& a, Double_t * arg0)->void { a.SetBoxPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetBoxPoints", [](TGeoBBox const* a, Double_t * arg0)->void { a->SetBoxPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:94:9
    t.method("SetPoints", [](TGeoBBox const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoBBox const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:95:9
    t.method("SetPoints", [](TGeoBBox const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoBBox const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoBBox.h:97:9
    t.method("Sizeof3D", [](TGeoBBox const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoBBox const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoBBox::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoBBox::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoBBox!Class_Version", []()->Version_t { return TGeoBBox::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBBox::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBBox::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoBBox const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoBBox const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoBBox::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoBBox& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoBBox* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoBBox::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBBox::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoBBox!DeclFileName", []() { return (std::string)TGeoBBox::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoBBox::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBBox::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoBBox!ImplFileLine", []()->int { return TGeoBBox::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBBox::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBBox::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoBBox!ImplFileName", []() { return (std::string)TGeoBBox::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoBBox::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoBBox::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoBBox!Class_Name", []() { return (std::string)TGeoBBox::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBBox::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBBox::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoBBox!Dictionary", []()->TClass * { return TGeoBBox::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoBBox::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoBBox::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoBBox!Class", []()->TClass * { return TGeoBBox::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoBBox::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoBBox::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoBBox& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoBBox* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoBBox::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoBBox::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoBBox!DeclFileLine", []()->int { return TGeoBBox::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoBBox>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoBBox(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoBBox(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoArb8> : std::false_type { };
  template<> struct DefaultConstructible<TGeoArb8> : std::false_type { };
template<> struct SuperType<TGeoArb8> { typedef TGeoBBox type; };
}

// Class generating the wrapper for type TGeoArb8
// signature to use in the veto file: TGeoArb8
struct JlTGeoArb8: public Wrapper {

  JlTGeoArb8(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoArb8 (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:17:7
    jlcxx::TypeWrapper<TGeoArb8>  t = jlModule.add_type<TGeoArb8>("TGeoArb8",
      jlcxx::julia_base_type<TGeoBBox>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoArb8>>(new jlcxx::TypeWrapper<TGeoArb8>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoArb8::TGeoArb8(Double_t, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:38:4
    t.constructor<Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz")    );
    t.constructor<Double_t, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("vertices")    );


    DEBUG_MSG("Adding wrapper for void TGeoArb8::TGeoArb8(const char *, Double_t, Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:39:4
    t.constructor<const char *, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dz")    );
    t.constructor<const char *, Double_t, Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dz"), jlcxx::arg("vertices")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::Capacity()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:43:13
    t.method("Capacity", [](TGeoArb8 const& a)->Double_t { return a.Capacity(); }, jlcxx::arg("this"));
    t.method("Capacity", [](TGeoArb8 const* a)->Double_t { return a->Capacity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::ComputeBBox() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::ComputeBBox()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:44:9
    t.method("ComputeBBox", [](TGeoArb8& a)->void { a.ComputeBBox(); }, jlcxx::arg("this"));
    t.method("ComputeBBox", [](TGeoArb8* a)->void { a->ComputeBBox(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::ComputeNormal(const Double_t *, const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::ComputeNormal(const Double_t *, const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:45:9
    t.method("ComputeNormal", [](TGeoArb8& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a.ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));
    t.method("ComputeNormal", [](TGeoArb8* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2)->void { a->ComputeNormal(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:46:9
    t.method("ComputeNormal_v", [](TGeoArb8& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a.ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));
    t.method("ComputeNormal_v", [](TGeoArb8* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3)->void { a->ComputeNormal_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("norms"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::ComputeTwist() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::ComputeTwist()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:47:9
    t.method("ComputeTwist", [](TGeoArb8& a)->void { a.ComputeTwist(); }, jlcxx::arg("this"));
    t.method("ComputeTwist", [](TGeoArb8* a)->void { a->ComputeTwist(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::Contains(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::Contains(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:48:11
    t.method("Contains", [](TGeoArb8 const& a, const Double_t * arg0)->Bool_t { return a.Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Contains", [](TGeoArb8 const* a, const Double_t * arg0)->Bool_t { return a->Contains(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::Contains_v(const Double_t *, Bool_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::Contains_v(const Double_t *, Bool_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:49:9
    t.method("Contains_v", [](TGeoArb8 const& a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a.Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));
    t.method("Contains_v", [](TGeoArb8 const* a, const Double_t * arg0, Bool_t * arg1, Int_t arg2)->void { a->Contains_v(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::DistToPlane(const Double_t *, const Double_t *, Int_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::DistToPlane(const Double_t *, const Double_t *, Int_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:50:13
    t.method("DistToPlane", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Bool_t arg3)->Double_t { return a.DistToPlane(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("ipl"), jlcxx::arg("in"));
    t.method("DistToPlane", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Bool_t arg3)->Double_t { return a->DistToPlane(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("ipl"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:51:13
    t.method("DistFromInside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:53:9
    t.method("DistFromInside_v", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:55:13
    t.method("DistFromOutside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:57:9
    t.method("DistFromOutside_v", [](TGeoArb8 const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoArb8 const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoArb8::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoArb8::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:60:4
    t.method("Divide", [](TGeoArb8& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoArb8* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::GetAxisRange(Int_t, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::GetAxisRange(Int_t, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:61:13
    t.method("GetAxisRange", [](TGeoArb8 const& a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a.GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));
    t.method("GetAxisRange", [](TGeoArb8 const* a, Int_t arg0, Double_t & arg1, Double_t & arg2)->Double_t { return a->GetAxisRange(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("iaxis"), jlcxx::arg("xlo"), jlcxx::arg("xhi"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::GetBoundingCylinder(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::GetBoundingCylinder(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:62:9
    t.method("GetBoundingCylinder", [](TGeoArb8 const& a, Double_t * arg0)->void { a.GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("GetBoundingCylinder", [](TGeoArb8 const* a, Double_t * arg0)->void { a->GetBoundingCylinder(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoArb8::GetByteCount() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoArb8::GetByteCount()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:63:10
    t.method("GetByteCount", [](TGeoArb8 const& a)->Int_t { return a.GetByteCount(); }, jlcxx::arg("this"));
    t.method("GetByteCount", [](TGeoArb8 const* a)->Int_t { return a->GetByteCount(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::GetClosestEdge(const Double_t *, Double_t *, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::GetClosestEdge(const Double_t *, Double_t *, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:64:13
    t.method("GetClosestEdge", [](TGeoArb8 const& a, const Double_t * arg0, Double_t * arg1, Int_t & arg2)->Double_t { return a.GetClosestEdge(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vert"), jlcxx::arg("isegment"));
    t.method("GetClosestEdge", [](TGeoArb8 const* a, const Double_t * arg0, Double_t * arg1, Int_t & arg2)->Double_t { return a->GetClosestEdge(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("vert"), jlcxx::arg("isegment"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:65:11
    t.method("GetPointsOnFacet", [](TGeoArb8 const& a, Int_t arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a.GetPointsOnFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"), jlcxx::arg("arg2"));
    t.method("GetPointsOnFacet", [](TGeoArb8 const* a, Int_t arg0, Int_t arg1, Double_t * arg2)->Bool_t { return a->GetPointsOnFacet(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"), jlcxx::arg("arg2"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::GetDz() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::GetDz()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:66:13
    t.method("GetDz", [](TGeoArb8 const& a)->Double_t { return a.GetDz(); }, jlcxx::arg("this"));
    t.method("GetDz", [](TGeoArb8 const* a)->Double_t { return a->GetDz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGeoArb8::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoArb8::GetFittingBox(const TGeoBBox *, TGeoMatrix *, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:68:4
    t.method("GetFittingBox", [](TGeoArb8 const& a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));
    t.method("GetFittingBox", [](TGeoArb8 const* a, const TGeoBBox * arg0, TGeoMatrix * arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetFittingBox(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("parambox"), jlcxx::arg("mat"), jlcxx::arg("dx"), jlcxx::arg("dy"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoArb8::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoArb8::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:69:15
    t.method("GetMakeRuntimeShape", [](TGeoArb8 const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("GetMakeRuntimeShape", [](TGeoArb8 const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::GetPlaneNormal(Double_t *, Double_t *, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::GetPlaneNormal(Double_t *, Double_t *, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:70:16
    module_.method("TGeoArb8!GetPlaneNormal", [](Double_t * arg0, Double_t * arg1, Double_t * arg2, Double_t * arg3)->void { TGeoArb8::GetPlaneNormal(arg0, arg1, arg2, arg3); }, jlcxx::arg("p1"), jlcxx::arg("p2"), jlcxx::arg("p3"), jlcxx::arg("norm"));

    DEBUG_MSG("Adding wrapper for Double_t * TGeoArb8::GetVertices() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGeoArb8::GetVertices()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:71:14
    t.method("GetVertices", [](TGeoArb8& a)->Double_t * { return a.GetVertices(); }, jlcxx::arg("this"));
    t.method("GetVertices", [](TGeoArb8* a)->Double_t * { return a->GetVertices(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::GetTwist(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::GetTwist(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:72:13
    t.method("GetTwist", [](TGeoArb8 const& a, Int_t arg0)->Double_t { return a.GetTwist(arg0); }, jlcxx::arg("this"), jlcxx::arg("iseg"));
    t.method("GetTwist", [](TGeoArb8 const* a, Int_t arg0)->Double_t { return a->GetTwist(arg0); }, jlcxx::arg("this"), jlcxx::arg("iseg"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::IsCylType() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::IsCylType()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:73:11
    t.method("IsCylType", [](TGeoArb8 const& a)->Bool_t { return a.IsCylType(); }, jlcxx::arg("this"));
    t.method("IsCylType", [](TGeoArb8 const* a)->Bool_t { return a->IsCylType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::IsSamePoint(const Double_t *, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::IsSamePoint(const Double_t *, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:74:18
    module_.method("TGeoArb8!IsSamePoint", [](const Double_t * arg0, const Double_t * arg1)->Bool_t { return TGeoArb8::IsSamePoint(arg0, arg1); }, jlcxx::arg("p1"), jlcxx::arg("p2"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::InsidePolygon(Double_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::InsidePolygon(Double_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:78:18
    module_.method("TGeoArb8!InsidePolygon", [](Double_t arg0, Double_t arg1, Double_t * arg2)->Bool_t { return TGeoArb8::InsidePolygon(arg0, arg1, arg2); }, jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("pts"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::InspectShape() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::InspectShape()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:79:9
    t.method("InspectShape", [](TGeoArb8 const& a)->void { a.InspectShape(); }, jlcxx::arg("this"));
    t.method("InspectShape", [](TGeoArb8 const* a)->void { a->InspectShape(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TGeoArb8::IsTwisted() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoArb8::IsTwisted()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:80:11
    t.method("IsTwisted", [](TGeoArb8 const& a)->Bool_t { return a.IsTwisted(); }, jlcxx::arg("this"));
    t.method("IsTwisted", [](TGeoArb8 const* a)->Bool_t { return a->IsTwisted(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::SafetyToFace(const Double_t *, Int_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::SafetyToFace(const Double_t *, Int_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:81:13
    t.method("SafetyToFace", [](TGeoArb8 const& a, const Double_t * arg0, Int_t arg1, Bool_t arg2)->Double_t { return a.SafetyToFace(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("iseg"), jlcxx::arg("in"));
    t.method("SafetyToFace", [](TGeoArb8 const* a, const Double_t * arg0, Int_t arg1, Bool_t arg2)->Double_t { return a->SafetyToFace(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("iseg"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoArb8::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoArb8::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:82:13
    t.method("Safety", [](TGeoArb8 const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoArb8 const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoArb8 const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoArb8 const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:83:9
    t.method("Safety_v", [](TGeoArb8 const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoArb8 const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetPlaneVertices(Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetPlaneVertices(Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:85:9
    t.method("SetPlaneVertices", [](TGeoArb8 const& a, Double_t arg0, Double_t * arg1)->void { a.SetPlaneVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("zpl"), jlcxx::arg("vertices"));
    t.method("SetPlaneVertices", [](TGeoArb8 const* a, Double_t arg0, Double_t * arg1)->void { a->SetPlaneVertices(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("zpl"), jlcxx::arg("vertices"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetVertex(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetVertex(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:86:17
    t.method("SetVertex", [](TGeoArb8& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.SetVertex(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vnum"), jlcxx::arg("x"), jlcxx::arg("y"));
    t.method("SetVertex", [](TGeoArb8* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->SetVertex(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("vnum"), jlcxx::arg("x"), jlcxx::arg("y"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:87:9
    t.method("SetDimensions", [](TGeoArb8& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoArb8* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetDz(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetDz(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:88:9
    t.method("SetDz", [](TGeoArb8& a, Double_t arg0)->void { a.SetDz(arg0); }, jlcxx::arg("this"), jlcxx::arg("dz"));
    t.method("SetDz", [](TGeoArb8* a, Double_t arg0)->void { a->SetDz(arg0); }, jlcxx::arg("this"), jlcxx::arg("dz"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetPoints(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetPoints(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:89:9
    t.method("SetPoints", [](TGeoArb8 const& a, Double_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoArb8 const* a, Double_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::SetPoints(Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::SetPoints(Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:90:9
    t.method("SetPoints", [](TGeoArb8 const& a, Float_t * arg0)->void { a.SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));
    t.method("SetPoints", [](TGeoArb8 const* a, Float_t * arg0)->void { a->SetPoints(arg0); }, jlcxx::arg("this"), jlcxx::arg("points"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::Sizeof3D() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::Sizeof3D()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:91:9
    t.method("Sizeof3D", [](TGeoArb8 const& a)->void { a.Sizeof3D(); }, jlcxx::arg("this"));
    t.method("Sizeof3D", [](TGeoArb8 const* a)->void { a->Sizeof3D(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoArb8::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoArb8::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoArb8!Class_Version", []()->Version_t { return TGeoArb8::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoArb8::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoArb8::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoArb8 const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoArb8 const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoArb8::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoArb8& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoArb8* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoArb8::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoArb8::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoArb8!DeclFileName", []() { return (std::string)TGeoArb8::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoArb8::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoArb8::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoArb8!ImplFileLine", []()->int { return TGeoArb8::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoArb8::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoArb8::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoArb8!ImplFileName", []() { return (std::string)TGeoArb8::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoArb8::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoArb8::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoArb8!Class_Name", []() { return (std::string)TGeoArb8::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoArb8::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoArb8::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoArb8!Dictionary", []()->TClass * { return TGeoArb8::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoArb8::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoArb8::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoArb8!Class", []()->TClass * { return TGeoArb8::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoArb8::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoArb8::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoArb8& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoArb8* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoArb8::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoArb8::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoArb8!DeclFileLine", []()->int { return TGeoArb8::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoArb8>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoArb8(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoArb8(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoTrap> : std::false_type { };
  template<> struct DefaultConstructible<TGeoTrap> : std::false_type { };
template<> struct SuperType<TGeoTrap> { typedef TGeoArb8 type; };
}

// Class generating the wrapper for type TGeoTrap
// signature to use in the veto file: TGeoTrap
struct JlTGeoTrap: public Wrapper {

  JlTGeoTrap(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoTrap (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:96:7
    jlcxx::TypeWrapper<TGeoTrap>  t = jlModule.add_type<TGeoTrap>("TGeoTrap",
      jlcxx::julia_base_type<TGeoArb8>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoTrap>>(new jlcxx::TypeWrapper<TGeoTrap>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGeoTrap::TGeoTrap(Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:113:4
    t.constructor<Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrap::TGeoTrap(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:114:4
    t.constructor<Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2")    );


    DEBUG_MSG("Adding wrapper for void TGeoTrap::TGeoTrap(const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:116:4
    t.constructor<const char *, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("dz"), jlcxx::arg("theta"), jlcxx::arg("phi"), jlcxx::arg("h1"), jlcxx::arg("bl1"), jlcxx::arg("tl1"), jlcxx::arg("alpha1"), jlcxx::arg("h2"), jlcxx::arg("bl2"), jlcxx::arg("tl2"), jlcxx::arg("alpha2")    );

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::DistFromInside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:120:13
    t.method("DistFromInside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromInside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromInside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromInside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromInside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromInside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromInside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromInside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrap::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::DistFromInside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:122:9
    t.method("DistFromInside_v", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromInside_v", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromInside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::DistFromOutside(const Double_t *, const Double_t *, Int_t, Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:124:13
    t.method("DistFromOutside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a.DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a.DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a.DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));
    t.method("DistFromOutside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1)->Double_t { return a->DistFromOutside(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"));
    t.method("DistFromOutside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2)->Double_t { return a->DistFromOutside(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"));
    t.method("DistFromOutside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"));
    t.method("DistFromOutside", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Int_t arg2, Double_t arg3, Double_t * arg4)->Double_t { return a->DistFromOutside(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("dir"), jlcxx::arg("iact"), jlcxx::arg("step"), jlcxx::arg("safe"));

    DEBUG_MSG("Adding wrapper for void TGeoTrap::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::DistFromOutside_v(const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:126:9
    t.method("DistFromOutside_v", [](TGeoTrap const& a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a.DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));
    t.method("DistFromOutside_v", [](TGeoTrap const* a, const Double_t * arg0, const Double_t * arg1, Double_t * arg2, Int_t arg3, Double_t * arg4)->void { a->DistFromOutside_v(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("dirs"), jlcxx::arg("dists"), jlcxx::arg("vecsize"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoTrap::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoTrap::Divide(TGeoVolume *, const char *, Int_t, Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:129:4
    t.method("Divide", [](TGeoTrap& a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a.Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));
    t.method("Divide", [](TGeoTrap* a, TGeoVolume * arg0, const char * arg1, Int_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TGeoVolume * { return a->Divide(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("voldiv"), jlcxx::arg("divname"), jlcxx::arg("iaxis"), jlcxx::arg("ndiv"), jlcxx::arg("start"), jlcxx::arg("step"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetTheta() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetTheta()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:130:13
    t.method("GetTheta", [](TGeoTrap const& a)->Double_t { return a.GetTheta(); }, jlcxx::arg("this"));
    t.method("GetTheta", [](TGeoTrap const* a)->Double_t { return a->GetTheta(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetPhi() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetPhi()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:131:13
    t.method("GetPhi", [](TGeoTrap const& a)->Double_t { return a.GetPhi(); }, jlcxx::arg("this"));
    t.method("GetPhi", [](TGeoTrap const* a)->Double_t { return a->GetPhi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetH1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetH1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:132:13
    t.method("GetH1", [](TGeoTrap const& a)->Double_t { return a.GetH1(); }, jlcxx::arg("this"));
    t.method("GetH1", [](TGeoTrap const* a)->Double_t { return a->GetH1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetBl1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetBl1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:133:13
    t.method("GetBl1", [](TGeoTrap const& a)->Double_t { return a.GetBl1(); }, jlcxx::arg("this"));
    t.method("GetBl1", [](TGeoTrap const* a)->Double_t { return a->GetBl1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetTl1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetTl1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:134:13
    t.method("GetTl1", [](TGeoTrap const& a)->Double_t { return a.GetTl1(); }, jlcxx::arg("this"));
    t.method("GetTl1", [](TGeoTrap const* a)->Double_t { return a->GetTl1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetAlpha1() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetAlpha1()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:135:13
    t.method("GetAlpha1", [](TGeoTrap const& a)->Double_t { return a.GetAlpha1(); }, jlcxx::arg("this"));
    t.method("GetAlpha1", [](TGeoTrap const* a)->Double_t { return a->GetAlpha1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetH2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetH2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:136:13
    t.method("GetH2", [](TGeoTrap const& a)->Double_t { return a.GetH2(); }, jlcxx::arg("this"));
    t.method("GetH2", [](TGeoTrap const* a)->Double_t { return a->GetH2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetBl2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetBl2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:137:13
    t.method("GetBl2", [](TGeoTrap const& a)->Double_t { return a.GetBl2(); }, jlcxx::arg("this"));
    t.method("GetBl2", [](TGeoTrap const* a)->Double_t { return a->GetBl2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetTl2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetTl2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:138:13
    t.method("GetTl2", [](TGeoTrap const& a)->Double_t { return a.GetTl2(); }, jlcxx::arg("this"));
    t.method("GetTl2", [](TGeoTrap const* a)->Double_t { return a->GetTl2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::GetAlpha2() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::GetAlpha2()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:139:13
    t.method("GetAlpha2", [](TGeoTrap const& a)->Double_t { return a.GetAlpha2(); }, jlcxx::arg("this"));
    t.method("GetAlpha2", [](TGeoTrap const* a)->Double_t { return a->GetAlpha2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoTrap::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoTrap::GetMakeRuntimeShape(TGeoShape *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:140:15
    t.method("GetMakeRuntimeShape", [](TGeoTrap const& a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a.GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));
    t.method("GetMakeRuntimeShape", [](TGeoTrap const* a, TGeoShape * arg0, TGeoMatrix * arg1)->TGeoShape * { return a->GetMakeRuntimeShape(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("mat"));

    DEBUG_MSG("Adding wrapper for void TGeoTrap::SetDimensions(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::SetDimensions(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:141:9
    t.method("SetDimensions", [](TGeoTrap& a, Double_t * arg0)->void { a.SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));
    t.method("SetDimensions", [](TGeoTrap* a, Double_t * arg0)->void { a->SetDimensions(arg0); }, jlcxx::arg("this"), jlcxx::arg("param"));

    DEBUG_MSG("Adding wrapper for Double_t TGeoTrap::Safety(const Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoTrap::Safety(const Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:142:13
    t.method("Safety", [](TGeoTrap const& a, const Double_t * arg0)->Double_t { return a.Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrap const& a, const Double_t * arg0, Bool_t arg1)->Double_t { return a.Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));
    t.method("Safety", [](TGeoTrap const* a, const Double_t * arg0)->Double_t { return a->Safety(arg0); }, jlcxx::arg("this"), jlcxx::arg("point"));
    t.method("Safety", [](TGeoTrap const* a, const Double_t * arg0, Bool_t arg1)->Double_t { return a->Safety(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("point"), jlcxx::arg("in"));

    DEBUG_MSG("Adding wrapper for void TGeoTrap::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::Safety_v(const Double_t *, const Bool_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGeoArb8.h:143:9
    t.method("Safety_v", [](TGeoTrap const& a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a.Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));
    t.method("Safety_v", [](TGeoTrap const* a, const Double_t * arg0, const Bool_t * arg1, Double_t * arg2, Int_t arg3)->void { a->Safety_v(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("points"), jlcxx::arg("inside"), jlcxx::arg("safe"), jlcxx::arg("vecsize"));

    DEBUG_MSG("Adding wrapper for Version_t TGeoTrap::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoTrap::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGeoTrap!Class_Version", []()->Version_t { return TGeoTrap::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrap::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrap::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGeoTrap const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGeoTrap const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGeoTrap::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGeoTrap& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGeoTrap* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGeoTrap::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrap::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGeoTrap!DeclFileName", []() { return (std::string)TGeoTrap::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoTrap::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrap::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGeoTrap!ImplFileLine", []()->int { return TGeoTrap::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrap::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrap::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGeoTrap!ImplFileName", []() { return (std::string)TGeoTrap::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoTrap::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoTrap::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGeoTrap!Class_Name", []() { return (std::string)TGeoTrap::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrap::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrap::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGeoTrap!Dictionary", []()->TClass * { return TGeoTrap::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoTrap::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoTrap::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGeoTrap!Class", []()->TClass * { return TGeoTrap::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoTrap::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoTrap::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGeoTrap& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGeoTrap* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGeoTrap::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoTrap::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGeoTrap!DeclFileLine", []()->int { return TGeoTrap::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoTrap>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoTrap(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoTrap(module));
}
