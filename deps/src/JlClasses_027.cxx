// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualHistPainter> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualHistPainter> : std::false_type { };
template<> struct SuperType<TVirtualHistPainter> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualHistPainter
// signature to use in the veto file: TVirtualHistPainter
struct JlTVirtualHistPainter: public Wrapper {

  JlTVirtualHistPainter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualHistPainter (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:30:7
    jlcxx::TypeWrapper<TVirtualHistPainter>  t = jlModule.add_type<TVirtualHistPainter>("TVirtualHistPainter",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualHistPainter>>(new jlcxx::TypeWrapper<TVirtualHistPainter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for Int_t TVirtualHistPainter::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualHistPainter::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:38:15
    t.method("DistancetoPrimitive", static_cast<Int_t (TVirtualHistPainter::*)(Int_t, Int_t) >(&TVirtualHistPainter::DistancetoPrimitive));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::DrawPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::DrawPanel()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:39:23
    t.method("DrawPanel", static_cast<void (TVirtualHistPainter::*)() >(&TVirtualHistPainter::DrawPanel));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:40:15
    t.method("ExecuteEvent", static_cast<void (TVirtualHistPainter::*)(Int_t, Int_t, Int_t) >(&TVirtualHistPainter::ExecuteEvent));

    DEBUG_MSG("Adding wrapper for TList * TVirtualHistPainter::GetContourList(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: TList * TVirtualHistPainter::GetContourList(Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:41:23
    t.method("GetContourList", static_cast<TList * (TVirtualHistPainter::*)(Double_t)  const>(&TVirtualHistPainter::GetContourList));

    DEBUG_MSG("Adding wrapper for char * TVirtualHistPainter::GetObjectInfo(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: char * TVirtualHistPainter::GetObjectInfo(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:42:15
    t.method("GetObjectInfo", static_cast<char * (TVirtualHistPainter::*)(Int_t, Int_t)  const>(&TVirtualHistPainter::GetObjectInfo));

    DEBUG_MSG("Adding wrapper for TList * TVirtualHistPainter::GetStack() (" __HERE__ ")");
    // signature to use in the veto list: TList * TVirtualHistPainter::GetStack()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:43:23
    t.method("GetStack", static_cast<TList * (TVirtualHistPainter::*)()  const>(&TVirtualHistPainter::GetStack));

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualHistPainter::IsInside(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualHistPainter::IsInside(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:44:23
    t.method("IsInside", static_cast<Bool_t (TVirtualHistPainter::*)(Int_t, Int_t) >(&TVirtualHistPainter::IsInside));

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualHistPainter::IsInside(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualHistPainter::IsInside(Double_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:45:23
    t.method("IsInside", static_cast<Bool_t (TVirtualHistPainter::*)(Double_t, Double_t) >(&TVirtualHistPainter::IsInside));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::Paint(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:46:15
    t.method("Paint", static_cast<void (TVirtualHistPainter::*)(Option_t *) >(&TVirtualHistPainter::Paint));
    t.method("Paint", [](TVirtualHistPainter& a)->void { a.Paint(); });
    t.method("Paint", [](TVirtualHistPainter* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::PaintStat(Int_t, TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::PaintStat(Int_t, TF1 *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:47:23
    t.method("PaintStat", static_cast<void (TVirtualHistPainter::*)(Int_t, TF1 *) >(&TVirtualHistPainter::PaintStat));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::ProcessMessage(const char *, const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::ProcessMessage(const char *, const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:48:23
    t.method("ProcessMessage", static_cast<void (TVirtualHistPainter::*)(const char *, const TObject *) >(&TVirtualHistPainter::ProcessMessage));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetHighlight() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetHighlight()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:49:23
    t.method("SetHighlight", static_cast<void (TVirtualHistPainter::*)() >(&TVirtualHistPainter::SetHighlight));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetHistogram(TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetHistogram(TH1 *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:50:23
    t.method("SetHistogram", static_cast<void (TVirtualHistPainter::*)(TH1 *) >(&TVirtualHistPainter::SetHistogram));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetStack(TList *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetStack(TList *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:51:23
    t.method("SetStack", static_cast<void (TVirtualHistPainter::*)(TList *) >(&TVirtualHistPainter::SetStack));

    DEBUG_MSG("Adding wrapper for Int_t TVirtualHistPainter::MakeCuts(char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualHistPainter::MakeCuts(char *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:52:23
    t.method("MakeCuts", static_cast<Int_t (TVirtualHistPainter::*)(char *) >(&TVirtualHistPainter::MakeCuts));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetShowProjection(const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetShowProjection(const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:53:23
    t.method("SetShowProjection", static_cast<void (TVirtualHistPainter::*)(const char *, Int_t) >(&TVirtualHistPainter::SetShowProjection));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetShowProjectionXY(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetShowProjectionXY(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:54:23
    t.method("SetShowProjectionXY", static_cast<void (TVirtualHistPainter::*)(const char *, Int_t, Int_t) >(&TVirtualHistPainter::SetShowProjectionXY));

    DEBUG_MSG("Adding wrapper for TVirtualHistPainter * TVirtualHistPainter::HistPainter(TH1 *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualHistPainter * TVirtualHistPainter::HistPainter(TH1 *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:56:32
    module_.method("TVirtualHistPainter!HistPainter", static_cast<TVirtualHistPainter * (*)(TH1 *) >(&TVirtualHistPainter::HistPainter));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::SetPainter(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::SetPainter(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:57:32
    module_.method("TVirtualHistPainter!SetPainter", static_cast<void (*)(const char *) >(&TVirtualHistPainter::SetPainter));

    DEBUG_MSG("Adding wrapper for Version_t TVirtualHistPainter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TVirtualHistPainter::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!Class_Version", static_cast<Version_t (*)() >(&TVirtualHistPainter::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TVirtualHistPainter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualHistPainter::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    t.method("IsA", static_cast<TClass * (TVirtualHistPainter::*)()  const>(&TVirtualHistPainter::IsA));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    t.method("StreamerNVirtual", static_cast<void (TVirtualHistPainter::*)(TBuffer &) >(&TVirtualHistPainter::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TVirtualHistPainter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualHistPainter::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!DeclFileName", []() { return (std::string)TVirtualHistPainter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TVirtualHistPainter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualHistPainter::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!ImplFileLine", static_cast<int (*)() >(&TVirtualHistPainter::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TVirtualHistPainter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualHistPainter::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!ImplFileName", []() { return (std::string)TVirtualHistPainter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualHistPainter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualHistPainter::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!Class_Name", []() { return (std::string)TVirtualHistPainter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualHistPainter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualHistPainter::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!Dictionary", static_cast<TClass * (*)() >(&TVirtualHistPainter::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TVirtualHistPainter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualHistPainter::Class()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!Class", static_cast<TClass * (*)() >(&TVirtualHistPainter::Class));

    DEBUG_MSG("Adding wrapper for void TVirtualHistPainter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualHistPainter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    t.method("Streamer", static_cast<void (TVirtualHistPainter::*)(TBuffer &) >(&TVirtualHistPainter::Streamer));

    DEBUG_MSG("Adding wrapper for int TVirtualHistPainter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualHistPainter::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TVirtualHistPainter.h:59:4
    module_.method("TVirtualHistPainter!DeclFileLine", static_cast<int (*)() >(&TVirtualHistPainter::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualHistPainter>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualHistPainter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualHistPainter(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1C> : std::false_type { };
  template<> struct DefaultConstructible<TH1C> : std::false_type { };
template<> struct SuperType<TH1C> { typedef TH1 type; };
}

// Class generating the wrapper for type TH1C
// signature to use in the veto file: TH1C
struct JlTH1C: public Wrapper {

  JlTH1C(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1C (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:454:7
    jlcxx::TypeWrapper<TH1C>  t = jlModule.add_type<TH1C>("TH1C",
      jlcxx::julia_base_type<TH1>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1C>>(new jlcxx::TypeWrapper<TH1C>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1C::TH1C(const char *, const char *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:458:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1C::TH1C(const char *, const char *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:459:4
    t.constructor<const char *, const char *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1C::TH1C(const char *, const char *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:460:4
    t.constructor<const char *, const char *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1C::TH1C(const TH1C &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:461:4
    t.constructor<const TH1C &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TH1C & TH1C::operator=(const TH1C &) (" __HERE__ ")");
    // signature to use in the veto list: TH1C & TH1C::operator=(const TH1C &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:462:10
    t.method("assign", static_cast<TH1C & (TH1C::*)(const TH1C &) >(&TH1C::operator=));

    DEBUG_MSG("Adding wrapper for void TH1C::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:465:13
    t.method("AddBinContent", static_cast<void (TH1C::*)(Int_t) >(&TH1C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1C::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:466:13
    t.method("AddBinContent", static_cast<void (TH1C::*)(Int_t, Double_t) >(&TH1C::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1C::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:467:13
    t.method("Copy", static_cast<void (TH1C::*)(TObject &)  const>(&TH1C::Copy));

    DEBUG_MSG("Adding wrapper for void TH1C::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:468:13
    t.method("Reset", static_cast<void (TH1C::*)(Option_t *) >(&TH1C::Reset));
    t.method("Reset", [](TH1C& a)->void { a.Reset(); });
    t.method("Reset", [](TH1C* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH1C::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:469:13
    t.method("SetBinsLength", static_cast<void (TH1C::*)(Int_t) >(&TH1C::SetBinsLength));
    t.method("SetBinsLength", [](TH1C& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1C* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for Version_t TH1C::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1C::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!Class_Version", static_cast<Version_t (*)() >(&TH1C::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH1C::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1C::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    t.method("IsA", static_cast<TClass * (TH1C::*)()  const>(&TH1C::IsA));

    DEBUG_MSG("Adding wrapper for void TH1C::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    t.method("StreamerNVirtual", static_cast<void (TH1C::*)(TBuffer &) >(&TH1C::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH1C::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1C::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!DeclFileName", []() { return (std::string)TH1C::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1C::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1C::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!ImplFileLine", static_cast<int (*)() >(&TH1C::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH1C::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1C::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!ImplFileName", []() { return (std::string)TH1C::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1C::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1C::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!Class_Name", []() { return (std::string)TH1C::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1C::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1C::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!Dictionary", static_cast<TClass * (*)() >(&TH1C::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH1C::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1C::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!Class", static_cast<TClass * (*)() >(&TH1C::Class));

    DEBUG_MSG("Adding wrapper for void TH1C::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1C::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    t.method("Streamer", static_cast<void (TH1C::*)(TBuffer &) >(&TH1C::Streamer));

    DEBUG_MSG("Adding wrapper for int TH1C::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1C::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:471:4
    module_.method("TH1C!DeclFileLine", static_cast<int (*)() >(&TH1C::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1C>> type_;
};
std::shared_ptr<Wrapper> newJlTH1C(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1C(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1S> : std::false_type { };
  template<> struct DefaultConstructible<TH1S> : std::false_type { };
template<> struct SuperType<TH1S> { typedef TH1 type; };
}

// Class generating the wrapper for type TH1S
// signature to use in the veto file: TH1S
struct JlTH1S: public Wrapper {

  JlTH1S(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1S (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:495:7
    jlcxx::TypeWrapper<TH1S>  t = jlModule.add_type<TH1S>("TH1S",
      jlcxx::julia_base_type<TH1>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1S>>(new jlcxx::TypeWrapper<TH1S>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1S::TH1S(const char *, const char *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:499:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1S::TH1S(const char *, const char *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:500:4
    t.constructor<const char *, const char *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1S::TH1S(const char *, const char *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:501:4
    t.constructor<const char *, const char *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1S::TH1S(const TH1S &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:502:4
    t.constructor<const TH1S &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TH1S & TH1S::operator=(const TH1S &) (" __HERE__ ")");
    // signature to use in the veto list: TH1S & TH1S::operator=(const TH1S &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:503:10
    t.method("assign", static_cast<TH1S & (TH1S::*)(const TH1S &) >(&TH1S::operator=));

    DEBUG_MSG("Adding wrapper for void TH1S::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:506:13
    t.method("AddBinContent", static_cast<void (TH1S::*)(Int_t) >(&TH1S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1S::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:507:13
    t.method("AddBinContent", static_cast<void (TH1S::*)(Int_t, Double_t) >(&TH1S::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1S::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:508:13
    t.method("Copy", static_cast<void (TH1S::*)(TObject &)  const>(&TH1S::Copy));

    DEBUG_MSG("Adding wrapper for void TH1S::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:509:13
    t.method("Reset", static_cast<void (TH1S::*)(Option_t *) >(&TH1S::Reset));
    t.method("Reset", [](TH1S& a)->void { a.Reset(); });
    t.method("Reset", [](TH1S* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH1S::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:510:13
    t.method("SetBinsLength", static_cast<void (TH1S::*)(Int_t) >(&TH1S::SetBinsLength));
    t.method("SetBinsLength", [](TH1S& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1S* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for Version_t TH1S::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1S::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!Class_Version", static_cast<Version_t (*)() >(&TH1S::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH1S::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1S::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    t.method("IsA", static_cast<TClass * (TH1S::*)()  const>(&TH1S::IsA));

    DEBUG_MSG("Adding wrapper for void TH1S::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    t.method("StreamerNVirtual", static_cast<void (TH1S::*)(TBuffer &) >(&TH1S::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH1S::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1S::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!DeclFileName", []() { return (std::string)TH1S::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1S::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1S::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!ImplFileLine", static_cast<int (*)() >(&TH1S::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH1S::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1S::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!ImplFileName", []() { return (std::string)TH1S::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1S::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1S::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!Class_Name", []() { return (std::string)TH1S::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1S::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1S::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!Dictionary", static_cast<TClass * (*)() >(&TH1S::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH1S::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1S::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!Class", static_cast<TClass * (*)() >(&TH1S::Class));

    DEBUG_MSG("Adding wrapper for void TH1S::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1S::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    t.method("Streamer", static_cast<void (TH1S::*)(TBuffer &) >(&TH1S::Streamer));

    DEBUG_MSG("Adding wrapper for int TH1S::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1S::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:512:4
    module_.method("TH1S!DeclFileLine", static_cast<int (*)() >(&TH1S::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1S>> type_;
};
std::shared_ptr<Wrapper> newJlTH1S(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1S(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1I> : std::false_type { };
  template<> struct DefaultConstructible<TH1I> : std::false_type { };
template<> struct SuperType<TH1I> { typedef TH1 type; };
}

// Class generating the wrapper for type TH1I
// signature to use in the veto file: TH1I
struct JlTH1I: public Wrapper {

  JlTH1I(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1I (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:536:7
    jlcxx::TypeWrapper<TH1I>  t = jlModule.add_type<TH1I>("TH1I",
      jlcxx::julia_base_type<TH1>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1I>>(new jlcxx::TypeWrapper<TH1I>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1I::TH1I(const char *, const char *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:540:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1I::TH1I(const char *, const char *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:541:4
    t.constructor<const char *, const char *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1I::TH1I(const char *, const char *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:542:4
    t.constructor<const char *, const char *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1I::TH1I(const TH1I &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:543:4
    t.constructor<const TH1I &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TH1I & TH1I::operator=(const TH1I &) (" __HERE__ ")");
    // signature to use in the veto list: TH1I & TH1I::operator=(const TH1I &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:544:10
    t.method("assign", static_cast<TH1I & (TH1I::*)(const TH1I &) >(&TH1I::operator=));

    DEBUG_MSG("Adding wrapper for void TH1I::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:547:13
    t.method("AddBinContent", static_cast<void (TH1I::*)(Int_t) >(&TH1I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1I::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:548:13
    t.method("AddBinContent", static_cast<void (TH1I::*)(Int_t, Double_t) >(&TH1I::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1I::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:549:13
    t.method("Copy", static_cast<void (TH1I::*)(TObject &)  const>(&TH1I::Copy));

    DEBUG_MSG("Adding wrapper for void TH1I::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:550:13
    t.method("Reset", static_cast<void (TH1I::*)(Option_t *) >(&TH1I::Reset));
    t.method("Reset", [](TH1I& a)->void { a.Reset(); });
    t.method("Reset", [](TH1I* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH1I::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:551:13
    t.method("SetBinsLength", static_cast<void (TH1I::*)(Int_t) >(&TH1I::SetBinsLength));
    t.method("SetBinsLength", [](TH1I& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1I* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for Version_t TH1I::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1I::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!Class_Version", static_cast<Version_t (*)() >(&TH1I::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH1I::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1I::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    t.method("IsA", static_cast<TClass * (TH1I::*)()  const>(&TH1I::IsA));

    DEBUG_MSG("Adding wrapper for void TH1I::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    t.method("StreamerNVirtual", static_cast<void (TH1I::*)(TBuffer &) >(&TH1I::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH1I::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1I::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!DeclFileName", []() { return (std::string)TH1I::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1I::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1I::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!ImplFileLine", static_cast<int (*)() >(&TH1I::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH1I::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1I::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!ImplFileName", []() { return (std::string)TH1I::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1I::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1I::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!Class_Name", []() { return (std::string)TH1I::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1I::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1I::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!Dictionary", static_cast<TClass * (*)() >(&TH1I::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH1I::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1I::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!Class", static_cast<TClass * (*)() >(&TH1I::Class));

    DEBUG_MSG("Adding wrapper for void TH1I::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1I::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    t.method("Streamer", static_cast<void (TH1I::*)(TBuffer &) >(&TH1I::Streamer));

    DEBUG_MSG("Adding wrapper for int TH1I::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1I::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:553:4
    module_.method("TH1I!DeclFileLine", static_cast<int (*)() >(&TH1I::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1I>> type_;
};
std::shared_ptr<Wrapper> newJlTH1I(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1I(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TH1D> : std::false_type { };
  template<> struct DefaultConstructible<TH1D> : std::false_type { };
template<> struct SuperType<TH1D> { typedef TH1 type; };
}

// Class generating the wrapper for type TH1D
// signature to use in the veto file: TH1D
struct JlTH1D: public Wrapper {

  JlTH1D(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TH1D (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:620:7
    jlcxx::TypeWrapper<TH1D>  t = jlModule.add_type<TH1D>("TH1D",
      jlcxx::julia_base_type<TH1>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TH1D>>(new jlcxx::TypeWrapper<TH1D>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1D::TH1D(const char *, const char *, Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:624:4
    t.constructor<const char *, const char *, Int_t, Double_t, Double_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1D::TH1D(const char *, const char *, Int_t, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:625:4
    t.constructor<const char *, const char *, Int_t, const Float_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1D::TH1D(const char *, const char *, Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:626:4
    t.constructor<const char *, const char *, Int_t, const Double_t *>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1D::TH1D(const TVectorD &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:627:13
    t.constructor<const TVectorD &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TH1D::TH1D(const TH1D &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:628:4
    t.constructor<const TH1D &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for TH1D & TH1D::operator=(const TH1D &) (" __HERE__ ")");
    // signature to use in the veto list: TH1D & TH1D::operator=(const TH1D &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:629:10
    t.method("assign", static_cast<TH1D & (TH1D::*)(const TH1D &) >(&TH1D::operator=));

    DEBUG_MSG("Adding wrapper for void TH1D::AddBinContent(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::AddBinContent(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:632:13
    t.method("AddBinContent", static_cast<void (TH1D::*)(Int_t) >(&TH1D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1D::AddBinContent(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::AddBinContent(Int_t, Double_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:633:13
    t.method("AddBinContent", static_cast<void (TH1D::*)(Int_t, Double_t) >(&TH1D::AddBinContent));

    DEBUG_MSG("Adding wrapper for void TH1D::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::Copy(TObject &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:635:13
    t.method("Copy", static_cast<void (TH1D::*)(TObject &)  const>(&TH1D::Copy));

    DEBUG_MSG("Adding wrapper for void TH1D::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:636:13
    t.method("Reset", static_cast<void (TH1D::*)(Option_t *) >(&TH1D::Reset));
    t.method("Reset", [](TH1D& a)->void { a.Reset(); });
    t.method("Reset", [](TH1D* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TH1D::SetBinsLength(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::SetBinsLength(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:637:13
    t.method("SetBinsLength", static_cast<void (TH1D::*)(Int_t) >(&TH1D::SetBinsLength));
    t.method("SetBinsLength", [](TH1D& a)->void { a.SetBinsLength(); });
    t.method("SetBinsLength", [](TH1D* a)->void { a->SetBinsLength(); });

    DEBUG_MSG("Adding wrapper for Version_t TH1D::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TH1D::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!Class_Version", static_cast<Version_t (*)() >(&TH1D::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TH1D::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1D::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    t.method("IsA", static_cast<TClass * (TH1D::*)()  const>(&TH1D::IsA));

    DEBUG_MSG("Adding wrapper for void TH1D::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    t.method("StreamerNVirtual", static_cast<void (TH1D::*)(TBuffer &) >(&TH1D::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TH1D::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1D::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!DeclFileName", []() { return (std::string)TH1D::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TH1D::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1D::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!ImplFileLine", static_cast<int (*)() >(&TH1D::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TH1D::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1D::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!ImplFileName", []() { return (std::string)TH1D::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TH1D::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TH1D::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!Class_Name", []() { return (std::string)TH1D::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TH1D::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1D::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!Dictionary", static_cast<TClass * (*)() >(&TH1D::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TH1D::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TH1D::Class()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!Class", static_cast<TClass * (*)() >(&TH1D::Class));

    DEBUG_MSG("Adding wrapper for void TH1D::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TH1D::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    t.method("Streamer", static_cast<void (TH1D::*)(TBuffer &) >(&TH1D::Streamer));

    DEBUG_MSG("Adding wrapper for int TH1D::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TH1D::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TH1.h:639:4
    module_.method("TH1D!DeclFileLine", static_cast<int (*)() >(&TH1D::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TH1D>> type_;
};
std::shared_ptr<Wrapper> newJlTH1D(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTH1D(module));
}
