// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Fit::UnBinData> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Fit::UnBinData> : std::false_type { };
template<> struct SuperType<ROOT::Fit::UnBinData> { typedef ROOT::Fit::FitData type; };
}

// Class generating the wrapper for type ROOT::Fit::UnBinData
// signature to use in the veto file: ROOT::Fit::UnBinData
struct JlROOT_Fit_UnBinData: public Wrapper {

  JlROOT_Fit_UnBinData(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Fit::UnBinData (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Fit/UnBinData.h:46:7
    jlcxx::TypeWrapper<ROOT::Fit::UnBinData>  t = jlModule.add_type<ROOT::Fit::UnBinData>("ROOT!Fit!UnBinData",
      jlcxx::julia_base_type<ROOT::Fit::FitData>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::UnBinData>>(new jlcxx::TypeWrapper<ROOT::Fit::UnBinData>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::UnBinData>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Fit_UnBinData(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Fit_UnBinData(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Fit::BinData> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Fit::BinData> : std::false_type { };
template<> struct SuperType<ROOT::Fit::BinData> { typedef ROOT::Fit::FitData type; };
}

// Class generating the wrapper for type ROOT::Fit::BinData
// signature to use in the veto file: ROOT::Fit::BinData
struct JlROOT_Fit_BinData: public Wrapper {

  JlROOT_Fit_BinData(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Fit::BinData (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Fit/BinData.h:52:7
    jlcxx::TypeWrapper<ROOT::Fit::BinData>  t = jlModule.add_type<ROOT::Fit::BinData>("ROOT!Fit!BinData",
      jlcxx::julia_base_type<ROOT::Fit::FitData>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::BinData>>(new jlcxx::TypeWrapper<ROOT::Fit::BinData>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::BinData>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Fit_BinData(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Fit_BinData(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Fit::FitResult> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Fit::FitResult> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Fit::FitResult
// signature to use in the veto file: ROOT::Fit::FitResult
struct JlROOT_Fit_FitResult: public Wrapper {

  JlROOT_Fit_FitResult(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Fit::FitResult (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Fit/FitResult.h:47:7
    jlcxx::TypeWrapper<ROOT::Fit::FitResult>  t = jlModule.add_type<ROOT::Fit::FitResult>("ROOT!Fit!FitResult");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::FitResult>>(new jlcxx::TypeWrapper<ROOT::Fit::FitResult>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Fit::FitResult>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Fit_FitResult(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Fit_FitResult(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGraphErrors> : std::false_type { };
  template<> struct DefaultConstructible<TGraphErrors> : std::false_type { };
template<> struct SuperType<TGraphErrors> { typedef TGraph type; };
}

// Class generating the wrapper for type TGraphErrors
// signature to use in the veto file: TGraphErrors
struct JlTGraphErrors: public Wrapper {

  JlTGraphErrors(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGraphErrors (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:26:7
    jlcxx::TypeWrapper<TGraphErrors>  t = jlModule.add_type<TGraphErrors>("TGraphErrors",
      jlcxx::julia_base_type<TGraph>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGraphErrors>>(new jlcxx::TypeWrapper<TGraphErrors>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:48:4
    t.constructor<Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n")    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:49:4
    t.constructor<Int_t, const Float_t *, const Float_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y")    );
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("ex")    );
    t.constructor<Int_t, const Float_t *, const Float_t *, const Float_t *, const Float_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("ex"), jlcxx::arg("ey")    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:50:4
    t.constructor<Int_t, const Double_t *, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y")    );
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("ex")    );
    t.constructor<Int_t, const Double_t *, const Double_t *, const Double_t *, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("n"), jlcxx::arg("x"), jlcxx::arg("y"), jlcxx::arg("ex"), jlcxx::arg("ey")    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:52:4
    t.constructor<const TVectorD &, const TVectorD &, const TVectorD &, const TVectorD &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("vx"), jlcxx::arg("vy"), jlcxx::arg("vex"), jlcxx::arg("vey")    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(const TGraphErrors &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:53:4
    t.constructor<const TGraphErrors &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("gr")    );

    DEBUG_MSG("Adding wrapper for TGraphErrors & TGraphErrors::operator=(const TGraphErrors &) (" __HERE__ ")");
    // signature to use in the veto list: TGraphErrors & TGraphErrors::operator=(const TGraphErrors &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:54:18
    t.method("assign", [](TGraphErrors& a, const TGraphErrors & arg0)->TGraphErrors & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("gr"));
    t.method("assign", [](TGraphErrors* a, const TGraphErrors & arg0)->TGraphErrors & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("gr"));


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(const TH1 *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:55:4
    t.constructor<const TH1 *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("h")    );


    DEBUG_MSG("Adding wrapper for void TGraphErrors::TGraphErrors(const char *, const char *, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:56:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("filename")    );
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("format")    );
    t.constructor<const char *, const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("filename"), jlcxx::arg("format"), jlcxx::arg("option")    );

    DEBUG_MSG("Adding wrapper for void TGraphErrors::Apply(TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::Apply(TF1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:58:12
    t.method("Apply", [](TGraphErrors& a, TF1 * arg0)->void { a.Apply(arg0); }, jlcxx::arg("this"), jlcxx::arg("f"));
    t.method("Apply", [](TGraphErrors* a, TF1 * arg0)->void { a->Apply(arg0); }, jlcxx::arg("this"), jlcxx::arg("f"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::ApplyX(TF1 *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::ApplyX(TF1 *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:59:20
    t.method("ApplyX", [](TGraphErrors& a, TF1 * arg0)->void { a.ApplyX(arg0); }, jlcxx::arg("this"), jlcxx::arg("f"));
    t.method("ApplyX", [](TGraphErrors* a, TF1 * arg0)->void { a->ApplyX(arg0); }, jlcxx::arg("this"), jlcxx::arg("f"));

    DEBUG_MSG("Adding wrapper for Int_t TGraphErrors::CalculateScanfFields(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraphErrors::CalculateScanfFields(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:60:20
    module_.method("TGraphErrors!CalculateScanfFields", [](const char * arg0)->Int_t { return TGraphErrors::CalculateScanfFields(arg0); }, jlcxx::arg("fmt"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::ComputeRange(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:61:12
    t.method("ComputeRange", [](TGraphErrors const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a.ComputeRange(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("xmin"), jlcxx::arg("ymin"), jlcxx::arg("xmax"), jlcxx::arg("ymax"));
    t.method("ComputeRange", [](TGraphErrors const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a->ComputeRange(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("xmin"), jlcxx::arg("ymin"), jlcxx::arg("xmax"), jlcxx::arg("ymax"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorX(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorX(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:62:20
    t.method("GetErrorX", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorX(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorX", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorX(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorY(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorY(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:63:20
    t.method("GetErrorY", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorY(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorY", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorY(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorXhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorXhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:64:20
    t.method("GetErrorXhigh", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorXhigh(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorXhigh", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorXhigh(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorXlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorXlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:65:20
    t.method("GetErrorXlow", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorXlow(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorXlow", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorXlow(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorYhigh(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorYhigh(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:66:20
    t.method("GetErrorYhigh", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorYhigh(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorYhigh", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorYhigh(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TGraphErrors::GetErrorYlow(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGraphErrors::GetErrorYlow(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:67:20
    t.method("GetErrorYlow", [](TGraphErrors const& a, Int_t arg0)->Double_t { return a.GetErrorYlow(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetErrorYlow", [](TGraphErrors const* a, Int_t arg0)->Double_t { return a->GetErrorYlow(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphErrors::GetEX() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphErrors::GetEX()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:68:20
    t.method("GetEX", [](TGraphErrors const& a)->Double_t * { return a.GetEX(); }, jlcxx::arg("this"));
    t.method("GetEX", [](TGraphErrors const* a)->Double_t * { return a->GetEX(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t * TGraphErrors::GetEY() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TGraphErrors::GetEY()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:69:20
    t.method("GetEY", [](TGraphErrors const& a)->Double_t * { return a.GetEY(); }, jlcxx::arg("this"));
    t.method("GetEY", [](TGraphErrors const* a)->Double_t * { return a->GetEY(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TGraphErrors::Merge(TCollection *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGraphErrors::Merge(TCollection *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:70:12
    t.method("Merge", [](TGraphErrors& a, TCollection * arg0)->Int_t { return a.Merge(arg0); }, jlcxx::arg("this"), jlcxx::arg("list"));
    t.method("Merge", [](TGraphErrors* a, TCollection * arg0)->Int_t { return a->Merge(arg0); }, jlcxx::arg("this"), jlcxx::arg("list"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:71:12
    t.method("Print", [](TGraphErrors const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGraphErrors const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("chopt"));
    t.method("Print", [](TGraphErrors const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TGraphErrors const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("chopt"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::Scale(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::Scale(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:73:12
    t.method("Scale", [](TGraphErrors& a)->void { a.Scale(); }, jlcxx::arg("this"));
    t.method("Scale", [](TGraphErrors& a, Double_t arg0)->void { a.Scale(arg0); }, jlcxx::arg("this"), jlcxx::arg("c1"));
    t.method("Scale", [](TGraphErrors& a, Double_t arg0, Option_t * arg1)->void { a.Scale(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("c1"), jlcxx::arg("option"));
    t.method("Scale", [](TGraphErrors* a)->void { a->Scale(); }, jlcxx::arg("this"));
    t.method("Scale", [](TGraphErrors* a, Double_t arg0)->void { a->Scale(arg0); }, jlcxx::arg("this"), jlcxx::arg("c1"));
    t.method("Scale", [](TGraphErrors* a, Double_t arg0, Option_t * arg1)->void { a->Scale(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("c1"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::SetPointError(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::SetPointError(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:74:20
    t.method("SetPointError", [](TGraphErrors& a, Double_t arg0, Double_t arg1)->void { a.SetPointError(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ex"), jlcxx::arg("ey"));
    t.method("SetPointError", [](TGraphErrors* a, Double_t arg0, Double_t arg1)->void { a->SetPointError(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ex"), jlcxx::arg("ey"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::SetPointError(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::SetPointError(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TGraphErrors.h:75:20
    t.method("SetPointError", [](TGraphErrors& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.SetPointError(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("i"), jlcxx::arg("ex"), jlcxx::arg("ey"));
    t.method("SetPointError", [](TGraphErrors* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->SetPointError(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("i"), jlcxx::arg("ex"), jlcxx::arg("ey"));

    DEBUG_MSG("Adding wrapper for Version_t TGraphErrors::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGraphErrors::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TGraphErrors!Class_Version", []()->Version_t { return TGraphErrors::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraphErrors::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphErrors::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TGraphErrors const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TGraphErrors const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TGraphErrors::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TGraphErrors& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TGraphErrors* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TGraphErrors::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphErrors::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TGraphErrors!DeclFileName", []() { return (std::string)TGraphErrors::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGraphErrors::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphErrors::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TGraphErrors!ImplFileLine", []()->int { return TGraphErrors::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGraphErrors::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphErrors::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TGraphErrors!ImplFileName", []() { return (std::string)TGraphErrors::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGraphErrors::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGraphErrors::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TGraphErrors!Class_Name", []() { return (std::string)TGraphErrors::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraphErrors::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphErrors::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TGraphErrors!Dictionary", []()->TClass * { return TGraphErrors::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGraphErrors::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGraphErrors::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TGraphErrors!Class", []()->TClass * { return TGraphErrors::Class(); });

    DEBUG_MSG("Adding wrapper for void TGraphErrors::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGraphErrors::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TGraphErrors& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TGraphErrors* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TGraphErrors::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGraphErrors::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TGraphErrors!DeclFileLine", []()->int { return TGraphErrors::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGraphErrors>> type_;
};
std::shared_ptr<Wrapper> newJlTGraphErrors(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGraphErrors(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TAxis> : std::false_type { };
  template<> struct DefaultConstructible<TAxis> : std::false_type { };
template<> struct SuperType<TAxis> { typedef TNamed type; };
}

// Class generating the wrapper for type TAxis
// signature to use in the veto file: TAxis
struct JlTAxis: public Wrapper {

  JlTAxis(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TAxis (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:31:7
    jlcxx::TypeWrapper<TAxis>  t = jlModule.add_type<TAxis>("TAxis",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TAxis>>(new jlcxx::TypeWrapper<TAxis>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TAxis::TAxis(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:80:4
    t.constructor<Int_t, Double_t, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xmin"), jlcxx::arg("xmax")    );


    DEBUG_MSG("Adding wrapper for void TAxis::TAxis(Int_t, const Double_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:81:4
    t.constructor<Int_t, const Double_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xbins")    );


    DEBUG_MSG("Adding wrapper for void TAxis::TAxis(const TAxis &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:82:4
    t.constructor<const TAxis &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("axis")    );

    DEBUG_MSG("Adding wrapper for TAxis & TAxis::operator=(const TAxis &) (" __HERE__ ")");
    // signature to use in the veto list: TAxis & TAxis::operator=(const TAxis &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:84:11
    t.method("assign", [](TAxis& a, const TAxis & arg0)->TAxis & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("assign", [](TAxis* a, const TAxis & arg0)->TAxis & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::CanExtend() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::CanExtend()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:86:15
    t.method("CanExtend", [](TAxis const& a)->Bool_t { return a.CanExtend(); }, jlcxx::arg("this"));
    t.method("CanExtend", [](TAxis const* a)->Bool_t { return a->CanExtend(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::CanBeAlphanumeric() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::CanBeAlphanumeric()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:87:15
    t.method("CanBeAlphanumeric", [](TAxis& a)->Bool_t { return a.CanBeAlphanumeric(); }, jlcxx::arg("this"));
    t.method("CanBeAlphanumeric", [](TAxis* a)->Bool_t { return a->CanBeAlphanumeric(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::IsAlphanumeric() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::IsAlphanumeric()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:88:15
    t.method("IsAlphanumeric", [](TAxis const& a)->Bool_t { return a.IsAlphanumeric(); }, jlcxx::arg("this"));
    t.method("IsAlphanumeric", [](TAxis const* a)->Bool_t { return a->IsAlphanumeric(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetAlphanumeric(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetAlphanumeric(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:89:15
    t.method("SetAlphanumeric", [](TAxis& a)->void { a.SetAlphanumeric(); }, jlcxx::arg("this"), jlcxx::arg("alphanumeric"));
    t.method("SetAlphanumeric", [](TAxis& a, Bool_t arg0)->void { a.SetAlphanumeric(arg0); }, jlcxx::arg("this"), jlcxx::arg("alphanumeric"));
    t.method("SetAlphanumeric", [](TAxis* a)->void { a->SetAlphanumeric(); }, jlcxx::arg("this"), jlcxx::arg("alphanumeric"));
    t.method("SetAlphanumeric", [](TAxis* a, Bool_t arg0)->void { a->SetAlphanumeric(arg0); }, jlcxx::arg("this"), jlcxx::arg("alphanumeric"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetCanExtend(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetCanExtend(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:90:15
    t.method("SetCanExtend", [](TAxis& a, Bool_t arg0)->void { a.SetCanExtend(arg0); }, jlcxx::arg("this"), jlcxx::arg("canExtend"));
    t.method("SetCanExtend", [](TAxis* a, Bool_t arg0)->void { a->SetCanExtend(arg0); }, jlcxx::arg("this"), jlcxx::arg("canExtend"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetNoAlphanumeric(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetNoAlphanumeric(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:91:15
    t.method("SetNoAlphanumeric", [](TAxis& a)->void { a.SetNoAlphanumeric(); }, jlcxx::arg("this"), jlcxx::arg("noalpha"));
    t.method("SetNoAlphanumeric", [](TAxis& a, Bool_t arg0)->void { a.SetNoAlphanumeric(arg0); }, jlcxx::arg("this"), jlcxx::arg("noalpha"));
    t.method("SetNoAlphanumeric", [](TAxis* a)->void { a->SetNoAlphanumeric(); }, jlcxx::arg("this"), jlcxx::arg("noalpha"));
    t.method("SetNoAlphanumeric", [](TAxis* a, Bool_t arg0)->void { a->SetNoAlphanumeric(arg0); }, jlcxx::arg("this"), jlcxx::arg("noalpha"));

    DEBUG_MSG("Adding wrapper for void TAxis::CenterLabels(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::CenterLabels(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:98:23
    t.method("CenterLabels", [](TAxis& a)->void { a.CenterLabels(); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterLabels", [](TAxis& a, Bool_t arg0)->void { a.CenterLabels(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterLabels", [](TAxis* a)->void { a->CenterLabels(); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterLabels", [](TAxis* a, Bool_t arg0)->void { a->CenterLabels(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));

    DEBUG_MSG("Adding wrapper for void TAxis::CenterTitle(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::CenterTitle(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:99:23
    t.method("CenterTitle", [](TAxis& a)->void { a.CenterTitle(); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterTitle", [](TAxis& a, Bool_t arg0)->void { a.CenterTitle(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterTitle", [](TAxis* a)->void { a->CenterTitle(); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("CenterTitle", [](TAxis* a, Bool_t arg0)->void { a->CenterTitle(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::ChooseTimeFormat(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::ChooseTimeFormat(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:100:23
    t.method("ChooseTimeFormat", [](TAxis& a) { return (std::string)a.ChooseTimeFormat(); }, jlcxx::arg("this"), jlcxx::arg("axislength"));
    t.method("ChooseTimeFormat", [](TAxis& a, Double_t arg0) { return (std::string)a.ChooseTimeFormat(arg0); }, jlcxx::arg("this"), jlcxx::arg("axislength"));
    t.method("ChooseTimeFormat", [](TAxis* a) { return (std::string)a->ChooseTimeFormat(); }, jlcxx::arg("this"), jlcxx::arg("axislength"));
    t.method("ChooseTimeFormat", [](TAxis* a, Double_t arg0) { return (std::string)a->ChooseTimeFormat(arg0); }, jlcxx::arg("this"), jlcxx::arg("axislength"));

    DEBUG_MSG("Adding wrapper for void TAxis::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:101:15
    t.method("Copy", [](TAxis const& a, TObject & arg0)->void { a.Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("axis"));
    t.method("Copy", [](TAxis const* a, TObject & arg0)->void { a->Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("axis"));

    DEBUG_MSG("Adding wrapper for void TAxis::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Delete(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:102:15
    t.method("Delete", [](TAxis& a)->void { a.Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TAxis& a, Option_t * arg0)->void { a.Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Delete", [](TAxis* a)->void { a->Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TAxis* a, Option_t * arg0)->void { a->Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::DistancetoPrimitive(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::DistancetoPrimitive(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:103:15
    t.method("DistancetoPrimitive", [](TAxis& a, Int_t arg0, Int_t arg1)->Int_t { return a.DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("DistancetoPrimitive", [](TAxis* a, Int_t arg0, Int_t arg1)->Int_t { return a->DistancetoPrimitive(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for TObject * TAxis::DrawClone(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TAxis::DrawClone(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:104:15
    t.method("DrawClone", [](TAxis const& a)->TObject * { return a.DrawClone(); }, jlcxx::arg("this"));
    t.method("DrawClone", [](TAxis const& a, Option_t * arg0)->TObject * { return a.DrawClone(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("DrawClone", [](TAxis const* a)->TObject * { return a->DrawClone(); }, jlcxx::arg("this"));
    t.method("DrawClone", [](TAxis const* a, Option_t * arg0)->TObject * { return a->DrawClone(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TAxis::ExecuteEvent(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::ExecuteEvent(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:105:15
    t.method("ExecuteEvent", [](TAxis& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));
    t.method("ExecuteEvent", [](TAxis* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->ExecuteEvent(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("event"), jlcxx::arg("px"), jlcxx::arg("py"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::FindBin(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::FindBin(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:106:23
    t.method("FindBin", [](TAxis& a, Double_t arg0)->Int_t { return a.FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));
    t.method("FindBin", [](TAxis* a, Double_t arg0)->Int_t { return a->FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::FindBin(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::FindBin(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:107:23
    t.method("FindBin", [](TAxis const& a, Double_t arg0)->Int_t { return a.FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));
    t.method("FindBin", [](TAxis const* a, Double_t arg0)->Int_t { return a->FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::FindBin(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::FindBin(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:108:23
    t.method("FindBin", [](TAxis& a, const char * arg0)->Int_t { return a.FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("label"));
    t.method("FindBin", [](TAxis* a, const char * arg0)->Int_t { return a->FindBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("label"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::FindFixBin(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::FindFixBin(Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:109:23
    t.method("FindFixBin", [](TAxis const& a, Double_t arg0)->Int_t { return a.FindFixBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));
    t.method("FindFixBin", [](TAxis const* a, Double_t arg0)->Int_t { return a->FindFixBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("x"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::FindFixBin(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::FindFixBin(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:110:23
    t.method("FindFixBin", [](TAxis const& a, const char * arg0)->Int_t { return a.FindFixBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("label"));
    t.method("FindFixBin", [](TAxis const* a, const char * arg0)->Int_t { return a->FindFixBin(arg0); }, jlcxx::arg("this"), jlcxx::arg("label"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetBinCenter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetBinCenter(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:111:23
    t.method("GetBinCenter", [](TAxis const& a, Int_t arg0)->Double_t { return a.GetBinCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinCenter", [](TAxis const* a, Int_t arg0)->Double_t { return a->GetBinCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetBinCenterLog(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetBinCenterLog(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:112:23
    t.method("GetBinCenterLog", [](TAxis const& a, Int_t arg0)->Double_t { return a.GetBinCenterLog(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinCenterLog", [](TAxis const* a, Int_t arg0)->Double_t { return a->GetBinCenterLog(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::GetBinLabel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::GetBinLabel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:113:23
    t.method("GetBinLabel", [](TAxis const& a, Int_t arg0) { return (std::string)a.GetBinLabel(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinLabel", [](TAxis const* a, Int_t arg0) { return (std::string)a->GetBinLabel(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetBinLowEdge(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetBinLowEdge(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:114:23
    t.method("GetBinLowEdge", [](TAxis const& a, Int_t arg0)->Double_t { return a.GetBinLowEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinLowEdge", [](TAxis const* a, Int_t arg0)->Double_t { return a->GetBinLowEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetBinUpEdge(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetBinUpEdge(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:115:23
    t.method("GetBinUpEdge", [](TAxis const& a, Int_t arg0)->Double_t { return a.GetBinUpEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinUpEdge", [](TAxis const* a, Int_t arg0)->Double_t { return a->GetBinUpEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetBinWidth(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetBinWidth(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:116:23
    t.method("GetBinWidth", [](TAxis const& a, Int_t arg0)->Double_t { return a.GetBinWidth(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));
    t.method("GetBinWidth", [](TAxis const* a, Int_t arg0)->Double_t { return a->GetBinWidth(arg0); }, jlcxx::arg("this"), jlcxx::arg("bin"));

    DEBUG_MSG("Adding wrapper for void TAxis::GetCenter(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::GetCenter(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:117:23
    t.method("GetCenter", [](TAxis const& a, Double_t * arg0)->void { a.GetCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));
    t.method("GetCenter", [](TAxis const* a, Double_t * arg0)->void { a->GetCenter(arg0); }, jlcxx::arg("this"), jlcxx::arg("center"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetCenterLabels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetCenterLabels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:118:23
    t.method("GetCenterLabels", [](TAxis const& a)->Bool_t { return a.GetCenterLabels(); }, jlcxx::arg("this"));
    t.method("GetCenterLabels", [](TAxis const* a)->Bool_t { return a->GetCenterLabels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetCenterTitle() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetCenterTitle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:119:23
    t.method("GetCenterTitle", [](TAxis const& a)->Bool_t { return a.GetCenterTitle(); }, jlcxx::arg("this"));
    t.method("GetCenterTitle", [](TAxis const* a)->Bool_t { return a->GetCenterTitle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetDecimals() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetDecimals()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:120:23
    t.method("GetDecimals", [](TAxis const& a)->Bool_t { return a.GetDecimals(); }, jlcxx::arg("this"));
    t.method("GetDecimals", [](TAxis const* a)->Bool_t { return a->GetDecimals(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TList * TAxis::GetModifiedLabels() (" __HERE__ ")");
    // signature to use in the veto list: TList * TAxis::GetModifiedLabels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:122:23
    t.method("GetModifiedLabels", [](TAxis const& a)->TList * { return a.GetModifiedLabels(); }, jlcxx::arg("this"));
    t.method("GetModifiedLabels", [](TAxis const* a)->TList * { return a->GetModifiedLabels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::GetLowEdge(Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::GetLowEdge(Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:123:23
    t.method("GetLowEdge", [](TAxis const& a, Double_t * arg0)->void { a.GetLowEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("edge"));
    t.method("GetLowEdge", [](TAxis const* a, Double_t * arg0)->void { a->GetLowEdge(arg0); }, jlcxx::arg("this"), jlcxx::arg("edge"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetMoreLogLabels() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetMoreLogLabels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:124:23
    t.method("GetMoreLogLabels", [](TAxis const& a)->Bool_t { return a.GetMoreLogLabels(); }, jlcxx::arg("this"));
    t.method("GetMoreLogLabels", [](TAxis const* a)->Bool_t { return a->GetMoreLogLabels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::GetNbins() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::GetNbins()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:125:23
    t.method("GetNbins", [](TAxis const& a)->Int_t { return a.GetNbins(); }, jlcxx::arg("this"));
    t.method("GetNbins", [](TAxis const* a)->Int_t { return a->GetNbins(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::GetNlabels() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::GetNlabels()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:126:23
    t.method("GetNlabels", [](TAxis const& a)->Int_t { return a.GetNlabels(); }, jlcxx::arg("this"));
    t.method("GetNlabels", [](TAxis const* a)->Int_t { return a->GetNlabels(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetNoExponent() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetNoExponent()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:127:23
    t.method("GetNoExponent", [](TAxis const& a)->Bool_t { return a.GetNoExponent(); }, jlcxx::arg("this"));
    t.method("GetNoExponent", [](TAxis const* a)->Bool_t { return a->GetNoExponent(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObject * TAxis::GetParent() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TAxis::GetParent()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:128:23
    t.method("GetParent", [](TAxis const& a)->TObject * { return a.GetParent(); }, jlcxx::arg("this"));
    t.method("GetParent", [](TAxis const* a)->TObject * { return a->GetParent(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetRotateTitle() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetRotateTitle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:129:23
    t.method("GetRotateTitle", [](TAxis const& a)->Bool_t { return a.GetRotateTitle(); }, jlcxx::arg("this"));
    t.method("GetRotateTitle", [](TAxis const* a)->Bool_t { return a->GetRotateTitle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::GetTicks() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::GetTicks()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:130:24
    t.method("GetTicks", [](TAxis const& a) { return (std::string)a.GetTicks(); }, jlcxx::arg("this"));
    t.method("GetTicks", [](TAxis const* a) { return (std::string)a->GetTicks(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::GetTimeDisplay() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::GetTimeDisplay()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:131:23
    t.method("GetTimeDisplay", [](TAxis const& a)->Bool_t { return a.GetTimeDisplay(); }, jlcxx::arg("this"));
    t.method("GetTimeDisplay", [](TAxis const* a)->Bool_t { return a->GetTimeDisplay(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::GetTimeFormat() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::GetTimeFormat()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:132:24
    t.method("GetTimeFormat", [](TAxis const& a) { return (std::string)a.GetTimeFormat(); }, jlcxx::arg("this"));
    t.method("GetTimeFormat", [](TAxis const* a) { return (std::string)a->GetTimeFormat(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::GetTimeFormatOnly() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::GetTimeFormatOnly()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:133:24
    t.method("GetTimeFormatOnly", [](TAxis const& a) { return (std::string)a.GetTimeFormatOnly(); }, jlcxx::arg("this"));
    t.method("GetTimeFormatOnly", [](TAxis const* a) { return (std::string)a->GetTimeFormatOnly(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for UInt_t TAxis::GetTimeOffset() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TAxis::GetTimeOffset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:134:24
    t.method("GetTimeOffset", [](TAxis& a)->UInt_t { return a.GetTimeOffset(); }, jlcxx::arg("this"));
    t.method("GetTimeOffset", [](TAxis* a)->UInt_t { return a->GetTimeOffset(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::GetTitle() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::GetTitle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:135:23
    t.method("GetTitle", [](TAxis const& a) { return (std::string)a.GetTitle(); }, jlcxx::arg("this"));
    t.method("GetTitle", [](TAxis const* a) { return (std::string)a->GetTitle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TArrayD * TAxis::GetXbins() (" __HERE__ ")");
    // signature to use in the veto list: const TArrayD * TAxis::GetXbins()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:136:23
    t.method("GetXbins", [](TAxis const& a)->const TArrayD * { return a.GetXbins(); }, jlcxx::arg("this"));
    t.method("GetXbins", [](TAxis const* a)->const TArrayD * { return a->GetXbins(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::GetFirst() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::GetFirst()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:137:23
    t.method("GetFirst", [](TAxis const& a)->Int_t { return a.GetFirst(); }, jlcxx::arg("this"));
    t.method("GetFirst", [](TAxis const* a)->Int_t { return a->GetFirst(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TAxis::GetLast() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TAxis::GetLast()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:138:23
    t.method("GetLast", [](TAxis const& a)->Int_t { return a.GetLast(); }, jlcxx::arg("this"));
    t.method("GetLast", [](TAxis const* a)->Int_t { return a->GetLast(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetXmin() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetXmin()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:139:23
    t.method("GetXmin", [](TAxis const& a)->Double_t { return a.GetXmin(); }, jlcxx::arg("this"));
    t.method("GetXmin", [](TAxis const* a)->Double_t { return a->GetXmin(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Double_t TAxis::GetXmax() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TAxis::GetXmax()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:140:23
    t.method("GetXmax", [](TAxis const& a)->Double_t { return a.GetXmax(); }, jlcxx::arg("this"));
    t.method("GetXmax", [](TAxis const* a)->Double_t { return a->GetXmax(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::ImportAttributes(const TAxis *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::ImportAttributes(const TAxis *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:141:23
    t.method("ImportAttributes", [](TAxis& a, const TAxis * arg0)->void { a.ImportAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("axis"));
    t.method("ImportAttributes", [](TAxis* a, const TAxis * arg0)->void { a->ImportAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("axis"));

    DEBUG_MSG("Adding wrapper for Bool_t TAxis::IsVariableBinSize() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TAxis::IsVariableBinSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:142:23
    t.method("IsVariableBinSize", [](TAxis const& a)->Bool_t { return a.IsVariableBinSize(); }, jlcxx::arg("this"));
    t.method("IsVariableBinSize", [](TAxis const* a)->Bool_t { return a->IsVariableBinSize(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::LabelsOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::LabelsOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:146:23
    t.method("LabelsOption", [](TAxis& a)->void { a.LabelsOption(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("LabelsOption", [](TAxis& a, Option_t * arg0)->void { a.LabelsOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("LabelsOption", [](TAxis* a)->void { a->LabelsOption(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("LabelsOption", [](TAxis* a, Option_t * arg0)->void { a->LabelsOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TAxis::RotateTitle(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::RotateTitle(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:147:23
    t.method("RotateTitle", [](TAxis& a)->void { a.RotateTitle(); }, jlcxx::arg("this"), jlcxx::arg("rotate"));
    t.method("RotateTitle", [](TAxis& a, Bool_t arg0)->void { a.RotateTitle(arg0); }, jlcxx::arg("this"), jlcxx::arg("rotate"));
    t.method("RotateTitle", [](TAxis* a)->void { a->RotateTitle(); }, jlcxx::arg("this"), jlcxx::arg("rotate"));
    t.method("RotateTitle", [](TAxis* a, Bool_t arg0)->void { a->RotateTitle(arg0); }, jlcxx::arg("this"), jlcxx::arg("rotate"));

    DEBUG_MSG("Adding wrapper for void TAxis::Set(Int_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Set(Int_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:149:23
    t.method("Set", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.Set(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xmin"), jlcxx::arg("xmax"));
    t.method("Set", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->Set(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xmin"), jlcxx::arg("xmax"));

    DEBUG_MSG("Adding wrapper for void TAxis::Set(Int_t, const Float_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Set(Int_t, const Float_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:150:23
    t.method("Set", [](TAxis& a, Int_t arg0, const Float_t * arg1)->void { a.Set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xbins"));
    t.method("Set", [](TAxis* a, Int_t arg0, const Float_t * arg1)->void { a->Set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xbins"));

    DEBUG_MSG("Adding wrapper for void TAxis::Set(Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Set(Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:151:23
    t.method("Set", [](TAxis& a, Int_t arg0, const Double_t * arg1)->void { a.Set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xbins"));
    t.method("Set", [](TAxis* a, Int_t arg0, const Double_t * arg1)->void { a->Set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("nbins"), jlcxx::arg("xbins"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetBinLabel(Int_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetBinLabel(Int_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:152:23
    t.method("SetBinLabel", [](TAxis& a, Int_t arg0, const char * arg1)->void { a.SetBinLabel(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("bin"), jlcxx::arg("label"));
    t.method("SetBinLabel", [](TAxis* a, Int_t arg0, const char * arg1)->void { a->SetBinLabel(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("bin"), jlcxx::arg("label"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetDecimals(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetDecimals(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:153:23
    t.method("SetDecimals", [](TAxis& a)->void { a.SetDecimals(); }, jlcxx::arg("this"), jlcxx::arg("dot"));
    t.method("SetDecimals", [](TAxis& a, Bool_t arg0)->void { a.SetDecimals(arg0); }, jlcxx::arg("this"), jlcxx::arg("dot"));
    t.method("SetDecimals", [](TAxis* a)->void { a->SetDecimals(); }, jlcxx::arg("this"), jlcxx::arg("dot"));
    t.method("SetDecimals", [](TAxis* a, Bool_t arg0)->void { a->SetDecimals(arg0); }, jlcxx::arg("this"), jlcxx::arg("dot"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetDefaults() (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetDefaults()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:154:23
    t.method("SetDefaults", [](TAxis& a)->void { a.SetDefaults(); }, jlcxx::arg("this"));
    t.method("SetDefaults", [](TAxis* a)->void { a->SetDefaults(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetDrawOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetDrawOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:155:15
    t.method("SetDrawOption", [](TAxis& a)->void { a.SetDrawOption(); }, jlcxx::arg("this"));
    t.method("SetDrawOption", [](TAxis& a, Option_t * arg0)->void { a.SetDrawOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetDrawOption", [](TAxis* a)->void { a->SetDrawOption(); }, jlcxx::arg("this"));
    t.method("SetDrawOption", [](TAxis* a, Option_t * arg0)->void { a->SetDrawOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void TAxis::ChangeLabel(Int_t, Double_t, Double_t, Int_t, Int_t, Int_t, const TString &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::ChangeLabel(Int_t, Double_t, Double_t, Int_t, Int_t, Int_t, const TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:156:23
    t.method("ChangeLabel", [](TAxis& a)->void { a.ChangeLabel(); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0)->void { a.ChangeLabel(arg0); }, jlcxx::arg("this"), jlcxx::arg("labNum"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1)->void { a.ChangeLabel(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.ChangeLabel(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->void { a.ChangeLabel(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4)->void { a.ChangeLabel(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a.ChangeLabel(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"));
    t.method("ChangeLabel", [](TAxis& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5, const TString & arg6)->void { a.ChangeLabel(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));
    t.method("ChangeLabel", [](TAxis* a)->void { a->ChangeLabel(); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0)->void { a->ChangeLabel(arg0); }, jlcxx::arg("this"), jlcxx::arg("labNum"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1)->void { a->ChangeLabel(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->ChangeLabel(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->void { a->ChangeLabel(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4)->void { a->ChangeLabel(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a->ChangeLabel(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"));
    t.method("ChangeLabel", [](TAxis* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5, const TString & arg6)->void { a->ChangeLabel(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("labNum"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));

    DEBUG_MSG("Adding wrapper for void TAxis::ChangeLabelByValue(Double_t, Double_t, Double_t, Int_t, Int_t, Int_t, const TString &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::ChangeLabelByValue(Double_t, Double_t, Double_t, Int_t, Int_t, Int_t, const TString &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:160:23
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0)->void { a.ChangeLabelByValue(arg0); }, jlcxx::arg("this"), jlcxx::arg("labValue"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1)->void { a.ChangeLabelByValue(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.ChangeLabelByValue(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->void { a.ChangeLabelByValue(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4)->void { a.ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a.ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"));
    t.method("ChangeLabelByValue", [](TAxis& a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5, const TString & arg6)->void { a.ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0)->void { a->ChangeLabelByValue(arg0); }, jlcxx::arg("this"), jlcxx::arg("labValue"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1)->void { a->ChangeLabelByValue(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->ChangeLabelByValue(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->void { a->ChangeLabelByValue(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4)->void { a->ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5)->void { a->ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"));
    t.method("ChangeLabelByValue", [](TAxis* a, Double_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Int_t arg4, Int_t arg5, const TString & arg6)->void { a->ChangeLabelByValue(arg0, arg1, arg2, arg3, arg4, arg5, arg6); }, jlcxx::arg("this"), jlcxx::arg("labValue"), jlcxx::arg("labAngle"), jlcxx::arg("labSize"), jlcxx::arg("labAlign"), jlcxx::arg("labColor"), jlcxx::arg("labFont"), jlcxx::arg("labText"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetLimits(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetLimits(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:164:23
    t.method("SetLimits", [](TAxis& a, Double_t arg0, Double_t arg1)->void { a.SetLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("xmin"), jlcxx::arg("xmax"));
    t.method("SetLimits", [](TAxis* a, Double_t arg0, Double_t arg1)->void { a->SetLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("xmin"), jlcxx::arg("xmax"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetMoreLogLabels(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetMoreLogLabels(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:165:23
    t.method("SetMoreLogLabels", [](TAxis& a)->void { a.SetMoreLogLabels(); }, jlcxx::arg("this"), jlcxx::arg("more"));
    t.method("SetMoreLogLabels", [](TAxis& a, Bool_t arg0)->void { a.SetMoreLogLabels(arg0); }, jlcxx::arg("this"), jlcxx::arg("more"));
    t.method("SetMoreLogLabels", [](TAxis* a)->void { a->SetMoreLogLabels(); }, jlcxx::arg("this"), jlcxx::arg("more"));
    t.method("SetMoreLogLabels", [](TAxis* a, Bool_t arg0)->void { a->SetMoreLogLabels(arg0); }, jlcxx::arg("this"), jlcxx::arg("more"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetNoExponent(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetNoExponent(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:166:23
    t.method("SetNoExponent", [](TAxis& a)->void { a.SetNoExponent(); }, jlcxx::arg("this"), jlcxx::arg("noExponent"));
    t.method("SetNoExponent", [](TAxis& a, Bool_t arg0)->void { a.SetNoExponent(arg0); }, jlcxx::arg("this"), jlcxx::arg("noExponent"));
    t.method("SetNoExponent", [](TAxis* a)->void { a->SetNoExponent(); }, jlcxx::arg("this"), jlcxx::arg("noExponent"));
    t.method("SetNoExponent", [](TAxis* a, Bool_t arg0)->void { a->SetNoExponent(arg0); }, jlcxx::arg("this"), jlcxx::arg("noExponent"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetParent(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetParent(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:167:23
    t.method("SetParent", [](TAxis& a, TObject * arg0)->void { a.SetParent(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("SetParent", [](TAxis* a, TObject * arg0)->void { a->SetParent(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetRange(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetRange(Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:168:23
    t.method("SetRange", [](TAxis& a)->void { a.SetRange(); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));
    t.method("SetRange", [](TAxis& a, Int_t arg0)->void { a.SetRange(arg0); }, jlcxx::arg("this"), jlcxx::arg("first"));
    t.method("SetRange", [](TAxis& a, Int_t arg0, Int_t arg1)->void { a.SetRange(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));
    t.method("SetRange", [](TAxis* a)->void { a->SetRange(); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));
    t.method("SetRange", [](TAxis* a, Int_t arg0)->void { a->SetRange(arg0); }, jlcxx::arg("this"), jlcxx::arg("first"));
    t.method("SetRange", [](TAxis* a, Int_t arg0, Int_t arg1)->void { a->SetRange(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetRangeUser(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetRangeUser(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:169:23
    t.method("SetRangeUser", [](TAxis& a, Double_t arg0, Double_t arg1)->void { a.SetRangeUser(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ufirst"), jlcxx::arg("ulast"));
    t.method("SetRangeUser", [](TAxis* a, Double_t arg0, Double_t arg1)->void { a->SetRangeUser(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ufirst"), jlcxx::arg("ulast"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetTicks(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetTicks(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:170:23
    t.method("SetTicks", [](TAxis& a)->void { a.SetTicks(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetTicks", [](TAxis& a, Option_t * arg0)->void { a.SetTicks(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetTicks", [](TAxis* a)->void { a->SetTicks(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetTicks", [](TAxis* a, Option_t * arg0)->void { a->SetTicks(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetTimeDisplay(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetTimeDisplay(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:171:23
    t.method("SetTimeDisplay", [](TAxis& a, Int_t arg0)->void { a.SetTimeDisplay(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));
    t.method("SetTimeDisplay", [](TAxis* a, Int_t arg0)->void { a->SetTimeDisplay(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetTimeFormat(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetTimeFormat(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:172:23
    t.method("SetTimeFormat", [](TAxis& a)->void { a.SetTimeFormat(); }, jlcxx::arg("this"), jlcxx::arg("format"));
    t.method("SetTimeFormat", [](TAxis& a, const char * arg0)->void { a.SetTimeFormat(arg0); }, jlcxx::arg("this"), jlcxx::arg("format"));
    t.method("SetTimeFormat", [](TAxis* a)->void { a->SetTimeFormat(); }, jlcxx::arg("this"), jlcxx::arg("format"));
    t.method("SetTimeFormat", [](TAxis* a, const char * arg0)->void { a->SetTimeFormat(arg0); }, jlcxx::arg("this"), jlcxx::arg("format"));

    DEBUG_MSG("Adding wrapper for void TAxis::SetTimeOffset(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::SetTimeOffset(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:173:23
    t.method("SetTimeOffset", [](TAxis& a, Double_t arg0)->void { a.SetTimeOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("toffset"));
    t.method("SetTimeOffset", [](TAxis& a, Double_t arg0, Option_t * arg1)->void { a.SetTimeOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("toffset"), jlcxx::arg("option"));
    t.method("SetTimeOffset", [](TAxis* a, Double_t arg0)->void { a->SetTimeOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("toffset"));
    t.method("SetTimeOffset", [](TAxis* a, Double_t arg0, Option_t * arg1)->void { a->SetTimeOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("toffset"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TAxis::UnZoom() (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::UnZoom()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:174:23
    t.method("UnZoom", [](TAxis& a)->void { a.UnZoom(); }, jlcxx::arg("this"));
    t.method("UnZoom", [](TAxis* a)->void { a->UnZoom(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::ZoomOut(Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::ZoomOut(Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TAxis.h:175:23
    t.method("ZoomOut", [](TAxis& a)->void { a.ZoomOut(); }, jlcxx::arg("this"), jlcxx::arg("factor"), jlcxx::arg("offset"));
    t.method("ZoomOut", [](TAxis& a, Double_t arg0)->void { a.ZoomOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("factor"));
    t.method("ZoomOut", [](TAxis& a, Double_t arg0, Double_t arg1)->void { a.ZoomOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("factor"), jlcxx::arg("offset"));
    t.method("ZoomOut", [](TAxis* a)->void { a->ZoomOut(); }, jlcxx::arg("this"), jlcxx::arg("factor"), jlcxx::arg("offset"));
    t.method("ZoomOut", [](TAxis* a, Double_t arg0)->void { a->ZoomOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("factor"));
    t.method("ZoomOut", [](TAxis* a, Double_t arg0, Double_t arg1)->void { a->ZoomOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("factor"), jlcxx::arg("offset"));

    DEBUG_MSG("Adding wrapper for Version_t TAxis::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TAxis::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TAxis!Class_Version", []()->Version_t { return TAxis::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxis::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxis::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TAxis const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TAxis const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TAxis::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TAxis& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TAxis* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TAxis::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TAxis!DeclFileName", []() { return (std::string)TAxis::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TAxis::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TAxis::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TAxis!ImplFileLine", []()->int { return TAxis::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TAxis::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TAxis!ImplFileName", []() { return (std::string)TAxis::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TAxis::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TAxis::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TAxis!Class_Name", []() { return (std::string)TAxis::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxis::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxis::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TAxis!Dictionary", []()->TClass * { return TAxis::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TAxis::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TAxis::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TAxis!Class", []()->TClass * { return TAxis::Class(); });

    DEBUG_MSG("Adding wrapper for void TAxis::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TAxis::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TAxis& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TAxis* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TAxis::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TAxis::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TAxis!DeclFileLine", []()->int { return TAxis::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TAxis>> type_;
};
std::shared_ptr<Wrapper> newJlTAxis(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTAxis(module));
}
