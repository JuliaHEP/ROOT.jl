// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TPrincipal> : std::false_type { };
  template<> struct DefaultConstructible<TPrincipal> : std::false_type { };
template<> struct SuperType<TPrincipal> { typedef TNamed type; };
}

// Class generating the wrapper for type TPrincipal
// signature to use in the veto file: TPrincipal
struct JlTPrincipal: public Wrapper {

  JlTPrincipal(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TPrincipal (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:21:7
    jlcxx::TypeWrapper<TPrincipal>  t = jlModule.add_type<TPrincipal>("TPrincipal",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TPrincipal>>(new jlcxx::TypeWrapper<TPrincipal>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TPrincipal::TPrincipal(Long64_t, Option_t *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:54:4
    t.constructor<Long64_t>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<Long64_t, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TPrincipal::AddRow(const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::AddRow(const Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:56:23
    t.method("AddRow", [](TPrincipal& a, const Double_t * arg0)->void { a.AddRow(arg0); });
    t.method("AddRow", [](TPrincipal* a, const Double_t * arg0)->void { a->AddRow(arg0); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:57:15
    t.method("Browse", [](TPrincipal& a, TBrowser * arg0)->void { a.Browse(arg0); });
    t.method("Browse", [](TPrincipal* a, TBrowser * arg0)->void { a->Browse(arg0); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::Clear(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:58:15
    t.method("Clear", [](TPrincipal& a)->void { a.Clear(); });
    t.method("Clear", [](TPrincipal& a, Option_t * arg0)->void { a.Clear(arg0); });
    t.method("Clear", [](TPrincipal* a)->void { a->Clear(); });
    t.method("Clear", [](TPrincipal* a, Option_t * arg0)->void { a->Clear(arg0); });

    DEBUG_MSG("Adding wrapper for const TMatrixD * TPrincipal::GetCovarianceMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const TMatrixD * TPrincipal::GetCovarianceMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:60:23
    t.method("GetCovarianceMatrix", [](TPrincipal const& a)->const TMatrixD * { return a.GetCovarianceMatrix(); });
    t.method("GetCovarianceMatrix", [](TPrincipal const* a)->const TMatrixD * { return a->GetCovarianceMatrix(); });

    DEBUG_MSG("Adding wrapper for const TVectorD * TPrincipal::GetEigenValues() (" __HERE__ ")");
    // signature to use in the veto list: const TVectorD * TPrincipal::GetEigenValues()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:61:23
    t.method("GetEigenValues", [](TPrincipal const& a)->const TVectorD * { return a.GetEigenValues(); });
    t.method("GetEigenValues", [](TPrincipal const* a)->const TVectorD * { return a->GetEigenValues(); });

    DEBUG_MSG("Adding wrapper for const TMatrixD * TPrincipal::GetEigenVectors() (" __HERE__ ")");
    // signature to use in the veto list: const TMatrixD * TPrincipal::GetEigenVectors()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:62:23
    t.method("GetEigenVectors", [](TPrincipal const& a)->const TMatrixD * { return a.GetEigenVectors(); });
    t.method("GetEigenVectors", [](TPrincipal const* a)->const TMatrixD * { return a->GetEigenVectors(); });

    DEBUG_MSG("Adding wrapper for TList * TPrincipal::GetHistograms() (" __HERE__ ")");
    // signature to use in the veto list: TList * TPrincipal::GetHistograms()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:63:23
    t.method("GetHistograms", [](TPrincipal const& a)->TList * { return a.GetHistograms(); });
    t.method("GetHistograms", [](TPrincipal const* a)->TList * { return a->GetHistograms(); });

    DEBUG_MSG("Adding wrapper for const TVectorD * TPrincipal::GetMeanValues() (" __HERE__ ")");
    // signature to use in the veto list: const TVectorD * TPrincipal::GetMeanValues()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:64:23
    t.method("GetMeanValues", [](TPrincipal const& a)->const TVectorD * { return a.GetMeanValues(); });
    t.method("GetMeanValues", [](TPrincipal const* a)->const TVectorD * { return a->GetMeanValues(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TPrincipal::GetRow(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TPrincipal::GetRow(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:65:23
    t.method("GetRow", [](TPrincipal& a, Long64_t arg0)->const Double_t * { return a.GetRow(arg0); });
    t.method("GetRow", [](TPrincipal* a, Long64_t arg0)->const Double_t * { return a->GetRow(arg0); });

    DEBUG_MSG("Adding wrapper for const TVectorD * TPrincipal::GetSigmas() (" __HERE__ ")");
    // signature to use in the veto list: const TVectorD * TPrincipal::GetSigmas()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:66:23
    t.method("GetSigmas", [](TPrincipal const& a)->const TVectorD * { return a.GetSigmas(); });
    t.method("GetSigmas", [](TPrincipal const* a)->const TVectorD * { return a->GetSigmas(); });

    DEBUG_MSG("Adding wrapper for const TVectorD * TPrincipal::GetUserData() (" __HERE__ ")");
    // signature to use in the veto list: const TVectorD * TPrincipal::GetUserData()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:67:23
    t.method("GetUserData", [](TPrincipal const& a)->const TVectorD * { return a.GetUserData(); });
    t.method("GetUserData", [](TPrincipal const* a)->const TVectorD * { return a->GetUserData(); });

    DEBUG_MSG("Adding wrapper for Bool_t TPrincipal::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TPrincipal::IsFolder()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:68:23
    t.method("IsFolder", [](TPrincipal const& a)->Bool_t { return a.IsFolder(); });
    t.method("IsFolder", [](TPrincipal const* a)->Bool_t { return a->IsFolder(); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::MakeCode(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::MakeCode(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:69:23
    t.method("MakeCode", [](TPrincipal& a)->void { a.MakeCode(); });
    t.method("MakeCode", [](TPrincipal& a, const char * arg0)->void { a.MakeCode(arg0); });
    t.method("MakeCode", [](TPrincipal& a, const char * arg0, Option_t * arg1)->void { a.MakeCode(arg0, arg1); });
    t.method("MakeCode", [](TPrincipal* a)->void { a->MakeCode(); });
    t.method("MakeCode", [](TPrincipal* a, const char * arg0)->void { a->MakeCode(arg0); });
    t.method("MakeCode", [](TPrincipal* a, const char * arg0, Option_t * arg1)->void { a->MakeCode(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::MakeHistograms(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::MakeHistograms(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:70:23
    t.method("MakeHistograms", [](TPrincipal& a)->void { a.MakeHistograms(); });
    t.method("MakeHistograms", [](TPrincipal& a, const char * arg0)->void { a.MakeHistograms(arg0); });
    t.method("MakeHistograms", [](TPrincipal& a, const char * arg0, Option_t * arg1)->void { a.MakeHistograms(arg0, arg1); });
    t.method("MakeHistograms", [](TPrincipal* a)->void { a->MakeHistograms(); });
    t.method("MakeHistograms", [](TPrincipal* a, const char * arg0)->void { a->MakeHistograms(arg0); });
    t.method("MakeHistograms", [](TPrincipal* a, const char * arg0, Option_t * arg1)->void { a->MakeHistograms(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::MakeMethods(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::MakeMethods(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:71:23
    t.method("MakeMethods", [](TPrincipal& a)->void { a.MakeMethods(); });
    t.method("MakeMethods", [](TPrincipal& a, const char * arg0)->void { a.MakeMethods(arg0); });
    t.method("MakeMethods", [](TPrincipal& a, const char * arg0, Option_t * arg1)->void { a.MakeMethods(arg0, arg1); });
    t.method("MakeMethods", [](TPrincipal* a)->void { a->MakeMethods(); });
    t.method("MakeMethods", [](TPrincipal* a, const char * arg0)->void { a->MakeMethods(arg0); });
    t.method("MakeMethods", [](TPrincipal* a, const char * arg0, Option_t * arg1)->void { a->MakeMethods(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::MakePrincipals() (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::MakePrincipals()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:72:23
    t.method("MakePrincipals", [](TPrincipal& a)->void { a.MakePrincipals(); });
    t.method("MakePrincipals", [](TPrincipal* a)->void { a->MakePrincipals(); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::P2X(const Double_t *, Double_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::P2X(const Double_t *, Double_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:73:23
    t.method("P2X", [](TPrincipal& a, const Double_t * arg0, Double_t * arg1, Int_t arg2)->void { a.P2X(arg0, arg1, arg2); });
    t.method("P2X", [](TPrincipal* a, const Double_t * arg0, Double_t * arg1, Int_t arg2)->void { a->P2X(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:74:15
    t.method("Print", [](TPrincipal const& a)->void { a.Print(); });
    t.method("Print", [](TPrincipal const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TPrincipal const* a)->void { a->Print(); });
    t.method("Print", [](TPrincipal const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::SumOfSquareResiduals(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::SumOfSquareResiduals(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:75:23
    t.method("SumOfSquareResiduals", [](TPrincipal& a, const Double_t * arg0, Double_t * arg1)->void { a.SumOfSquareResiduals(arg0, arg1); });
    t.method("SumOfSquareResiduals", [](TPrincipal* a, const Double_t * arg0, Double_t * arg1)->void { a->SumOfSquareResiduals(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::Test(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::Test(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:76:23
    t.method("Test", [](TPrincipal& a)->void { a.Test(); });
    t.method("Test", [](TPrincipal& a, Option_t * arg0)->void { a.Test(arg0); });
    t.method("Test", [](TPrincipal* a)->void { a->Test(); });
    t.method("Test", [](TPrincipal* a, Option_t * arg0)->void { a->Test(arg0); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::X2P(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::X2P(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:77:23
    t.method("X2P", [](TPrincipal& a, const Double_t * arg0, Double_t * arg1)->void { a.X2P(arg0, arg1); });
    t.method("X2P", [](TPrincipal* a, const Double_t * arg0, Double_t * arg1)->void { a->X2P(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TPrincipal::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TPrincipal::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!Class_Version", []()->Version_t { return TPrincipal::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TPrincipal::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPrincipal::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    t.method("IsA", [](TPrincipal const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TPrincipal const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    t.method("StreamerNVirtual", [](TPrincipal& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TPrincipal* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TPrincipal::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPrincipal::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!DeclFileName", []() { return (std::string)TPrincipal::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TPrincipal::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TPrincipal::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!ImplFileLine", []()->int { return TPrincipal::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TPrincipal::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPrincipal::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!ImplFileName", []() { return (std::string)TPrincipal::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TPrincipal::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TPrincipal::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!Class_Name", []() { return (std::string)TPrincipal::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TPrincipal::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPrincipal::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!Dictionary", []()->TClass * { return TPrincipal::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TPrincipal::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TPrincipal::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!Class", []()->TClass * { return TPrincipal::Class(); });

    DEBUG_MSG("Adding wrapper for void TPrincipal::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TPrincipal::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    t.method("Streamer", [](TPrincipal& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TPrincipal* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TPrincipal::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TPrincipal::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TPrincipal.h:79:4
    module_.method("TPrincipal!DeclFileLine", []()->int { return TPrincipal::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TPrincipal>> type_;
};
std::shared_ptr<Wrapper> newJlTPrincipal(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTPrincipal(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TTreeFriendLeafIter> : std::false_type { };
  template<> struct DefaultConstructible<TTreeFriendLeafIter> : std::false_type { };
template<> struct SuperType<TTreeFriendLeafIter> { typedef TIterator type; };
}

// Class generating the wrapper for type TTreeFriendLeafIter
// signature to use in the veto file: TTreeFriendLeafIter
struct JlTTreeFriendLeafIter: public Wrapper {

  JlTTreeFriendLeafIter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTreeFriendLeafIter (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:670:7
    jlcxx::TypeWrapper<TTreeFriendLeafIter>  t = jlModule.add_type<TTreeFriendLeafIter>("TTreeFriendLeafIter",
      jlcxx::julia_base_type<TIterator>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTreeFriendLeafIter>>(new jlcxx::TypeWrapper<TTreeFriendLeafIter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TTreeFriendLeafIter::TTreeFriendLeafIter(const TTree *, bool) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:682:4
    t.constructor<const TTree *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const TTree *, bool>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TTreeFriendLeafIter::TTreeFriendLeafIter(const TTreeFriendLeafIter &) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:683:4
    t.constructor<const TTreeFriendLeafIter &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for TIterator & TTreeFriendLeafIter::operator=(const TIterator &) (" __HERE__ ")");
    // signature to use in the veto list: TIterator & TTreeFriendLeafIter::operator=(const TIterator &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:685:15
    t.method("assign", [](TTreeFriendLeafIter& a, const TIterator & arg0)->TIterator & { return a.operator=(arg0); });
    t.method("assign", [](TTreeFriendLeafIter* a, const TIterator & arg0)->TIterator & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for TTreeFriendLeafIter & TTreeFriendLeafIter::operator=(const TTreeFriendLeafIter &) (" __HERE__ ")");
    // signature to use in the veto list: TTreeFriendLeafIter & TTreeFriendLeafIter::operator=(const TTreeFriendLeafIter &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:686:25
    t.method("assign", [](TTreeFriendLeafIter& a, const TTreeFriendLeafIter & arg0)->TTreeFriendLeafIter & { return a.operator=(arg0); });
    t.method("assign", [](TTreeFriendLeafIter* a, const TTreeFriendLeafIter & arg0)->TTreeFriendLeafIter & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for const TCollection * TTreeFriendLeafIter::GetCollection() (" __HERE__ ")");
    // signature to use in the veto list: const TCollection * TTreeFriendLeafIter::GetCollection()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:688:23
    t.method("GetCollection", [](TTreeFriendLeafIter const& a)->const TCollection * { return a.GetCollection(); });
    t.method("GetCollection", [](TTreeFriendLeafIter const* a)->const TCollection * { return a->GetCollection(); });

    DEBUG_MSG("Adding wrapper for Option_t * TTreeFriendLeafIter::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TTreeFriendLeafIter::GetOption()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:689:23
    t.method("GetOption", [](TTreeFriendLeafIter const& a)->Option_t * { return a.GetOption(); });
    t.method("GetOption", [](TTreeFriendLeafIter const* a)->Option_t * { return a->GetOption(); });

    DEBUG_MSG("Adding wrapper for TObject * TTreeFriendLeafIter::Next() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TTreeFriendLeafIter::Next()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:690:23
    t.method("Next", [](TTreeFriendLeafIter& a)->TObject * { return a.Next(); });
    t.method("Next", [](TTreeFriendLeafIter* a)->TObject * { return a->Next(); });

    DEBUG_MSG("Adding wrapper for void TTreeFriendLeafIter::Reset() (" __HERE__ ")");
    // signature to use in the veto list: void TTreeFriendLeafIter::Reset()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:691:23
    t.method("Reset", [](TTreeFriendLeafIter& a)->void { a.Reset(); });
    t.method("Reset", [](TTreeFriendLeafIter* a)->void { a->Reset(); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool TTreeFriendLeafIter::operator!=(const TIterator &) (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeFriendLeafIter::operator!=(const TIterator &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:692:9
    t.method("!=", [](TTreeFriendLeafIter const& a, const TIterator & arg0)->bool { return a.operator!=(arg0); });
    t.method("!=", [](TTreeFriendLeafIter const* a, const TIterator & arg0)->bool { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for bool TTreeFriendLeafIter::operator!=(const TTreeFriendLeafIter &) (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeFriendLeafIter::operator!=(const TTreeFriendLeafIter &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:696:9
    t.method("!=", [](TTreeFriendLeafIter const& a, const TTreeFriendLeafIter & arg0)->bool { return a.operator!=(arg0); });
    t.method("!=", [](TTreeFriendLeafIter const* a, const TTreeFriendLeafIter & arg0)->bool { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for TObject * TTreeFriendLeafIter::operator*() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TTreeFriendLeafIter::operator*()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:700:13
    t.method("getindex", [](TTreeFriendLeafIter const& a)->TObject * { return a.operator*(); });
    t.method("getindex", [](TTreeFriendLeafIter const* a)->TObject * { return a->operator*(); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for Version_t TTreeFriendLeafIter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TTreeFriendLeafIter::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!Class_Version", []()->Version_t { return TTreeFriendLeafIter::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeFriendLeafIter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeFriendLeafIter::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    t.method("IsA", [](TTreeFriendLeafIter const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TTreeFriendLeafIter const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TTreeFriendLeafIter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeFriendLeafIter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    t.method("StreamerNVirtual", [](TTreeFriendLeafIter& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TTreeFriendLeafIter* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TTreeFriendLeafIter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeFriendLeafIter::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!DeclFileName", []() { return (std::string)TTreeFriendLeafIter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TTreeFriendLeafIter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTreeFriendLeafIter::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!ImplFileLine", []()->int { return TTreeFriendLeafIter::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TTreeFriendLeafIter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeFriendLeafIter::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!ImplFileName", []() { return (std::string)TTreeFriendLeafIter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TTreeFriendLeafIter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeFriendLeafIter::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!Class_Name", []() { return (std::string)TTreeFriendLeafIter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeFriendLeafIter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeFriendLeafIter::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!Dictionary", []()->TClass * { return TTreeFriendLeafIter::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeFriendLeafIter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeFriendLeafIter::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!Class", []()->TClass * { return TTreeFriendLeafIter::Class(); });

    DEBUG_MSG("Adding wrapper for void TTreeFriendLeafIter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeFriendLeafIter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    t.method("Streamer", [](TTreeFriendLeafIter& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TTreeFriendLeafIter* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TTreeFriendLeafIter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTreeFriendLeafIter::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTree.h:704:4
    module_.method("TTreeFriendLeafIter!DeclFileLine", []()->int { return TTreeFriendLeafIter::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTreeFriendLeafIter>> type_;
};
std::shared_ptr<Wrapper> newJlTTreeFriendLeafIter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTreeFriendLeafIter(module));
}

namespace jlcxx {

  template<typename T>
  struct BuildParameterList<TBranchPtr<T>>
  {
    typedef ParameterList<T> type;
  };

  template<typename T> struct IsMirroredType<TBranchPtr<T>> : std::false_type { };
  template<typename T> struct DefaultConstructible<TBranchPtr<T>> : std::false_type { };
}

// Class generating the wrapper for type TBranchPtr
// signature to use in the veto file: TBranchPtr
struct JlTBranchPtr: public Wrapper {

  JlTBranchPtr(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TBranchPtr (" __HERE__ ")");
    // defined in src/TBranchPtr.h:13:7
    jlcxx::TypeWrapper<jlcxx::Parametric<jlcxx::TypeVar<1>>>  t =  jlModule.add_type<jlcxx::Parametric<jlcxx::TypeVar<1>>>("TBranchPtr");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<jlcxx::Parametric<jlcxx::TypeVar<1>>>>(new jlcxx::TypeWrapper<jlcxx::Parametric<jlcxx::TypeVar<1>>>(jlModule, t));
    auto t94_decl_methods = [this]<typename T> (jlcxx::TypeWrapper<TBranchPtr<T>> wrapped){
      auto module_ = this->module_;
      typedef TBranchPtr<T> WrappedType;


      DEBUG_MSG("Adding wrapper for void TBranchPtr::TBranchPtr<T>(TBranch *) (" __HERE__ ")");
      // defined in src/TBranchPtr.h:17:3
      wrapped.template constructor<TBranch *>(/*finalize=*/jlcxx::finalize_policy::yes);

      DEBUG_MSG("Adding wrapper for TBranch * TBranchPtr::operator->() (" __HERE__ ")");
      // signature to use in the veto list: TBranch * TBranchPtr::operator->()
      // defined in src/TBranchPtr.h:19:12
      wrapped.method("arrow", [](WrappedType const& a)->TBranch * { return a.operator->(); });
      wrapped.method("arrow", [](WrappedType const* a)->TBranch * { return a->operator->(); });
      module_.set_override_module(jl_base_module);

      DEBUG_MSG("Adding wrapper for TBranch & TBranchPtr::operator*() (" __HERE__ ")");
      // signature to use in the veto list: TBranch & TBranchPtr::operator*()
      // defined in src/TBranchPtr.h:20:12
      wrapped.method("getindex", [](WrappedType const& a)->TBranch & { return a.operator*(); });
      wrapped.method("getindex", [](WrappedType const* a)->TBranch & { return a->operator*(); });

      module_.unset_override_module();
    };
    t.apply<TBranchPtr<std::vector<double>>, TBranchPtr<std::vector<float>>, TBranchPtr<std::vector<unsigned long>>, TBranchPtr<std::vector<long>>, TBranchPtr<std::vector<unsigned int>>, TBranchPtr<std::vector<int>>, TBranchPtr<std::vector<unsigned short>>, TBranchPtr<std::vector<short>>, TBranchPtr<std::vector<unsigned char>>, TBranchPtr<std::vector<char>>, TBranchPtr<double>, TBranchPtr<float>, TBranchPtr<unsigned long>, TBranchPtr<long>, TBranchPtr<unsigned int>, TBranchPtr<int>, TBranchPtr<unsigned short>, TBranchPtr<short>, TBranchPtr<unsigned char>, TBranchPtr<char>>(t94_decl_methods);
  }

  void add_methods() const{
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<jlcxx::Parametric<jlcxx::TypeVar<1>>>> type_;
};
std::shared_ptr<Wrapper> newJlTBranchPtr(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTBranchPtr(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TTreeReader> : std::false_type { };
  template<> struct DefaultConstructible<TTreeReader> : std::false_type { };
  template<> struct CopyConstructible<TTreeReader> : std::false_type { };
template<> struct SuperType<TTreeReader> { typedef TObject type; };
}

// Class generating the wrapper for type TTreeReader
// signature to use in the veto file: TTreeReader
struct JlTTreeReader: public Wrapper {

  JlTTreeReader(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTreeReader (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:44:7
    jlcxx::TypeWrapper<TTreeReader>  t = jlModule.add_type<TTreeReader>("TTreeReader",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTreeReader>>(new jlcxx::TypeWrapper<TTreeReader>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TTreeReader::TTreeReader(TTree *, TEntryList *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:184:4
    t.constructor<TTree *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<TTree *, TEntryList *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TTreeReader::TTreeReader(const char *, TDirectory *, TEntryList *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:185:4
    t.constructor<const char *, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TDirectory *, TEntryList *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TTreeReader::TTreeReader(const char *, TEntryList *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:186:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TEntryList *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void TTreeReader::SetTree(TTree *, TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::SetTree(TTree *, TEntryList *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:190:9
    t.method("SetTree", [](TTreeReader& a, TTree * arg0)->void { a.SetTree(arg0); });
    t.method("SetTree", [](TTreeReader& a, TTree * arg0, TEntryList * arg1)->void { a.SetTree(arg0, arg1); });
    t.method("SetTree", [](TTreeReader* a, TTree * arg0)->void { a->SetTree(arg0); });
    t.method("SetTree", [](TTreeReader* a, TTree * arg0, TEntryList * arg1)->void { a->SetTree(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTreeReader::SetTree(const char *, TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::SetTree(const char *, TEntryList *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:191:9
    t.method("SetTree", [](TTreeReader& a, const char * arg0)->void { a.SetTree(arg0); });
    t.method("SetTree", [](TTreeReader& a, const char * arg0, TEntryList * arg1)->void { a.SetTree(arg0, arg1); });
    t.method("SetTree", [](TTreeReader* a, const char * arg0)->void { a->SetTree(arg0); });
    t.method("SetTree", [](TTreeReader* a, const char * arg0, TEntryList * arg1)->void { a->SetTree(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTreeReader::SetTree(const char *, TDirectory *, TEntryList *) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::SetTree(const char *, TDirectory *, TEntryList *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:194:9
    t.method("SetTree", [](TTreeReader& a, const char * arg0, TDirectory * arg1)->void { a.SetTree(arg0, arg1); });
    t.method("SetTree", [](TTreeReader& a, const char * arg0, TDirectory * arg1, TEntryList * arg2)->void { a.SetTree(arg0, arg1, arg2); });
    t.method("SetTree", [](TTreeReader* a, const char * arg0, TDirectory * arg1)->void { a->SetTree(arg0, arg1); });
    t.method("SetTree", [](TTreeReader* a, const char * arg0, TDirectory * arg1, TEntryList * arg2)->void { a->SetTree(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for bool TTreeReader::IsChain() (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeReader::IsChain()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:196:9
    t.method("IsChain", [](TTreeReader const& a)->bool { return a.IsChain(); });
    t.method("IsChain", [](TTreeReader const* a)->bool { return a->IsChain(); });

    DEBUG_MSG("Adding wrapper for bool TTreeReader::IsInvalid() (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeReader::IsInvalid()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:198:9
    t.method("IsInvalid", [](TTreeReader const& a)->bool { return a.IsInvalid(); });
    t.method("IsInvalid", [](TTreeReader const* a)->bool { return a->IsInvalid(); });

    DEBUG_MSG("Adding wrapper for TTree * TTreeReader::GetTree() (" __HERE__ ")");
    // signature to use in the veto list: TTree * TTreeReader::GetTree()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:200:11
    t.method("GetTree", [](TTreeReader const& a)->TTree * { return a.GetTree(); });
    t.method("GetTree", [](TTreeReader const* a)->TTree * { return a->GetTree(); });

    DEBUG_MSG("Adding wrapper for TEntryList * TTreeReader::GetEntryList() (" __HERE__ ")");
    // signature to use in the veto list: TEntryList * TTreeReader::GetEntryList()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:201:16
    t.method("GetEntryList", [](TTreeReader const& a)->TEntryList * { return a.GetEntryList(); });
    t.method("GetEntryList", [](TTreeReader const* a)->TEntryList * { return a->GetEntryList(); });

    DEBUG_MSG("Adding wrapper for bool TTreeReader::Next() (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeReader::Next()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:209:9
    t.method("Next", [](TTreeReader& a)->bool { return a.Next(); });
    t.method("Next", [](TTreeReader* a)->bool { return a->Next(); });

    DEBUG_MSG("Adding wrapper for TTreeReader::EEntryStatus TTreeReader::SetEntry(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::EEntryStatus TTreeReader::SetEntry(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:218:17
    t.method("SetEntry", [](TTreeReader& a, Long64_t arg0)->TTreeReader::EEntryStatus { return a.SetEntry(arg0); });
    t.method("SetEntry", [](TTreeReader* a, Long64_t arg0)->TTreeReader::EEntryStatus { return a->SetEntry(arg0); });

    DEBUG_MSG("Adding wrapper for TTreeReader::EEntryStatus TTreeReader::SetLocalEntry(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::EEntryStatus TTreeReader::SetLocalEntry(Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:228:17
    t.method("SetLocalEntry", [](TTreeReader& a, Long64_t arg0)->TTreeReader::EEntryStatus { return a.SetLocalEntry(arg0); });
    t.method("SetLocalEntry", [](TTreeReader* a, Long64_t arg0)->TTreeReader::EEntryStatus { return a->SetLocalEntry(arg0); });

    DEBUG_MSG("Adding wrapper for TTreeReader::EEntryStatus TTreeReader::SetEntriesRange(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::EEntryStatus TTreeReader::SetEntriesRange(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:230:17
    t.method("SetEntriesRange", [](TTreeReader& a, Long64_t arg0, Long64_t arg1)->TTreeReader::EEntryStatus { return a.SetEntriesRange(arg0, arg1); });
    t.method("SetEntriesRange", [](TTreeReader* a, Long64_t arg0, Long64_t arg1)->TTreeReader::EEntryStatus { return a->SetEntriesRange(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TTreeReader::Restart() (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::Restart()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:238:9
    t.method("Restart", [](TTreeReader& a)->void { a.Restart(); });
    t.method("Restart", [](TTreeReader* a)->void { a->Restart(); });

    DEBUG_MSG("Adding wrapper for TTreeReader::EEntryStatus TTreeReader::GetEntryStatus() (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::EEntryStatus TTreeReader::GetEntryStatus()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:242:17
    t.method("GetEntryStatus", [](TTreeReader const& a)->TTreeReader::EEntryStatus { return a.GetEntryStatus(); });
    t.method("GetEntryStatus", [](TTreeReader const* a)->TTreeReader::EEntryStatus { return a->GetEntryStatus(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTreeReader::GetEntries() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTreeReader::GetEntries()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:244:13
    t.method("GetEntries", [](TTreeReader const& a)->Long64_t { return a.GetEntries(); });
    t.method("GetEntries", [](TTreeReader const* a)->Long64_t { return a->GetEntries(); });

    DEBUG_MSG("Adding wrapper for Long64_t TTreeReader::GetEntries(bool) (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTreeReader::GetEntries(bool)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:245:13
    t.method("GetEntries", [](TTreeReader& a, bool arg0)->Long64_t { return a.GetEntries(arg0); });
    t.method("GetEntries", [](TTreeReader* a, bool arg0)->Long64_t { return a->GetEntries(arg0); });

    DEBUG_MSG("Adding wrapper for Long64_t TTreeReader::GetCurrentEntry() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TTreeReader::GetCurrentEntry()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:254:13
    t.method("GetCurrentEntry", [](TTreeReader const& a)->Long64_t { return a.GetCurrentEntry(); });
    t.method("GetCurrentEntry", [](TTreeReader const* a)->Long64_t { return a->GetCurrentEntry(); });

    DEBUG_MSG("Adding wrapper for bool TTreeReader::Notify() (" __HERE__ ")");
    // signature to use in the veto list: bool TTreeReader::Notify()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:256:9
    t.method("Notify", [](TTreeReader& a)->bool { return a.Notify(); });
    t.method("Notify", [](TTreeReader* a)->bool { return a->Notify(); });

    DEBUG_MSG("Adding wrapper for TTreeReader::Iterator_t TTreeReader::begin() (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::Iterator_t TTreeReader::begin()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:259:15
    t.method("begin", [](TTreeReader& a)->TTreeReader::Iterator_t { return a.begin(); });
    t.method("begin", [](TTreeReader* a)->TTreeReader::Iterator_t { return a->begin(); });

    DEBUG_MSG("Adding wrapper for TTreeReader::Iterator_t TTreeReader::end() (" __HERE__ ")");
    // signature to use in the veto list: TTreeReader::Iterator_t TTreeReader::end()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:263:15
    t.method("end", [](TTreeReader& a)->TTreeReader::Iterator_t { return a.end(); });
    t.method("end", [](TTreeReader* a)->TTreeReader::Iterator_t { return a->end(); });

    DEBUG_MSG("Adding wrapper for Version_t TTreeReader::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TTreeReader::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!Class_Version", []()->Version_t { return TTreeReader::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeReader::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeReader::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    t.method("IsA", [](TTreeReader const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TTreeReader const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TTreeReader::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    t.method("StreamerNVirtual", [](TTreeReader& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TTreeReader* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TTreeReader::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeReader::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!DeclFileName", []() { return (std::string)TTreeReader::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TTreeReader::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTreeReader::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!ImplFileLine", []()->int { return TTreeReader::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TTreeReader::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeReader::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!ImplFileName", []() { return (std::string)TTreeReader::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TTreeReader::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TTreeReader::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!Class_Name", []() { return (std::string)TTreeReader::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeReader::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeReader::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!Dictionary", []()->TClass * { return TTreeReader::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TTreeReader::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TTreeReader::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!Class", []()->TClass * { return TTreeReader::Class(); });

    DEBUG_MSG("Adding wrapper for void TTreeReader::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TTreeReader::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    t.method("Streamer", [](TTreeReader& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TTreeReader* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TTreeReader::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TTreeReader::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TTreeReader.h:333:4
    module_.method("TTreeReader!DeclFileLine", []()->int { return TTreeReader::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTreeReader>> type_;
};
std::shared_ptr<Wrapper> newJlTTreeReader(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTreeReader(module));
}
