// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TKey> : std::false_type { };
  template<> struct DefaultConstructible<TKey> : std::false_type { };
template<> struct SuperType<TKey> { typedef TNamed type; };
}

// Class generating the wrapper for type TKey
// signature to use in the veto file: TKey
struct JlTKey: public Wrapper {

  JlTKey(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TKey (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:28:7
    jlcxx::TypeWrapper<TKey>  t = jlModule.add_type<TKey>("TKey",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TKey>>(new jlcxx::TypeWrapper<TKey>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:62:4
    t.constructor<TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("motherDir")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(TDirectory *, const TKey &, UShort_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:63:4
    t.constructor<TDirectory *, const TKey &, UShort_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("motherDir"), jlcxx::arg("orig"), jlcxx::arg("pidOffset")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(const char *, const char *, const TClass *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:64:4
    t.constructor<const char *, const char *, const TClass *, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("cl"), jlcxx::arg("nbytes"), jlcxx::arg("motherDir")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(const TString &, const TString &, const TClass *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:65:4
    t.constructor<const TString &, const TString &, const TClass *, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("cl"), jlcxx::arg("nbytes"), jlcxx::arg("motherDir")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(const TObject *, const char *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:66:4
    t.constructor<const TObject *, const char *, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("bufsize"), jlcxx::arg("motherDir")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(const void *, const TClass *, const char *, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:67:4
    t.constructor<const void *, const TClass *, const char *, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("bufsize"), jlcxx::arg("motherDir")    );


    DEBUG_MSG("Adding wrapper for void TKey::TKey(Long64_t, Int_t, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:68:4
    t.constructor<Long64_t, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("pointer"), jlcxx::arg("nbytes")    );
    t.constructor<Long64_t, Int_t, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("pointer"), jlcxx::arg("nbytes"), jlcxx::arg("motherDir")    );

    DEBUG_MSG("Adding wrapper for void TKey::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:71:24
    t.method("Browse", [](TKey& a, TBrowser * arg0)->void { a.Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("Browse", [](TKey* a, TBrowser * arg0)->void { a->Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for void TKey::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::Delete(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:72:24
    t.method("Delete", [](TKey& a)->void { a.Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TKey& a, Option_t * arg0)->void { a.Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Delete", [](TKey* a)->void { a->Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TKey* a, Option_t * arg0)->void { a->Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TKey::DeleteBuffer() (" __HERE__ ")");
    // signature to use in the veto list: void TKey::DeleteBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:73:24
    t.method("DeleteBuffer", [](TKey& a)->void { a.DeleteBuffer(); }, jlcxx::arg("this"));
    t.method("DeleteBuffer", [](TKey* a)->void { a->DeleteBuffer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::FillBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::FillBuffer(char *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:74:24
    t.method("FillBuffer", [](TKey& a, char *& arg0)->void { a.FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));
    t.method("FillBuffer", [](TKey* a, char *& arg0)->void { a->FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));

    DEBUG_MSG("Adding wrapper for const char * TKey::GetClassName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::GetClassName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:75:24
    t.method("GetClassName", [](TKey const& a) { return (std::string)a.GetClassName(); }, jlcxx::arg("this"));
    t.method("GetClassName", [](TKey const* a) { return (std::string)a->GetClassName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TKey::GetIconName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::GetIconName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:76:24
    t.method("GetIconName", [](TKey const& a) { return (std::string)a.GetIconName(); }, jlcxx::arg("this"));
    t.method("GetIconName", [](TKey const* a) { return (std::string)a->GetIconName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * TKey::GetTitle() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::GetTitle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:77:24
    t.method("GetTitle", [](TKey const& a) { return (std::string)a.GetTitle(); }, jlcxx::arg("this"));
    t.method("GetTitle", [](TKey const* a) { return (std::string)a->GetTitle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for char * TKey::GetBuffer() (" __HERE__ ")");
    // signature to use in the veto list: char * TKey::GetBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:78:24
    t.method("GetBuffer", [](TKey const& a)->char * { return a.GetBuffer(); }, jlcxx::arg("this"));
    t.method("GetBuffer", [](TKey const* a)->char * { return a->GetBuffer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TBuffer * TKey::GetBufferRef() (" __HERE__ ")");
    // signature to use in the veto list: TBuffer * TKey::GetBufferRef()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:79:24
    t.method("GetBufferRef", [](TKey const& a)->TBuffer * { return a.GetBufferRef(); }, jlcxx::arg("this"));
    t.method("GetBufferRef", [](TKey const* a)->TBuffer * { return a->GetBufferRef(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Short_t TKey::GetCycle() (" __HERE__ ")");
    // signature to use in the veto list: Short_t TKey::GetCycle()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:80:24
    t.method("GetCycle", [](TKey const& a)->Short_t { return a.GetCycle(); }, jlcxx::arg("this"));
    t.method("GetCycle", [](TKey const* a)->Short_t { return a->GetCycle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TDatime & TKey::GetDatime() (" __HERE__ ")");
    // signature to use in the veto list: const TDatime & TKey::GetDatime()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:81:24
    t.method("GetDatime", [](TKey const& a)->const TDatime & { return a.GetDatime(); }, jlcxx::arg("this"));
    t.method("GetDatime", [](TKey const* a)->const TDatime & { return a->GetDatime(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TFile * TKey::GetFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TKey::GetFile()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:82:24
    t.method("GetFile", [](TKey const& a)->TFile * { return a.GetFile(); }, jlcxx::arg("this"));
    t.method("GetFile", [](TKey const* a)->TFile * { return a->GetFile(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Short_t TKey::GetKeep() (" __HERE__ ")");
    // signature to use in the veto list: Short_t TKey::GetKeep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:83:24
    t.method("GetKeep", [](TKey const& a)->Short_t { return a.GetKeep(); }, jlcxx::arg("this"));
    t.method("GetKeep", [](TKey const* a)->Short_t { return a->GetKeep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::GetKeylen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::GetKeylen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:84:24
    t.method("GetKeylen", [](TKey const& a)->Int_t { return a.GetKeylen(); }, jlcxx::arg("this"));
    t.method("GetKeylen", [](TKey const* a)->Int_t { return a->GetKeylen(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TDirectory * TKey::GetMotherDir() (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TKey::GetMotherDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:85:24
    t.method("GetMotherDir", [](TKey const& a)->TDirectory * { return a.GetMotherDir(); }, jlcxx::arg("this"));
    t.method("GetMotherDir", [](TKey const* a)->TDirectory * { return a->GetMotherDir(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::GetNbytes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::GetNbytes()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:86:24
    t.method("GetNbytes", [](TKey const& a)->Int_t { return a.GetNbytes(); }, jlcxx::arg("this"));
    t.method("GetNbytes", [](TKey const* a)->Int_t { return a->GetNbytes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::GetObjlen() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::GetObjlen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:87:24
    t.method("GetObjlen", [](TKey const& a)->Int_t { return a.GetObjlen(); }, jlcxx::arg("this"));
    t.method("GetObjlen", [](TKey const* a)->Int_t { return a->GetObjlen(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::GetVersion() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::GetVersion()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:88:24
    t.method("GetVersion", [](TKey const& a)->Int_t { return a.GetVersion(); }, jlcxx::arg("this"));
    t.method("GetVersion", [](TKey const* a)->Int_t { return a->GetVersion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TKey::GetSeekKey() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TKey::GetSeekKey()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:89:24
    t.method("GetSeekKey", [](TKey const& a)->Long64_t { return a.GetSeekKey(); }, jlcxx::arg("this"));
    t.method("GetSeekKey", [](TKey const* a)->Long64_t { return a->GetSeekKey(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TKey::GetSeekPdir() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TKey::GetSeekPdir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:90:24
    t.method("GetSeekPdir", [](TKey const& a)->Long64_t { return a.GetSeekPdir(); }, jlcxx::arg("this"));
    t.method("GetSeekPdir", [](TKey const* a)->Long64_t { return a->GetSeekPdir(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::IncrementPidOffset(UShort_t) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::IncrementPidOffset(UShort_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:91:24
    t.method("IncrementPidOffset", [](TKey& a, UShort_t arg0)->void { a.IncrementPidOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));
    t.method("IncrementPidOffset", [](TKey* a, UShort_t arg0)->void { a->IncrementPidOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));

    DEBUG_MSG("Adding wrapper for Bool_t TKey::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TKey::IsFolder()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:92:24
    t.method("IsFolder", [](TKey const& a)->Bool_t { return a.IsFolder(); }, jlcxx::arg("this"));
    t.method("IsFolder", [](TKey const* a)->Bool_t { return a->IsFolder(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::Keep() (" __HERE__ ")");
    // signature to use in the veto list: void TKey::Keep()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:93:24
    t.method("Keep", [](TKey& a)->void { a.Keep(); }, jlcxx::arg("this"));
    t.method("Keep", [](TKey* a)->void { a->Keep(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::ls(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::ls(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:94:24
    t.method("ls", [](TKey const& a, Bool_t arg0)->void { a.ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("current"));
    t.method("ls", [](TKey const* a, Bool_t arg0)->void { a->ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("current"));

    DEBUG_MSG("Adding wrapper for void TKey::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:95:24
    t.method("ls", [](TKey const& a)->void { a.ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TKey const& a, Option_t * arg0)->void { a.ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("ls", [](TKey const* a)->void { a->ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TKey const* a, Option_t * arg0)->void { a->ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TKey::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:96:24
    t.method("Print", [](TKey const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TKey const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TKey const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TKey const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::Read(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::Read(TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:97:24
    t.method("Read", [](TKey& a, TObject * arg0)->Int_t { return a.Read(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("Read", [](TKey* a, TObject * arg0)->Int_t { return a->Read(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));

    DEBUG_MSG("Adding wrapper for TObject * TKey::ReadObj() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TKey::ReadObj()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:98:24
    t.method("ReadObj", [](TKey& a)->TObject * { return a.ReadObj(); }, jlcxx::arg("this"));
    t.method("ReadObj", [](TKey* a)->TObject * { return a->ReadObj(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObject * TKey::ReadObjWithBuffer(char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TKey::ReadObjWithBuffer(char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:99:24
    t.method("ReadObjWithBuffer", [](TKey& a, char * arg0)->TObject * { return a.ReadObjWithBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufferRead"));
    t.method("ReadObjWithBuffer", [](TKey* a, char * arg0)->TObject * { return a->ReadObjWithBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufferRead"));

    DEBUG_MSG("Adding wrapper for void * TKey::ReadObjectAny(const TClass *) (" __HERE__ ")");
    // signature to use in the veto list: void * TKey::ReadObjectAny(const TClass *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:106:24
    t.method("ReadObjectAny", [](TKey& a, const TClass * arg0)->void * { return a.ReadObjectAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("expectedClass"));
    t.method("ReadObjectAny", [](TKey* a, const TClass * arg0)->void * { return a->ReadObjectAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("expectedClass"));

    DEBUG_MSG("Adding wrapper for void TKey::ReadBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::ReadBuffer(char *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:107:24
    t.method("ReadBuffer", [](TKey& a, char *& arg0)->void { a.ReadBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));
    t.method("ReadBuffer", [](TKey* a, char *& arg0)->void { a->ReadBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));

    DEBUG_MSG("Adding wrapper for void TKey::ReadKeyBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::ReadKeyBuffer(char *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:108:24
    t.method("ReadKeyBuffer", [](TKey& a, char *& arg0)->void { a.ReadKeyBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));
    t.method("ReadKeyBuffer", [](TKey* a, char *& arg0)->void { a->ReadKeyBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));

    DEBUG_MSG("Adding wrapper for Bool_t TKey::ReadFile() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TKey::ReadFile()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:109:24
    t.method("ReadFile", [](TKey& a)->Bool_t { return a.ReadFile(); }, jlcxx::arg("this"));
    t.method("ReadFile", [](TKey* a)->Bool_t { return a->ReadFile(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::SetBuffer() (" __HERE__ ")");
    // signature to use in the veto list: void TKey::SetBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:110:24
    t.method("SetBuffer", [](TKey& a)->void { a.SetBuffer(); }, jlcxx::arg("this"));
    t.method("SetBuffer", [](TKey* a)->void { a->SetBuffer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::SetParent(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::SetParent(const TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:111:24
    t.method("SetParent", [](TKey& a, const TObject * arg0)->void { a.SetParent(arg0); }, jlcxx::arg("this"), jlcxx::arg("parent"));
    t.method("SetParent", [](TKey* a, const TObject * arg0)->void { a->SetParent(arg0); }, jlcxx::arg("this"), jlcxx::arg("parent"));

    DEBUG_MSG("Adding wrapper for void TKey::SetMotherDir(TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::SetMotherDir(TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:112:24
    t.method("SetMotherDir", [](TKey& a, TDirectory * arg0)->void { a.SetMotherDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));
    t.method("SetMotherDir", [](TKey* a, TDirectory * arg0)->void { a->SetMotherDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("dir"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::Sizeof() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::Sizeof()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:113:24
    t.method("Sizeof", [](TKey const& a)->Int_t { return a.Sizeof(); }, jlcxx::arg("this"));
    t.method("Sizeof", [](TKey const* a)->Int_t { return a->Sizeof(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TKey::WriteFile(Int_t, TFile *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TKey::WriteFile(Int_t, TFile *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TKey.h:114:24
    t.method("WriteFile", [](TKey& a)->Int_t { return a.WriteFile(); }, jlcxx::arg("this"));
    t.method("WriteFile", [](TKey& a, Int_t arg0)->Int_t { return a.WriteFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("cycle"));
    t.method("WriteFile", [](TKey& a, Int_t arg0, TFile * arg1)->Int_t { return a.WriteFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("cycle"), jlcxx::arg("f"));
    t.method("WriteFile", [](TKey* a)->Int_t { return a->WriteFile(); }, jlcxx::arg("this"));
    t.method("WriteFile", [](TKey* a, Int_t arg0)->Int_t { return a->WriteFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("cycle"));
    t.method("WriteFile", [](TKey* a, Int_t arg0, TFile * arg1)->Int_t { return a->WriteFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("cycle"), jlcxx::arg("f"));

    DEBUG_MSG("Adding wrapper for Version_t TKey::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TKey::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TKey!Class_Version", []()->Version_t { return TKey::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TKey::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TKey::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TKey const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TKey const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TKey::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TKey& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TKey* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TKey::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TKey!DeclFileName", []() { return (std::string)TKey::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TKey::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TKey::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TKey!ImplFileLine", []()->int { return TKey::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TKey::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TKey!ImplFileName", []() { return (std::string)TKey::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TKey::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TKey::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TKey!Class_Name", []() { return (std::string)TKey::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TKey::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TKey::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TKey!Dictionary", []()->TClass * { return TKey::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TKey::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TKey::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TKey!Class", []()->TClass * { return TKey::Class(); });

    DEBUG_MSG("Adding wrapper for void TKey::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TKey::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TKey& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TKey* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TKey::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TKey::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TKey!DeclFileLine", []()->int { return TKey::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TKey>> type_;
};
std::shared_ptr<Wrapper> newJlTKey(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTKey(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TDirectoryFile> : std::false_type { };
  template<> struct DefaultConstructible<TDirectoryFile> : std::false_type { };
template<> struct SuperType<TDirectoryFile> { typedef TDirectory type; };
}

// Class generating the wrapper for type TDirectoryFile
// signature to use in the veto file: TDirectoryFile
struct JlTDirectoryFile: public Wrapper {

  JlTDirectoryFile(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TDirectoryFile (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:32:7
    jlcxx::TypeWrapper<TDirectoryFile>  t = jlModule.add_type<TDirectoryFile>("TDirectoryFile",
      jlcxx::julia_base_type<TDirectory>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TDirectoryFile>>(new jlcxx::TypeWrapper<TDirectoryFile>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TDirectoryFile::TDirectoryFile(const char *, const char *, Option_t *, TDirectory *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:61:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title")    );
    t.constructor<const char *, const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("option")    );
    t.constructor<const char *, const char *, Option_t *, TDirectory *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("option"), jlcxx::arg("motherDir")    );

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Append(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Append(TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:64:23
    t.method("Append", [](TDirectoryFile& a, TObject * arg0)->void { a.Append(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("Append", [](TDirectoryFile& a, TObject * arg0, Bool_t arg1)->void { a.Append(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("replace"));
    t.method("Append", [](TDirectoryFile* a, TObject * arg0)->void { a->Append(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("Append", [](TDirectoryFile* a, TObject * arg0, Bool_t arg1)->void { a->Append(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("replace"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Add(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Add(TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:65:23
    t.method("Add", [](TDirectoryFile& a, TObject * arg0)->void { a.Add(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("Add", [](TDirectoryFile& a, TObject * arg0, Bool_t arg1)->void { a.Add(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("replace"));
    t.method("Add", [](TDirectoryFile* a, TObject * arg0)->void { a->Add(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("Add", [](TDirectoryFile* a, TObject * arg0, Bool_t arg1)->void { a->Add(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("replace"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::AppendKey(TKey *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::AppendKey(TKey *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:66:23
    t.method("AppendKey", [](TDirectoryFile& a, TKey * arg0)->Int_t { return a.AppendKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("key"));
    t.method("AppendKey", [](TDirectoryFile* a, TKey * arg0)->Int_t { return a->AppendKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("key"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Browse(TBrowser *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Browse(TBrowser *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:67:23
    t.method("Browse", [](TDirectoryFile& a, TBrowser * arg0)->void { a.Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("Browse", [](TDirectoryFile* a, TBrowser * arg0)->void { a->Browse(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Build(TFile *, TDirectory *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Build(TFile *, TDirectory *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:68:23
    t.method("Build", [](TDirectoryFile& a)->void { a.Build(); }, jlcxx::arg("this"));
    t.method("Build", [](TDirectoryFile& a, TFile * arg0)->void { a.Build(arg0); }, jlcxx::arg("this"), jlcxx::arg("motherFile"));
    t.method("Build", [](TDirectoryFile& a, TFile * arg0, TDirectory * arg1)->void { a.Build(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("motherFile"), jlcxx::arg("motherDir"));
    t.method("Build", [](TDirectoryFile* a)->void { a->Build(); }, jlcxx::arg("this"));
    t.method("Build", [](TDirectoryFile* a, TFile * arg0)->void { a->Build(arg0); }, jlcxx::arg("this"), jlcxx::arg("motherFile"));
    t.method("Build", [](TDirectoryFile* a, TFile * arg0, TDirectory * arg1)->void { a->Build(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("motherFile"), jlcxx::arg("motherDir"));

    DEBUG_MSG("Adding wrapper for TObject * TDirectoryFile::CloneObject(const TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectoryFile::CloneObject(const TObject *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:69:23
    t.method("CloneObject", [](TDirectoryFile& a, const TObject * arg0)->TObject * { return a.CloneObject(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("CloneObject", [](TDirectoryFile& a, const TObject * arg0, Bool_t arg1)->TObject * { return a.CloneObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("autoadd"));
    t.method("CloneObject", [](TDirectoryFile* a, const TObject * arg0)->TObject * { return a->CloneObject(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("CloneObject", [](TDirectoryFile* a, const TObject * arg0, Bool_t arg1)->TObject * { return a->CloneObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("autoadd"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Close(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Close(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:70:23
    t.method("Close", [](TDirectoryFile& a)->void { a.Close(); }, jlcxx::arg("this"));
    t.method("Close", [](TDirectoryFile& a, Option_t * arg0)->void { a.Close(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Close", [](TDirectoryFile* a)->void { a->Close(); }, jlcxx::arg("this"));
    t.method("Close", [](TDirectoryFile* a, Option_t * arg0)->void { a->Close(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:71:23
    t.method("Copy", [](TDirectoryFile const& a, TObject & arg0)->void { a.Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Copy", [](TDirectoryFile const* a, TObject & arg0)->void { a->Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Bool_t TDirectoryFile::cd() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectoryFile::cd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:72:23
    t.method("cd", [](TDirectoryFile& a)->Bool_t { return a.cd(); }, jlcxx::arg("this"));
    t.method("cd", [](TDirectoryFile* a)->Bool_t { return a->cd(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TDirectoryFile::cd(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectoryFile::cd(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:73:23
    t.method("cd", [](TDirectoryFile& a, const char * arg0)->Bool_t { return a.cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));
    t.method("cd", [](TDirectoryFile* a, const char * arg0)->Bool_t { return a->cd(arg0); }, jlcxx::arg("this"), jlcxx::arg("path"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Delete(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Delete(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:74:23
    t.method("Delete", [](TDirectoryFile& a)->void { a.Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TDirectoryFile& a, const char * arg0)->void { a.Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));
    t.method("Delete", [](TDirectoryFile* a)->void { a->Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TDirectoryFile* a, const char * arg0)->void { a->Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::FillBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::FillBuffer(char *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:75:23
    t.method("FillBuffer", [](TDirectoryFile& a, char *& arg0)->void { a.FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));
    t.method("FillBuffer", [](TDirectoryFile* a, char *& arg0)->void { a->FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));

    DEBUG_MSG("Adding wrapper for TKey * TDirectoryFile::FindKey(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectoryFile::FindKey(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:76:23
    t.method("FindKey", [](TDirectoryFile const& a, const char * arg0)->TKey * { return a.FindKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("keyname"));
    t.method("FindKey", [](TDirectoryFile const* a, const char * arg0)->TKey * { return a->FindKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("keyname"));

    DEBUG_MSG("Adding wrapper for TKey * TDirectoryFile::FindKeyAny(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectoryFile::FindKeyAny(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:77:23
    t.method("FindKeyAny", [](TDirectoryFile const& a, const char * arg0)->TKey * { return a.FindKeyAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("keyname"));
    t.method("FindKeyAny", [](TDirectoryFile const* a, const char * arg0)->TKey * { return a->FindKeyAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("keyname"));

    DEBUG_MSG("Adding wrapper for TObject * TDirectoryFile::FindObjectAny(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectoryFile::FindObjectAny(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:78:23
    t.method("FindObjectAny", [](TDirectoryFile const& a, const char * arg0)->TObject * { return a.FindObjectAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("FindObjectAny", [](TDirectoryFile const* a, const char * arg0)->TObject * { return a->FindObjectAny(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for TObject * TDirectoryFile::FindObjectAnyFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectoryFile::FindObjectAnyFile(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:79:23
    t.method("FindObjectAnyFile", [](TDirectoryFile const& a, const char * arg0)->TObject * { return a.FindObjectAnyFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("FindObjectAnyFile", [](TDirectoryFile const* a, const char * arg0)->TObject * { return a->FindObjectAnyFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for TObject * TDirectoryFile::Get(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TDirectoryFile::Get(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:80:23
    t.method("Get_", [](TDirectoryFile& a, const char * arg0)->TObject * { return a.Get(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));
    t.method("Get_", [](TDirectoryFile* a, const char * arg0)->TObject * { return a->Get(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));

    DEBUG_MSG("Adding wrapper for TDirectory * TDirectoryFile::GetDirectory(const char *, Bool_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TDirectoryFile::GetDirectory(const char *, Bool_t, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:86:24
    t.method("GetDirectory", [](TDirectoryFile& a, const char * arg0)->TDirectory * { return a.GetDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("apath"));
    t.method("GetDirectory", [](TDirectoryFile& a, const char * arg0, Bool_t arg1)->TDirectory * { return a.GetDirectory(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("apath"), jlcxx::arg("printError"));
    t.method("GetDirectory", [](TDirectoryFile& a, const char * arg0, Bool_t arg1, const char * arg2)->TDirectory * { return a.GetDirectory(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("apath"), jlcxx::arg("printError"), jlcxx::arg("funcname"));
    t.method("GetDirectory", [](TDirectoryFile* a, const char * arg0)->TDirectory * { return a->GetDirectory(arg0); }, jlcxx::arg("this"), jlcxx::arg("apath"));
    t.method("GetDirectory", [](TDirectoryFile* a, const char * arg0, Bool_t arg1)->TDirectory * { return a->GetDirectory(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("apath"), jlcxx::arg("printError"));
    t.method("GetDirectory", [](TDirectoryFile* a, const char * arg0, Bool_t arg1, const char * arg2)->TDirectory * { return a->GetDirectory(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("apath"), jlcxx::arg("printError"), jlcxx::arg("funcname"));

    DEBUG_MSG("Adding wrapper for void * TDirectoryFile::GetObjectChecked(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectoryFile::GetObjectChecked(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:87:24
    t.method("GetObjectChecked", [](TDirectoryFile& a, const char * arg0, const char * arg1)->void * { return a.GetObjectChecked(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("namecycle"), jlcxx::arg("classname"));
    t.method("GetObjectChecked", [](TDirectoryFile* a, const char * arg0, const char * arg1)->void * { return a->GetObjectChecked(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("namecycle"), jlcxx::arg("classname"));

    DEBUG_MSG("Adding wrapper for void * TDirectoryFile::GetObjectChecked(const char *, const TClass *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectoryFile::GetObjectChecked(const char *, const TClass *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:88:24
    t.method("GetObjectChecked", [](TDirectoryFile& a, const char * arg0, const TClass * arg1)->void * { return a.GetObjectChecked(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("namecycle"), jlcxx::arg("cl"));
    t.method("GetObjectChecked", [](TDirectoryFile* a, const char * arg0, const TClass * arg1)->void * { return a->GetObjectChecked(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("namecycle"), jlcxx::arg("cl"));

    DEBUG_MSG("Adding wrapper for void * TDirectoryFile::GetObjectUnchecked(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void * TDirectoryFile::GetObjectUnchecked(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:89:24
    t.method("GetObjectUnchecked", [](TDirectoryFile& a, const char * arg0)->void * { return a.GetObjectUnchecked(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));
    t.method("GetObjectUnchecked", [](TDirectoryFile* a, const char * arg0)->void * { return a->GetObjectUnchecked(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::GetBufferSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::GetBufferSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:90:24
    t.method("GetBufferSize", [](TDirectoryFile const& a)->Int_t { return a.GetBufferSize(); }, jlcxx::arg("this"));
    t.method("GetBufferSize", [](TDirectoryFile const* a)->Int_t { return a->GetBufferSize(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TDatime & TDirectoryFile::GetCreationDate() (" __HERE__ ")");
    // signature to use in the veto list: const TDatime & TDirectoryFile::GetCreationDate()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:91:24
    t.method("GetCreationDate", [](TDirectoryFile const& a)->const TDatime & { return a.GetCreationDate(); }, jlcxx::arg("this"));
    t.method("GetCreationDate", [](TDirectoryFile const* a)->const TDatime & { return a->GetCreationDate(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TFile * TDirectoryFile::GetFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TDirectoryFile::GetFile()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:92:24
    t.method("GetFile", [](TDirectoryFile const& a)->TFile * { return a.GetFile(); }, jlcxx::arg("this"));
    t.method("GetFile", [](TDirectoryFile const* a)->TFile * { return a->GetFile(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TKey * TDirectoryFile::GetKey(const char *, Short_t) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TDirectoryFile::GetKey(const char *, Short_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:93:24
    t.method("GetKey", [](TDirectoryFile const& a, const char * arg0)->TKey * { return a.GetKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("GetKey", [](TDirectoryFile const& a, const char * arg0, Short_t arg1)->TKey * { return a.GetKey(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("cycle"));
    t.method("GetKey", [](TDirectoryFile const* a, const char * arg0)->TKey * { return a->GetKey(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("GetKey", [](TDirectoryFile const* a, const char * arg0, Short_t arg1)->TKey * { return a->GetKey(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("cycle"));

    DEBUG_MSG("Adding wrapper for TList * TDirectoryFile::GetListOfKeys() (" __HERE__ ")");
    // signature to use in the veto list: TList * TDirectoryFile::GetListOfKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:94:24
    t.method("GetListOfKeys", [](TDirectoryFile const& a)->TList * { return a.GetListOfKeys(); }, jlcxx::arg("this"));
    t.method("GetListOfKeys", [](TDirectoryFile const* a)->TList * { return a->GetListOfKeys(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TDatime & TDirectoryFile::GetModificationDate() (" __HERE__ ")");
    // signature to use in the veto list: const TDatime & TDirectoryFile::GetModificationDate()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:95:24
    t.method("GetModificationDate", [](TDirectoryFile const& a)->const TDatime & { return a.GetModificationDate(); }, jlcxx::arg("this"));
    t.method("GetModificationDate", [](TDirectoryFile const* a)->const TDatime & { return a->GetModificationDate(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::GetNbytesKeys() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::GetNbytesKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:96:24
    t.method("GetNbytesKeys", [](TDirectoryFile const& a)->Int_t { return a.GetNbytesKeys(); }, jlcxx::arg("this"));
    t.method("GetNbytesKeys", [](TDirectoryFile const* a)->Int_t { return a->GetNbytesKeys(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::GetNkeys() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::GetNkeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:97:24
    t.method("GetNkeys", [](TDirectoryFile const& a)->Int_t { return a.GetNkeys(); }, jlcxx::arg("this"));
    t.method("GetNkeys", [](TDirectoryFile const* a)->Int_t { return a->GetNkeys(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TDirectoryFile::GetSeekDir() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectoryFile::GetSeekDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:98:24
    t.method("GetSeekDir", [](TDirectoryFile const& a)->Long64_t { return a.GetSeekDir(); }, jlcxx::arg("this"));
    t.method("GetSeekDir", [](TDirectoryFile const* a)->Long64_t { return a->GetSeekDir(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TDirectoryFile::GetSeekParent() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectoryFile::GetSeekParent()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:99:24
    t.method("GetSeekParent", [](TDirectoryFile const& a)->Long64_t { return a.GetSeekParent(); }, jlcxx::arg("this"));
    t.method("GetSeekParent", [](TDirectoryFile const* a)->Long64_t { return a->GetSeekParent(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TDirectoryFile::GetSeekKeys() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TDirectoryFile::GetSeekKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:100:24
    t.method("GetSeekKeys", [](TDirectoryFile const& a)->Long64_t { return a.GetSeekKeys(); }, jlcxx::arg("this"));
    t.method("GetSeekKeys", [](TDirectoryFile const* a)->Long64_t { return a->GetSeekKeys(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TDirectoryFile::IsModified() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectoryFile::IsModified()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:101:24
    t.method("IsModified", [](TDirectoryFile const& a)->Bool_t { return a.IsModified(); }, jlcxx::arg("this"));
    t.method("IsModified", [](TDirectoryFile const* a)->Bool_t { return a->IsModified(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TDirectoryFile::IsWritable() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TDirectoryFile::IsWritable()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:102:24
    t.method("IsWritable", [](TDirectoryFile const& a)->Bool_t { return a.IsWritable(); }, jlcxx::arg("this"));
    t.method("IsWritable", [](TDirectoryFile const* a)->Bool_t { return a->IsWritable(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:103:24
    t.method("ls", [](TDirectoryFile const& a)->void { a.ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TDirectoryFile const& a, Option_t * arg0)->void { a.ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("ls", [](TDirectoryFile const* a)->void { a->ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TDirectoryFile const* a, Option_t * arg0)->void { a->ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for TDirectory * TDirectoryFile::mkdir(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TDirectory * TDirectoryFile::mkdir(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:104:24
    t.method("mkdir", [](TDirectoryFile& a, const char * arg0)->TDirectory * { return a.mkdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("mkdir", [](TDirectoryFile& a, const char * arg0, const char * arg1)->TDirectory * { return a.mkdir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"));
    t.method("mkdir", [](TDirectoryFile& a, const char * arg0, const char * arg1, Bool_t arg2)->TDirectory * { return a.mkdir(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("returnExistingDirectory"));
    t.method("mkdir", [](TDirectoryFile* a, const char * arg0)->TDirectory * { return a->mkdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("mkdir", [](TDirectoryFile* a, const char * arg0, const char * arg1)->TDirectory * { return a->mkdir(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"));
    t.method("mkdir", [](TDirectoryFile* a, const char * arg0, const char * arg1, Bool_t arg2)->TDirectory * { return a->mkdir(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("title"), jlcxx::arg("returnExistingDirectory"));

    DEBUG_MSG("Adding wrapper for TFile * TDirectoryFile::OpenFile(const char *, Option_t *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TDirectoryFile::OpenFile(const char *, Option_t *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:105:24
    t.method("OpenFile", [](TDirectoryFile& a, const char * arg0)->TFile * { return a.OpenFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("OpenFile", [](TDirectoryFile& a, const char * arg0, Option_t * arg1)->TFile * { return a.OpenFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("OpenFile", [](TDirectoryFile& a, const char * arg0, Option_t * arg1, const char * arg2)->TFile * { return a.OpenFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"));
    t.method("OpenFile", [](TDirectoryFile& a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFile * { return a.OpenFile(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"));
    t.method("OpenFile", [](TDirectoryFile& a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFile * { return a.OpenFile(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"), jlcxx::arg("netopt"));
    t.method("OpenFile", [](TDirectoryFile* a, const char * arg0)->TFile * { return a->OpenFile(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("OpenFile", [](TDirectoryFile* a, const char * arg0, Option_t * arg1)->TFile * { return a->OpenFile(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("OpenFile", [](TDirectoryFile* a, const char * arg0, Option_t * arg1, const char * arg2)->TFile * { return a->OpenFile(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"));
    t.method("OpenFile", [](TDirectoryFile* a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFile * { return a->OpenFile(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"));
    t.method("OpenFile", [](TDirectoryFile* a, const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFile * { return a->OpenFile(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"), jlcxx::arg("netopt"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Purge(Short_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Purge(Short_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:108:24
    t.method("Purge", [](TDirectoryFile& a)->void { a.Purge(); }, jlcxx::arg("this"));
    t.method("Purge", [](TDirectoryFile& a, Short_t arg0)->void { a.Purge(arg0); }, jlcxx::arg("this"), jlcxx::arg("nkeep"));
    t.method("Purge", [](TDirectoryFile* a)->void { a->Purge(); }, jlcxx::arg("this"));
    t.method("Purge", [](TDirectoryFile* a, Short_t arg0)->void { a->Purge(arg0); }, jlcxx::arg("this"), jlcxx::arg("nkeep"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::ReadAll(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::ReadAll(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:109:24
    t.method("ReadAll", [](TDirectoryFile& a)->void { a.ReadAll(); }, jlcxx::arg("this"));
    t.method("ReadAll", [](TDirectoryFile& a, Option_t * arg0)->void { a.ReadAll(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("ReadAll", [](TDirectoryFile* a)->void { a->ReadAll(); }, jlcxx::arg("this"));
    t.method("ReadAll", [](TDirectoryFile* a, Option_t * arg0)->void { a->ReadAll(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::ReadKeys(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::ReadKeys(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:110:24
    t.method("ReadKeys", [](TDirectoryFile& a)->Int_t { return a.ReadKeys(); }, jlcxx::arg("this"));
    t.method("ReadKeys", [](TDirectoryFile& a, Bool_t arg0)->Int_t { return a.ReadKeys(arg0); }, jlcxx::arg("this"), jlcxx::arg("forceRead"));
    t.method("ReadKeys", [](TDirectoryFile* a)->Int_t { return a->ReadKeys(); }, jlcxx::arg("this"));
    t.method("ReadKeys", [](TDirectoryFile* a, Bool_t arg0)->Int_t { return a->ReadKeys(arg0); }, jlcxx::arg("this"), jlcxx::arg("forceRead"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::ReadTObject(TObject *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::ReadTObject(TObject *, const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:111:24
    t.method("ReadTObject", [](TDirectoryFile& a, TObject * arg0, const char * arg1)->Int_t { return a.ReadTObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("keyname"));
    t.method("ReadTObject", [](TDirectoryFile* a, TObject * arg0, const char * arg1)->Int_t { return a->ReadTObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("keyname"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::rmdir(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::rmdir(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:113:24
    t.method("rmdir", [](TDirectoryFile& a, const char * arg0)->void { a.rmdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("rmdir", [](TDirectoryFile* a, const char * arg0)->void { a->rmdir(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Save() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Save()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:114:24
    t.method("Save", [](TDirectoryFile& a)->void { a.Save(); }, jlcxx::arg("this"));
    t.method("Save", [](TDirectoryFile* a)->void { a->Save(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SaveSelf(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SaveSelf(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:115:24
    t.method("SaveSelf", [](TDirectoryFile& a)->void { a.SaveSelf(); }, jlcxx::arg("this"));
    t.method("SaveSelf", [](TDirectoryFile& a, Bool_t arg0)->void { a.SaveSelf(arg0); }, jlcxx::arg("this"), jlcxx::arg("force"));
    t.method("SaveSelf", [](TDirectoryFile* a)->void { a->SaveSelf(); }, jlcxx::arg("this"));
    t.method("SaveSelf", [](TDirectoryFile* a, Bool_t arg0)->void { a->SaveSelf(arg0); }, jlcxx::arg("this"), jlcxx::arg("force"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::SaveObjectAs(const TObject *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::SaveObjectAs(const TObject *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:116:24
    t.method("SaveObjectAs", [](TDirectoryFile const& a, const TObject * arg0)->Int_t { return a.SaveObjectAs(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("SaveObjectAs", [](TDirectoryFile const& a, const TObject * arg0, const char * arg1)->Int_t { return a.SaveObjectAs(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("filename"));
    t.method("SaveObjectAs", [](TDirectoryFile const& a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.SaveObjectAs(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("filename"), jlcxx::arg("option"));
    t.method("SaveObjectAs", [](TDirectoryFile const* a, const TObject * arg0)->Int_t { return a->SaveObjectAs(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("SaveObjectAs", [](TDirectoryFile const* a, const TObject * arg0, const char * arg1)->Int_t { return a->SaveObjectAs(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("filename"));
    t.method("SaveObjectAs", [](TDirectoryFile const* a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->SaveObjectAs(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("filename"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SetBufferSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SetBufferSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:117:24
    t.method("SetBufferSize", [](TDirectoryFile& a, Int_t arg0)->void { a.SetBufferSize(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufsize"));
    t.method("SetBufferSize", [](TDirectoryFile* a, Int_t arg0)->void { a->SetBufferSize(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SetModified() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SetModified()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:118:24
    t.method("SetModified", [](TDirectoryFile& a)->void { a.SetModified(); }, jlcxx::arg("this"));
    t.method("SetModified", [](TDirectoryFile* a)->void { a->SetModified(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SetSeekDir(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SetSeekDir(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:119:24
    t.method("SetSeekDir", [](TDirectoryFile& a, Long64_t arg0)->void { a.SetSeekDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("v"));
    t.method("SetSeekDir", [](TDirectoryFile* a, Long64_t arg0)->void { a->SetSeekDir(arg0); }, jlcxx::arg("this"), jlcxx::arg("v"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SetTRefAction(TObject *, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SetTRefAction(TObject *, TObject *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:120:24
    t.method("SetTRefAction", [](TDirectoryFile& a, TObject * arg0, TObject * arg1)->void { a.SetTRefAction(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ref"), jlcxx::arg("parent"));
    t.method("SetTRefAction", [](TDirectoryFile* a, TObject * arg0, TObject * arg1)->void { a->SetTRefAction(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("ref"), jlcxx::arg("parent"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::SetWritable(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::SetWritable(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:121:24
    t.method("SetWritable", [](TDirectoryFile& a)->void { a.SetWritable(); }, jlcxx::arg("this"));
    t.method("SetWritable", [](TDirectoryFile& a, Bool_t arg0)->void { a.SetWritable(arg0); }, jlcxx::arg("this"), jlcxx::arg("writable"));
    t.method("SetWritable", [](TDirectoryFile* a)->void { a->SetWritable(); }, jlcxx::arg("this"));
    t.method("SetWritable", [](TDirectoryFile* a, Bool_t arg0)->void { a->SetWritable(arg0); }, jlcxx::arg("this"), jlcxx::arg("writable"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::Sizeof() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::Sizeof()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:122:24
    t.method("Sizeof", [](TDirectoryFile const& a)->Int_t { return a.Sizeof(); }, jlcxx::arg("this"));
    t.method("Sizeof", [](TDirectoryFile const* a)->Int_t { return a->Sizeof(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:123:24
    t.method("Write", [](TDirectoryFile& a)->Int_t { return a.Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TDirectoryFile& a, const char * arg0)->Int_t { return a.Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TDirectoryFile& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TDirectoryFile& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsize"));
    t.method("Write", [](TDirectoryFile* a)->Int_t { return a->Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TDirectoryFile* a, const char * arg0)->Int_t { return a->Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TDirectoryFile* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TDirectoryFile* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:124:24
    t.method("Write", [](TDirectoryFile const& a)->Int_t { return a.Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TDirectoryFile const& a, const char * arg0)->Int_t { return a.Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TDirectoryFile const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TDirectoryFile const& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsize"));
    t.method("Write", [](TDirectoryFile const* a)->Int_t { return a->Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TDirectoryFile const* a, const char * arg0)->Int_t { return a->Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TDirectoryFile const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TDirectoryFile const* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::WriteTObject(const TObject *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::WriteTObject(const TObject *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:125:24
    t.method("WriteTObject", [](TDirectoryFile& a, const TObject * arg0)->Int_t { return a.WriteTObject(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("WriteTObject", [](TDirectoryFile& a, const TObject * arg0, const char * arg1)->Int_t { return a.WriteTObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"));
    t.method("WriteTObject", [](TDirectoryFile& a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a.WriteTObject(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteTObject", [](TDirectoryFile& a, const TObject * arg0, const char * arg1, Option_t * arg2, Int_t arg3)->Int_t { return a.WriteTObject(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));
    t.method("WriteTObject", [](TDirectoryFile* a, const TObject * arg0)->Int_t { return a->WriteTObject(arg0); }, jlcxx::arg("this"), jlcxx::arg("obj"));
    t.method("WriteTObject", [](TDirectoryFile* a, const TObject * arg0, const char * arg1)->Int_t { return a->WriteTObject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"));
    t.method("WriteTObject", [](TDirectoryFile* a, const TObject * arg0, const char * arg1, Option_t * arg2)->Int_t { return a->WriteTObject(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteTObject", [](TDirectoryFile* a, const TObject * arg0, const char * arg1, Option_t * arg2, Int_t arg3)->Int_t { return a->WriteTObject(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::WriteObjectAny(const void *, const char *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::WriteObjectAny(const void *, const char *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:126:24
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const char * arg1, const char * arg2)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"));
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const char * arg1, const char * arg2)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const char * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("classname"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for Int_t TDirectoryFile::WriteObjectAny(const void *, const TClass *, const char *, Option_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TDirectoryFile::WriteObjectAny(const void *, const TClass *, const char *, Option_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:127:24
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const TClass * arg1, const char * arg2)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"));
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteObjectAny", [](TDirectoryFile& a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a.WriteObjectAny(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const TClass * arg1, const char * arg2)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("option"));
    t.method("WriteObjectAny", [](TDirectoryFile* a, const void * arg0, const TClass * arg1, const char * arg2, Option_t * arg3, Int_t arg4)->Int_t { return a->WriteObjectAny(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::WriteDirHeader() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::WriteDirHeader()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:128:24
    t.method("WriteDirHeader", [](TDirectoryFile& a)->void { a.WriteDirHeader(); }, jlcxx::arg("this"));
    t.method("WriteDirHeader", [](TDirectoryFile* a)->void { a->WriteDirHeader(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::WriteKeys() (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::WriteKeys()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TDirectoryFile.h:129:24
    t.method("WriteKeys", [](TDirectoryFile& a)->void { a.WriteKeys(); }, jlcxx::arg("this"));
    t.method("WriteKeys", [](TDirectoryFile* a)->void { a->WriteKeys(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Version_t TDirectoryFile::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TDirectoryFile::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TDirectoryFile!Class_Version", []()->Version_t { return TDirectoryFile::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectoryFile::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectoryFile::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TDirectoryFile const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TDirectoryFile const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TDirectoryFile& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TDirectoryFile* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TDirectoryFile::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectoryFile::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TDirectoryFile!DeclFileName", []() { return (std::string)TDirectoryFile::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TDirectoryFile::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TDirectoryFile::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TDirectoryFile!ImplFileLine", []()->int { return TDirectoryFile::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectoryFile::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectoryFile::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TDirectoryFile!ImplFileName", []() { return (std::string)TDirectoryFile::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TDirectoryFile::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TDirectoryFile::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TDirectoryFile!Class_Name", []() { return (std::string)TDirectoryFile::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectoryFile::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectoryFile::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TDirectoryFile!Dictionary", []()->TClass * { return TDirectoryFile::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TDirectoryFile::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TDirectoryFile::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TDirectoryFile!Class", []()->TClass * { return TDirectoryFile::Class(); });

    DEBUG_MSG("Adding wrapper for void TDirectoryFile::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TDirectoryFile::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TDirectoryFile& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TDirectoryFile* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TDirectoryFile::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TDirectoryFile::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TDirectoryFile!DeclFileLine", []()->int { return TDirectoryFile::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TDirectoryFile>> type_;
};
std::shared_ptr<Wrapper> newJlTDirectoryFile(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTDirectoryFile(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TFile> : std::false_type { };
  template<> struct DefaultConstructible<TFile> : std::false_type { };
template<> struct SuperType<TFile> { typedef TDirectoryFile type; };
}

// Class generating the wrapper for type TFile
// signature to use in the veto file: TFile
struct JlTFile: public Wrapper {

  JlTFile(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TFile (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:53:7
    jlcxx::TypeWrapper<TFile>  t = jlModule.add_type<TFile>("TFile",
      jlcxx::julia_base_type<TDirectoryFile>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TFile>>(new jlcxx::TypeWrapper<TFile>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void TFile::TFile(const char *, Option_t *, const char *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:205:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("fname")    );
    t.constructor<const char *, Option_t *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("fname"), jlcxx::arg("option")    );
    t.constructor<const char *, Option_t *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("fname"), jlcxx::arg("option"), jlcxx::arg("ftitle")    );
    t.constructor<const char *, Option_t *, const char *, Int_t>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("fname"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress")    );

    DEBUG_MSG("Adding wrapper for void TFile::Close(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Close(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:208:24
    t.method("Close", [](TFile& a)->void { a.Close(); }, jlcxx::arg("this"));
    t.method("Close", [](TFile& a, Option_t * arg0)->void { a.Close(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Close", [](TFile* a)->void { a->Close(); }, jlcxx::arg("this"));
    t.method("Close", [](TFile* a, Option_t * arg0)->void { a->Close(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::Copy(TObject &) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Copy(TObject &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:209:24
    t.method("Copy", [](TFile const& a, TObject & arg0)->void { a.Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Copy", [](TFile const* a, TObject & arg0)->void { a->Copy(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::Cp(const char *, Bool_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::Cp(const char *, Bool_t, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:210:24
    t.method("Cp", [](TFile& a, const char * arg0)->Bool_t { return a.Cp(arg0); }, jlcxx::arg("this"), jlcxx::arg("dst"));
    t.method("Cp", [](TFile& a, const char * arg0, Bool_t arg1)->Bool_t { return a.Cp(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dst"), jlcxx::arg("progressbar"));
    t.method("Cp", [](TFile& a, const char * arg0, Bool_t arg1, UInt_t arg2)->Bool_t { return a.Cp(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dst"), jlcxx::arg("progressbar"), jlcxx::arg("buffersize"));
    t.method("Cp", [](TFile* a, const char * arg0)->Bool_t { return a->Cp(arg0); }, jlcxx::arg("this"), jlcxx::arg("dst"));
    t.method("Cp", [](TFile* a, const char * arg0, Bool_t arg1)->Bool_t { return a->Cp(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dst"), jlcxx::arg("progressbar"));
    t.method("Cp", [](TFile* a, const char * arg0, Bool_t arg1, UInt_t arg2)->Bool_t { return a->Cp(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dst"), jlcxx::arg("progressbar"), jlcxx::arg("buffersize"));

    DEBUG_MSG("Adding wrapper for TKey * TFile::CreateKey(TDirectory *, const TObject *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TFile::CreateKey(TDirectory *, const TObject *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:211:24
    t.method("CreateKey", [](TFile& a, TDirectory * arg0, const TObject * arg1, const char * arg2, Int_t arg3)->TKey * { return a.CreateKey(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("bufsize"));
    t.method("CreateKey", [](TFile* a, TDirectory * arg0, const TObject * arg1, const char * arg2, Int_t arg3)->TKey * { return a->CreateKey(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("obj"), jlcxx::arg("name"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for TKey * TFile::CreateKey(TDirectory *, const void *, const TClass *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TKey * TFile::CreateKey(TDirectory *, const void *, const TClass *, const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:212:24
    t.method("CreateKey", [](TFile& a, TDirectory * arg0, const void * arg1, const TClass * arg2, const char * arg3, Int_t arg4)->TKey * { return a.CreateKey(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("bufsize"));
    t.method("CreateKey", [](TFile* a, TDirectory * arg0, const void * arg1, const TClass * arg2, const char * arg3, Int_t arg4)->TKey * { return a->CreateKey(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("mother"), jlcxx::arg("obj"), jlcxx::arg("cl"), jlcxx::arg("name"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for TFile *& TFile::CurrentFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile *& TFile::CurrentFile()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:214:24
    module_.method("TFile!CurrentFile", []()->TFile *& { return TFile::CurrentFile(); });

    DEBUG_MSG("Adding wrapper for void TFile::Delete(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Delete(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:215:24
    t.method("Delete", [](TFile& a)->void { a.Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TFile& a, const char * arg0)->void { a.Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));
    t.method("Delete", [](TFile* a)->void { a->Delete(); }, jlcxx::arg("this"));
    t.method("Delete", [](TFile* a, const char * arg0)->void { a->Delete(arg0); }, jlcxx::arg("this"), jlcxx::arg("namecycle"));

    DEBUG_MSG("Adding wrapper for void TFile::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:216:24
    t.method("Draw", [](TFile& a)->void { a.Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TFile& a, Option_t * arg0)->void { a.Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Draw", [](TFile* a)->void { a->Draw(); }, jlcxx::arg("this"));
    t.method("Draw", [](TFile* a, Option_t * arg0)->void { a->Draw(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::DrawMap(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::DrawMap(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:217:24
    t.method("DrawMap", [](TFile& a)->void { a.DrawMap(); }, jlcxx::arg("this"), jlcxx::arg("keys"), jlcxx::arg("option"));
    t.method("DrawMap", [](TFile& a, const char * arg0)->void { a.DrawMap(arg0); }, jlcxx::arg("this"), jlcxx::arg("keys"));
    t.method("DrawMap", [](TFile& a, const char * arg0, Option_t * arg1)->void { a.DrawMap(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("keys"), jlcxx::arg("option"));
    t.method("DrawMap", [](TFile* a)->void { a->DrawMap(); }, jlcxx::arg("this"), jlcxx::arg("keys"), jlcxx::arg("option"));
    t.method("DrawMap", [](TFile* a, const char * arg0)->void { a->DrawMap(arg0); }, jlcxx::arg("this"), jlcxx::arg("keys"));
    t.method("DrawMap", [](TFile* a, const char * arg0, Option_t * arg1)->void { a->DrawMap(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("keys"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::FillBuffer(char *&) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::FillBuffer(char *&)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:218:24
    t.method("FillBuffer", [](TFile& a, char *& arg0)->void { a.FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));
    t.method("FillBuffer", [](TFile* a, char *& arg0)->void { a->FillBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("buffer"));

    DEBUG_MSG("Adding wrapper for void TFile::Flush() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Flush()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:219:24
    t.method("Flush", [](TFile& a)->void { a.Flush(); }, jlcxx::arg("this"));
    t.method("Flush", [](TFile* a)->void { a->Flush(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetArchiveOffset() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetArchiveOffset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:221:24
    t.method("GetArchiveOffset", [](TFile const& a)->Long64_t { return a.GetArchiveOffset(); }, jlcxx::arg("this"));
    t.method("GetArchiveOffset", [](TFile const* a)->Long64_t { return a->GetArchiveOffset(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetBestBuffer() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetBestBuffer()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:222:24
    t.method("GetBestBuffer", [](TFile const& a)->Int_t { return a.GetBestBuffer(); }, jlcxx::arg("this"));
    t.method("GetBestBuffer", [](TFile const* a)->Int_t { return a->GetBestBuffer(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetBytesToPrefetch() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetBytesToPrefetch()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:223:24
    t.method("GetBytesToPrefetch", [](TFile const& a)->Int_t { return a.GetBytesToPrefetch(); }, jlcxx::arg("this"));
    t.method("GetBytesToPrefetch", [](TFile const* a)->Int_t { return a->GetBytesToPrefetch(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TArrayC * TFile::GetClassIndex() (" __HERE__ ")");
    // signature to use in the veto list: TArrayC * TFile::GetClassIndex()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:226:24
    t.method("GetClassIndex", [](TFile const& a)->TArrayC * { return a.GetClassIndex(); }, jlcxx::arg("this"));
    t.method("GetClassIndex", [](TFile const* a)->TArrayC * { return a->GetClassIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetCompressionAlgorithm() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetCompressionAlgorithm()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:227:24
    t.method("GetCompressionAlgorithm", [](TFile const& a)->Int_t { return a.GetCompressionAlgorithm(); }, jlcxx::arg("this"));
    t.method("GetCompressionAlgorithm", [](TFile const* a)->Int_t { return a->GetCompressionAlgorithm(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetCompressionLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetCompressionLevel()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:228:24
    t.method("GetCompressionLevel", [](TFile const& a)->Int_t { return a.GetCompressionLevel(); }, jlcxx::arg("this"));
    t.method("GetCompressionLevel", [](TFile const* a)->Int_t { return a->GetCompressionLevel(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetCompressionSettings() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetCompressionSettings()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:229:24
    t.method("GetCompressionSettings", [](TFile const& a)->Int_t { return a.GetCompressionSettings(); }, jlcxx::arg("this"));
    t.method("GetCompressionSettings", [](TFile const* a)->Int_t { return a->GetCompressionSettings(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Float_t TFile::GetCompressionFactor() (" __HERE__ ")");
    // signature to use in the veto list: Float_t TFile::GetCompressionFactor()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:230:24
    t.method("GetCompressionFactor", [](TFile& a)->Float_t { return a.GetCompressionFactor(); }, jlcxx::arg("this"));
    t.method("GetCompressionFactor", [](TFile* a)->Float_t { return a->GetCompressionFactor(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetEND() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetEND()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:231:24
    t.method("GetEND", [](TFile const& a)->Long64_t { return a.GetEND(); }, jlcxx::arg("this"));
    t.method("GetEND", [](TFile const* a)->Long64_t { return a->GetEND(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetErrno() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetErrno()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:232:24
    t.method("GetErrno", [](TFile const& a)->Int_t { return a.GetErrno(); }, jlcxx::arg("this"));
    t.method("GetErrno", [](TFile const* a)->Int_t { return a->GetErrno(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::ResetErrno() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::ResetErrno()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:233:24
    t.method("ResetErrno", [](TFile const& a)->void { a.ResetErrno(); }, jlcxx::arg("this"));
    t.method("ResetErrno", [](TFile const* a)->void { a->ResetErrno(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetFd() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetFd()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:234:24
    t.method("GetFd", [](TFile const& a)->Int_t { return a.GetFd(); }, jlcxx::arg("this"));
    t.method("GetFd", [](TFile const* a)->Int_t { return a->GetFd(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TUrl * TFile::GetEndpointUrl() (" __HERE__ ")");
    // signature to use in the veto list: const TUrl * TFile::GetEndpointUrl()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:235:24
    t.method("GetEndpointUrl", [](TFile const& a)->const TUrl * { return a.GetEndpointUrl(); }, jlcxx::arg("this"));
    t.method("GetEndpointUrl", [](TFile const* a)->const TUrl * { return a->GetEndpointUrl(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TObjArray * TFile::GetListOfProcessIDs() (" __HERE__ ")");
    // signature to use in the veto list: TObjArray * TFile::GetListOfProcessIDs()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:236:24
    t.method("GetListOfProcessIDs", [](TFile const& a)->TObjArray * { return a.GetListOfProcessIDs(); }, jlcxx::arg("this"));
    t.method("GetListOfProcessIDs", [](TFile const* a)->TObjArray * { return a->GetListOfProcessIDs(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TList * TFile::GetListOfFree() (" __HERE__ ")");
    // signature to use in the veto list: TList * TFile::GetListOfFree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:237:24
    t.method("GetListOfFree", [](TFile const& a)->TList * { return a.GetListOfFree(); }, jlcxx::arg("this"));
    t.method("GetListOfFree", [](TFile const* a)->TList * { return a->GetListOfFree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetNfree() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetNfree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:238:24
    t.method("GetNfree", [](TFile const& a)->Int_t { return a.GetNfree(); }, jlcxx::arg("this"));
    t.method("GetNfree", [](TFile const* a)->Int_t { return a->GetNfree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetNProcessIDs() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetNProcessIDs()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:239:24
    t.method("GetNProcessIDs", [](TFile const& a)->Int_t { return a.GetNProcessIDs(); }, jlcxx::arg("this"));
    t.method("GetNProcessIDs", [](TFile const* a)->Int_t { return a->GetNProcessIDs(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Option_t * TFile::GetOption() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TFile::GetOption()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:240:24
    t.method("GetOption", [](TFile const& a)->Option_t * { return a.GetOption(); }, jlcxx::arg("this"));
    t.method("GetOption", [](TFile const* a)->Option_t * { return a->GetOption(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetBytesRead() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetBytesRead()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:241:24
    t.method("GetBytesRead", [](TFile const& a)->Long64_t { return a.GetBytesRead(); }, jlcxx::arg("this"));
    t.method("GetBytesRead", [](TFile const* a)->Long64_t { return a->GetBytesRead(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetBytesReadExtra() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetBytesReadExtra()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:242:24
    t.method("GetBytesReadExtra", [](TFile const& a)->Long64_t { return a.GetBytesReadExtra(); }, jlcxx::arg("this"));
    t.method("GetBytesReadExtra", [](TFile const* a)->Long64_t { return a->GetBytesReadExtra(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetBytesWritten() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetBytesWritten()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:243:24
    t.method("GetBytesWritten", [](TFile const& a)->Long64_t { return a.GetBytesWritten(); }, jlcxx::arg("this"));
    t.method("GetBytesWritten", [](TFile const* a)->Long64_t { return a->GetBytesWritten(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetReadCalls() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetReadCalls()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:244:24
    t.method("GetReadCalls", [](TFile const& a)->Int_t { return a.GetReadCalls(); }, jlcxx::arg("this"));
    t.method("GetReadCalls", [](TFile const* a)->Int_t { return a->GetReadCalls(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetVersion() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetVersion()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:245:24
    t.method("GetVersion", [](TFile const& a)->Int_t { return a.GetVersion(); }, jlcxx::arg("this"));
    t.method("GetVersion", [](TFile const* a)->Int_t { return a->GetVersion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetRecordHeader(char *, Long64_t, Int_t, Int_t &, Int_t &, Int_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetRecordHeader(char *, Long64_t, Int_t, Int_t &, Int_t &, Int_t &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:246:24
    t.method("GetRecordHeader", [](TFile& a, char * arg0, Long64_t arg1, Int_t arg2, Int_t & arg3, Int_t & arg4, Int_t & arg5)->Int_t { return a.GetRecordHeader(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("first"), jlcxx::arg("maxbytes"), jlcxx::arg("nbytes"), jlcxx::arg("objlen"), jlcxx::arg("keylen"));
    t.method("GetRecordHeader", [](TFile* a, char * arg0, Long64_t arg1, Int_t arg2, Int_t & arg3, Int_t & arg4, Int_t & arg5)->Int_t { return a->GetRecordHeader(arg0, arg1, arg2, arg3, arg4, arg5); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("first"), jlcxx::arg("maxbytes"), jlcxx::arg("nbytes"), jlcxx::arg("objlen"), jlcxx::arg("keylen"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetNbytesInfo() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetNbytesInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:248:24
    t.method("GetNbytesInfo", [](TFile const& a)->Int_t { return a.GetNbytesInfo(); }, jlcxx::arg("this"));
    t.method("GetNbytesInfo", [](TFile const* a)->Int_t { return a->GetNbytesInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetNbytesFree() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetNbytesFree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:249:24
    t.method("GetNbytesFree", [](TFile const& a)->Int_t { return a.GetNbytesFree(); }, jlcxx::arg("this"));
    t.method("GetNbytesFree", [](TFile const* a)->Int_t { return a->GetNbytesFree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TString TFile::GetNewUrl() (" __HERE__ ")");
    // signature to use in the veto list: TString TFile::GetNewUrl()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:250:24
    t.method("GetNewUrl", [](TFile& a)->TString { return a.GetNewUrl(); }, jlcxx::arg("this"));
    t.method("GetNewUrl", [](TFile* a)->TString { return a->GetNewUrl(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetRelOffset() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetRelOffset()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:251:24
    t.method("GetRelOffset", [](TFile const& a)->Long64_t { return a.GetRelOffset(); }, jlcxx::arg("this"));
    t.method("GetRelOffset", [](TFile const* a)->Long64_t { return a->GetRelOffset(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetSeekFree() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetSeekFree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:252:24
    t.method("GetSeekFree", [](TFile const& a)->Long64_t { return a.GetSeekFree(); }, jlcxx::arg("this"));
    t.method("GetSeekFree", [](TFile const* a)->Long64_t { return a->GetSeekFree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetSeekInfo() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetSeekInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:253:24
    t.method("GetSeekInfo", [](TFile const& a)->Long64_t { return a.GetSeekInfo(); }, jlcxx::arg("this"));
    t.method("GetSeekInfo", [](TFile const* a)->Long64_t { return a->GetSeekInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:254:24
    t.method("GetSize", [](TFile const& a)->Long64_t { return a.GetSize(); }, jlcxx::arg("this"));
    t.method("GetSize", [](TFile const* a)->Long64_t { return a->GetSize(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TList * TFile::GetStreamerInfoList() (" __HERE__ ")");
    // signature to use in the veto list: TList * TFile::GetStreamerInfoList()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:255:24
    t.method("GetStreamerInfoList", [](TFile& a)->TList * { return a.GetStreamerInfoList(); }, jlcxx::arg("this"));
    t.method("GetStreamerInfoList", [](TFile* a)->TList * { return a->GetStreamerInfoList(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const TList * TFile::GetStreamerInfoCache() (" __HERE__ ")");
    // signature to use in the veto list: const TList * TFile::GetStreamerInfoCache()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:256:24
    t.method("GetStreamerInfoCache", [](TFile& a)->const TList * { return a.GetStreamerInfoCache(); }, jlcxx::arg("this"));
    t.method("GetStreamerInfoCache", [](TFile* a)->const TList * { return a->GetStreamerInfoCache(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::IncrementProcessIDs() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::IncrementProcessIDs()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:257:24
    t.method("IncrementProcessIDs", [](TFile& a)->void { a.IncrementProcessIDs(); }, jlcxx::arg("this"));
    t.method("IncrementProcessIDs", [](TFile* a)->void { a->IncrementProcessIDs(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::IsArchive() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::IsArchive()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:258:24
    t.method("IsArchive", [](TFile const& a)->Bool_t { return a.IsArchive(); }, jlcxx::arg("this"));
    t.method("IsArchive", [](TFile const* a)->Bool_t { return a->IsArchive(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::IsBinary() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::IsBinary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:259:24
    t.method("IsBinary", [](TFile const& a)->Bool_t { return a.IsBinary(); }, jlcxx::arg("this"));
    t.method("IsBinary", [](TFile const* a)->Bool_t { return a->IsBinary(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::IsRaw() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::IsRaw()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:260:24
    t.method("IsRaw", [](TFile const& a)->Bool_t { return a.IsRaw(); }, jlcxx::arg("this"));
    t.method("IsRaw", [](TFile const* a)->Bool_t { return a->IsRaw(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::IsOpen() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::IsOpen()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:261:24
    t.method("IsOpen", [](TFile const& a)->Bool_t { return a.IsOpen(); }, jlcxx::arg("this"));
    t.method("IsOpen", [](TFile const* a)->Bool_t { return a->IsOpen(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::ls(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:262:24
    t.method("ls", [](TFile const& a)->void { a.ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TFile const& a, Option_t * arg0)->void { a.ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("ls", [](TFile const* a)->void { a->ls(); }, jlcxx::arg("this"));
    t.method("ls", [](TFile const* a, Option_t * arg0)->void { a->ls(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::MakeFree(Long64_t, Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::MakeFree(Long64_t, Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:263:24
    t.method("MakeFree", [](TFile& a, Long64_t arg0, Long64_t arg1)->void { a.MakeFree(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));
    t.method("MakeFree", [](TFile* a, Long64_t arg0, Long64_t arg1)->void { a->MakeFree(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("first"), jlcxx::arg("last"));

    DEBUG_MSG("Adding wrapper for void TFile::MakeProject(const char *, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::MakeProject(const char *, const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:264:24
    t.method("MakeProject", [](TFile& a, const char * arg0)->void { a.MakeProject(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirname"));
    t.method("MakeProject", [](TFile& a, const char * arg0, const char * arg1)->void { a.MakeProject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dirname"), jlcxx::arg("classes"));
    t.method("MakeProject", [](TFile& a, const char * arg0, const char * arg1, Option_t * arg2)->void { a.MakeProject(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dirname"), jlcxx::arg("classes"), jlcxx::arg("option"));
    t.method("MakeProject", [](TFile* a, const char * arg0)->void { a->MakeProject(arg0); }, jlcxx::arg("this"), jlcxx::arg("dirname"));
    t.method("MakeProject", [](TFile* a, const char * arg0, const char * arg1)->void { a->MakeProject(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("dirname"), jlcxx::arg("classes"));
    t.method("MakeProject", [](TFile* a, const char * arg0, const char * arg1, Option_t * arg2)->void { a->MakeProject(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("dirname"), jlcxx::arg("classes"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::Map(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Map(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:266:24
    t.method("Map", [](TFile& a, Option_t * arg0)->void { a.Map(arg0); }, jlcxx::arg("this"), jlcxx::arg("opt"));
    t.method("Map", [](TFile* a, Option_t * arg0)->void { a->Map(arg0); }, jlcxx::arg("this"), jlcxx::arg("opt"));

    DEBUG_MSG("Adding wrapper for void TFile::Map() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Map()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:267:24
    t.method("Map", [](TFile& a)->void { a.Map(); }, jlcxx::arg("this"));
    t.method("Map", [](TFile* a)->void { a->Map(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::Matches(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::Matches(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:268:24
    t.method("Matches", [](TFile& a, const char * arg0)->Bool_t { return a.Matches(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Matches", [](TFile* a, const char * arg0)->Bool_t { return a->Matches(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::MustFlush() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::MustFlush()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:269:24
    t.method("MustFlush", [](TFile const& a)->Bool_t { return a.MustFlush(); }, jlcxx::arg("this"));
    t.method("MustFlush", [](TFile const* a)->Bool_t { return a->MustFlush(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:270:24
    t.method("Paint", [](TFile& a)->void { a.Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TFile& a, Option_t * arg0)->void { a.Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Paint", [](TFile* a)->void { a->Paint(); }, jlcxx::arg("this"));
    t.method("Paint", [](TFile* a, Option_t * arg0)->void { a->Paint(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:271:24
    t.method("Print", [](TFile const& a)->void { a.Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TFile const& a, Option_t * arg0)->void { a.Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("Print", [](TFile const* a)->void { a->Print(); }, jlcxx::arg("this"));
    t.method("Print", [](TFile const* a, Option_t * arg0)->void { a->Print(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::ReadBufferAsync(Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::ReadBufferAsync(Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:272:24
    t.method("ReadBufferAsync", [](TFile& a, Long64_t arg0, Int_t arg1)->Bool_t { return a.ReadBufferAsync(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offs"), jlcxx::arg("len"));
    t.method("ReadBufferAsync", [](TFile* a, Long64_t arg0, Int_t arg1)->Bool_t { return a->ReadBufferAsync(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offs"), jlcxx::arg("len"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::ReadBuffer(char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::ReadBuffer(char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:273:24
    t.method("ReadBuffer", [](TFile& a, char * arg0, Int_t arg1)->Bool_t { return a.ReadBuffer(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));
    t.method("ReadBuffer", [](TFile* a, char * arg0, Int_t arg1)->Bool_t { return a->ReadBuffer(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::ReadBuffer(char *, Long64_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::ReadBuffer(char *, Long64_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:274:24
    t.method("ReadBuffer", [](TFile& a, char * arg0, Long64_t arg1, Int_t arg2)->Bool_t { return a.ReadBuffer(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("pos"), jlcxx::arg("len"));
    t.method("ReadBuffer", [](TFile* a, char * arg0, Long64_t arg1, Int_t arg2)->Bool_t { return a->ReadBuffer(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("pos"), jlcxx::arg("len"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::ReadBuffers(char *, Long64_t *, Int_t *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::ReadBuffers(char *, Long64_t *, Int_t *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:275:24
    t.method("ReadBuffers", [](TFile& a, char * arg0, Long64_t * arg1, Int_t * arg2, Int_t arg3)->Bool_t { return a.ReadBuffers(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("pos"), jlcxx::arg("len"), jlcxx::arg("nbuf"));
    t.method("ReadBuffers", [](TFile* a, char * arg0, Long64_t * arg1, Int_t * arg2, Int_t arg3)->Bool_t { return a->ReadBuffers(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("pos"), jlcxx::arg("len"), jlcxx::arg("nbuf"));

    DEBUG_MSG("Adding wrapper for void TFile::ReadFree() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::ReadFree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:276:24
    t.method("ReadFree", [](TFile& a)->void { a.ReadFree(); }, jlcxx::arg("this"));
    t.method("ReadFree", [](TFile* a)->void { a->ReadFree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::ReadStreamerInfo() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::ReadStreamerInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:278:24
    t.method("ReadStreamerInfo", [](TFile& a)->void { a.ReadStreamerInfo(); }, jlcxx::arg("this"));
    t.method("ReadStreamerInfo", [](TFile* a)->void { a->ReadStreamerInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::Recover() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::Recover()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:279:24
    t.method("Recover", [](TFile& a)->Int_t { return a.Recover(); }, jlcxx::arg("this"));
    t.method("Recover", [](TFile* a)->Int_t { return a->Recover(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::ReOpen(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::ReOpen(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:280:24
    t.method("ReOpen", [](TFile& a, Option_t * arg0)->Int_t { return a.ReOpen(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));
    t.method("ReOpen", [](TFile* a, Option_t * arg0)->Int_t { return a->ReOpen(arg0); }, jlcxx::arg("this"), jlcxx::arg("mode"));

    DEBUG_MSG("Adding wrapper for void TFile::Seek(Long64_t, TFile::ERelativeTo) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Seek(Long64_t, TFile::ERelativeTo)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:281:24
    t.method("Seek", [](TFile& a, Long64_t arg0)->void { a.Seek(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));
    t.method("Seek", [](TFile& a, Long64_t arg0, TFile::ERelativeTo arg1)->void { a.Seek(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offset"), jlcxx::arg("pos"));
    t.method("Seek", [](TFile* a, Long64_t arg0)->void { a->Seek(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));
    t.method("Seek", [](TFile* a, Long64_t arg0, TFile::ERelativeTo arg1)->void { a->Seek(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offset"), jlcxx::arg("pos"));

    DEBUG_MSG("Adding wrapper for void TFile::SetCompressionAlgorithm(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetCompressionAlgorithm(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:284:24
    t.method("SetCompressionAlgorithm", [](TFile& a)->void { a.SetCompressionAlgorithm(); }, jlcxx::arg("this"), jlcxx::arg("algorithm"));
    t.method("SetCompressionAlgorithm", [](TFile& a, Int_t arg0)->void { a.SetCompressionAlgorithm(arg0); }, jlcxx::arg("this"), jlcxx::arg("algorithm"));
    t.method("SetCompressionAlgorithm", [](TFile* a)->void { a->SetCompressionAlgorithm(); }, jlcxx::arg("this"), jlcxx::arg("algorithm"));
    t.method("SetCompressionAlgorithm", [](TFile* a, Int_t arg0)->void { a->SetCompressionAlgorithm(arg0); }, jlcxx::arg("this"), jlcxx::arg("algorithm"));

    DEBUG_MSG("Adding wrapper for void TFile::SetCompressionLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetCompressionLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:285:24
    t.method("SetCompressionLevel", [](TFile& a)->void { a.SetCompressionLevel(); }, jlcxx::arg("this"), jlcxx::arg("level"));
    t.method("SetCompressionLevel", [](TFile& a, Int_t arg0)->void { a.SetCompressionLevel(arg0); }, jlcxx::arg("this"), jlcxx::arg("level"));
    t.method("SetCompressionLevel", [](TFile* a)->void { a->SetCompressionLevel(); }, jlcxx::arg("this"), jlcxx::arg("level"));
    t.method("SetCompressionLevel", [](TFile* a, Int_t arg0)->void { a->SetCompressionLevel(arg0); }, jlcxx::arg("this"), jlcxx::arg("level"));

    DEBUG_MSG("Adding wrapper for void TFile::SetCompressionSettings(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetCompressionSettings(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:286:24
    t.method("SetCompressionSettings", [](TFile& a)->void { a.SetCompressionSettings(); }, jlcxx::arg("this"), jlcxx::arg("settings"));
    t.method("SetCompressionSettings", [](TFile& a, Int_t arg0)->void { a.SetCompressionSettings(arg0); }, jlcxx::arg("this"), jlcxx::arg("settings"));
    t.method("SetCompressionSettings", [](TFile* a)->void { a->SetCompressionSettings(); }, jlcxx::arg("this"), jlcxx::arg("settings"));
    t.method("SetCompressionSettings", [](TFile* a, Int_t arg0)->void { a->SetCompressionSettings(arg0); }, jlcxx::arg("this"), jlcxx::arg("settings"));

    DEBUG_MSG("Adding wrapper for void TFile::SetEND(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetEND(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:287:24
    t.method("SetEND", [](TFile& a, Long64_t arg0)->void { a.SetEND(arg0); }, jlcxx::arg("this"), jlcxx::arg("last"));
    t.method("SetEND", [](TFile* a, Long64_t arg0)->void { a->SetEND(arg0); }, jlcxx::arg("this"), jlcxx::arg("last"));

    DEBUG_MSG("Adding wrapper for void TFile::SetOffset(Long64_t, TFile::ERelativeTo) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetOffset(Long64_t, TFile::ERelativeTo)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:288:24
    t.method("SetOffset", [](TFile& a, Long64_t arg0)->void { a.SetOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));
    t.method("SetOffset", [](TFile& a, Long64_t arg0, TFile::ERelativeTo arg1)->void { a.SetOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offset"), jlcxx::arg("pos"));
    t.method("SetOffset", [](TFile* a, Long64_t arg0)->void { a->SetOffset(arg0); }, jlcxx::arg("this"), jlcxx::arg("offset"));
    t.method("SetOffset", [](TFile* a, Long64_t arg0, TFile::ERelativeTo arg1)->void { a->SetOffset(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("offset"), jlcxx::arg("pos"));

    DEBUG_MSG("Adding wrapper for void TFile::SetOption(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetOption(Option_t *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:289:24
    t.method("SetOption", [](TFile& a)->void { a.SetOption(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetOption", [](TFile& a, Option_t * arg0)->void { a.SetOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetOption", [](TFile* a)->void { a->SetOption(); }, jlcxx::arg("this"), jlcxx::arg("option"));
    t.method("SetOption", [](TFile* a, Option_t * arg0)->void { a->SetOption(arg0); }, jlcxx::arg("this"), jlcxx::arg("option"));

    DEBUG_MSG("Adding wrapper for void TFile::SetReadCalls(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetReadCalls(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:290:24
    t.method("SetReadCalls", [](TFile& a)->void { a.SetReadCalls(); }, jlcxx::arg("this"), jlcxx::arg("readcalls"));
    t.method("SetReadCalls", [](TFile& a, Int_t arg0)->void { a.SetReadCalls(arg0); }, jlcxx::arg("this"), jlcxx::arg("readcalls"));
    t.method("SetReadCalls", [](TFile* a)->void { a->SetReadCalls(); }, jlcxx::arg("this"), jlcxx::arg("readcalls"));
    t.method("SetReadCalls", [](TFile* a, Int_t arg0)->void { a->SetReadCalls(arg0); }, jlcxx::arg("this"), jlcxx::arg("readcalls"));

    DEBUG_MSG("Adding wrapper for void TFile::ShowStreamerInfo() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::ShowStreamerInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:291:24
    t.method("ShowStreamerInfo", [](TFile& a)->void { a.ShowStreamerInfo(); }, jlcxx::arg("this"));
    t.method("ShowStreamerInfo", [](TFile* a)->void { a->ShowStreamerInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::Sizeof() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::Sizeof()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:292:24
    t.method("Sizeof", [](TFile const& a)->Int_t { return a.Sizeof(); }, jlcxx::arg("this"));
    t.method("Sizeof", [](TFile const* a)->Int_t { return a->Sizeof(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::SumBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SumBuffer(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:293:24
    t.method("SumBuffer", [](TFile& a, Int_t arg0)->void { a.SumBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufsize"));
    t.method("SumBuffer", [](TFile* a, Int_t arg0)->void { a->SumBuffer(arg0); }, jlcxx::arg("this"), jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::WriteBuffer(const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::WriteBuffer(const char *, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:294:24
    t.method("WriteBuffer", [](TFile& a, const char * arg0, Int_t arg1)->Bool_t { return a.WriteBuffer(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));
    t.method("WriteBuffer", [](TFile* a, const char * arg0, Int_t arg1)->Bool_t { return a->WriteBuffer(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("buf"), jlcxx::arg("len"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:295:24
    t.method("Write", [](TFile& a)->Int_t { return a.Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TFile& a, const char * arg0)->Int_t { return a.Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TFile& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TFile& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsiz"));
    t.method("Write", [](TFile* a)->Int_t { return a->Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TFile* a, const char * arg0)->Int_t { return a->Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TFile* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TFile* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsiz"));

    DEBUG_MSG("Adding wrapper for Int_t TFile::Write(const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::Write(const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:296:24
    t.method("Write", [](TFile const& a)->Int_t { return a.Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TFile const& a, const char * arg0)->Int_t { return a.Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TFile const& a, const char * arg0, Int_t arg1)->Int_t { return a.Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TFile const& a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsiz"));
    t.method("Write", [](TFile const* a)->Int_t { return a->Write(); }, jlcxx::arg("this"));
    t.method("Write", [](TFile const* a, const char * arg0)->Int_t { return a->Write(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("Write", [](TFile const* a, const char * arg0, Int_t arg1)->Int_t { return a->Write(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"));
    t.method("Write", [](TFile const* a, const char * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->Write(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("opt"), jlcxx::arg("bufsiz"));

    DEBUG_MSG("Adding wrapper for void TFile::WriteFree() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::WriteFree()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:297:24
    t.method("WriteFree", [](TFile& a)->void { a.WriteFree(); }, jlcxx::arg("this"));
    t.method("WriteFree", [](TFile* a)->void { a->WriteFree(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::WriteHeader() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::WriteHeader()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:298:24
    t.method("WriteHeader", [](TFile& a)->void { a.WriteHeader(); }, jlcxx::arg("this"));
    t.method("WriteHeader", [](TFile* a)->void { a->WriteHeader(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::WriteStreamerInfo() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::WriteStreamerInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:300:24
    t.method("WriteStreamerInfo", [](TFile& a)->void { a.WriteStreamerInfo(); }, jlcxx::arg("this"));
    t.method("WriteStreamerInfo", [](TFile* a)->void { a->WriteStreamerInfo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for TFileOpenHandle * TFile::AsyncOpen(const char *, Option_t *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TFileOpenHandle * TFile::AsyncOpen(const char *, Option_t *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:303:24
    module_.method("TFile!AsyncOpen", [](const char * arg0)->TFileOpenHandle * { return TFile::AsyncOpen(arg0); }, jlcxx::arg("name"));
    module_.method("TFile!AsyncOpen", [](const char * arg0, Option_t * arg1)->TFileOpenHandle * { return TFile::AsyncOpen(arg0, arg1); }, jlcxx::arg("name"), jlcxx::arg("option"));
    module_.method("TFile!AsyncOpen", [](const char * arg0, Option_t * arg1, const char * arg2)->TFileOpenHandle * { return TFile::AsyncOpen(arg0, arg1, arg2); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"));
    module_.method("TFile!AsyncOpen", [](const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFileOpenHandle * { return TFile::AsyncOpen(arg0, arg1, arg2, arg3); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"));
    module_.method("TFile!AsyncOpen", [](const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFileOpenHandle * { return TFile::AsyncOpen(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"), jlcxx::arg("netopt"));

    DEBUG_MSG("Adding wrapper for TFile * TFile::Open(const char *, Option_t *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TFile::Open(const char *, Option_t *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:306:24
    module_.method("TFile!Open", [](const char * arg0)->TFile * { return TFile::Open(arg0); }, jlcxx::arg("name"));
    module_.method("TFile!Open", [](const char * arg0, Option_t * arg1)->TFile * { return TFile::Open(arg0, arg1); }, jlcxx::arg("name"), jlcxx::arg("option"));
    module_.method("TFile!Open", [](const char * arg0, Option_t * arg1, const char * arg2)->TFile * { return TFile::Open(arg0, arg1, arg2); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"));
    module_.method("TFile!Open", [](const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3)->TFile * { return TFile::Open(arg0, arg1, arg2, arg3); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"));
    module_.method("TFile!Open", [](const char * arg0, Option_t * arg1, const char * arg2, Int_t arg3, Int_t arg4)->TFile * { return TFile::Open(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("ftitle"), jlcxx::arg("compress"), jlcxx::arg("netopt"));

    DEBUG_MSG("Adding wrapper for TFile * TFile::Open(TFileOpenHandle *) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TFile::Open(TFileOpenHandle *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:309:24
    module_.method("TFile!Open", [](TFileOpenHandle * arg0)->TFile * { return TFile::Open(arg0); }, jlcxx::arg("handle"));

    DEBUG_MSG("Adding wrapper for TFile::EFileType TFile::GetType(const char *, Option_t *, TString *) (" __HERE__ ")");
    // signature to use in the veto list: TFile::EFileType TFile::GetType(const char *, Option_t *, TString *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:311:24
    module_.method("TFile!GetType", [](const char * arg0)->TFile::EFileType { return TFile::GetType(arg0); }, jlcxx::arg("name"));
    module_.method("TFile!GetType", [](const char * arg0, Option_t * arg1)->TFile::EFileType { return TFile::GetType(arg0, arg1); }, jlcxx::arg("name"), jlcxx::arg("option"));
    module_.method("TFile!GetType", [](const char * arg0, Option_t * arg1, TString * arg2)->TFile::EFileType { return TFile::GetType(arg0, arg1, arg2); }, jlcxx::arg("name"), jlcxx::arg("option"), jlcxx::arg("prefix"));

    DEBUG_MSG("Adding wrapper for TFile::EAsyncOpenStatus TFile::GetAsyncOpenStatus(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TFile::EAsyncOpenStatus TFile::GetAsyncOpenStatus(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:313:28
    module_.method("TFile!GetAsyncOpenStatus", [](const char * arg0)->TFile::EAsyncOpenStatus { return TFile::GetAsyncOpenStatus(arg0); }, jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for TFile::EAsyncOpenStatus TFile::GetAsyncOpenStatus(TFileOpenHandle *) (" __HERE__ ")");
    // signature to use in the veto list: TFile::EAsyncOpenStatus TFile::GetAsyncOpenStatus(TFileOpenHandle *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:314:28
    module_.method("TFile!GetAsyncOpenStatus", [](TFileOpenHandle * arg0)->TFile::EAsyncOpenStatus { return TFile::GetAsyncOpenStatus(arg0); }, jlcxx::arg("handle"));

    DEBUG_MSG("Adding wrapper for const TUrl * TFile::GetEndpointUrl(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const TUrl * TFile::GetEndpointUrl(const char *)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:315:24
    module_.method("TFile!GetEndpointUrl", [](const char * arg0)->const TUrl * { return TFile::GetEndpointUrl(arg0); }, jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetFileBytesRead() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetFileBytesRead()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:317:24
    module_.method("TFile!GetFileBytesRead", []()->Long64_t { return TFile::GetFileBytesRead(); });

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetFileBytesWritten() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetFileBytesWritten()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:318:24
    module_.method("TFile!GetFileBytesWritten", []()->Long64_t { return TFile::GetFileBytesWritten(); });

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetFileReadCalls() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetFileReadCalls()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:319:24
    module_.method("TFile!GetFileReadCalls", []()->Int_t { return TFile::GetFileReadCalls(); });

    DEBUG_MSG("Adding wrapper for Int_t TFile::GetReadaheadSize() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TFile::GetReadaheadSize()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:320:24
    module_.method("TFile!GetReadaheadSize", []()->Int_t { return TFile::GetReadaheadSize(); });

    DEBUG_MSG("Adding wrapper for void TFile::SetFileBytesRead(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetFileBytesRead(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:322:24
    module_.method("TFile!SetFileBytesRead", []()->void { TFile::SetFileBytesRead(); }, jlcxx::arg("bytes"));
    module_.method("TFile!SetFileBytesRead", [](Long64_t arg0)->void { TFile::SetFileBytesRead(arg0); }, jlcxx::arg("bytes"));

    DEBUG_MSG("Adding wrapper for void TFile::SetFileBytesWritten(Long64_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetFileBytesWritten(Long64_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:323:24
    module_.method("TFile!SetFileBytesWritten", []()->void { TFile::SetFileBytesWritten(); }, jlcxx::arg("bytes"));
    module_.method("TFile!SetFileBytesWritten", [](Long64_t arg0)->void { TFile::SetFileBytesWritten(arg0); }, jlcxx::arg("bytes"));

    DEBUG_MSG("Adding wrapper for void TFile::SetFileReadCalls(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetFileReadCalls(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:324:24
    module_.method("TFile!SetFileReadCalls", []()->void { TFile::SetFileReadCalls(); }, jlcxx::arg("readcalls"));
    module_.method("TFile!SetFileReadCalls", [](Int_t arg0)->void { TFile::SetFileReadCalls(arg0); }, jlcxx::arg("readcalls"));

    DEBUG_MSG("Adding wrapper for void TFile::SetReadaheadSize(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetReadaheadSize(Int_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:325:24
    module_.method("TFile!SetReadaheadSize", []()->void { TFile::SetReadaheadSize(); }, jlcxx::arg("bufsize"));
    module_.method("TFile!SetReadaheadSize", [](Int_t arg0)->void { TFile::SetReadaheadSize(arg0); }, jlcxx::arg("bufsize"));

    DEBUG_MSG("Adding wrapper for void TFile::SetReadStreamerInfo(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::SetReadStreamerInfo(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:326:24
    module_.method("TFile!SetReadStreamerInfo", []()->void { TFile::SetReadStreamerInfo(); }, jlcxx::arg("readinfo"));
    module_.method("TFile!SetReadStreamerInfo", [](Bool_t arg0)->void { TFile::SetReadStreamerInfo(arg0); }, jlcxx::arg("readinfo"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::GetReadStreamerInfo() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::GetReadStreamerInfo()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:327:24
    module_.method("TFile!GetReadStreamerInfo", []()->Bool_t { return TFile::GetReadStreamerInfo(); });

    DEBUG_MSG("Adding wrapper for Long64_t TFile::GetFileCounter() (" __HERE__ ")");
    // signature to use in the veto list: Long64_t TFile::GetFileCounter()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:329:24
    module_.method("TFile!GetFileCounter", []()->Long64_t { return TFile::GetFileCounter(); });

    DEBUG_MSG("Adding wrapper for void TFile::IncrementFileCounter() (" __HERE__ ")");
    // signature to use in the veto list: void TFile::IncrementFileCounter()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:330:24
    module_.method("TFile!IncrementFileCounter", []()->void { TFile::IncrementFileCounter(); });

    DEBUG_MSG("Adding wrapper for Bool_t TFile::SetCacheFileDir(std::string_view, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::SetCacheFileDir(std::string_view, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:332:24
    module_.method("TFile!SetCacheFileDir", [](const char * arg0)->Bool_t { return TFile::SetCacheFileDir((std::string_view)arg0); }, jlcxx::arg("cacheDir"));
    module_.method("TFile!SetCacheFileDir", [](const char * arg0, Bool_t arg1)->Bool_t { return TFile::SetCacheFileDir((std::string_view)arg0, arg1); }, jlcxx::arg("cacheDir"), jlcxx::arg("operateDisconnected"));
    module_.method("TFile!SetCacheFileDir", [](const char * arg0, Bool_t arg1, Bool_t arg2)->Bool_t { return TFile::SetCacheFileDir((std::string_view)arg0, arg1, arg2); }, jlcxx::arg("cacheDir"), jlcxx::arg("operateDisconnected"), jlcxx::arg("forceCacheread"));

    DEBUG_MSG("Adding wrapper for const char * TFile::GetCacheFileDir() (" __HERE__ ")");
    // signature to use in the veto list: const char * TFile::GetCacheFileDir()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:334:24
    module_.method("TFile!GetCacheFileDir", []() { return (std::string)TFile::GetCacheFileDir(); });

    DEBUG_MSG("Adding wrapper for Bool_t TFile::ShrinkCacheFileDir(Long64_t, Long_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::ShrinkCacheFileDir(Long64_t, Long_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:335:24
    module_.method("TFile!ShrinkCacheFileDir", [](Long64_t arg0)->Bool_t { return TFile::ShrinkCacheFileDir(arg0); }, jlcxx::arg("shrinkSize"));
    module_.method("TFile!ShrinkCacheFileDir", [](Long64_t arg0, Long_t arg1)->Bool_t { return TFile::ShrinkCacheFileDir(arg0, arg1); }, jlcxx::arg("shrinkSize"), jlcxx::arg("cleanupInteval"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::Cp(const char *, const char *, Bool_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::Cp(const char *, const char *, Bool_t, UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:336:24
    module_.method("TFile!Cp", [](const char * arg0, const char * arg1)->Bool_t { return TFile::Cp(arg0, arg1); }, jlcxx::arg("src"), jlcxx::arg("dst"));
    module_.method("TFile!Cp", [](const char * arg0, const char * arg1, Bool_t arg2)->Bool_t { return TFile::Cp(arg0, arg1, arg2); }, jlcxx::arg("src"), jlcxx::arg("dst"), jlcxx::arg("progressbar"));
    module_.method("TFile!Cp", [](const char * arg0, const char * arg1, Bool_t arg2, UInt_t arg3)->Bool_t { return TFile::Cp(arg0, arg1, arg2, arg3); }, jlcxx::arg("src"), jlcxx::arg("dst"), jlcxx::arg("progressbar"), jlcxx::arg("buffersize"));

    DEBUG_MSG("Adding wrapper for UInt_t TFile::SetOpenTimeout(UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TFile::SetOpenTimeout(UInt_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:339:24
    module_.method("TFile!SetOpenTimeout", [](UInt_t arg0)->UInt_t { return TFile::SetOpenTimeout(arg0); }, jlcxx::arg("timeout"));

    DEBUG_MSG("Adding wrapper for UInt_t TFile::GetOpenTimeout() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TFile::GetOpenTimeout()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:340:24
    module_.method("TFile!GetOpenTimeout", []()->UInt_t { return TFile::GetOpenTimeout(); });

    DEBUG_MSG("Adding wrapper for Bool_t TFile::SetOnlyStaged(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::SetOnlyStaged(Bool_t)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:341:24
    module_.method("TFile!SetOnlyStaged", [](Bool_t arg0)->Bool_t { return TFile::SetOnlyStaged(arg0); }, jlcxx::arg("onlystaged"));

    DEBUG_MSG("Adding wrapper for Bool_t TFile::GetOnlyStaged() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TFile::GetOnlyStaged()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TFile.h:342:24
    module_.method("TFile!GetOnlyStaged", []()->Bool_t { return TFile::GetOnlyStaged(); });

    DEBUG_MSG("Adding wrapper for Version_t TFile::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TFile::Class_Version()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:293:68
    module_.method("TFile!Class_Version", []()->Version_t { return TFile::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TFile::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TFile::IsA()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:294:76
    t.method("IsA", [](TFile const& a)->TClass * { return a.IsA(); }, jlcxx::arg("this"));
    t.method("IsA", [](TFile const* a)->TClass * { return a->IsA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void TFile::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:300:9
    t.method("StreamerNVirtual", [](TFile& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));
    t.method("StreamerNVirtual", [](TFile* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); }, jlcxx::arg("this"), jlcxx::arg("ClassDef_StreamerNVirtual_b"));

    DEBUG_MSG("Adding wrapper for const char * TFile::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TFile::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:301:88
    module_.method("TFile!DeclFileName", []() { return (std::string)TFile::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TFile::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TFile::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:309:55
    module_.method("TFile!ImplFileLine", []()->int { return TFile::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TFile::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TFile::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:310:63
    module_.method("TFile!ImplFileName", []() { return (std::string)TFile::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TFile::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TFile::Class_Name()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:311:57
    module_.method("TFile!Class_Name", []() { return (std::string)TFile::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TFile::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TFile::Dictionary()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:312:47
    module_.method("TFile!Dictionary", []()->TClass * { return TFile::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TFile::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TFile::Class()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:313:63
    module_.method("TFile!Class", []()->TClass * { return TFile::Class(); });

    DEBUG_MSG("Adding wrapper for void TFile::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TFile::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:314:25
    t.method("Streamer", [](TFile& a, TBuffer & arg0)->void { a.Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Streamer", [](TFile* a, TBuffer & arg0)->void { a->Streamer(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for int TFile::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TFile::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/Rtypes.h:343:43
    module_.method("TFile!DeclFileLine", []()->int { return TFile::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TFile>> type_;
};
std::shared_ptr<Wrapper> newJlTFile(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTFile(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TList> : std::false_type { };
  template<> struct DefaultConstructible<TList> : std::false_type { };
template<> struct SuperType<TList> { typedef TSeqCollection type; };
}

// Class generating the wrapper for type TList
// signature to use in the veto file: TList
struct JlTList: public Wrapper {

  JlTList(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TList (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TList.h:38:7
    jlcxx::TypeWrapper<TList>  t = jlModule.add_type<TList>("TList",
      jlcxx::julia_base_type<TSeqCollection>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TList>>(new jlcxx::TypeWrapper<TList>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TList>> type_;
};
std::shared_ptr<Wrapper> newJlTList(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTList(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TUUID> : std::false_type { };
  template<> struct DefaultConstructible<TUUID> : std::false_type { };
}

// Class generating the wrapper for type TUUID
// signature to use in the veto file: TUUID
struct JlTUUID: public Wrapper {

  JlTUUID(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TUUID (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/a4f6424ccb8f5188e250f447149860af999a56a0/include/TUUID.h:42:7
    jlcxx::TypeWrapper<TUUID>  t = jlModule.add_type<TUUID>("TUUID");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TUUID>>(new jlcxx::TypeWrapper<TUUID>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TUUID>> type_;
};
std::shared_ptr<Wrapper> newJlTUUID(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTUUID(module));
}
