// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlROOT.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualGeoTrack> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualGeoTrack> : std::false_type { };
template<> struct SuperType<TVirtualGeoTrack> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualGeoTrack
// signature to use in the veto file: TVirtualGeoTrack
struct JlTVirtualGeoTrack: public Wrapper {

  JlTVirtualGeoTrack(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualGeoTrack (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:23:7
    jlcxx::TypeWrapper<TVirtualGeoTrack>  t = jlModule.add_type<TVirtualGeoTrack>("TVirtualGeoTrack",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualGeoTrack>>(new jlcxx::TypeWrapper<TVirtualGeoTrack>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TVirtualGeoTrack::AddDaughter(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TVirtualGeoTrack::AddDaughter(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:39:30
    t.method("AddDaughter", [](TVirtualGeoTrack& a, Int_t arg0, Int_t arg1)->TVirtualGeoTrack * { return a.AddDaughter(arg0, arg1); });
    t.method("AddDaughter", [](TVirtualGeoTrack& a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a.AddDaughter(arg0, arg1, arg2); });
    t.method("AddDaughter", [](TVirtualGeoTrack* a, Int_t arg0, Int_t arg1)->TVirtualGeoTrack * { return a->AddDaughter(arg0, arg1); });
    t.method("AddDaughter", [](TVirtualGeoTrack* a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a->AddDaughter(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::AddDaughter(TVirtualGeoTrack *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::AddDaughter(TVirtualGeoTrack *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:40:18
    t.method("AddDaughter", [](TVirtualGeoTrack& a, TVirtualGeoTrack * arg0)->Int_t { return a.AddDaughter(arg0); });
    t.method("AddDaughter", [](TVirtualGeoTrack* a, TVirtualGeoTrack * arg0)->Int_t { return a->AddDaughter(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::AddPoint(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::AddPoint(Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:41:17
    t.method("AddPoint", [](TVirtualGeoTrack& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.AddPoint(arg0, arg1, arg2, arg3); });
    t.method("AddPoint", [](TVirtualGeoTrack* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->AddPoint(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TVirtualGeoTrack::FindTrackWithId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TVirtualGeoTrack::FindTrackWithId(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:42:30
    t.method("FindTrackWithId", [](TVirtualGeoTrack const& a, Int_t arg0)->TVirtualGeoTrack * { return a.FindTrackWithId(arg0); });
    t.method("FindTrackWithId", [](TVirtualGeoTrack const* a, Int_t arg0)->TVirtualGeoTrack * { return a->FindTrackWithId(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetId()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:43:10
    t.method("GetId", [](TVirtualGeoTrack const& a)->Int_t { return a.GetId(); });
    t.method("GetId", [](TVirtualGeoTrack const* a)->Int_t { return a->GetId(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetDaughterId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetDaughterId(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:44:18
    t.method("GetDaughterId", [](TVirtualGeoTrack const& a, Int_t arg0)->Int_t { return a.GetDaughterId(arg0); });
    t.method("GetDaughterId", [](TVirtualGeoTrack const* a, Int_t arg0)->Int_t { return a->GetDaughterId(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TVirtualGeoTrack::GetDaughter(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TVirtualGeoTrack::GetDaughter(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:45:22
    t.method("GetDaughter", [](TVirtualGeoTrack const& a, Int_t arg0)->TVirtualGeoTrack * { return a.GetDaughter(arg0); });
    t.method("GetDaughter", [](TVirtualGeoTrack const* a, Int_t arg0)->TVirtualGeoTrack * { return a->GetDaughter(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TVirtualGeoTrack::GetMother() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TVirtualGeoTrack::GetMother()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:46:22
    t.method("GetMother", [](TVirtualGeoTrack const& a)->TVirtualGeoTrack * { return a.GetMother(); });
    t.method("GetMother", [](TVirtualGeoTrack const* a)->TVirtualGeoTrack * { return a->GetMother(); });

    DEBUG_MSG("Adding wrapper for TObject * TVirtualGeoTrack::GetMotherParticle() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TVirtualGeoTrack::GetMotherParticle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:47:13
    t.method("GetMotherParticle", [](TVirtualGeoTrack const& a)->TObject * { return a.GetMotherParticle(); });
    t.method("GetMotherParticle", [](TVirtualGeoTrack const* a)->TObject * { return a->GetMotherParticle(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoTrack::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoTrack::GetName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:48:16
    t.method("GetName", [](TVirtualGeoTrack const& a) { return (std::string)a.GetName(); });
    t.method("GetName", [](TVirtualGeoTrack const* a) { return (std::string)a->GetName(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetNdaughters() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetNdaughters()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:49:10
    t.method("GetNdaughters", [](TVirtualGeoTrack const& a)->Int_t { return a.GetNdaughters(); });
    t.method("GetNdaughters", [](TVirtualGeoTrack const* a)->Int_t { return a->GetNdaughters(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetNpoints() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetNpoints()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:50:18
    t.method("GetNpoints", [](TVirtualGeoTrack const& a)->Int_t { return a.GetNpoints(); });
    t.method("GetNpoints", [](TVirtualGeoTrack const* a)->Int_t { return a->GetNpoints(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetParentId() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetParentId()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:51:10
    t.method("GetParentId", [](TVirtualGeoTrack const& a)->Int_t { return a.GetParentId(); });
    t.method("GetParentId", [](TVirtualGeoTrack const* a)->Int_t { return a->GetParentId(); });

    DEBUG_MSG("Adding wrapper for TObject * TVirtualGeoTrack::GetParticle() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TVirtualGeoTrack::GetParticle()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:52:13
    t.method("GetParticle", [](TVirtualGeoTrack const& a)->TObject * { return a.GetParticle(); });
    t.method("GetParticle", [](TVirtualGeoTrack const* a)->TObject * { return a->GetParticle(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetPDG() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetPDG()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:53:10
    t.method("GetPDG", [](TVirtualGeoTrack const& a)->Int_t { return a.GetPDG(); });
    t.method("GetPDG", [](TVirtualGeoTrack const* a)->Int_t { return a->GetPDG(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetLastPoint(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetLastPoint(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:54:10
    t.method("GetLastPoint", [](TVirtualGeoTrack const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->Int_t { return a.GetLastPoint(arg0, arg1, arg2, arg3); });
    t.method("GetLastPoint", [](TVirtualGeoTrack const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->Int_t { return a->GetLastPoint(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for const Double_t * TVirtualGeoTrack::GetFirstPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TVirtualGeoTrack::GetFirstPoint()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:58:20
    t.method("GetFirstPoint", [](TVirtualGeoTrack const& a)->const Double_t * { return a.GetFirstPoint(); });
    t.method("GetFirstPoint", [](TVirtualGeoTrack const* a)->const Double_t * { return a->GetFirstPoint(); });

    DEBUG_MSG("Adding wrapper for const Double_t * TVirtualGeoTrack::GetLastPoint() (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TVirtualGeoTrack::GetLastPoint()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:59:20
    t.method("GetLastPoint", [](TVirtualGeoTrack const& a)->const Double_t * { return a.GetLastPoint(); });
    t.method("GetLastPoint", [](TVirtualGeoTrack const* a)->const Double_t * { return a->GetLastPoint(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoTrack::GetPoint(Int_t, Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoTrack::GetPoint(Int_t, Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:60:18
    t.method("GetPoint", [](TVirtualGeoTrack const& a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a.GetPoint(arg0, arg1, arg2, arg3, arg4); });
    t.method("GetPoint", [](TVirtualGeoTrack const* a, Int_t arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3, Double_t & arg4)->Int_t { return a->GetPoint(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for const Double_t * TVirtualGeoTrack::GetPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const Double_t * TVirtualGeoTrack::GetPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:61:28
    t.method("GetPoint", [](TVirtualGeoTrack const& a, Int_t arg0)->const Double_t * { return a.GetPoint(arg0); });
    t.method("GetPoint", [](TVirtualGeoTrack const* a, Int_t arg0)->const Double_t * { return a->GetPoint(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoTrack::HasPoints() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoTrack::HasPoints()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:62:11
    t.method("HasPoints", [](TVirtualGeoTrack const& a)->Bool_t { return a.HasPoints(); });
    t.method("HasPoints", [](TVirtualGeoTrack const* a)->Bool_t { return a->HasPoints(); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoTrack::IsInTimeRange() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoTrack::IsInTimeRange()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:63:11
    t.method("IsInTimeRange", [](TVirtualGeoTrack const& a)->Bool_t { return a.IsInTimeRange(); });
    t.method("IsInTimeRange", [](TVirtualGeoTrack const* a)->Bool_t { return a->IsInTimeRange(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:64:9
    t.method("Paint", [](TVirtualGeoTrack& a)->void { a.Paint(); });
    t.method("Paint", [](TVirtualGeoTrack& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TVirtualGeoTrack* a)->void { a->Paint(); });
    t.method("Paint", [](TVirtualGeoTrack* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::PaintCollect(Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::PaintCollect(Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:65:17
    t.method("PaintCollect", [](TVirtualGeoTrack& a, Double_t arg0, Double_t * arg1)->void { a.PaintCollect(arg0, arg1); });
    t.method("PaintCollect", [](TVirtualGeoTrack* a, Double_t arg0, Double_t * arg1)->void { a->PaintCollect(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::PaintCollectTrack(Double_t, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::PaintCollectTrack(Double_t, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:66:17
    t.method("PaintCollectTrack", [](TVirtualGeoTrack& a, Double_t arg0, Double_t * arg1)->void { a.PaintCollectTrack(arg0, arg1); });
    t.method("PaintCollectTrack", [](TVirtualGeoTrack* a, Double_t arg0, Double_t * arg1)->void { a->PaintCollectTrack(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::PaintTrack(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::PaintTrack(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:67:17
    t.method("PaintTrack", [](TVirtualGeoTrack& a)->void { a.PaintTrack(); });
    t.method("PaintTrack", [](TVirtualGeoTrack& a, Option_t * arg0)->void { a.PaintTrack(arg0); });
    t.method("PaintTrack", [](TVirtualGeoTrack* a)->void { a->PaintTrack(); });
    t.method("PaintTrack", [](TVirtualGeoTrack* a, Option_t * arg0)->void { a->PaintTrack(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::ResetTrack() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::ResetTrack()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:68:17
    t.method("ResetTrack", [](TVirtualGeoTrack& a)->void { a.ResetTrack(); });
    t.method("ResetTrack", [](TVirtualGeoTrack* a)->void { a->ResetTrack(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::SetName(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:69:9
    t.method("SetName", [](TVirtualGeoTrack& a, const char * arg0)->void { a.SetName(arg0); });
    t.method("SetName", [](TVirtualGeoTrack* a, const char * arg0)->void { a->SetName(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::SetParticle(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::SetParticle(TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:70:17
    t.method("SetParticle", [](TVirtualGeoTrack& a, TObject * arg0)->void { a.SetParticle(arg0); });
    t.method("SetParticle", [](TVirtualGeoTrack* a, TObject * arg0)->void { a->SetParticle(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::SetParent(TVirtualGeoTrack *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::SetParent(TVirtualGeoTrack *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:71:9
    t.method("SetParent", [](TVirtualGeoTrack& a, TVirtualGeoTrack * arg0)->void { a.SetParent(arg0); });
    t.method("SetParent", [](TVirtualGeoTrack* a, TVirtualGeoTrack * arg0)->void { a->SetParent(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::SetId(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::SetId(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:72:9
    t.method("SetId", [](TVirtualGeoTrack& a, Int_t arg0)->void { a.SetId(arg0); });
    t.method("SetId", [](TVirtualGeoTrack* a, Int_t arg0)->void { a->SetId(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::SetPDG(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::SetPDG(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:73:17
    t.method("SetPDG", [](TVirtualGeoTrack& a, Int_t arg0)->void { a.SetPDG(arg0); });
    t.method("SetPDG", [](TVirtualGeoTrack* a, Int_t arg0)->void { a->SetPDG(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TVirtualGeoTrack::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TVirtualGeoTrack::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!Class_Version", []()->Version_t { return TVirtualGeoTrack::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoTrack::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoTrack::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    t.method("IsA", [](TVirtualGeoTrack const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TVirtualGeoTrack const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    t.method("StreamerNVirtual", [](TVirtualGeoTrack& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TVirtualGeoTrack* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoTrack::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoTrack::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!DeclFileName", []() { return (std::string)TVirtualGeoTrack::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TVirtualGeoTrack::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualGeoTrack::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!ImplFileLine", []()->int { return TVirtualGeoTrack::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoTrack::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoTrack::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!ImplFileName", []() { return (std::string)TVirtualGeoTrack::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoTrack::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoTrack::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!Class_Name", []() { return (std::string)TVirtualGeoTrack::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoTrack::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoTrack::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!Dictionary", []()->TClass * { return TVirtualGeoTrack::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoTrack::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoTrack::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!Class", []()->TClass * { return TVirtualGeoTrack::Class(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoTrack::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoTrack::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    t.method("Streamer", [](TVirtualGeoTrack& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TVirtualGeoTrack* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TVirtualGeoTrack::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualGeoTrack::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoTrack.h:75:4
    module_.method("TVirtualGeoTrack!DeclFileLine", []()->int { return TVirtualGeoTrack::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualGeoTrack>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualGeoTrack(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualGeoTrack(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualGeoPainter> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualGeoPainter> : std::false_type { };
template<> struct SuperType<TVirtualGeoPainter> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualGeoPainter
// signature to use in the veto file: TVirtualGeoPainter
struct JlTVirtualGeoPainter: public Wrapper {

  JlTVirtualGeoPainter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualGeoPainter (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:32:7
    jlcxx::TypeWrapper<TVirtualGeoPainter>  t = jlModule.add_type<TVirtualGeoPainter>("TVirtualGeoPainter",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualGeoPainter>>(new jlcxx::TypeWrapper<TVirtualGeoPainter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::AddSize3D(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::AddSize3D(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:57:17
    t.method("AddSize3D", [](TVirtualGeoPainter& a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a.AddSize3D(arg0, arg1, arg2); });
    t.method("AddSize3D", [](TVirtualGeoPainter* a, Int_t arg0, Int_t arg1, Int_t arg2)->void { a->AddSize3D(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoTrack * TVirtualGeoPainter::AddTrack(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoTrack * TVirtualGeoPainter::AddTrack(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:58:30
    t.method("AddTrack", [](TVirtualGeoPainter& a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a.AddTrack(arg0, arg1, arg2); });
    t.method("AddTrack", [](TVirtualGeoPainter* a, Int_t arg0, Int_t arg1, TObject * arg2)->TVirtualGeoTrack * { return a->AddTrack(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::AddTrackPoint(Double_t *, Double_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::AddTrackPoint(Double_t *, Double_t *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:59:17
    t.method("AddTrackPoint", [](TVirtualGeoPainter& a, Double_t * arg0, Double_t * arg1)->void { a.AddTrackPoint(arg0, arg1); });
    t.method("AddTrackPoint", [](TVirtualGeoPainter& a, Double_t * arg0, Double_t * arg1, Bool_t arg2)->void { a.AddTrackPoint(arg0, arg1, arg2); });
    t.method("AddTrackPoint", [](TVirtualGeoPainter* a, Double_t * arg0, Double_t * arg1)->void { a->AddTrackPoint(arg0, arg1); });
    t.method("AddTrackPoint", [](TVirtualGeoPainter* a, Double_t * arg0, Double_t * arg1, Bool_t arg2)->void { a->AddTrackPoint(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::BombTranslation(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::BombTranslation(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:60:17
    t.method("BombTranslation", [](TVirtualGeoPainter& a, const Double_t * arg0, Double_t * arg1)->void { a.BombTranslation(arg0, arg1); });
    t.method("BombTranslation", [](TVirtualGeoPainter* a, const Double_t * arg0, Double_t * arg1)->void { a->BombTranslation(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckPoint(Double_t, Double_t, Double_t, Option_t *, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckPoint(Double_t, Double_t, Double_t, Option_t *, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:61:17
    t.method("CheckPoint", [](TVirtualGeoPainter& a)->void { a.CheckPoint(); });
    t.method("CheckPoint", [](TVirtualGeoPainter& a, Double_t arg0)->void { a.CheckPoint(arg0); });
    t.method("CheckPoint", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1)->void { a.CheckPoint(arg0, arg1); });
    t.method("CheckPoint", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.CheckPoint(arg0, arg1, arg2); });
    t.method("CheckPoint", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3)->void { a.CheckPoint(arg0, arg1, arg2, arg3); });
    t.method("CheckPoint", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3, Double_t arg4)->void { a.CheckPoint(arg0, arg1, arg2, arg3, arg4); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a)->void { a->CheckPoint(); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a, Double_t arg0)->void { a->CheckPoint(arg0); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1)->void { a->CheckPoint(arg0, arg1); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->CheckPoint(arg0, arg1, arg2); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3)->void { a->CheckPoint(arg0, arg1, arg2, arg3); });
    t.method("CheckPoint", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t arg2, Option_t * arg3, Double_t arg4)->void { a->CheckPoint(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckShape(TGeoShape *, Int_t, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckShape(TGeoShape *, Int_t, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:62:17
    t.method("CheckShape", [](TVirtualGeoPainter& a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->void { a.CheckShape(arg0, arg1, arg2, arg3); });
    t.method("CheckShape", [](TVirtualGeoPainter* a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Option_t * arg3)->void { a->CheckShape(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckBoundaryErrors(Int_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckBoundaryErrors(Int_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:63:17
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter& a)->void { a.CheckBoundaryErrors(); });
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.CheckBoundaryErrors(arg0); });
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1)->void { a.CheckBoundaryErrors(arg0, arg1); });
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter* a)->void { a->CheckBoundaryErrors(); });
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->CheckBoundaryErrors(arg0); });
    t.method("CheckBoundaryErrors", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1)->void { a->CheckBoundaryErrors(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckBoundaryReference(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckBoundaryReference(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:64:17
    t.method("CheckBoundaryReference", [](TVirtualGeoPainter& a)->void { a.CheckBoundaryReference(); });
    t.method("CheckBoundaryReference", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.CheckBoundaryReference(arg0); });
    t.method("CheckBoundaryReference", [](TVirtualGeoPainter* a)->void { a->CheckBoundaryReference(); });
    t.method("CheckBoundaryReference", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->CheckBoundaryReference(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckGeometryFull(Bool_t, Bool_t, Int_t, const Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckGeometryFull(Bool_t, Bool_t, Int_t, const Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:65:17
    t.method("CheckGeometryFull", [](TVirtualGeoPainter& a)->void { a.CheckGeometryFull(); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter& a, Bool_t arg0)->void { a.CheckGeometryFull(arg0); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter& a, Bool_t arg0, Bool_t arg1)->void { a.CheckGeometryFull(arg0, arg1); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter& a, Bool_t arg0, Bool_t arg1, Int_t arg2)->void { a.CheckGeometryFull(arg0, arg1, arg2); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter& a, Bool_t arg0, Bool_t arg1, Int_t arg2, const Double_t * arg3)->void { a.CheckGeometryFull(arg0, arg1, arg2, arg3); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter* a)->void { a->CheckGeometryFull(); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter* a, Bool_t arg0)->void { a->CheckGeometryFull(arg0); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter* a, Bool_t arg0, Bool_t arg1)->void { a->CheckGeometryFull(arg0, arg1); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter* a, Bool_t arg0, Bool_t arg1, Int_t arg2)->void { a->CheckGeometryFull(arg0, arg1, arg2); });
    t.method("CheckGeometryFull", [](TVirtualGeoPainter* a, Bool_t arg0, Bool_t arg1, Int_t arg2, const Double_t * arg3)->void { a->CheckGeometryFull(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckGeometry(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckGeometry(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:67:17
    t.method("CheckGeometry", [](TVirtualGeoPainter const& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.CheckGeometry(arg0, arg1, arg2, arg3); });
    t.method("CheckGeometry", [](TVirtualGeoPainter const* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->CheckGeometry(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::CheckOverlaps(const TGeoVolume *, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::CheckOverlaps(const TGeoVolume *, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:68:17
    t.method("CheckOverlaps", [](TVirtualGeoPainter const& a, const TGeoVolume * arg0)->void { a.CheckOverlaps(arg0); });
    t.method("CheckOverlaps", [](TVirtualGeoPainter const& a, const TGeoVolume * arg0, Double_t arg1)->void { a.CheckOverlaps(arg0, arg1); });
    t.method("CheckOverlaps", [](TVirtualGeoPainter const& a, const TGeoVolume * arg0, Double_t arg1, Option_t * arg2)->void { a.CheckOverlaps(arg0, arg1, arg2); });
    t.method("CheckOverlaps", [](TVirtualGeoPainter const* a, const TGeoVolume * arg0)->void { a->CheckOverlaps(arg0); });
    t.method("CheckOverlaps", [](TVirtualGeoPainter const* a, const TGeoVolume * arg0, Double_t arg1)->void { a->CheckOverlaps(arg0, arg1); });
    t.method("CheckOverlaps", [](TVirtualGeoPainter const* a, const TGeoVolume * arg0, Double_t arg1, Option_t * arg2)->void { a->CheckOverlaps(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::CountVisibleNodes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::CountVisibleNodes()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:69:18
    t.method("CountVisibleNodes", [](TVirtualGeoPainter& a)->Int_t { return a.CountVisibleNodes(); });
    t.method("CountVisibleNodes", [](TVirtualGeoPainter* a)->Int_t { return a->CountVisibleNodes(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DefaultAngles() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DefaultAngles()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:70:17
    t.method("DefaultAngles", [](TVirtualGeoPainter& a)->void { a.DefaultAngles(); });
    t.method("DefaultAngles", [](TVirtualGeoPainter* a)->void { a->DefaultAngles(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DefaultColors() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DefaultColors()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:71:17
    t.method("DefaultColors", [](TVirtualGeoPainter& a)->void { a.DefaultColors(); });
    t.method("DefaultColors", [](TVirtualGeoPainter* a)->void { a->DefaultColors(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::DistanceToPrimitiveVol(TGeoVolume *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::DistanceToPrimitiveVol(TGeoVolume *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:72:18
    t.method("DistanceToPrimitiveVol", [](TVirtualGeoPainter& a, TGeoVolume * arg0, Int_t arg1, Int_t arg2)->Int_t { return a.DistanceToPrimitiveVol(arg0, arg1, arg2); });
    t.method("DistanceToPrimitiveVol", [](TVirtualGeoPainter* a, TGeoVolume * arg0, Int_t arg1, Int_t arg2)->Int_t { return a->DistanceToPrimitiveVol(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawBatemanSol(TGeoBatemanSol *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawBatemanSol(TGeoBatemanSol *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:73:17
    t.method("DrawBatemanSol", [](TVirtualGeoPainter& a, TGeoBatemanSol * arg0)->void { a.DrawBatemanSol(arg0); });
    t.method("DrawBatemanSol", [](TVirtualGeoPainter& a, TGeoBatemanSol * arg0, Option_t * arg1)->void { a.DrawBatemanSol(arg0, arg1); });
    t.method("DrawBatemanSol", [](TVirtualGeoPainter* a, TGeoBatemanSol * arg0)->void { a->DrawBatemanSol(arg0); });
    t.method("DrawBatemanSol", [](TVirtualGeoPainter* a, TGeoBatemanSol * arg0, Option_t * arg1)->void { a->DrawBatemanSol(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawShape(TGeoShape *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawShape(TGeoShape *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:74:17
    t.method("DrawShape", [](TVirtualGeoPainter& a, TGeoShape * arg0)->void { a.DrawShape(arg0); });
    t.method("DrawShape", [](TVirtualGeoPainter& a, TGeoShape * arg0, Option_t * arg1)->void { a.DrawShape(arg0, arg1); });
    t.method("DrawShape", [](TVirtualGeoPainter* a, TGeoShape * arg0)->void { a->DrawShape(arg0); });
    t.method("DrawShape", [](TVirtualGeoPainter* a, TGeoShape * arg0, Option_t * arg1)->void { a->DrawShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawOnly(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawOnly(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:75:17
    t.method("DrawOnly", [](TVirtualGeoPainter& a)->void { a.DrawOnly(); });
    t.method("DrawOnly", [](TVirtualGeoPainter& a, Option_t * arg0)->void { a.DrawOnly(arg0); });
    t.method("DrawOnly", [](TVirtualGeoPainter* a)->void { a->DrawOnly(); });
    t.method("DrawOnly", [](TVirtualGeoPainter* a, Option_t * arg0)->void { a->DrawOnly(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawOverlap(void *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawOverlap(void *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:76:17
    t.method("DrawOverlap", [](TVirtualGeoPainter& a, void * arg0)->void { a.DrawOverlap(arg0); });
    t.method("DrawOverlap", [](TVirtualGeoPainter& a, void * arg0, Option_t * arg1)->void { a.DrawOverlap(arg0, arg1); });
    t.method("DrawOverlap", [](TVirtualGeoPainter* a, void * arg0)->void { a->DrawOverlap(arg0); });
    t.method("DrawOverlap", [](TVirtualGeoPainter* a, void * arg0, Option_t * arg1)->void { a->DrawOverlap(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawCurrentPoint(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawCurrentPoint(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:77:17
    t.method("DrawCurrentPoint", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.DrawCurrentPoint(arg0); });
    t.method("DrawCurrentPoint", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->DrawCurrentPoint(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawPanel() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawPanel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:78:17
    t.method("DrawPanel", [](TVirtualGeoPainter& a)->void { a.DrawPanel(); });
    t.method("DrawPanel", [](TVirtualGeoPainter* a)->void { a->DrawPanel(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawPath(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawPath(const char *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:79:17
    t.method("DrawPath", [](TVirtualGeoPainter& a, const char * arg0)->void { a.DrawPath(arg0); });
    t.method("DrawPath", [](TVirtualGeoPainter& a, const char * arg0, Option_t * arg1)->void { a.DrawPath(arg0, arg1); });
    t.method("DrawPath", [](TVirtualGeoPainter* a, const char * arg0)->void { a->DrawPath(arg0); });
    t.method("DrawPath", [](TVirtualGeoPainter* a, const char * arg0, Option_t * arg1)->void { a->DrawPath(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawPolygon(const TGeoPolygon *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawPolygon(const TGeoPolygon *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:80:17
    t.method("DrawPolygon", [](TVirtualGeoPainter& a, const TGeoPolygon * arg0)->void { a.DrawPolygon(arg0); });
    t.method("DrawPolygon", [](TVirtualGeoPainter* a, const TGeoPolygon * arg0)->void { a->DrawPolygon(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::DrawVolume(TGeoVolume *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::DrawVolume(TGeoVolume *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:81:17
    t.method("DrawVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0)->void { a.DrawVolume(arg0); });
    t.method("DrawVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0, Option_t * arg1)->void { a.DrawVolume(arg0, arg1); });
    t.method("DrawVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0)->void { a->DrawVolume(arg0); });
    t.method("DrawVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0, Option_t * arg1)->void { a->DrawVolume(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::EditGeometry(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::EditGeometry(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:82:17
    t.method("EditGeometry", [](TVirtualGeoPainter& a)->void { a.EditGeometry(); });
    t.method("EditGeometry", [](TVirtualGeoPainter& a, Option_t * arg0)->void { a.EditGeometry(arg0); });
    t.method("EditGeometry", [](TVirtualGeoPainter* a)->void { a->EditGeometry(); });
    t.method("EditGeometry", [](TVirtualGeoPainter* a, Option_t * arg0)->void { a->EditGeometry(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::EstimateCameraMove(Double_t, Double_t, Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::EstimateCameraMove(Double_t, Double_t, Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:83:17
    t.method("EstimateCameraMove", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t * arg2, Double_t * arg3)->void { a.EstimateCameraMove(arg0, arg1, arg2, arg3); });
    t.method("EstimateCameraMove", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t * arg2, Double_t * arg3)->void { a->EstimateCameraMove(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::ExecuteShapeEvent(TGeoShape *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::ExecuteShapeEvent(TGeoShape *, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:84:17
    t.method("ExecuteShapeEvent", [](TVirtualGeoPainter& a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a.ExecuteShapeEvent(arg0, arg1, arg2, arg3); });
    t.method("ExecuteShapeEvent", [](TVirtualGeoPainter* a, TGeoShape * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a->ExecuteShapeEvent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::ExecuteManagerEvent(TGeoManager *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::ExecuteManagerEvent(TGeoManager *, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:85:17
    t.method("ExecuteManagerEvent", [](TVirtualGeoPainter& a, TGeoManager * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a.ExecuteManagerEvent(arg0, arg1, arg2, arg3); });
    t.method("ExecuteManagerEvent", [](TVirtualGeoPainter* a, TGeoManager * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a->ExecuteManagerEvent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::ExecuteVolumeEvent(TGeoVolume *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::ExecuteVolumeEvent(TGeoVolume *, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:86:17
    t.method("ExecuteVolumeEvent", [](TVirtualGeoPainter& a, TGeoVolume * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a.ExecuteVolumeEvent(arg0, arg1, arg2, arg3); });
    t.method("ExecuteVolumeEvent", [](TVirtualGeoPainter* a, TGeoVolume * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->void { a->ExecuteVolumeEvent(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::GetColor(Int_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::GetColor(Int_t, Float_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:87:18
    t.method("GetColor", [](TVirtualGeoPainter const& a, Int_t arg0, Float_t arg1)->Int_t { return a.GetColor(arg0, arg1); });
    t.method("GetColor", [](TVirtualGeoPainter const* a, Int_t arg0, Float_t arg1)->Int_t { return a->GetColor(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::GetNsegments() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::GetNsegments()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:88:18
    t.method("GetNsegments", [](TVirtualGeoPainter const& a)->Int_t { return a.GetNsegments(); });
    t.method("GetNsegments", [](TVirtualGeoPainter const* a)->Int_t { return a->GetNsegments(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::GetBombFactors(Double_t &, Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::GetBombFactors(Double_t &, Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:89:17
    t.method("GetBombFactors", [](TVirtualGeoPainter const& a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a.GetBombFactors(arg0, arg1, arg2, arg3); });
    t.method("GetBombFactors", [](TVirtualGeoPainter const* a, Double_t & arg0, Double_t & arg1, Double_t & arg2, Double_t & arg3)->void { a->GetBombFactors(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::GetBombMode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::GetBombMode()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:90:18
    t.method("GetBombMode", [](TVirtualGeoPainter const& a)->Int_t { return a.GetBombMode(); });
    t.method("GetBombMode", [](TVirtualGeoPainter const* a)->Int_t { return a->GetBombMode(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoPainter::GetDrawPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoPainter::GetDrawPath()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:91:24
    t.method("GetDrawPath", [](TVirtualGeoPainter const& a) { return (std::string)a.GetDrawPath(); });
    t.method("GetDrawPath", [](TVirtualGeoPainter const* a) { return (std::string)a->GetDrawPath(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TVirtualGeoPainter::GetDrawnVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TVirtualGeoPainter::GetDrawnVolume()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:92:24
    t.method("GetDrawnVolume", [](TVirtualGeoPainter const& a)->TGeoVolume * { return a.GetDrawnVolume(); });
    t.method("GetDrawnVolume", [](TVirtualGeoPainter const* a)->TGeoVolume * { return a->GetDrawnVolume(); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TVirtualGeoPainter::GetTopVolume() (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TVirtualGeoPainter::GetTopVolume()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:93:24
    t.method("GetTopVolume", [](TVirtualGeoPainter const& a)->TGeoVolume * { return a.GetTopVolume(); });
    t.method("GetTopVolume", [](TVirtualGeoPainter const* a)->TGeoVolume * { return a->GetTopVolume(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::GetViewAngles(Double_t &, Double_t &, Double_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::GetViewAngles(Double_t &, Double_t &, Double_t &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:94:17
    t.method("GetViewAngles", [](TVirtualGeoPainter& a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a.GetViewAngles(arg0, arg1, arg2); });
    t.method("GetViewAngles", [](TVirtualGeoPainter* a, Double_t & arg0, Double_t & arg1, Double_t & arg2)->void { a->GetViewAngles(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::GetVisLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::GetVisLevel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:95:18
    t.method("GetVisLevel", [](TVirtualGeoPainter const& a)->Int_t { return a.GetVisLevel(); });
    t.method("GetVisLevel", [](TVirtualGeoPainter const* a)->Int_t { return a->GetVisLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::GetVisOption() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::GetVisOption()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:96:18
    t.method("GetVisOption", [](TVirtualGeoPainter const& a)->Int_t { return a.GetVisOption(); });
    t.method("GetVisOption", [](TVirtualGeoPainter const* a)->Int_t { return a->GetVisOption(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoPainter::GetVolumeInfo(const TGeoVolume *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoPainter::GetVolumeInfo(const TGeoVolume *, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:97:24
    t.method("GetVolumeInfo", [](TVirtualGeoPainter const& a, const TGeoVolume * arg0, Int_t arg1, Int_t arg2) { return (std::string)a.GetVolumeInfo(arg0, arg1, arg2); });
    t.method("GetVolumeInfo", [](TVirtualGeoPainter const* a, const TGeoVolume * arg0, Int_t arg1, Int_t arg2) { return (std::string)a->GetVolumeInfo(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::GrabFocus(Int_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::GrabFocus(Int_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:98:17
    t.method("GrabFocus", [](TVirtualGeoPainter& a)->void { a.GrabFocus(); });
    t.method("GrabFocus", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.GrabFocus(arg0); });
    t.method("GrabFocus", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1)->void { a.GrabFocus(arg0, arg1); });
    t.method("GrabFocus", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a.GrabFocus(arg0, arg1, arg2); });
    t.method("GrabFocus", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.GrabFocus(arg0, arg1, arg2, arg3); });
    t.method("GrabFocus", [](TVirtualGeoPainter* a)->void { a->GrabFocus(); });
    t.method("GrabFocus", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->GrabFocus(arg0); });
    t.method("GrabFocus", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1)->void { a->GrabFocus(arg0, arg1); });
    t.method("GrabFocus", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2)->void { a->GrabFocus(arg0, arg1, arg2); });
    t.method("GrabFocus", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->GrabFocus(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for Double_t * TVirtualGeoPainter::GetViewBox() (" __HERE__ ")");
    // signature to use in the veto list: Double_t * TVirtualGeoPainter::GetViewBox()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:99:22
    t.method("GetViewBox", [](TVirtualGeoPainter& a)->Double_t * { return a.GetViewBox(); });
    t.method("GetViewBox", [](TVirtualGeoPainter* a)->Double_t * { return a->GetViewBox(); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoPainter::IsPaintingShape() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoPainter::IsPaintingShape()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:100:19
    t.method("IsPaintingShape", [](TVirtualGeoPainter const& a)->Bool_t { return a.IsPaintingShape(); });
    t.method("IsPaintingShape", [](TVirtualGeoPainter const* a)->Bool_t { return a->IsPaintingShape(); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoPainter::IsRaytracing() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoPainter::IsRaytracing()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:101:19
    t.method("IsRaytracing", [](TVirtualGeoPainter const& a)->Bool_t { return a.IsRaytracing(); });
    t.method("IsRaytracing", [](TVirtualGeoPainter const* a)->Bool_t { return a->IsRaytracing(); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoPainter::IsExplodedView() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoPainter::IsExplodedView()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:102:19
    t.method("IsExplodedView", [](TVirtualGeoPainter const& a)->Bool_t { return a.IsExplodedView(); });
    t.method("IsExplodedView", [](TVirtualGeoPainter const* a)->Bool_t { return a->IsExplodedView(); });

    DEBUG_MSG("Adding wrapper for TH2F * TVirtualGeoPainter::LegoPlot(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Double_t, Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TH2F * TVirtualGeoPainter::LegoPlot(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Double_t, Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:103:18
    t.method("LegoPlot", [](TVirtualGeoPainter& a)->TH2F * { return a.LegoPlot(); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0)->TH2F * { return a.LegoPlot(arg0); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1)->TH2F * { return a.LegoPlot(arg0, arg1); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2)->TH2F * { return a.LegoPlot(arg0, arg1, arg2); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("LegoPlot", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Option_t * arg8)->TH2F * { return a.LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a)->TH2F * { return a->LegoPlot(); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0)->TH2F * { return a->LegoPlot(arg0); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1)->TH2F * { return a->LegoPlot(arg0, arg1); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2)->TH2F * { return a->LegoPlot(arg0, arg1, arg2); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("LegoPlot", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Int_t arg3, Double_t arg4, Double_t arg5, Double_t arg6, Double_t arg7, Option_t * arg8)->TH2F * { return a->LegoPlot(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::ModifiedPad(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::ModifiedPad(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:106:17
    t.method("ModifiedPad", [](TVirtualGeoPainter const& a)->void { a.ModifiedPad(); });
    t.method("ModifiedPad", [](TVirtualGeoPainter const& a, Bool_t arg0)->void { a.ModifiedPad(arg0); });
    t.method("ModifiedPad", [](TVirtualGeoPainter const* a)->void { a->ModifiedPad(); });
    t.method("ModifiedPad", [](TVirtualGeoPainter const* a, Bool_t arg0)->void { a->ModifiedPad(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:109:9
    t.method("Paint", [](TVirtualGeoPainter& a)->void { a.Paint(); });
    t.method("Paint", [](TVirtualGeoPainter& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TVirtualGeoPainter* a)->void { a->Paint(); });
    t.method("Paint", [](TVirtualGeoPainter* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::PaintNode(TGeoNode *, Option_t *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::PaintNode(TGeoNode *, Option_t *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:110:17
    t.method("PaintNode", [](TVirtualGeoPainter& a, TGeoNode * arg0)->void { a.PaintNode(arg0); });
    t.method("PaintNode", [](TVirtualGeoPainter& a, TGeoNode * arg0, Option_t * arg1)->void { a.PaintNode(arg0, arg1); });
    t.method("PaintNode", [](TVirtualGeoPainter& a, TGeoNode * arg0, Option_t * arg1, TGeoMatrix * arg2)->void { a.PaintNode(arg0, arg1, arg2); });
    t.method("PaintNode", [](TVirtualGeoPainter* a, TGeoNode * arg0)->void { a->PaintNode(arg0); });
    t.method("PaintNode", [](TVirtualGeoPainter* a, TGeoNode * arg0, Option_t * arg1)->void { a->PaintNode(arg0, arg1); });
    t.method("PaintNode", [](TVirtualGeoPainter* a, TGeoNode * arg0, Option_t * arg1, TGeoMatrix * arg2)->void { a->PaintNode(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::PaintShape(TGeoShape *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::PaintShape(TGeoShape *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:111:17
    t.method("PaintShape", [](TVirtualGeoPainter& a, TGeoShape * arg0)->void { a.PaintShape(arg0); });
    t.method("PaintShape", [](TVirtualGeoPainter& a, TGeoShape * arg0, Option_t * arg1)->void { a.PaintShape(arg0, arg1); });
    t.method("PaintShape", [](TVirtualGeoPainter* a, TGeoShape * arg0)->void { a->PaintShape(arg0); });
    t.method("PaintShape", [](TVirtualGeoPainter* a, TGeoShape * arg0, Option_t * arg1)->void { a->PaintShape(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::PaintOverlap(void *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::PaintOverlap(void *, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:112:17
    t.method("PaintOverlap", [](TVirtualGeoPainter& a, void * arg0)->void { a.PaintOverlap(arg0); });
    t.method("PaintOverlap", [](TVirtualGeoPainter& a, void * arg0, Option_t * arg1)->void { a.PaintOverlap(arg0, arg1); });
    t.method("PaintOverlap", [](TVirtualGeoPainter* a, void * arg0)->void { a->PaintOverlap(arg0); });
    t.method("PaintOverlap", [](TVirtualGeoPainter* a, void * arg0, Option_t * arg1)->void { a->PaintOverlap(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::PrintOverlaps() (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::PrintOverlaps()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:113:17
    t.method("PrintOverlaps", [](TVirtualGeoPainter const& a)->void { a.PrintOverlaps(); });
    t.method("PrintOverlaps", [](TVirtualGeoPainter const* a)->void { a->PrintOverlaps(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::PaintVolume(TGeoVolume *, Option_t *, TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::PaintVolume(TGeoVolume *, Option_t *, TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:114:17
    t.method("PaintVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0)->void { a.PaintVolume(arg0); });
    t.method("PaintVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0, Option_t * arg1)->void { a.PaintVolume(arg0, arg1); });
    t.method("PaintVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0, Option_t * arg1, TGeoMatrix * arg2)->void { a.PaintVolume(arg0, arg1, arg2); });
    t.method("PaintVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0)->void { a->PaintVolume(arg0); });
    t.method("PaintVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0, Option_t * arg1)->void { a->PaintVolume(arg0, arg1); });
    t.method("PaintVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0, Option_t * arg1, TGeoMatrix * arg2)->void { a->PaintVolume(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::RandomPoints(const TGeoVolume *, Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::RandomPoints(const TGeoVolume *, Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:115:17
    t.method("RandomPoints", [](TVirtualGeoPainter& a, const TGeoVolume * arg0, Int_t arg1)->void { a.RandomPoints(arg0, arg1); });
    t.method("RandomPoints", [](TVirtualGeoPainter& a, const TGeoVolume * arg0, Int_t arg1, Option_t * arg2)->void { a.RandomPoints(arg0, arg1, arg2); });
    t.method("RandomPoints", [](TVirtualGeoPainter* a, const TGeoVolume * arg0, Int_t arg1)->void { a->RandomPoints(arg0, arg1); });
    t.method("RandomPoints", [](TVirtualGeoPainter* a, const TGeoVolume * arg0, Int_t arg1, Option_t * arg2)->void { a->RandomPoints(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::RandomRays(Int_t, Double_t, Double_t, Double_t, const char *, Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:116:17
    t.method("RandomRays", [](TVirtualGeoPainter& a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a.RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("RandomRays", [](TVirtualGeoPainter* a, Int_t arg0, Double_t arg1, Double_t arg2, Double_t arg3, const char * arg4, Bool_t arg5)->void { a->RandomRays(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::Raytrace(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::Raytrace(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:118:17
    t.method("Raytrace", [](TVirtualGeoPainter& a)->void { a.Raytrace(); });
    t.method("Raytrace", [](TVirtualGeoPainter& a, Option_t * arg0)->void { a.Raytrace(arg0); });
    t.method("Raytrace", [](TVirtualGeoPainter* a)->void { a->Raytrace(); });
    t.method("Raytrace", [](TVirtualGeoPainter* a, Option_t * arg0)->void { a->Raytrace(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TVirtualGeoPainter::SamplePoints(Int_t, Double_t &, Double_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TVirtualGeoPainter::SamplePoints(Int_t, Double_t &, Double_t, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:119:22
    t.method("SamplePoints", [](TVirtualGeoPainter& a, Int_t arg0, Double_t & arg1, Double_t arg2, const char * arg3)->TGeoNode * { return a.SamplePoints(arg0, arg1, arg2, arg3); });
    t.method("SamplePoints", [](TVirtualGeoPainter* a, Int_t arg0, Double_t & arg1, Double_t arg2, const char * arg3)->TGeoNode * { return a->SamplePoints(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetBombFactors(Double_t, Double_t, Double_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetBombFactors(Double_t, Double_t, Double_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:121:4
    t.method("SetBombFactors", [](TVirtualGeoPainter& a)->void { a.SetBombFactors(); });
    t.method("SetBombFactors", [](TVirtualGeoPainter& a, Double_t arg0)->void { a.SetBombFactors(arg0); });
    t.method("SetBombFactors", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1)->void { a.SetBombFactors(arg0, arg1); });
    t.method("SetBombFactors", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a.SetBombFactors(arg0, arg1, arg2); });
    t.method("SetBombFactors", [](TVirtualGeoPainter& a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a.SetBombFactors(arg0, arg1, arg2, arg3); });
    t.method("SetBombFactors", [](TVirtualGeoPainter* a)->void { a->SetBombFactors(); });
    t.method("SetBombFactors", [](TVirtualGeoPainter* a, Double_t arg0)->void { a->SetBombFactors(arg0); });
    t.method("SetBombFactors", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1)->void { a->SetBombFactors(arg0, arg1); });
    t.method("SetBombFactors", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t arg2)->void { a->SetBombFactors(arg0, arg1, arg2); });
    t.method("SetBombFactors", [](TVirtualGeoPainter* a, Double_t arg0, Double_t arg1, Double_t arg2, Double_t arg3)->void { a->SetBombFactors(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetClippingShape(TGeoShape *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetClippingShape(TGeoShape *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:122:17
    t.method("SetClippingShape", [](TVirtualGeoPainter& a, TGeoShape * arg0)->void { a.SetClippingShape(arg0); });
    t.method("SetClippingShape", [](TVirtualGeoPainter* a, TGeoShape * arg0)->void { a->SetClippingShape(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetExplodedView(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetExplodedView(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:123:17
    t.method("SetExplodedView", [](TVirtualGeoPainter& a)->void { a.SetExplodedView(); });
    t.method("SetExplodedView", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.SetExplodedView(arg0); });
    t.method("SetExplodedView", [](TVirtualGeoPainter* a)->void { a->SetExplodedView(); });
    t.method("SetExplodedView", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->SetExplodedView(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetGeoManager(TGeoManager *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetGeoManager(TGeoManager *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:124:17
    t.method("SetGeoManager", [](TVirtualGeoPainter& a, TGeoManager * arg0)->void { a.SetGeoManager(arg0); });
    t.method("SetGeoManager", [](TVirtualGeoPainter* a, TGeoManager * arg0)->void { a->SetGeoManager(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetIteratorPlugin(TGeoIteratorPlugin *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetIteratorPlugin(TGeoIteratorPlugin *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:125:17
    t.method("SetIteratorPlugin", [](TVirtualGeoPainter& a, TGeoIteratorPlugin * arg0)->void { a.SetIteratorPlugin(arg0); });
    t.method("SetIteratorPlugin", [](TVirtualGeoPainter* a, TGeoIteratorPlugin * arg0)->void { a->SetIteratorPlugin(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetCheckedNode(TGeoNode *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetCheckedNode(TGeoNode *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:126:17
    t.method("SetCheckedNode", [](TVirtualGeoPainter& a, TGeoNode * arg0)->void { a.SetCheckedNode(arg0); });
    t.method("SetCheckedNode", [](TVirtualGeoPainter* a, TGeoNode * arg0)->void { a->SetCheckedNode(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetNsegments(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetNsegments(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:127:17
    t.method("SetNsegments", [](TVirtualGeoPainter& a)->void { a.SetNsegments(); });
    t.method("SetNsegments", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.SetNsegments(arg0); });
    t.method("SetNsegments", [](TVirtualGeoPainter* a)->void { a->SetNsegments(); });
    t.method("SetNsegments", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->SetNsegments(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetNmeshPoints(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetNmeshPoints(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:128:17
    t.method("SetNmeshPoints", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.SetNmeshPoints(arg0); });
    t.method("SetNmeshPoints", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->SetNmeshPoints(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetRaytracing(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetRaytracing(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:129:17
    t.method("SetRaytracing", [](TVirtualGeoPainter& a)->void { a.SetRaytracing(); });
    t.method("SetRaytracing", [](TVirtualGeoPainter& a, Bool_t arg0)->void { a.SetRaytracing(arg0); });
    t.method("SetRaytracing", [](TVirtualGeoPainter* a)->void { a->SetRaytracing(); });
    t.method("SetRaytracing", [](TVirtualGeoPainter* a, Bool_t arg0)->void { a->SetRaytracing(arg0); });

    DEBUG_MSG("Adding wrapper for TVirtualGeoPainter * TVirtualGeoPainter::GeoPainter() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualGeoPainter * TVirtualGeoPainter::GeoPainter()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:130:31
    module_.method("TVirtualGeoPainter!GeoPainter", []()->TVirtualGeoPainter * { return TVirtualGeoPainter::GeoPainter(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetPainter(const TVirtualGeoPainter *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetPainter(const TVirtualGeoPainter *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:131:16
    module_.method("TVirtualGeoPainter!SetPainter", [](const TVirtualGeoPainter * arg0)->void { TVirtualGeoPainter::SetPainter(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetTopVisible(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetTopVisible(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:132:17
    t.method("SetTopVisible", [](TVirtualGeoPainter& a)->void { a.SetTopVisible(); });
    t.method("SetTopVisible", [](TVirtualGeoPainter& a, Bool_t arg0)->void { a.SetTopVisible(arg0); });
    t.method("SetTopVisible", [](TVirtualGeoPainter* a)->void { a->SetTopVisible(); });
    t.method("SetTopVisible", [](TVirtualGeoPainter* a, Bool_t arg0)->void { a->SetTopVisible(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetTopVolume(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetTopVolume(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:133:17
    t.method("SetTopVolume", [](TVirtualGeoPainter& a, TGeoVolume * arg0)->void { a.SetTopVolume(arg0); });
    t.method("SetTopVolume", [](TVirtualGeoPainter* a, TGeoVolume * arg0)->void { a->SetTopVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetVisLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetVisLevel(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:134:17
    t.method("SetVisLevel", [](TVirtualGeoPainter& a)->void { a.SetVisLevel(); });
    t.method("SetVisLevel", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.SetVisLevel(arg0); });
    t.method("SetVisLevel", [](TVirtualGeoPainter* a)->void { a->SetVisLevel(); });
    t.method("SetVisLevel", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->SetVisLevel(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::SetVisOption(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::SetVisOption(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:135:17
    t.method("SetVisOption", [](TVirtualGeoPainter& a)->void { a.SetVisOption(); });
    t.method("SetVisOption", [](TVirtualGeoPainter& a, Int_t arg0)->void { a.SetVisOption(arg0); });
    t.method("SetVisOption", [](TVirtualGeoPainter* a)->void { a->SetVisOption(); });
    t.method("SetVisOption", [](TVirtualGeoPainter* a, Int_t arg0)->void { a->SetVisOption(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TVirtualGeoPainter::ShapeDistancetoPrimitive(const TGeoShape *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TVirtualGeoPainter::ShapeDistancetoPrimitive(const TGeoShape *, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:136:18
    t.method("ShapeDistancetoPrimitive", [](TVirtualGeoPainter const& a, const TGeoShape * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a.ShapeDistancetoPrimitive(arg0, arg1, arg2, arg3); });
    t.method("ShapeDistancetoPrimitive", [](TVirtualGeoPainter const* a, const TGeoShape * arg0, Int_t arg1, Int_t arg2, Int_t arg3)->Int_t { return a->ShapeDistancetoPrimitive(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::Test(Int_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::Test(Int_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:137:17
    t.method("Test", [](TVirtualGeoPainter& a, Int_t arg0, Option_t * arg1)->void { a.Test(arg0, arg1); });
    t.method("Test", [](TVirtualGeoPainter* a, Int_t arg0, Option_t * arg1)->void { a->Test(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::TestOverlaps(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::TestOverlaps(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:138:17
    t.method("TestOverlaps", [](TVirtualGeoPainter& a, const char * arg0)->void { a.TestOverlaps(arg0); });
    t.method("TestOverlaps", [](TVirtualGeoPainter* a, const char * arg0)->void { a->TestOverlaps(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TVirtualGeoPainter::TestVoxels(TGeoVolume *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TVirtualGeoPainter::TestVoxels(TGeoVolume *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:139:19
    t.method("TestVoxels", [](TVirtualGeoPainter& a, TGeoVolume * arg0)->Bool_t { return a.TestVoxels(arg0); });
    t.method("TestVoxels", [](TVirtualGeoPainter* a, TGeoVolume * arg0)->Bool_t { return a->TestVoxels(arg0); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::UnbombTranslation(const Double_t *, Double_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::UnbombTranslation(const Double_t *, Double_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:140:17
    t.method("UnbombTranslation", [](TVirtualGeoPainter& a, const Double_t * arg0, Double_t * arg1)->void { a.UnbombTranslation(arg0, arg1); });
    t.method("UnbombTranslation", [](TVirtualGeoPainter* a, const Double_t * arg0, Double_t * arg1)->void { a->UnbombTranslation(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TVirtualGeoPainter::Weight(Double_t, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TVirtualGeoPainter::Weight(Double_t, Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:141:21
    t.method("Weight", [](TVirtualGeoPainter& a, Double_t arg0)->Double_t { return a.Weight(arg0); });
    t.method("Weight", [](TVirtualGeoPainter& a, Double_t arg0, Option_t * arg1)->Double_t { return a.Weight(arg0, arg1); });
    t.method("Weight", [](TVirtualGeoPainter* a, Double_t arg0)->Double_t { return a->Weight(arg0); });
    t.method("Weight", [](TVirtualGeoPainter* a, Double_t arg0, Option_t * arg1)->Double_t { return a->Weight(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TVirtualGeoPainter::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TVirtualGeoPainter::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!Class_Version", []()->Version_t { return TVirtualGeoPainter::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoPainter::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoPainter::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    t.method("IsA", [](TVirtualGeoPainter const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TVirtualGeoPainter const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    t.method("StreamerNVirtual", [](TVirtualGeoPainter& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TVirtualGeoPainter* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoPainter::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoPainter::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!DeclFileName", []() { return (std::string)TVirtualGeoPainter::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TVirtualGeoPainter::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualGeoPainter::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!ImplFileLine", []()->int { return TVirtualGeoPainter::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoPainter::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoPainter::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!ImplFileName", []() { return (std::string)TVirtualGeoPainter::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TVirtualGeoPainter::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TVirtualGeoPainter::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!Class_Name", []() { return (std::string)TVirtualGeoPainter::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoPainter::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoPainter::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!Dictionary", []()->TClass * { return TVirtualGeoPainter::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TVirtualGeoPainter::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TVirtualGeoPainter::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!Class", []()->TClass * { return TVirtualGeoPainter::Class(); });

    DEBUG_MSG("Adding wrapper for void TVirtualGeoPainter::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TVirtualGeoPainter::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    t.method("Streamer", [](TVirtualGeoPainter& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TVirtualGeoPainter* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TVirtualGeoPainter::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TVirtualGeoPainter::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TVirtualGeoPainter.h:143:4
    module_.method("TVirtualGeoPainter!DeclFileLine", []()->int { return TVirtualGeoPainter::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualGeoPainter>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualGeoPainter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualGeoPainter(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPNEntry> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPNEntry> : std::false_type { };
template<> struct SuperType<TGeoPNEntry> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoPNEntry
// signature to use in the veto file: TGeoPNEntry
struct JlTGeoPNEntry: public Wrapper {

  JlTGeoPNEntry(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPNEntry (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:100:7
    jlcxx::TypeWrapper<TGeoPNEntry>  t = jlModule.add_type<TGeoPNEntry>("TGeoPNEntry",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPNEntry>>(new jlcxx::TypeWrapper<TGeoPNEntry>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPNEntry::TGeoPNEntry(const char *, const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:121:4
    t.constructor<const char *, const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for const char * TGeoPNEntry::GetPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPNEntry::GetPath()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:124:23
    t.method("GetPath", [](TGeoPNEntry const& a) { return (std::string)a.GetPath(); });
    t.method("GetPath", [](TGeoPNEntry const* a) { return (std::string)a->GetPath(); });

    DEBUG_MSG("Adding wrapper for const TGeoHMatrix * TGeoPNEntry::GetMatrix() (" __HERE__ ")");
    // signature to use in the veto list: const TGeoHMatrix * TGeoPNEntry::GetMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:125:23
    t.method("GetMatrix", [](TGeoPNEntry const& a)->const TGeoHMatrix * { return a.GetMatrix(); });
    t.method("GetMatrix", [](TGeoPNEntry const* a)->const TGeoHMatrix * { return a->GetMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoPNEntry::GetMatrixOrig() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoPNEntry::GetMatrixOrig()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:126:17
    t.method("GetMatrixOrig", [](TGeoPNEntry const& a)->TGeoHMatrix * { return a.GetMatrixOrig(); });
    t.method("GetMatrixOrig", [](TGeoPNEntry const* a)->TGeoHMatrix * { return a->GetMatrixOrig(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoPNEntry::GetGlobalOrig() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoPNEntry::GetGlobalOrig()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:133:17
    t.method("GetGlobalOrig", [](TGeoPNEntry const& a)->TGeoHMatrix * { return a.GetGlobalOrig(); });
    t.method("GetGlobalOrig", [](TGeoPNEntry const* a)->TGeoHMatrix * { return a->GetGlobalOrig(); });

    DEBUG_MSG("Adding wrapper for TGeoPhysicalNode * TGeoPNEntry::GetPhysicalNode() (" __HERE__ ")");
    // signature to use in the veto list: TGeoPhysicalNode * TGeoPNEntry::GetPhysicalNode()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:134:22
    t.method("GetPhysicalNode", [](TGeoPNEntry const& a)->TGeoPhysicalNode * { return a.GetPhysicalNode(); });
    t.method("GetPhysicalNode", [](TGeoPNEntry const* a)->TGeoPhysicalNode * { return a->GetPhysicalNode(); });

    DEBUG_MSG("Adding wrapper for void TGeoPNEntry::SetMatrix(const TGeoHMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPNEntry::SetMatrix(const TGeoHMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:135:9
    t.method("SetMatrix", [](TGeoPNEntry& a, const TGeoHMatrix * arg0)->void { a.SetMatrix(arg0); });
    t.method("SetMatrix", [](TGeoPNEntry* a, const TGeoHMatrix * arg0)->void { a->SetMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPNEntry::SetPhysicalNode(TGeoPhysicalNode *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPNEntry::SetPhysicalNode(TGeoPhysicalNode *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:136:9
    t.method("SetPhysicalNode", [](TGeoPNEntry& a, TGeoPhysicalNode * arg0)->void { a.SetPhysicalNode(arg0); });
    t.method("SetPhysicalNode", [](TGeoPNEntry* a, TGeoPhysicalNode * arg0)->void { a->SetPhysicalNode(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoPNEntry::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPNEntry::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!Class_Version", []()->Version_t { return TGeoPNEntry::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPNEntry::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPNEntry::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    t.method("IsA", [](TGeoPNEntry const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoPNEntry const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoPNEntry::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPNEntry::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    t.method("StreamerNVirtual", [](TGeoPNEntry& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoPNEntry* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPNEntry::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPNEntry::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!DeclFileName", []() { return (std::string)TGeoPNEntry::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPNEntry::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPNEntry::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!ImplFileLine", []()->int { return TGeoPNEntry::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPNEntry::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPNEntry::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!ImplFileName", []() { return (std::string)TGeoPNEntry::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPNEntry::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPNEntry::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!Class_Name", []() { return (std::string)TGeoPNEntry::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPNEntry::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPNEntry::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!Dictionary", []()->TClass * { return TGeoPNEntry::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPNEntry::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPNEntry::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!Class", []()->TClass * { return TGeoPNEntry::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoPNEntry::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPNEntry::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    t.method("Streamer", [](TGeoPNEntry& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoPNEntry* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoPNEntry::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPNEntry::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:138:4
    module_.method("TGeoPNEntry!DeclFileLine", []()->int { return TGeoPNEntry::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPNEntry>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPNEntry(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPNEntry(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoPhysicalNode> : std::false_type { };
  template<> struct DefaultConstructible<TGeoPhysicalNode> : std::false_type { };
template<> struct SuperType<TGeoPhysicalNode> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoPhysicalNode
// signature to use in the veto file: TGeoPhysicalNode
struct JlTGeoPhysicalNode: public Wrapper {

  JlTGeoPhysicalNode(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoPhysicalNode (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:35:7
    jlcxx::TypeWrapper<TGeoPhysicalNode>  t = jlModule.add_type<TGeoPhysicalNode>("TGeoPhysicalNode",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoPhysicalNode>>(new jlcxx::TypeWrapper<TGeoPhysicalNode>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::TGeoPhysicalNode(const char *) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:59:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::Align(TGeoMatrix *, TGeoShape *, Bool_t, Double_t) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::Align(TGeoMatrix *, TGeoShape *, Bool_t, Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:64:4
    t.method("Align", [](TGeoPhysicalNode& a)->Bool_t { return a.Align(); });
    t.method("Align", [](TGeoPhysicalNode& a, TGeoMatrix * arg0)->Bool_t { return a.Align(arg0); });
    t.method("Align", [](TGeoPhysicalNode& a, TGeoMatrix * arg0, TGeoShape * arg1)->Bool_t { return a.Align(arg0, arg1); });
    t.method("Align", [](TGeoPhysicalNode& a, TGeoMatrix * arg0, TGeoShape * arg1, Bool_t arg2)->Bool_t { return a.Align(arg0, arg1, arg2); });
    t.method("Align", [](TGeoPhysicalNode& a, TGeoMatrix * arg0, TGeoShape * arg1, Bool_t arg2, Double_t arg3)->Bool_t { return a.Align(arg0, arg1, arg2, arg3); });
    t.method("Align", [](TGeoPhysicalNode* a)->Bool_t { return a->Align(); });
    t.method("Align", [](TGeoPhysicalNode* a, TGeoMatrix * arg0)->Bool_t { return a->Align(arg0); });
    t.method("Align", [](TGeoPhysicalNode* a, TGeoMatrix * arg0, TGeoShape * arg1)->Bool_t { return a->Align(arg0, arg1); });
    t.method("Align", [](TGeoPhysicalNode* a, TGeoMatrix * arg0, TGeoShape * arg1, Bool_t arg2)->Bool_t { return a->Align(arg0, arg1, arg2); });
    t.method("Align", [](TGeoPhysicalNode* a, TGeoMatrix * arg0, TGeoShape * arg1, Bool_t arg2, Double_t arg3)->Bool_t { return a->Align(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::cd() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::cd()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:65:9
    t.method("cd", [](TGeoPhysicalNode const& a)->void { a.cd(); });
    t.method("cd", [](TGeoPhysicalNode const* a)->void { a->cd(); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::Draw(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:66:9
    t.method("Draw", [](TGeoPhysicalNode& a)->void { a.Draw(); });
    t.method("Draw", [](TGeoPhysicalNode& a, Option_t * arg0)->void { a.Draw(arg0); });
    t.method("Draw", [](TGeoPhysicalNode* a)->void { a->Draw(); });
    t.method("Draw", [](TGeoPhysicalNode* a, Option_t * arg0)->void { a->Draw(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoPhysicalNode::GetLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoPhysicalNode::GetLevel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:67:10
    t.method("GetLevel", [](TGeoPhysicalNode const& a)->Int_t { return a.GetLevel(); });
    t.method("GetLevel", [](TGeoPhysicalNode const* a)->Int_t { return a->GetLevel(); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoPhysicalNode::GetMatrix(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoPhysicalNode::GetMatrix(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:68:17
    t.method("GetMatrix", [](TGeoPhysicalNode const& a)->TGeoHMatrix * { return a.GetMatrix(); });
    t.method("GetMatrix", [](TGeoPhysicalNode const& a, Int_t arg0)->TGeoHMatrix * { return a.GetMatrix(arg0); });
    t.method("GetMatrix", [](TGeoPhysicalNode const* a)->TGeoHMatrix * { return a->GetMatrix(); });
    t.method("GetMatrix", [](TGeoPhysicalNode const* a, Int_t arg0)->TGeoHMatrix * { return a->GetMatrix(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoHMatrix * TGeoPhysicalNode::GetOriginalMatrix() (" __HERE__ ")");
    // signature to use in the veto list: TGeoHMatrix * TGeoPhysicalNode::GetOriginalMatrix()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:69:17
    t.method("GetOriginalMatrix", [](TGeoPhysicalNode const& a)->TGeoHMatrix * { return a.GetOriginalMatrix(); });
    t.method("GetOriginalMatrix", [](TGeoPhysicalNode const* a)->TGeoHMatrix * { return a->GetOriginalMatrix(); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoPhysicalNode::GetMother(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoPhysicalNode::GetMother(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:70:14
    t.method("GetMother", [](TGeoPhysicalNode const& a)->TGeoNode * { return a.GetMother(); });
    t.method("GetMother", [](TGeoPhysicalNode const& a, Int_t arg0)->TGeoNode * { return a.GetMother(arg0); });
    t.method("GetMother", [](TGeoPhysicalNode const* a)->TGeoNode * { return a->GetMother(); });
    t.method("GetMother", [](TGeoPhysicalNode const* a, Int_t arg0)->TGeoNode * { return a->GetMother(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoNode * TGeoPhysicalNode::GetNode(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoNode * TGeoPhysicalNode::GetNode(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:71:14
    t.method("GetNode", [](TGeoPhysicalNode const& a)->TGeoNode * { return a.GetNode(); });
    t.method("GetNode", [](TGeoPhysicalNode const& a, Int_t arg0)->TGeoNode * { return a.GetNode(arg0); });
    t.method("GetNode", [](TGeoPhysicalNode const* a)->TGeoNode * { return a->GetNode(); });
    t.method("GetNode", [](TGeoPhysicalNode const* a, Int_t arg0)->TGeoNode * { return a->GetNode(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoShape * TGeoPhysicalNode::GetShape(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoShape * TGeoPhysicalNode::GetShape(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:72:15
    t.method("GetShape", [](TGeoPhysicalNode const& a)->TGeoShape * { return a.GetShape(); });
    t.method("GetShape", [](TGeoPhysicalNode const& a, Int_t arg0)->TGeoShape * { return a.GetShape(arg0); });
    t.method("GetShape", [](TGeoPhysicalNode const* a)->TGeoShape * { return a->GetShape(); });
    t.method("GetShape", [](TGeoPhysicalNode const* a, Int_t arg0)->TGeoShape * { return a->GetShape(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoVolume * TGeoPhysicalNode::GetVolume(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGeoVolume * TGeoPhysicalNode::GetVolume(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:73:16
    t.method("GetVolume", [](TGeoPhysicalNode const& a)->TGeoVolume * { return a.GetVolume(); });
    t.method("GetVolume", [](TGeoPhysicalNode const& a, Int_t arg0)->TGeoVolume * { return a.GetVolume(arg0); });
    t.method("GetVolume", [](TGeoPhysicalNode const* a)->TGeoVolume * { return a->GetVolume(); });
    t.method("GetVolume", [](TGeoPhysicalNode const* a, Int_t arg0)->TGeoVolume * { return a->GetVolume(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::IsAligned() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::IsAligned()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:75:11
    t.method("IsAligned", [](TGeoPhysicalNode const& a)->Bool_t { return a.IsAligned(); });
    t.method("IsAligned", [](TGeoPhysicalNode const* a)->Bool_t { return a->IsAligned(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::IsMatchingState(TGeoNavigator *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::IsMatchingState(TGeoNavigator *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:76:11
    t.method("IsMatchingState", [](TGeoPhysicalNode const& a, TGeoNavigator * arg0)->Bool_t { return a.IsMatchingState(arg0); });
    t.method("IsMatchingState", [](TGeoPhysicalNode const* a, TGeoNavigator * arg0)->Bool_t { return a->IsMatchingState(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::IsVolAttributes() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::IsVolAttributes()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:77:11
    t.method("IsVolAttributes", [](TGeoPhysicalNode const& a)->Bool_t { return a.IsVolAttributes(); });
    t.method("IsVolAttributes", [](TGeoPhysicalNode const* a)->Bool_t { return a->IsVolAttributes(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::IsVisible() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::IsVisible()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:78:11
    t.method("IsVisible", [](TGeoPhysicalNode const& a)->Bool_t { return a.IsVisible(); });
    t.method("IsVisible", [](TGeoPhysicalNode const* a)->Bool_t { return a->IsVisible(); });

    DEBUG_MSG("Adding wrapper for Bool_t TGeoPhysicalNode::IsVisibleFull() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TGeoPhysicalNode::IsVisibleFull()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:79:11
    t.method("IsVisibleFull", [](TGeoPhysicalNode const& a)->Bool_t { return a.IsVisibleFull(); });
    t.method("IsVisibleFull", [](TGeoPhysicalNode const* a)->Bool_t { return a->IsVisibleFull(); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:81:9
    t.method("Print", [](TGeoPhysicalNode const& a)->void { a.Print(); });
    t.method("Print", [](TGeoPhysicalNode const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGeoPhysicalNode const* a)->void { a->Print(); });
    t.method("Print", [](TGeoPhysicalNode const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::Refresh() (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::Refresh()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:82:9
    t.method("Refresh", [](TGeoPhysicalNode& a)->void { a.Refresh(); });
    t.method("Refresh", [](TGeoPhysicalNode* a)->void { a->Refresh(); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::SetMatrixOrig(const TGeoMatrix *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::SetMatrixOrig(const TGeoMatrix *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:84:9
    t.method("SetMatrixOrig", [](TGeoPhysicalNode& a, const TGeoMatrix * arg0)->void { a.SetMatrixOrig(arg0); });
    t.method("SetMatrixOrig", [](TGeoPhysicalNode* a, const TGeoMatrix * arg0)->void { a->SetMatrixOrig(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::SetIsVolAtt(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::SetIsVolAtt(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:85:9
    t.method("SetIsVolAtt", [](TGeoPhysicalNode& a)->void { a.SetIsVolAtt(); });
    t.method("SetIsVolAtt", [](TGeoPhysicalNode& a, Bool_t arg0)->void { a.SetIsVolAtt(arg0); });
    t.method("SetIsVolAtt", [](TGeoPhysicalNode* a)->void { a->SetIsVolAtt(); });
    t.method("SetIsVolAtt", [](TGeoPhysicalNode* a, Bool_t arg0)->void { a->SetIsVolAtt(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::SetVisibility(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::SetVisibility(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:86:9
    t.method("SetVisibility", [](TGeoPhysicalNode& a)->void { a.SetVisibility(); });
    t.method("SetVisibility", [](TGeoPhysicalNode& a, Bool_t arg0)->void { a.SetVisibility(arg0); });
    t.method("SetVisibility", [](TGeoPhysicalNode* a)->void { a->SetVisibility(); });
    t.method("SetVisibility", [](TGeoPhysicalNode* a, Bool_t arg0)->void { a->SetVisibility(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::SetVisibleFull(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::SetVisibleFull(Bool_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:87:9
    t.method("SetVisibleFull", [](TGeoPhysicalNode& a)->void { a.SetVisibleFull(); });
    t.method("SetVisibleFull", [](TGeoPhysicalNode& a, Bool_t arg0)->void { a.SetVisibleFull(arg0); });
    t.method("SetVisibleFull", [](TGeoPhysicalNode* a)->void { a->SetVisibleFull(); });
    t.method("SetVisibleFull", [](TGeoPhysicalNode* a, Bool_t arg0)->void { a->SetVisibleFull(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::Paint(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:88:9
    t.method("Paint", [](TGeoPhysicalNode& a)->void { a.Paint(); });
    t.method("Paint", [](TGeoPhysicalNode& a, Option_t * arg0)->void { a.Paint(arg0); });
    t.method("Paint", [](TGeoPhysicalNode* a)->void { a->Paint(); });
    t.method("Paint", [](TGeoPhysicalNode* a, Option_t * arg0)->void { a->Paint(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoPhysicalNode::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoPhysicalNode::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!Class_Version", []()->Version_t { return TGeoPhysicalNode::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPhysicalNode::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPhysicalNode::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    t.method("IsA", [](TGeoPhysicalNode const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoPhysicalNode const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    t.method("StreamerNVirtual", [](TGeoPhysicalNode& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoPhysicalNode* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPhysicalNode::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPhysicalNode::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!DeclFileName", []() { return (std::string)TGeoPhysicalNode::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoPhysicalNode::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPhysicalNode::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!ImplFileLine", []()->int { return TGeoPhysicalNode::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPhysicalNode::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPhysicalNode::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!ImplFileName", []() { return (std::string)TGeoPhysicalNode::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoPhysicalNode::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoPhysicalNode::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!Class_Name", []() { return (std::string)TGeoPhysicalNode::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPhysicalNode::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPhysicalNode::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!Dictionary", []()->TClass * { return TGeoPhysicalNode::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoPhysicalNode::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoPhysicalNode::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!Class", []()->TClass * { return TGeoPhysicalNode::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoPhysicalNode::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoPhysicalNode::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    t.method("Streamer", [](TGeoPhysicalNode& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoPhysicalNode* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoPhysicalNode::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoPhysicalNode::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoPhysicalNode.h:90:4
    module_.method("TGeoPhysicalNode!DeclFileLine", []()->int { return TGeoPhysicalNode::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoPhysicalNode>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoPhysicalNode(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoPhysicalNode(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TGeoOpticalSurface> : std::false_type { };
  template<> struct DefaultConstructible<TGeoOpticalSurface> : std::false_type { };
template<> struct SuperType<TGeoOpticalSurface> { typedef TNamed type; };
}

// Class generating the wrapper for type TGeoOpticalSurface
// signature to use in the veto file: TGeoOpticalSurface
struct JlTGeoOpticalSurface: public Wrapper {

  JlTGeoOpticalSurface(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TGeoOpticalSurface (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:27:7
    jlcxx::TypeWrapper<TGeoOpticalSurface>  t = jlModule.add_type<TGeoOpticalSurface>("TGeoOpticalSurface",
      jlcxx::julia_base_type<TNamed>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TGeoOpticalSurface>>(new jlcxx::TypeWrapper<TGeoOpticalSurface>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::TGeoOpticalSurface(const char *, TGeoOpticalSurface::ESurfaceModel, TGeoOpticalSurface::ESurfaceFinish, TGeoOpticalSurface::ESurfaceType, Double_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:116:4
    t.constructor<const char *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TGeoOpticalSurface::ESurfaceModel>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TGeoOpticalSurface::ESurfaceModel, TGeoOpticalSurface::ESurfaceFinish>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TGeoOpticalSurface::ESurfaceModel, TGeoOpticalSurface::ESurfaceFinish, TGeoOpticalSurface::ESurfaceType>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const char *, TGeoOpticalSurface::ESurfaceModel, TGeoOpticalSurface::ESurfaceFinish, TGeoOpticalSurface::ESurfaceType, Double_t>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for bool TGeoOpticalSurface::AddProperty(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoOpticalSurface::AddProperty(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:122:9
    t.method("AddProperty", [](TGeoOpticalSurface& a, const char * arg0, const char * arg1)->bool { return a.AddProperty(arg0, arg1); });
    t.method("AddProperty", [](TGeoOpticalSurface* a, const char * arg0, const char * arg1)->bool { return a->AddProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool TGeoOpticalSurface::AddConstProperty(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool TGeoOpticalSurface::AddConstProperty(const char *, const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:123:9
    t.method("AddConstProperty", [](TGeoOpticalSurface& a, const char * arg0, const char * arg1)->bool { return a.AddConstProperty(arg0, arg1); });
    t.method("AddConstProperty", [](TGeoOpticalSurface* a, const char * arg0, const char * arg1)->bool { return a->AddConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::GetPropertyRef(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::GetPropertyRef(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:124:16
    t.method("GetPropertyRef", [](TGeoOpticalSurface& a, const char * arg0) { return (std::string)a.GetPropertyRef(arg0); });
    t.method("GetPropertyRef", [](TGeoOpticalSurface* a, const char * arg0) { return (std::string)a->GetPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::GetPropertyRef(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::GetPropertyRef(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:125:16
    t.method("GetPropertyRef", [](TGeoOpticalSurface const& a, Int_t arg0) { return (std::string)a.GetPropertyRef(arg0); });
    t.method("GetPropertyRef", [](TGeoOpticalSurface const* a, Int_t arg0) { return (std::string)a->GetPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::GetConstPropertyRef(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::GetConstPropertyRef(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:129:16
    t.method("GetConstPropertyRef", [](TGeoOpticalSurface const& a, const char * arg0) { return (std::string)a.GetConstPropertyRef(arg0); });
    t.method("GetConstPropertyRef", [](TGeoOpticalSurface const* a, const char * arg0) { return (std::string)a->GetConstPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::GetConstPropertyRef(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::GetConstPropertyRef(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:130:16
    t.method("GetConstPropertyRef", [](TGeoOpticalSurface const& a, Int_t arg0) { return (std::string)a.GetConstPropertyRef(arg0); });
    t.method("GetConstPropertyRef", [](TGeoOpticalSurface const* a, Int_t arg0) { return (std::string)a->GetConstPropertyRef(arg0); });

    DEBUG_MSG("Adding wrapper for const TList & TGeoOpticalSurface::GetProperties() (" __HERE__ ")");
    // signature to use in the veto list: const TList & TGeoOpticalSurface::GetProperties()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:134:17
    t.method("GetProperties", [](TGeoOpticalSurface const& a)->const TList & { return a.GetProperties(); });
    t.method("GetProperties", [](TGeoOpticalSurface const* a)->const TList & { return a->GetProperties(); });

    DEBUG_MSG("Adding wrapper for const TList & TGeoOpticalSurface::GetConstProperties() (" __HERE__ ")");
    // signature to use in the veto list: const TList & TGeoOpticalSurface::GetConstProperties()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:135:17
    t.method("GetConstProperties", [](TGeoOpticalSurface const& a)->const TList & { return a.GetConstProperties(); });
    t.method("GetConstProperties", [](TGeoOpticalSurface const* a)->const TList & { return a->GetConstProperties(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoOpticalSurface::GetNproperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoOpticalSurface::GetNproperties()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:136:10
    t.method("GetNproperties", [](TGeoOpticalSurface const& a)->Int_t { return a.GetNproperties(); });
    t.method("GetNproperties", [](TGeoOpticalSurface const* a)->Int_t { return a->GetNproperties(); });

    DEBUG_MSG("Adding wrapper for Int_t TGeoOpticalSurface::GetNconstProperties() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TGeoOpticalSurface::GetNconstProperties()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:137:10
    t.method("GetNconstProperties", [](TGeoOpticalSurface const& a)->Int_t { return a.GetNconstProperties(); });
    t.method("GetNconstProperties", [](TGeoOpticalSurface const* a)->Int_t { return a->GetNconstProperties(); });

    DEBUG_MSG("Adding wrapper for TGDMLMatrix * TGeoOpticalSurface::GetProperty(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGDMLMatrix * TGeoOpticalSurface::GetProperty(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:138:17
    t.method("GetProperty", [](TGeoOpticalSurface const& a, const char * arg0)->TGDMLMatrix * { return a.GetProperty(arg0); });
    t.method("GetProperty", [](TGeoOpticalSurface const* a, const char * arg0)->TGDMLMatrix * { return a->GetProperty(arg0); });

    DEBUG_MSG("Adding wrapper for TGDMLMatrix * TGeoOpticalSurface::GetProperty(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TGDMLMatrix * TGeoOpticalSurface::GetProperty(Int_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:139:17
    t.method("GetProperty", [](TGeoOpticalSurface const& a, Int_t arg0)->TGDMLMatrix * { return a.GetProperty(arg0); });
    t.method("GetProperty", [](TGeoOpticalSurface const* a, Int_t arg0)->TGDMLMatrix * { return a->GetProperty(arg0); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoOpticalSurface::GetConstProperty(const char *, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoOpticalSurface::GetConstProperty(const char *, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:140:13
    t.method("GetConstProperty", [](TGeoOpticalSurface const& a, const char * arg0)->Double_t { return a.GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const& a, const char * arg0, Bool_t * arg1)->Double_t { return a.GetConstProperty(arg0, arg1); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const* a, const char * arg0)->Double_t { return a->GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const* a, const char * arg0, Bool_t * arg1)->Double_t { return a->GetConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoOpticalSurface::GetConstProperty(Int_t, Bool_t *) (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoOpticalSurface::GetConstProperty(Int_t, Bool_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:141:13
    t.method("GetConstProperty", [](TGeoOpticalSurface const& a, Int_t arg0)->Double_t { return a.GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const& a, Int_t arg0, Bool_t * arg1)->Double_t { return a.GetConstProperty(arg0, arg1); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const* a, Int_t arg0)->Double_t { return a->GetConstProperty(arg0); });
    t.method("GetConstProperty", [](TGeoOpticalSurface const* a, Int_t arg0, Bool_t * arg1)->Double_t { return a->GetConstProperty(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceType TGeoOpticalSurface::GetType() (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceType TGeoOpticalSurface::GetType()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:142:17
    t.method("GetType", [](TGeoOpticalSurface const& a)->TGeoOpticalSurface::ESurfaceType { return a.GetType(); });
    t.method("GetType", [](TGeoOpticalSurface const* a)->TGeoOpticalSurface::ESurfaceType { return a->GetType(); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceModel TGeoOpticalSurface::GetModel() (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceModel TGeoOpticalSurface::GetModel()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:143:18
    t.method("GetModel", [](TGeoOpticalSurface const& a)->TGeoOpticalSurface::ESurfaceModel { return a.GetModel(); });
    t.method("GetModel", [](TGeoOpticalSurface const* a)->TGeoOpticalSurface::ESurfaceModel { return a->GetModel(); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceFinish TGeoOpticalSurface::GetFinish() (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceFinish TGeoOpticalSurface::GetFinish()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:144:19
    t.method("GetFinish", [](TGeoOpticalSurface const& a)->TGeoOpticalSurface::ESurfaceFinish { return a.GetFinish(); });
    t.method("GetFinish", [](TGeoOpticalSurface const* a)->TGeoOpticalSurface::ESurfaceFinish { return a->GetFinish(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoOpticalSurface::GetPolish() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoOpticalSurface::GetPolish()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:145:13
    t.method("GetPolish", [](TGeoOpticalSurface const& a)->Double_t { return a.GetPolish(); });
    t.method("GetPolish", [](TGeoOpticalSurface const* a)->Double_t { return a->GetPolish(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoOpticalSurface::GetValue() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoOpticalSurface::GetValue()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:146:13
    t.method("GetValue", [](TGeoOpticalSurface const& a)->Double_t { return a.GetValue(); });
    t.method("GetValue", [](TGeoOpticalSurface const* a)->Double_t { return a->GetValue(); });

    DEBUG_MSG("Adding wrapper for Double_t TGeoOpticalSurface::GetSigmaAlpha() (" __HERE__ ")");
    // signature to use in the veto list: Double_t TGeoOpticalSurface::GetSigmaAlpha()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:147:13
    t.method("GetSigmaAlpha", [](TGeoOpticalSurface const& a)->Double_t { return a.GetSigmaAlpha(); });
    t.method("GetSigmaAlpha", [](TGeoOpticalSurface const* a)->Double_t { return a->GetSigmaAlpha(); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetType(TGeoOpticalSurface::ESurfaceType) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetType(TGeoOpticalSurface::ESurfaceType)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:149:9
    t.method("SetType", [](TGeoOpticalSurface& a, TGeoOpticalSurface::ESurfaceType arg0)->void { a.SetType(arg0); });
    t.method("SetType", [](TGeoOpticalSurface* a, TGeoOpticalSurface::ESurfaceType arg0)->void { a->SetType(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetModel(TGeoOpticalSurface::ESurfaceModel) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetModel(TGeoOpticalSurface::ESurfaceModel)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:150:9
    t.method("SetModel", [](TGeoOpticalSurface& a, TGeoOpticalSurface::ESurfaceModel arg0)->void { a.SetModel(arg0); });
    t.method("SetModel", [](TGeoOpticalSurface* a, TGeoOpticalSurface::ESurfaceModel arg0)->void { a->SetModel(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetFinish(TGeoOpticalSurface::ESurfaceFinish) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetFinish(TGeoOpticalSurface::ESurfaceFinish)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:151:9
    t.method("SetFinish", [](TGeoOpticalSurface& a, TGeoOpticalSurface::ESurfaceFinish arg0)->void { a.SetFinish(arg0); });
    t.method("SetFinish", [](TGeoOpticalSurface* a, TGeoOpticalSurface::ESurfaceFinish arg0)->void { a->SetFinish(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetPolish(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetPolish(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:152:9
    t.method("SetPolish", [](TGeoOpticalSurface& a, Double_t arg0)->void { a.SetPolish(arg0); });
    t.method("SetPolish", [](TGeoOpticalSurface* a, Double_t arg0)->void { a->SetPolish(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetValue(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetValue(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:153:9
    t.method("SetValue", [](TGeoOpticalSurface& a, Double_t arg0)->void { a.SetValue(arg0); });
    t.method("SetValue", [](TGeoOpticalSurface* a, Double_t arg0)->void { a->SetValue(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::SetSigmaAlpha(Double_t) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::SetSigmaAlpha(Double_t)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:154:9
    t.method("SetSigmaAlpha", [](TGeoOpticalSurface& a, Double_t arg0)->void { a.SetSigmaAlpha(arg0); });
    t.method("SetSigmaAlpha", [](TGeoOpticalSurface* a, Double_t arg0)->void { a->SetSigmaAlpha(arg0); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::Print(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::Print(Option_t *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:156:9
    t.method("Print", [](TGeoOpticalSurface const& a)->void { a.Print(); });
    t.method("Print", [](TGeoOpticalSurface const& a, Option_t * arg0)->void { a.Print(arg0); });
    t.method("Print", [](TGeoOpticalSurface const* a)->void { a->Print(); });
    t.method("Print", [](TGeoOpticalSurface const* a, Option_t * arg0)->void { a->Print(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceType TGeoOpticalSurface::StringToType(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceType TGeoOpticalSurface::StringToType(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:158:24
    module_.method("TGeoOpticalSurface!StringToType", [](const char * arg0)->TGeoOpticalSurface::ESurfaceType { return TGeoOpticalSurface::StringToType(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::TypeToString(TGeoOpticalSurface::ESurfaceType) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::TypeToString(TGeoOpticalSurface::ESurfaceType)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:159:23
    module_.method("TGeoOpticalSurface!TypeToString", [](TGeoOpticalSurface::ESurfaceType arg0) { return (std::string)TGeoOpticalSurface::TypeToString(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceModel TGeoOpticalSurface::StringToModel(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceModel TGeoOpticalSurface::StringToModel(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:160:25
    module_.method("TGeoOpticalSurface!StringToModel", [](const char * arg0)->TGeoOpticalSurface::ESurfaceModel { return TGeoOpticalSurface::StringToModel(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::ModelToString(TGeoOpticalSurface::ESurfaceModel) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::ModelToString(TGeoOpticalSurface::ESurfaceModel)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:161:23
    module_.method("TGeoOpticalSurface!ModelToString", [](TGeoOpticalSurface::ESurfaceModel arg0) { return (std::string)TGeoOpticalSurface::ModelToString(arg0); });

    DEBUG_MSG("Adding wrapper for TGeoOpticalSurface::ESurfaceFinish TGeoOpticalSurface::StringToFinish(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TGeoOpticalSurface::ESurfaceFinish TGeoOpticalSurface::StringToFinish(const char *)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:162:26
    module_.method("TGeoOpticalSurface!StringToFinish", [](const char * arg0)->TGeoOpticalSurface::ESurfaceFinish { return TGeoOpticalSurface::StringToFinish(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::FinishToString(TGeoOpticalSurface::ESurfaceFinish) (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::FinishToString(TGeoOpticalSurface::ESurfaceFinish)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:163:23
    module_.method("TGeoOpticalSurface!FinishToString", [](TGeoOpticalSurface::ESurfaceFinish arg0) { return (std::string)TGeoOpticalSurface::FinishToString(arg0); });

    DEBUG_MSG("Adding wrapper for Version_t TGeoOpticalSurface::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TGeoOpticalSurface::Class_Version()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!Class_Version", []()->Version_t { return TGeoOpticalSurface::Class_Version(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoOpticalSurface::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoOpticalSurface::IsA()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    t.method("IsA", [](TGeoOpticalSurface const& a)->TClass * { return a.IsA(); });
    t.method("IsA", [](TGeoOpticalSurface const* a)->TClass * { return a->IsA(); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    t.method("StreamerNVirtual", [](TGeoOpticalSurface& a, TBuffer & arg0)->void { a.StreamerNVirtual(arg0); });
    t.method("StreamerNVirtual", [](TGeoOpticalSurface* a, TBuffer & arg0)->void { a->StreamerNVirtual(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::DeclFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!DeclFileName", []() { return (std::string)TGeoOpticalSurface::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TGeoOpticalSurface::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoOpticalSurface::ImplFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!ImplFileLine", []()->int { return TGeoOpticalSurface::ImplFileLine(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::ImplFileName()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!ImplFileName", []() { return (std::string)TGeoOpticalSurface::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TGeoOpticalSurface::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TGeoOpticalSurface::Class_Name()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!Class_Name", []() { return (std::string)TGeoOpticalSurface::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoOpticalSurface::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoOpticalSurface::Dictionary()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!Dictionary", []()->TClass * { return TGeoOpticalSurface::Dictionary(); });

    DEBUG_MSG("Adding wrapper for TClass * TGeoOpticalSurface::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TGeoOpticalSurface::Class()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!Class", []()->TClass * { return TGeoOpticalSurface::Class(); });

    DEBUG_MSG("Adding wrapper for void TGeoOpticalSurface::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TGeoOpticalSurface::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    t.method("Streamer", [](TGeoOpticalSurface& a, TBuffer & arg0)->void { a.Streamer(arg0); });
    t.method("Streamer", [](TGeoOpticalSurface* a, TBuffer & arg0)->void { a->Streamer(arg0); });

    DEBUG_MSG("Adding wrapper for int TGeoOpticalSurface::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TGeoOpticalSurface::DeclFileLine()
    // defined in /home/pgras/.julia/artifacts/0d9da00603833dced24b998321d9c01c63ed469f/include/TGeoOpticalSurface.h:165:4
    module_.method("TGeoOpticalSurface!DeclFileLine", []()->int { return TGeoOpticalSurface::DeclFileLine(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TGeoOpticalSurface>> type_;
};
std::shared_ptr<Wrapper> newJlTGeoOpticalSurface(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTGeoOpticalSurface(module));
}
